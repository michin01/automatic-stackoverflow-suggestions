Id,PostTypeId,AcceptedAnswerId,ParentId,CreationDate,DeletionDate,Score,ViewCount,Body,OwnerUserId,OwnerDisplayName,LastEditorUserId,LastEditorDisplayName,LastEditDate,LastActivityDate,Title,Tags,AnswerCount,CommentCount,FavoriteCount,ClosedDate,CommunityOwnedDate
"43410210","1","","","2017-04-14 11:00:07","","1","83","<p>I have <a href=""https://github.com/gxa/atlas-heatmap/blob/master/src/load/heatmapAxisCategories.js#L24"" rel=""nofollow noreferrer"">some code</a> with the following structure:</p>

<pre><code>someArray.map(
  condition ?
    element =&gt; ({
      field: element.someField 
    }) :
    element =&gt; ({
      field: element.someOtherField
    })  
</code></pre>

<p>I’m building my code with Webpack 2.3.3 and when I use only <code>babel-preset-es2015</code> or <code>babel-preset-env</code> everything’s fine, but if I add <code>react</code> to my presets I get the following:</p>

<pre><code>ERROR in ./src/load/heatmapAxisCategories.js
Module build failed: SyntaxError: Invalid left-hand side in object destructuring pattern (38:27)

  36 |             isDifferential(experiment) ?
  37 |                 columnHeader =&gt; ({
&gt; 38 |                     label: columnHeader.displayName,
     |                            ^
  39 |                     id: columnHeader.id,
  40 |                     info:{
  41 |                         trackId:columnHeader.id,
</code></pre>

<p>This forces me to have two config blocks for JS and JSX files, one with <code>env</code>, and another with <code>react</code>, respectively. However the above syntax seems innocuous enough. Do you think it’s a bug or is there something I am missing?</p>
","1398008","","1398008","","2017-04-14 11:06:40","2017-04-14 11:26:40","Babel-preset-react breaks conditional Array.map with ternary operator","<javascript><reactjs><ecmascript-6><babeljs>","1","3","","",""
"34409371","1","","","2015-12-22 05:59:46","","1","67","<p>I don't understand why they offer to install and run <a href=""https://github.com/petehunt/react-boilerplate"" rel=""nofollow"">react-boilerplate</a>. I read their <a href=""http://facebook.github.io/flux/docs/todo-list.html"" rel=""nofollow"">tutorial Todo-List</a>:</p>

<blockquote>
  <p>... and we can build off of <code>react-boilerplate</code> to get up and running quickly</p>
</blockquote>

<p>and a little below </p>

<blockquote>
  <p>The TodoMVC example has all this built into it as well...</p>
</blockquote>

<p>What is the reason then to a) mention about <code>react-boilerplate</code>, b) offer to install it?</p>

<p>But, ok, I decide to install and try <code>react-boilerplate</code>. And there is nothing worth attention in that package. No any serious code, no any <code>.html</code>, no any server to run and see what the app does.</p>

<p>They write about <code>react-boilerplate</code>:</p>

<blockquote>
  <p>Next run the npm scripts to get up and running: <code>npm install</code>, then <code>npm run build</code>, and lastly <code>npm start</code> to continuously build using Browserify</p>
</blockquote>

<p>But that is not true. <code>react-boilerplate</code> doesn't have Browserify. It doesn't use it in any way. It has <code>src\index.js</code> file:</p>

<pre><code>/** @jsx React.DOM */
var React = require('react');
var requireStylesheet = require('stylesheets').requireStylesheet;

requireStylesheet(process.env.STATIC_ROOT + 'MyComponent.css');

var MyComponent = React.createClass({
  render: function() {
    return &lt;span className=""MyComponent""&gt;Hello, MyComponent!&lt;/span&gt;;
  }
});

module.exports = MyComponent;
</code></pre>

<p>The file has <code>require</code>s. If, as they say, <code>react-boilerplate</code> uses Browserify then Browserify should create some large compiled <code>bundle.js</code> file with all requires inside. But it doesn't. It only compiles React components:</p>

<pre><code>/** @jsx React.DOM */
var React = require('react');
var requireStylesheet = require('stylesheets').requireStylesheet;

requireStylesheet(process.env.STATIC_ROOT + 'MyComponent.css');

var MyComponent = React.createClass({displayName: 'MyComponent',
  render: function() {
    return React.DOM.span( {className:""MyComponent""}, ""Hello, MyComponent!"");
  }
});

module.exports = MyComponent;
</code></pre>

<p>Why <code>Flux Tutorial – Todo List</code> does offer to install <code>react-boilerplate</code>? How does <code>react-boilerplate</code> use Browserify?</p>
","1114926","","","","","2015-12-22 06:08:53","Flux TodoMVC: what for do they offer to install and run ""react-boilerplate""?","<reactjs><reactjs-flux>","1","1","","",""
"50254551","1","","","2018-05-09 13:24:44","","0","50","<p>I have a react app which connects to a backend node.js. 
It works fine with <code>http</code> but when I enforce <code>httpS</code>, I get this error in the console:</p>

<blockquote>
  <p>Mixed Content: The page at '' was loaded over HTTPS, but requested an insecure XMLHttpRequest endpoint ''. This request has been blocked;
  the content must be served over HTTPS.</p>
</blockquote>

<p>Here is my react configs</p>

<pre><code>const config = {
  api:{
    host: 'http://localhost:3000',
    sentinel: null // keep always last
  },
  auth: {
    cookieDomain: 'domain.com',
    tokenPrefix: 'domain',
    userStorageKey: 'aaabbb',
    sentinel: null // keep always last
  },
  captcha: {
    siteKey: '',
    sentinel: null // keep always last
  },
  search: {
    searchEngine: null,
    sentinel: null // keep always last
  },
  siteDomains: [ // for transform links in the posts, comments, etc.
    'domain.com'
  ],
  sentry: {
    publicDSN: null,
    sentinel: null // keep always last
  },
  frontendPreferences: {
    clientId: 'net.domain',
    defaultValues: {
      displayNames: {
        displayOption: FrontendPrefsOptions.DISPLAYNAMES_DISPLAYNAME,
        useYou: true
      },
      realtimeActive: false,
      comments: {
        omitRepeatedBubbles: true,
        highlightComments: true,
        hiddenTypes: []
      },
      allowLinksPreview: false,
      readMoreStyle: 'modern',
      homefeed: {
        hideUsers: []
      }
    }
  }
};
</code></pre>

<p>And my nginx config to handle the api:</p>

<pre><code>server {
       listen      api.domain.com:80;
    server_name  api.domain.com;
    return 301   https://$server_name$request_uri;
}

server {

ssl on;

  listen api.domain.com:443;
  server_name api.domain.com;


ssl_certificate /etc/ssl/certs/mycerts/ssl-bundle.crt;
ssl_certificate_key /etc/ssl/certs/mycerts/private/myserver.key;

ssl_protocols SSLv3 TLSv1;
ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;

  location / {
   proxy_pass http://localhost:3000;
   proxy_http_version 1.1;
   proxy_set_header X-Forwarded-Proto https;
   proxy_set_header Upgrade $http_upgrade;
   proxy_set_header Connection 'upgrade';
   proxy_set_header Host $host;
   proxy_cache_bypass $http_upgrade;

  }
}
</code></pre>

<p>Appreciate your hints to resolve this. </p>
","6382686","","","","","2018-05-09 13:24:44","How to ssl for api calls from react to backend?","<node.js><reactjs><ssl><nginx>","0","0","","",""
"34427990","1","","","2015-12-23 03:05:14","","0","197","<p>I've used ""redux generator"" from yeoman and installed things. </p>

<p>When I run ""npm start"", the project loads but displays this log</p>

<p>ERROR in ./js/index.js
Module build failed: ReferenceError: The plugin ""react.displayName"" collides with another of the same name
    at PluginManager.validate (/Users/acejordan/Projects/redcli/node_modules/babel-core/lib/transformation/file/plugin-manager.js:159:13)
    at PluginManager.add (/Users/acejordan/Projects/redcli/node_modules/babel-core/lib/transformation/file/plugin-manager.js:213:10)
    at File.buildTransformers (/Users/acejordan/Projects/redcli/node_modules/babel-core/lib/transformation/file/index.js:237:21)
    at new File (/Users/acejordan/Projects/redcli/node_modules/babel-core/lib/transformation/file/index.js:139:10)
    at Pipeline.transform (/Users/acejordan/Projects/redcli/node_modules/babel-core/lib/transformation/pipeline.js:164:16)
    at transpile (/Users/acejordan/Projects/redcli/node_modules/babel-loader/index.js:12:22)
    at Object.module.exports (/Users/acejordan/Projects/redcli/node_modules/babel-loader/index.js:71:12)
 @ multi main</p>

<p>Please help. Thanks</p>
","2454095","","","","","2016-01-21 23:34:37","ReferenceError: The plugin ""react.displayName"" collides with another of the same name","<reactjs><yeoman><redux>","1","1","","",""
"35177157","1","35177594","","2016-02-03 12:29:45","","1","223","<p>Hello guys I am having problem with solving this task in Reactjs not familiar with JSX and there is not many JS tutorials. Could anyone help me solving this issue i want to make a loop inside users with nested users list nesting deep is max 3. </p>

<p>here is my code example:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var testData = [{
  ""username"": ""test1"",
  ""users"": [{
    ""username"": ""test2"",
    ""users"": null
  }, {
    ""username"": ""test3"",
    ""users"": null
  }, {
    ""username"": ""test4"",
    ""users"": [{
      ""username"": ""test2"",
      ""users"": null
    }, {
      ""username"": ""test3"",
      ""users"": null
    }, {
      ""username"": ""test4"",
      ""users"": null
    }]
  }]
},{
  ""username"": ""test2"",
  ""users"": [{
    ""username"": ""test2"",
    ""users"": null
  }, {
    ""username"": ""test3"",
    ""users"": null
  }, {
    ""username"": ""test4"",
    ""users"": [{
      ""username"": ""test2"",
      ""users"": null
    }, {
      ""username"": ""test3"",
      ""users"": null
    }, {
      ""username"": ""test4"",
      ""users"": null
    }]
  }]
}];


function handleClick(item) {
    console.log(item);
};

var Tester = React.createClass({
  displayName: 'Tester',
  render: function render() {
    return React.createElement(
      'ol', {
        id: ""user-list"",
        'className': ''
      },
      this.props.users.map(function(item, i) {
        return React.createElement(
          'li',
          {
            'className': '',
            id: ""user-li-"" + i,
            onClick: handleClick.bind(this, item),
            key: i
          },
          item.username
          //here should be next nest?
        )
      })
    );
  }
});
React.render(React.createElement(Tester, {
  users: testData
}), document.getElementById('example'));</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;

  &lt;head&gt;
    &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/0.14.7/react.js"" data-semver=""0.14.7"" data-require=""react@*""&gt;&lt;/script&gt;
    &lt;script src=""http://code.jquery.com/jquery-2.1.4.min.js""&gt;&lt;/script&gt;
    &lt;link href=""style.css"" rel=""stylesheet"" /&gt;
  &lt;/head&gt;

  &lt;body&gt;
    &lt;div id=""example""&gt;&lt;/div&gt;
  &lt;/body&gt;

&lt;/html&gt;</code></pre>
</div>
</div>
</p>
","5877822","","","","","2016-02-03 12:50:46","if inside loop of reactjs element in map function","<javascript><reactjs>","1","0","","",""
"24806152","1","24807181","","2014-07-17 14:20:36","","0","1021","<p>I want to implement one way binding in react.js.</p>

<p>I have <strong>chatHistory</strong> variable: </p>

<pre><code>   var chatHistory = [{ Author: ""Daniel Lo Nigro"", Text: ""Hello ReactJS.NET World!"" },
      { Author: ""Pete Hunt"", Text: ""This is one comment"" },
      { Author: ""Jordan Walke"", Text: ""This is *another* comment"" }];
</code></pre>

<p>and I want react to update the <strong>DOM</strong> if <strong>chatHistory</strong> variable will change.</p>

<p>Here is the code I have:</p>

<pre><code>var converter = new Showdown.converter();
var Comment = React.createClass({
    displayName: 'Comment',
    render: function () {
        var rawMarkup = converter.makeHtml(this.props.children.toString());
        return (
          React.DOM.div({ className: ""comment"" },
            React.DOM.h2({ className: ""commentAuthor"" },
              this.props.author
            ),
            React.DOM.span({ dangerouslySetInnerHTML: { __html: rawMarkup } })
        )
      );
    }
});

var CommentList = React.createClass({
    displayName: 'CommentList',
    render: function () {
        var commentNodes = chatHistory.map(function (comment) {
            return Comment({ author: comment.Author }, comment.Text);
        });
        return (
          React.DOM.div({ className: ""commentList"" },
            commentNodes
          )
      );
    }
});

var CommentBox = React.createClass({
    displayName: 'CommentBox',
    render: function () {
        return (
          React.DOM.div({ className: ""commentBox"" },
            React.DOM.h1(null, ""Comments""),
            CommentList()
          )
      );
    }
});

React.renderComponent(CommentBox(),document.getElementById('content'));
</code></pre>

<p>React change the DOM only after calling <code>React.renderComponent(CommentBox(),document.getElementById('content'));</code> and not automatically via one way binding.</p>

<p>How to force react to refresh DOM when <strong>chatHistory</strong> variable changes?</p>
","1913629","","","","","2014-07-17 15:04:57","How to implement one way binding in react.js?","<reactjs>","1","0","1","",""
"25499083","1","25552850","","2014-08-26 06:02:35","","2","869","<p>I develop test project from Rails and React.</p>

<p>I have root component from react:</p>

<pre><code># chat_app.js.jsx.coffee
###* @jsx React.DOM ###
@ChatApp = React.createClass

displayName: 'chatApp'

render: -&gt;

    return (
        `&lt;div className=""chatApp""&gt;
            &lt;h1&gt;React Chat App Example&lt;/h1&gt;
            &lt;div class=""row""&gt;
                &lt;div&gt;&lt;MessageList /&gt;&lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;`
        )

React.renderComponent(
  window.ChatApp(null),
  document.getElementById('chatApp')
)
</code></pre>

<p>and I have another component:</p>

<pre><code># message_list.js.jsx.coffee
###* @jsx React.DOM ###
@MessageList = React.createClass

    displayName: 'messageList'

    render: -&gt;
        return (
            `&lt;div className=""messageList""&gt;
                qwe
            &lt;/div&gt;`
            )
</code></pre>

<p>But in browser I have: Uncaught ReferenceError: MessageList is not defined</p>

<p>How I can connect MessageList to ChatApp?</p>
","2365407","","","","","2014-08-28 15:41:54","Connect reactjs component from another file","<ruby-on-rails><coffeescript><reactjs>","1","2","","",""
"43936984","1","","","2017-05-12 11:42:36","","0","53","<p>I have react-native code with mobx like below, as you guys see, I need reference <code>this.props.store.user.avatar</code> to get deep object value from props, I don't wanna use the long syntax repeatedly, I know I can let it be a instance variable in constructor for example2, but I find that's a anti-pattern by the <a href=""http://reactjs.cn/react/tips/props-in-getInitialState-as-anti-pattern.html"" rel=""nofollow noreferrer"">posts</a>, it actually occurs some side-effect by my experiment cause the constructor execute only once when components initial, so I use the third way for example3, as you like, I create function in components and return the value by the long syntax, that's what can I do in my best, but I don't like this way, it looks not elegant, so anyone has better suggest or solution/way?</p>

<h1>Example1 : My question</h1>

<pre><code>@observer
export default class Profile extends Component {
  constructor(props) {
    super(props);
  }

 render() {
    return(
        &lt;BasicInfo 
          avatar = { this.props.store.user.avatar }
          displayName = { this.props.store.user.displayName  } 
          location = { this.props.store.user.location }
        /&gt;
        )
  }
}
</code></pre>

<h1>Example2 : Anti-Pattern</h1>

<pre><code>@observer
export default class Profile extends Component {
  constructor(props) {
    super(props);
    this.avatar = this.props.store.user.avatar
    this.displayName = this.props.store.user.displayName
    this.location = this.props.store.user.location
  }

 render() {
    return(
        &lt;BasicInfo 
          avatar = { this.avatar }
          displayName = { this.displayName  } 
          location = { this.location }
        /&gt;
        )
  }
}
</code></pre>

<h1>Example3 : Anti-Pattern</h1>

<pre><code>@observer
export default class Profile extends Component {
  constructor(props) {
    super(props);
    this.state = {
      avatar: this.props.store.user.avatar,
      displayName: his.props.store.user.displayName,
      location: this.props.store.user.location,
    }
  }

 render() {
    return(
        &lt;BasicInfo 
          avatar = { this.state.avatar }
          displayName = { this.state.displayName  } 
          location = { this.state.location }
        /&gt;
        )
  }
}
</code></pre>

<h1>Example 4 : It work, but exist better way?</h1>

<pre><code>@observer
export default class Profile extends Component {
  constructor(props) {
    super(props);
  }

  avatar(){ return this.props.store.user.avatar}
  displayName(){ return this.props.store.user.displayName}
  location(){ return this.props.store.user.location}

 render() {
    return(
        &lt;BasicInfo 
          avatar = { this.avatar() }
          displayName = { this.displayName()  } 
          location = { this.location() }
        /&gt;
        )
  }
}
</code></pre>

<h1>Example 5 : This is a good way, but it not work on callback</h1>

<pre><code>@observer
export default class Profile extends Component {
  constructor(props) {
    super(props);
  }

callback = () =&gt; {
  Actions.aboutMeEdit({ avatar: user.avatar })
  // there are not work
}


render() {
  const { user } = this.props.store;
  return(
    &lt;BasicInfo 
      avatar = { user.avatar }
      displayName = { user.displayName  } 
      location = { user.location }
      callback = { this.callback }
    /&gt;
    )
  }
}
</code></pre>
","5078051","","5078051","","2017-05-12 11:58:54","2017-05-12 12:22:05","How to reduce the repeat object.chain in react-native?","<javascript><react-native><mobx><mobx-react>","2","1","","",""
"43126987","1","43127169","","2017-03-30 19:42:32","","0","209","<p>I'm new to react and I'm trying to understand on to make async ajax request. I was able to get the request completed and the data returned added to my state, but I can't render the data to my component. Here's my setup.</p>

<h3>UserPage component</h3>



<pre class=""lang-js prettyprint-override""><code>import React, { Component } from 'react';
import { connect } from 'react-redux';
import { bindActionCreators } from 'redux';
import { getUsers } from '../../actions';

class User extends Component {
    displayName: 'User';

    componentWillMount() {
        this.props.getUsers();
    }

    renderUsers() {
        return this.props.users.map(user =&gt; {
            return (
                &lt;h5&gt;{user.Name}&lt;/h5&gt;
            );
        });
    }

    render() {
        var component;
        if (this.props.users) {
            component = this.renderUsers()
        } else {
            component = &lt;h3&gt;asdf&lt;/h3&gt;;
        }

        return (            
            &lt;div&gt;
                {component}
            &lt;/div&gt;

        );
    };
};

function mapStateToProps(state) {
    return {
        users: state.all
    };
}

export default connect(mapStateToProps, { getUsers })(User);
</code></pre>

<h3>Action</h3>

<pre class=""lang-js prettyprint-override""><code>import request from '../helpers/request';
import { GET_USERS } from './types';

export function getUsers() {

    return request.get(GET_USERS, 'Person/GetPeople');
}
</code></pre>

<p>With the get function from request.js module</p>

<pre class=""lang-js prettyprint-override""><code>get: function (action, url) {
        return (dispatch) =&gt; {
            axios.get(`${ROOT_URL}${url}`)
                .then(({ data }) =&gt; {
                    dispatch({
                        type: action,
                        payload: data
                    });
                });
        };
    }
</code></pre>

<h3>User_reducer</h3>

<pre class=""lang-js prettyprint-override""><code>import { GET_USERS } from '../actions/types';

export default function (state = {}, action) {
    switch (action.type) {
        case GET_USERS:
            console.log(action);
            return { ...state, all: action.payload }
        default:
            return state;
    };
}
</code></pre>

<p>When I load the UserPage component, I can see the request being done and the state being updated in the redux dev tool, but I can't display this.props.users.</p>

<p>If I take out the if(this.props.users) in the render() method of the User component, I get an undefined on this.props.users.</p>

<p>What am I doing wrong?</p>

<p>Any help greatly appreciated! Thank you</p>

<h1>SOLVED</h1>

<p>The solution was to set the users property to state.users.all in the mapStateToProps function.</p>

<pre class=""lang-js prettyprint-override""><code>function mapStateToProps(state) {
    return {
        users: state.users.all
    };
}
</code></pre>

<p>Thank you</p>
","1552198","","1552198","","2017-03-30 23:50:07","2017-03-30 23:50:07","react redux-thunk component doesn't render this.props","<javascript><reactjs><redux><jsx><redux-thunk>","1","2","1","",""
"43840905","1","","","2017-05-08 06:13:27","","2","439","<p>I need to initialize form data from state - but because i have 2 containers, one <code>graphql</code> container and one <code>redux</code> container, I'm not sure how to do it. I am also using <code>&lt;Form /&gt;</code> from <code>semantic-ui-react</code>.</p>

<p>When component is rendered, the <code>console.log</code>'s from action is displayed; however, form data is not loaded with initial values. Can you help?</p>

<p><strong>UserEditComponent.js</strong></p>

<pre><code>const UserEditComponent = (props) =&gt; {

  const { initialValues, loadFormData, handleSubmit, createUser } = props;

  // initialize form w/ data - Not Working!
  loadFormData(initialValues);

  const submitForm = async (data) =&gt; {
    const result = await createUser(data);
    return result;
  };

  return (
    &lt;div id='new-user'&gt;
      &lt;Form className='newUserForm' onSubmit={ handleSubmit(submitForm.bind(this)) }&gt;

        &lt;h3 className='group-title'&gt;Information&lt;/h3&gt;
        {
          RenderFieldArrays(formGroup1)
        }

        &lt;Button className='heavy' type='submit' primary&gt;
          Continue
        &lt;/Button&gt;
      &lt;/Form&gt;
    &lt;/div&gt;
  );
};

UserEditComponent.displayName = 'UserEditComponent';

UserEditComponent.propTypes = {
  handleSubmit: React.PropTypes.func,
  createUser: React.PropTypes.func.isRequired,
  initialValues: React.PropTypes.object,
  loadFormData: React.PropTypes.func
};

let InitializeFromStateForm = reduxForm({
  form: 'initializeFromState',
  enableReinitialize: true
})(UserEditComponent);

InitializeFromStateForm = connect(
  state =&gt; ({ initialValues: state.overlay.content.props }),
  dispatch =&gt; ({
    loadFormData: data =&gt; {
      console.log('------ inside loadFormData!');
      dispatch({
        type: types.LOAD,
        payload: data
      });
    }
  })
)(InitializeFromStateForm);

export default InitializeFromStateForm;`
</code></pre>

<p><strong>RenderFieldArrays.js</strong></p>

<pre><code>const RenderFieldArrays = (formGroup) =&gt; {
  return formGroup.map( (val, ind) =&gt; {
    return (
      &lt;FieldArray
        key={ ind }
        name={ ind.toString() }
        formGroup={ val }
        component={ RenderFormGroup }
      /&gt;
    );
  });
};

RenderFieldArrays.propTypes = {
  formGroup: PropTypes.array.isRequired
};

export default RenderFieldArrays;
</code></pre>

<p><strong>UserEditContainer.js</strong></p>

<pre><code>const gqlArgs = {
  props: ({ mutate }) =&gt; ({
    createUser: async function test(data) {
      try {
        const user = getUser(data);
        const result = await mutate(user);
      } catch (err) {
        console.log('GQL Error: ', err);
      }
    }
  })
};

// ## GraphQL container

const gqlMemberEdit = graphql(
  UserEditMutation,
  gqlArgs
)(InitializeFromStateForm);


export const UserEditPopup = connect(
  state =&gt; { ... },
  dispatch =&gt; { ... }
)(gqlMemberEdit);
</code></pre>

<p><strong>reducer_userEdit.js</strong></p>

<pre><code>export const types = Object.freeze({
  LOAD: 'LOAD'
});

// Default State
const DEF_STATE = {
  firstName: null,
  lastName: null
};

export const reducer = (state = DEF_STATE, action) =&gt; {
  let newState;
  switch (action.type) {
    case types.LOAD:
      console.log('---- inside LOAD! action.payload: ', action.payload);
      newState = {
        data: {
          firstName: 'hello',
          lastName: 'test'
        }
      };
      break;
    default:
      newState = state;
  }
  return newState;
};

export const loadFormData = data =&gt; {
  console.log('----- inside loadFormData!');
  return {
    type: types.LOAD,
    payload: data
  };
};
</code></pre>
","5485285","","5485285","","2017-05-08 20:14:58","2017-05-11 20:58:07","Cannot initialize form data using redux-form, react-apollo, and graphql","<reactjs><redux><graphql><redux-form><apollo>","1","3","","",""
"45186515","1","","","2017-07-19 09:32:50","","0","168","<p>hello i am not much familiar with react-native and i started developing facebook login using passport and express js in react native.</p>

<p>i implemented the code for that but when i click on Login with facebook it will open browser and gives the error </p>

<p>cannot get auth/facebook</p>

<p>my url is <a href=""http://localhost:8081/auth/facebook"" rel=""nofollow noreferrer"">http://localhost:8081/auth/facebook</a> as valid Oauth redirect url</p>

<p>I dont know how to put valid Url in valid Oauth redirect url in facebook developer console also</p>

<p>i have created backend folder in my project and created config.js server.js file</p>

<p>my server.js is as follows</p>

<pre><code>    import express from 'express';
import passport from 'passport';
import FacebookStrategy from 'passport-facebook';
import GoogleStrategy from 'passport-google-oauth20';
// Import Facebook and Google OAuth apps configs
import { facebook, google } from './config';

// Transform Facebook profile because Facebook and Google profile objects look different
// and we want to transform them into user objects that have the same set of attributes
const transformFacebookProfile = (profile) =&gt; ({
  name: profile.name,
  avatar: profile.picture.data.url,
});

// Transform Google profile into user object
const transformGoogleProfile = (profile) =&gt; ({
  name: profile.displayName,
  avatar: profile.image.url,
});

// Register Facebook Passport strategy
passport.use(new FacebookStrategy(facebook,
  // Gets called when user authorizes access to their profile
  async (accessToken, refreshToken, profile, done)
    // Return done callback and pass transformed user object
    =&gt; done(null, transformFacebookProfile(profile._json))
));

// Register Google Passport strategy
passport.use(new GoogleStrategy(google,
  async (accessToken, refreshToken, profile, done)
    =&gt; done(null, transformGoogleProfile(profile._json))
));

// Serialize user into the sessions
passport.serializeUser((user, done) =&gt; done(null, user));

// Deserialize user from the sessions
passport.deserializeUser((user, done) =&gt; done(null, user));

// Initialize http server
const app = express();

// Initialize Passport
app.use(passport.initialize());
app.use(passport.session());


// Set up Facebook auth routes
app.get('/auth/facebook', passport.authenticate('facebook'));

app.get('/auth/facebook/callback',
  passport.authenticate('facebook', { failureRedirect: '/auth/facebook' }),
  // Redirect user back to the mobile app using Linking with a custom protocol OAuthLogin
  (req, res) =&gt; res.redirect('OAuthLogin://login?user=' + JSON.stringify(req.user)));

// Set up Google auth routes
app.get('/auth/google', passport.authenticate('google', { scope: ['profile'] }));

app.get('/auth/google/callback',
  passport.authenticate('google', { failureRedirect: '/auth/google' }),
  (req, res) =&gt; res.redirect('OAuthLogin://login?user=' + JSON.stringify(req.user)));

// Launch the server on the port 3000
const server = app.listen(8081, () =&gt; {
  const { address, port } = server.address();
  console.log(`Listening at http://${address}:${port}`);
});
</code></pre>

<p>and my config .js is as follws</p>

<pre><code>export const facebook = {
clientID: 'MY CLIENT ID',
clientSecret: 'MY CLIENT SECRET',
callbackURL: 'http://localhost:8081/auth/facebook/callback',
profileFields: ['id', 'name', 'displayName', 'picture', 'email'],
};
</code></pre>

<p>export const google = {
   clientID: 'MY CLIENT ID',
   clientSecret: 'MY CLIENT SECRET',
   callbackURL: '<a href=""http://localhost:8081/auth/google/callback"" rel=""nofollow noreferrer"">http://localhost:8081/auth/google/callback</a>',
   };</p>

<p>and my package .json is as follows</p>

<pre><code>  {
    ""name"": ""backend"",
    ""version"": ""1.0.0"",
    ""description"": """",
    ""main"": ""index.js"",
    ""scripts"": {
    ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1"",
      ""start"": ""node node_modules/nodemon/bin/nodemon.js -- node_modules/babel-cli/bin/babel-node.js server.js""
      },
    ""author"": """",
    ""license"": ""ISC"",
    ""devDependencies"": {
      ""babel"": ""^6.23.0"",
      ""babel-cli"": ""^6.24.1"",
      ""babel-preset-es2015"": ""^6.24.1"",
      ""babel-preset-stage-0"": ""^6.24.1"",
      ""nodemon"": ""^1.11.0""
    },
    ""dependencies"": {
      ""cookie-session"": ""^2.0.0-beta.2"",
      ""express"": ""^4.15.3"",
      ""passport"": ""^0.3.2"",
      ""passport-facebook"": ""^2.1.1"",
      ""passport-google-oauth20"": ""^1.0.0""
    }
  }
</code></pre>

<p>I need to know that how to put valid localhost url at developer console and in app also.</p>

<p>and how to solve that cannot get auth/facebook error</p>
","6429448","","","","","2017-07-19 10:51:25","react native facebook login gives the error cannot get auth/facebook","<react-native>","1","0","","",""
"42844775","1","42845174","","2017-03-16 21:06:01","","0","1918","<p>I've come across a problem working in react native. I've parsed a large JSON object and need to iterate over an array nested inside it. All I need to do is print three values in each item object for day[0].</p>

<p>My code: </p>

<pre><code>import React, { Component, PropTypes } from 'react';
import { View, Text, ListView, StyleSheet, TouchableHighlight} from 'react-native';
import Header from '../Components/Header';
import Api from '../Utility/Api';


export default class CalendarPage extends Component {

constructor(props) {
    super(props);
    const ds = new ListView.DataSource({rowHasChanged: (r1, r2) =&gt; r1 !== r2});
    this.state = {
      dataSource: ds.cloneWithRows(
        fetch('https://s3.amazonaws.com/cbu-rec-center-app/credentials/schedule.json')
      )
    };
  }
    componentWillMount(){
        Api.getDates().then((res) =&gt; {
            this.setState({
                    //I need to have these three output, but for all items in day[0]
                   EventName: res.days[0].items[0].summary,
                   EventDate: res.days[0].items[0].start.dateTime,
                   EventLocation: res.days[0].items[0].description
            })
        })
    }

      render() {
        return (
          &lt;View style={{flex: 1}}&gt;
            &lt;Header pageName=""Calendar"" navigator={this.props.navigator}/&gt;
            &lt;View style = {{flex:9}}&gt;
                &lt;Text&gt; {this.state.EventName} &lt;/Text&gt;
                &lt;Text&gt; {this.state.EventDate} &lt;/Text&gt;
                &lt;Text&gt; {this.state.EventLocation} &lt;/Text&gt;
             &lt;/View&gt;
          &lt;/View&gt;
        );
      }
}
</code></pre>

<p>The JSON</p>

<pre><code>""days"": [{
    ""date"": ""2017-03-06"",
    ""hours"": {
      ""open"": ""06:00"",
      ""close"": ""12:00""
    },
    ""items"": [{
          ""kind"": ""calendar#event"",
          ""etag"": ""\""2977101842476000\"""",
          ""id"": ""fhq5hof67nvqhj85qm65t1n3e4"",
          ""status"": ""confirmed"",
          ""htmlLink"": ""https://www.google.com/calendar/event?eid=ZmhxNWhvZjY3bnZxaGo4NXFtNjV0MW4zZTQgY2J1cmVjcmVhdGlvbmNlbnRlckBt"",
          ""created"": ""2017-03-03T14:22:01.000Z"",
          ""updated"": ""2017-03-03T14:22:01.238Z"",
          ""summary"": ""Women's Volleyball"",
          ""description"": ""West Court"",
          ""creator"": {
            ""email"": ""cburecreationcenter@gmail.com"",
            ""displayName"": ""Cbu RecreationCenter"",
            ""self"": true
          },
          ""organizer"": {
            ""email"": ""cburecreationcenter@gmail.com"",
            ""displayName"": ""Cbu RecreationCenter"",
            ""self"": true
          },
          ""start"": {
            ""dateTime"": ""2017-03-06T15:30:00-08:00""
          },
          ""end"": {
            ""dateTime"": ""2017-03-06T16:30:00-08:00""
          },
          ""iCalUID"": ""fhq5hof67nvqhj85qm65t1n3e4@google.com"",
          ""sequence"": 0,
          ""reminders"": {
            ""useDefault"": true
          },
          ""type"": ""event""
        },
        {
          ""kind"": ""calendar#event"",
          ""etag"": ""\""2976616094232000\"""",
          ""id"": ""4tnn4gn0gstndi5idrqjsg7elo_20170306T200000Z"",
          ""status"": ""confirmed"",
          ""htmlLink"": ""https://www.google.com/calendar/event?eid=NHRubjRnbjBnc3RuZGk1aWRycWpzZzdlbG9fMjAxNzAzMDZUMjAwMDAwWiBrbTVyM2dycW1qbjZiMTQ2MWk2aXBjMjJhc0Bn"",
          ""created"": ""2017-02-28T14:24:06.000Z"",
          ""updated"": ""2017-02-28T18:54:07.116Z"",
          ""summary"": ""Boxing Boot Camp"",
          ""creator"": {
            ""email"": ""cburecreationcenter@gmail.com"",
            ""displayName"": ""Cbu RecreationCenter""
          },
          ""organizer"": {
            ""email"": ""km5r3grqmjn6b1461i6ipc22as@group.calendar.google.com"",
            ""displayName"": ""Group X Calendar"",
            ""self"": true
          },
          ""start"": {
            ""dateTime"": ""2017-03-06T12:00:00-08:00""
          },
          ""end"": {
            ""dateTime"": ""2017-03-06T12:45:00-08:00""
          },
          ""recurringEventId"": ""4tnn4gn0gstndi5idrqjsg7elo"",
          ""originalStartTime"": {
            ""dateTime"": ""2017-03-06T12:00:00-08:00""
          },
          ""iCalUID"": ""4tnn4gn0gstndi5idrqjsg7elo@google.com"",
          ""sequence"": 0,
          ""reminders"": {
            ""useDefault"": true
          },
          ""type"": ""class""
        },
        {
          ""kind"": ""calendar#event"",
          ""etag"": ""\""2967485504076000\"""",
          ""id"": ""m533eg9bu5o4meinuu7pvfoge4_20170306T210000Z"",
          ""status"": ""confirmed"",
          ""htmlLink"": ""https://www.google.com/calendar/event?eid=bTUzM2VnOWJ1NW80bWVpbnV1N3B2Zm9nZTRfMjAxNzAzMDZUMjEwMDAwWiBrbTVyM2dycW1qbjZiMTQ2MWk2aXBjMjJhc0Bn"",
          ""created"": ""2017-01-06T22:45:52.000Z"",
          ""updated"": ""2017-01-06T22:45:52.038Z"",
          ""summary"": ""Women on Weights"",
          ""description"": ""This is a weight lifting class designed to empower women to lift free weights in a group setting . The goals of WOW are to teach proper form, assist women in improving their posture, increasing their strength, and muscle pairing. "",
          ""location"": ""Group X Room"",
          ""creator"": {
            ""email"": ""cburecreationcenter@gmail.com"",
            ""displayName"": ""Cbu RecreationCenter""
          },
          ""organizer"": {
            ""email"": ""km5r3grqmjn6b1461i6ipc22as@group.calendar.google.com"",
            ""displayName"": ""Group X Calendar"",
            ""self"": true
          },
          ""start"": {
            ""dateTime"": ""2017-03-06T13:00:00-08:00"",
            ""timeZone"": ""America/Los_Angeles""
          },
          ""end"": {
            ""dateTime"": ""2017-03-06T14:00:00-08:00"",
            ""timeZone"": ""America/Los_Angeles""
          },
          ""recurringEventId"": ""m533eg9bu5o4meinuu7pvfoge4"",
          ""originalStartTime"": {
            ""dateTime"": ""2017-03-06T13:00:00-08:00"",
            ""timeZone"": ""America/Los_Angeles""
          },
          ""iCalUID"": ""m533eg9bu5o4meinuu7pvfoge4@google.com"",
          ""sequence"": 0,
          ""reminders"": {
            ""useDefault"": true
          },
          ""type"": ""class""
        },
</code></pre>
","6162697","","","","","2017-03-16 21:34:08","iterate over JSON in react native","<javascript><arrays><json><react-native>","1","0","1","",""
"26054706","1","","","2014-09-26 07:56:36","","2","7727","<p>Does reactjs works fine with IE8? I am using React v0.11.1. </p>

<p>Following code is NOT working in IE8. Works fine on all the other browsers</p>

<p>SCRIPT438: Object doesn't support property or method 'isArray'
File: react.js, Line: 17372, Column: 37
SCRIPT5009: 'React' is undefined
File: myreact.js, Line: 3, Column: 1
SCRIPT438: Object doesn't support property or method 'map'
File: JSXTransformer.js, Line: 12637, Column: 3</p>

<pre><code>/** @jsx React.DOM */

var MyComponent = React.createClass({displayName: 'MyComponent',

    getDefaultProps:function(){

            return{

                text:"""",
                numbers:0
            }

    },

    getInitialState:function(){


        return {txt:""initial"", id:0}
    },

    updateText: function(event){

        this.setState({text:event.target.value})
    },

    propTypes:{

        text:React.PropTypes.string,

        numbers: React.PropTypes.number.isRequired
    },



    render:function(){

        return (
                    React.DOM.div(null, 
                        Widget({text: this.state.text, update: this.updateText}), 
                        Widget({text: this.state.text, update: this.updateText})
                    )
            )
    }

});

var Widget = React.createClass({displayName: 'Widget', render:function(){

        return(
                React.DOM.div(null, 
                React.DOM.input({type: ""text"", onChange: this.props.update}), 
                React.DOM.div(null, this.props.text)

            )
            )
    }

});

React.renderComponent(
    MyComponent({text: ""HI there"", numbers: 34}), 
        document.getElementById(""content"")
    );
</code></pre>
","3811612","","","","","2016-04-25 12:37:12","reactJS with IE8 in not working","<internet-explorer-8><reactjs>","2","4","2","",""
"41859875","1","45234502","","2017-01-25 19:18:49","","2","620","<p>I'm building an HoC to make it easy to create selectable table rows. I'm trying to write tests to ensure that it renders the wrapped component with the correctly passed through props. Unfortunately, I can't get my tests to work as it doesn't appear that enzyme is rendering all the components out (or, more likely, I'm doing something a bit silly).</p>

<h3>HoC</h3>

<pre><code>import React, { PropTypes, Component } from ""react"";
import { omit } from ""lodash/fp"";

const propsFilter = omit([""onSelect""]);

export default function selectable(onSelect, isSelected) {
    return (component) =&gt; {
        const wrappedName = component.displayName || component.name || ""Component"";
        const displayName = `Selectable(${wrappedName})`;
        const onClick = () =&gt; onSelect &amp;&amp; onSelect(!isSelected);

        class SelectableWrapper extends Component {
            render() {
                return &lt;component onClick={ onClick } { ...propsFilter(this.props) } /&gt;;
            }
        }

        SelectableWrapper.displayName = displayName;
        SelectableWrapper.propTypes = Object.assign({
            onSelect: PropTypes.func,
            isSelected: PropTypes.bool,
        }, component.propTypes);

        return SelectableWrapper;
    };
}
</code></pre>

<h3>Test</h3>

<pre><code>/* eslint-env mocha */

""use strict"";

import React from ""react"";
import { expect } from ""chai"";
import { spy } from ""sinon"";

import { mount } from ""enzyme"";

import selectable from ""../../../src/js/components/tables/selectable"";

describe(""&lt;SelectableHOC /&gt;"", () =&gt; {
    let onSelect, isSelected;

    const TestElement = () =&gt; &lt;p className=""test""&gt;Hi&lt;/p&gt;;

    const el = () =&gt; selectable(onSelect, isSelected)(TestElement);
    beforeEach(""setup spy"", () =&gt; onSelect = new spy());

    it(""renders the wrapped component, passing through props"", () =&gt; {
        const hoc = el();
        const wrapper = mount(&lt;hoc name=""foo"" /&gt;);
        expect(wrapper).to.contain(""p.test"");
    });

    it(""doesn't pass through onSelect"");
    it(""sets onClick on the child component, which triggers onSelect"");
});
</code></pre>

<p>When I try <code>wrapper.debug()</code> in the test, I just get <code>&lt;hoc data-reactroot="""" name=""foo""&gt;&lt;/hoc&gt;</code>.</p>

<p>The output of the test (which fails) is:</p>

<pre><code>  1) &lt;SelectableHOC /&gt; renders the wrapped component, passing through props:
     AssertionError: expected &lt;HTMLUnknownElement /&gt; to contain p.test

     HTML:

     &lt;hoc data-reactroot="""" name=""foo""&gt;&lt;/hoc&gt;
      at Context.&lt;anonymous&gt; (test/components/tables/selectable.spec.js:43:39)
</code></pre>
","907981","","","","","2017-07-23 15:35:40","testing a react HoC with enzyme.mount doesn't seem to properly output child component","<reactjs><enzyme><higher-order-components>","2","3","","",""
"49584827","1","","","2018-03-31 06:12:03","","7","207","<p>We are currently trying to integrate the <code>babel-plugin-styled-components</code> into our <code>typescript</code> and <code>create-react-app</code> based setup for a better debugging experience and we are having difficulties doing so.</p>

<p>We are reluctant to eject the app, which is why we are trying to set it up using <code>react-app-rewired</code> and we also managed to get our typescript code to compile using <code>react-app-rewire-typescript</code> along with <code>react-app-rewire-styled-components</code>.
For some reason however, the <code>displayName</code> is not applied, which makes me think the babel plugin is not applied.
We are using <code>""start"": ""react-app-rewired start""</code> as our dev server script and the <code>config-overrides.js</code> looks like this:</p>

<pre><code>const rewireTypescript = require('react-app-rewire-typescript');
const rewireStyledComponents = require('react-app-rewire-styled-components');

module.exports = function override(config, env) {
    return rewireTypescript(rewireStyledComponents(config, env), env);
}
</code></pre>

<p>I have no idea what we are missing. Swapping the encapsulation of the <code>rewire...</code> functions also didn't help.</p>

<p>Does anyone here have experience with that or can point me in the right direction?</p>
","4887966","","","","","2018-03-31 06:12:03","Setting up babel-plugin-styled-components + Typescript + create-react-app","<reactjs><typescript><babeljs><create-react-app><styled-components>","0","1","","",""
"34054567","1","","","2015-12-02 22:46:34","","6","1471","<p>I have the following:</p>

<p><strong>Node.jsx</strong></p>

<pre><code>import React from 'react';
import {Col, Row, Tab, Tabs} from 'react-bootstrap';
import Alerts from './Alerts';
import Details from './Details';
import Family from './Family';
import Instances from './Instances';

module.exports = React.createClass({
  displayName: 'Node',
  render () {
    return (
      &lt;Row&gt;
        &lt;Col md={12}&gt;
          &lt;Tabs defaultActiveKey={1}&gt;
            &lt;Tab eventKey={1} title={'Details'}&gt;
              &lt;Details /&gt;
            &lt;/Tab&gt;
            &lt;Tab eventKey={2} title={'Alerts'}&gt;
              &lt;Alerts /&gt;
            &lt;/Tab&gt;
            &lt;Tab eventKey={3} title={'Family'}&gt;
              &lt;Family /&gt;
            &lt;/Tab&gt;
            &lt;Tab eventKey={4} title={'Instances'}&gt;
              &lt;Instances instances={this.props.nodeInstances}/&gt;
            &lt;/Tab&gt;
          &lt;/Tabs&gt;
        &lt;/Col&gt;
      &lt;/Row&gt;
    );
  }
});
</code></pre>

<p><strong>Instances.jsx</strong></p>

<pre><code>import React from 'react';
import {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';

module.exports = React.createClass({
  displayName: 'NodeInstances',
  getDefaultProps () {
    return {
      selectRowOpts: {
        mode: ""radio"",
        clickToSelect: true,
        hideSelectColumn: true,
        bgColor: ""rgb(238, 193, 213)"",
        onSelect: (row, isSelected) =&gt; { console.log(row, isSelected); }
      }
    };
  },
  render () {
    var props = this.props;

    return (
      &lt;BootstrapTable data={props.instances} hover condensed selectRow={props.selectRowOpts}&gt;
        &lt;TableHeaderColumn dataField={'interval_value'} dataSort&gt;{'Interval'}&lt;/TableHeaderColumn&gt;
        &lt;TableHeaderColumn dataField={'status_name'} dataSort&gt;{'Status'}&lt;/TableHeaderColumn&gt;
        &lt;TableHeaderColumn dataField={'started_ts'} dataSort&gt;{'Started'}&lt;/TableHeaderColumn&gt;
        &lt;TableHeaderColumn dataField={'completed_ts'} dataSort&gt;{'Completed'}&lt;/TableHeaderColumn&gt;
        &lt;TableHeaderColumn dataField={'last_runtime'} dataSort&gt;{'RT'}&lt;/TableHeaderColumn&gt;
        &lt;TableHeaderColumn dataField={'attempts'} dataSort&gt;{'Attempts'}&lt;/TableHeaderColumn&gt;
        &lt;TableHeaderColumn dataField={'pid'} dataSort&gt;{'PID'}&lt;/TableHeaderColumn&gt;
        &lt;TableHeaderColumn dataField={'node_instance_id'} dataSort isKey&gt;{'ID'}&lt;/TableHeaderColumn&gt;
      &lt;/BootstrapTable&gt;
    );
  }
});
</code></pre>

<p>Here is what all that looks like:</p>

<p><a href=""https://i.stack.imgur.com/Ibu0k.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Ibu0k.png"" alt=""enter image description here""></a></p>

<p>Why are the header columns for the table misaligned? Further, when I select one of the headers to sort the table, or when I select one of the rows in the table, the columns become properly aligned with the headers. Did I miss something?</p>
","2518231","","","","","2018-04-17 11:12:25","react-bootstrap-table misaligned header columns","<css><twitter-bootstrap><reactjs><react-bootstrap>","2","6","","",""
"44632503","1","","","2017-06-19 13:54:26","","1","231","<p>I am still new to react and redux and have been working on a project using react-router v2 and redux v3, but want to make the migration to react-router v4, as I think I understand the routing of nested components better and will find the workflow a lot easier. So I have gone through all the guides on migration and I am getting </p>

<p>Uncaught TypeError: Cannot read property 'detail' of undefined</p>

<p>from the following</p>

<pre><code>function mapStateToProps(state) {

  return {
    whisky: state.whiskies.detail,
    distillery: state.distillery.detail,
    auth: state.auth,
    profile: _.get(state.profile, 'profile', null)
  };
}
</code></pre>

<p>I have tried various different solutions here on S.O. but none have resolved this.  Here are my reducers, sagas etc,  I am obviously missing something, but still being fairly new I just cannot see it.</p>

<p>app.js</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import Routes from './routes/Routes.jsx';
import {BrowserRouter, Router, Route, Switch} from 'react-router-dom';
import {createStore, combineReducers, applyMiddleware} from 'redux';
import thunkMiddleware from 'redux-thunk';
import createSagaMiddleware from 'redux-saga';
import reducers from './redux/reducers';
import sagas from './redux/sagas';
import {createLogger} from 'redux-logger';
import { ConnectedRouter, routerReducer, routerMiddleware, push } from 'react-router-redux';
import {Provider} from 'react-redux';
import createHistory from 'history/createBrowserHistory';
import App from './pages/App.jsx';

// Export React so the dev tools can find it
if (window === window.top) {
  window.React = React;
}
const history = createHistory();


const reduxLoggerMiddleware = createLogger();
const sagaMiddleware = createSagaMiddleware();


const store = createStore(
  combineReducers({
    ...reducers,
    router: routerReducer
  }),
  applyMiddleware(thunkMiddleware,
    sagaMiddleware,
    reduxLoggerMiddleware,
    routerMiddleware(history))
  );

  // create a store with middlewares

  sagaMiddleware.run(sagas);

  ReactDOM.render(
    &lt;Provider store={store}&gt;
      &lt;BrowserRouter history='history'&gt;
        &lt;Route path=""/"" component={App} /&gt;
      &lt;/BrowserRouter&gt;
    &lt;/Provider&gt;,
    document.getElementById('app')
  );
</code></pre>

<p>App.jsx where the mapStateToProps is undefined</p>

<pre><code>import React from 'react';
import PropTypes from 'prop-types';
import { render } from 'react-dom';

import Header from '../components/Header.jsx';
import {getProfile} from '../redux/actions/ProfileActions';
import UserSession from '../UserSession';
import Footer from '../components/Footer.jsx';
import Breadcrumbs from '../components/Breadcrumbs.jsx';
import NotificationContainer from '../components/common/NotificationContainer.jsx';
import rootReducer from '../redux/reducers/index';
import { BrowserRouter, Route, browserHistory } from 'react-router-dom';
import { connect } from 'react-redux';
import { bindActionCreators } from 'redux';
import {getWhisky, getRegions, getWhiskiesByDistillery} from '../redux/actions/WhiskyActions';
import Routes from '../routes/Routes';

class App extends React.Component {
  constructor() {
    super();
  }

  componentWillMount() {
    if (UserSession.getToken() &amp;&amp; !this.props.profile) {
      this.props.dispatch(getProfile());
    }
  }

  render() {
    var {auth, profile, routes, whisky, distillery, params} = this.props;

    return (
      &lt;div className=""nt-app""&gt;
        &lt;Header auth={auth}
          profile={profile}/&gt;
          &lt;Breadcrumbs routes={routes}
            params={params}
            whisky={whisky}
            distillery={distillery}/&gt;
            &lt;div className=""nt-app-page""&gt;
              &lt;Routes /&gt;
            &lt;/div&gt;
            &lt;Footer /&gt;
            &lt;NotificationContainer /&gt;
          &lt;/div&gt;
        );
      }
    }
    App.displayName = 'App';
    App.propTypes = {
      routes: PropTypes.array,
      params: PropTypes.object,
      children: PropTypes.object,
      whisky: PropTypes.object,
      distillery: PropTypes.object
    };

    function mapStateToProps(state) {

      return {
        whisky: state.whiskies.detail,
        distillery: state.distillery.detail,
        auth: state.auth,
        profile: _.get(state.profile, 'profile', null)
      };
    }

    function mapDispatchToProps(dispatch) {
      return { actions: bindActionCreators(actionCreators, dispatch) }
    }


    export default connect(mapStateToProps)(App);
</code></pre>

<p>The relevant reducer</p>

<pre><code>import * as Types from '../actions/WhiskyActionTypes';

const initialState = {
  isFetchingFeatured: false,
  isFetchingByRegion: false,
  isFetching: false,
  featured: [],
  byRegion: {},
  detail: null
};

export default function whiskies(state = initialState, action) {
  switch (action.type) {
    case 'SET_STATE': return state.merge(action.state);
    case Types.WHISKIES_FEATURED_GET_REQUEST:
    return  {
      ...state,
      isFetchingFeatured: true,
      isFetching: true
    };
    case Types.WHISKIES_FEATURED_GET_SUCCESS:
    return  {
      ...state,
      isFetchingFeatured: false,
      isFetching: getIsFetching(false),
      featured: action.response
    };
    case Types.WHISKIES_BY_REGION_GET_REQUEST:
    return  {
      ...state,
      isFetchingByRegion: true,
      isFetching: true
    };
    case Types.WHISKIES_BY_REGION_GET_SUCCESS:
    return  {
      ...state,
      isFetchingByRegion: false,
      isFetching: getIsFetching(false),
      byRegion: action.response
    };
    case Types.WHISKIES_BY_DISTILLERY_GET_REQUEST:
    return  {
      ...state,
      isFetchingByDistillery: true,
      isFetching: true
    };
    case Types.WHISKIES_BY_DISTILLERY_GET_SUCCESS:
    return  {
      ...state,
      isFetchingByDistillery: false,
      isFetching: getIsFetching(false),
      byDistillery: action.response
    };
    case Types.WHISKY_DETAIL_GET_REQUEST:
    return  {
      ...state,
      isFetching: true
    };
    case Types.WHISKY_DETAIL_GET_SUCCESS:
    return  {
      ...state,
      isFetching: false,
      detail: action.response
    };
    case Types.WHISKY_DETAIL_CLEAR:
    return  {
      ...state,
      detail: null
    };
    default:
    return state;
  }
}

function getIsFetching(state, isFetching) {
  return (state.isFetchingByRegion || state.isFetchingFeatured || isFetching);
}
</code></pre>

<p>the saga</p>

<pre><code>import {call, put} from 'redux-saga/effects';
import {takeEvery} from 'redux-saga';
import WhiskyApi from '../../api/WhiskiesApi';
import * as Actions from '../actions/WhiskyActions';
import * as Types from '../actions/WhiskyActionTypes';

export default function* whiskyFlow() {
  yield [
    takeEvery(Types.WHISKY_DETAIL_GET_REQUEST, getWhisky),
    takeEvery(Types.WHISKIES_RELATED_GET_REQUEST, getRelatedWhiskies),
    takeEvery(Types.WHISKIES_FEATURED_GET_REQUEST, getFeaturedWhiskies)
  ];
}

function* getWhisky(action) {
  var {id} = action;
  try {
    const response = yield call(WhiskyApi.getWhisky, id);
    yield put(Actions.getWhiskySuccess(response));
  }
  catch (error) {
    yield put(Actions.getWhiskyFailure(error));
  }
}

function* getRelatedWhiskies(action) {
  var {id} = action;
  try {
    const response = yield call(WhiskyApi.getRelated, id);
    yield put(Actions.getRelatedWhiskiesSuccess(response));
  }
  catch (error) {
    yield put(Actions.getRelatedWhiskiesFailure(error));
  }
}


function* getFeaturedWhiskies(action) {
  var {id} = action;
  try {
    const response = yield call(WhiskyApi.getFeatured, id);
    yield put(Actions.getFeaturedWhiskiesSuccess(response));
  }
  catch (error) {
    yield put(Actions.getFeaturedWhiskiesFailure(error));
  }
}
</code></pre>

<p>I really appreciate all the support everyone offers on S.O. and hope someone might have a solution </p>
","7739528","","","","","2017-06-19 13:54:26","mapStateToProps undefined - react router 4, redux and saga","<reactjs><react-router><react-redux><redux-saga>","0","2","","",""
"36907715","1","","","2016-04-28 07:11:23","","0","602","<p>I want to pass props from a component to a child component through react-router. My flow is something like this : NaturalPersonList->nav->Naturalperson . 
NaturalPersonList component renders a nav component, 
Inside my nav component , I use react-router's Link module to link to Naturalperson  component. I want to pass a prop from my NaturalPersonList component down to Naturalperson , but since Naturalperson  is not explicitly rendered and I'm just linking to it , I'm not able to pass the props.
Is there any way I can acheive this}</p>

<p>NaturalPersonList :</p>

<pre><code>var Nav=require('./nav.jsx');
var Router = require('react-router');
module.exports = React.createClass({


      render: function render() {

        return (&lt;div&gt;&lt;Nav nav1=""Natural Person 1"" nav2=""Natural Person 2"" nav3=""Natural Person 3"" nav4=""Natural Person 4"" section1=""NaturalPerson"" section2=""NaturalPerson"" section3=""NaturalPerson"" section4=""NaturalPerson"" firstName={this.props.firstName}/&gt; 
        &lt;Router.RouteHandler {...this.props}/&gt;&lt;/div&gt;

        );
      }
});
</code></pre>

<p>Navigation component :</p>

<pre><code>module.exports = React.createClass({

  displayName: 'nav',

  render: function render() {   
    var activeClass = 'left-nav-selected';

    return (
      &lt;section className='left-nav' id='left-nav'&gt;
        &lt;div className='left-nav-title'&gt;{this.props.name}&lt;/div&gt;
        &lt;nav className='left-nav-links'&gt;
          &lt;ul&gt;
            &lt;li className='left-nav-link' id='nav-section1'&gt;
              &lt;Link to=NaturalPerson params={{naturalPersonId: 1}} className={this.props.navSelection==='nav-section1'?activeClass:''} 
                    activeClassName={activeClass}&gt;{this.props.nav1}&lt;/Link&gt;
            &lt;/li&gt;     
          &lt;/ul&gt;
        &lt;/nav&gt;
      &lt;/section&gt;
    );
  }
});
</code></pre>

<p>NaturalPerson :</p>

<pre><code>module.exports = React.createClass({


    getInitialState :function() {
    return{
             readOnly : true


          };
          },

          submit : function(){
            this.setState({readOnly : false});
              console.log(this.state.id);
          },
          save : function(){
            this.transitionTo('/');
          },

      render: function render() {

        return (&lt;form action=""/Output"" method=""POST"" &gt;&lt;div id=""container_suspects""&gt;
          &lt;input  type=""submit"" value=""Save"" &gt;&lt;/input&gt;     
          &lt;button type=""button"" onClick={this.submit} &gt;Edit Details&lt;/button&gt;
        &lt;div id=""suspects_personal_details""&gt;&lt;PD hidden=""hidden""  readOnly={this.state.readOnly} 
        firstName={this.props.firsName}/&gt;&lt;br/&gt;&lt;br/&gt;
        &lt;PNS hidden=""hidden"" readOnly={this.state.readOnly}/&gt;&lt;br/&gt;&lt;br/&gt;
        &lt;Email readOnly={this.state.readOnly} /&gt;&lt;br/&gt;&lt;br/&gt;&lt;/div&gt;
        &lt;div id=""suspects_address""&gt;&lt;A  readOnly={this.state.readOnly}/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/div&gt;

       &lt;/div&gt;
        &lt;/form&gt;
        );
      }
});
</code></pre>
","6193446","","","","","2016-04-28 09:49:54","React.js : passing props to a react router linked component","<reactjs>","1","0","","",""
"37031840","1","","","2016-05-04 15:16:58","","0","116","<p>I am using react-router's Link to dynamically render my page. I am passing a list of suspects to it and based on the naturalPersonId parameter it should read the list and populate the respective details on the page. My problem is in each link componentI'm using (Link to=""NaturalPerson""....
but based on the id passed I need to render the component so that the correct details are passed, but once I click on one link the component is rendered, but after that I click another link the component is not re-rendered. Is there a way to re render the same component everytime a different link is pressed.</p>

<p>Component using link :</p>

<pre><code>module.exports = React.createClass({
    displayName: 'nav',

    render: function render() {
        var activeClass = 'left-nav-selected';
        var optionList = this.props.optionList;
        return (
            &lt;section className='left-nav' id='left-nav'&gt;
                &lt;div className='left-nav-title'&gt;&lt;/div&gt;
                &lt;nav className='left-nav-links'&gt;
                    &lt;ul&gt;
                        {this.props.suspects.map(function(result,i) {
                                var navClass = 'nav-section'+i;
                                var suspectName=result.identity.first_name +""  ""+ result.identity.last_name;
                                var entityNumber = result.entity_number;
                                return (
                                    &lt;li key={i} className='left-nav-link' id={navClass}&gt;
                                        &lt;Link 
                                            to=""NaturalPerson"" 
                                            params={{naturalPersonId:entityNumber}}
                                            activeClassName={activeClass}
                                        &gt;{suspectName}&lt;/Link&gt;
                                    &lt;/li&gt;

                                );
                        })}
                    &lt;/ul&gt;
                &lt;/nav&gt;
            &lt;/section&gt;
        );
    }
});
</code></pre>

<p>NaturalPerson.jsx :</p>

<pre><code>module.exports = React.createClass({
    getInitialState: function () {
        return {
            readOnly: true
        };
    },

    submit: function () {
        this.setState({readOnly: false});
        console.log(this.props.firstName);
    },

    save: function () {
        this.transitionTo('/');
    },

    componentDidMount: function () {
        console.log(""naturalperson mounted"");
    },

    render: function render() {
        var entityNumber = this.props.params.naturalPersonId;
        var suspects = this.props.suspects;
        var populatedSuspect;
        for (var i = 0; i &lt; suspects.length; i++) {
            if (suspects[i].entity_number === entityNumber) {
                populatedSuspect = suspects[i];
                break;
            }
        }

        console.log(""########"" + populatedSuspect.identity.first_name);

        return (
            &lt;form action=""/Output"" method=""POST""&gt;
                &lt;div id=""container_suspects""&gt;
                    &lt;input type=""submit"" value=""Save""/&gt;
                    &lt;button type=""button"" onClick={this.submit}&gt;Edit Details&lt;/button&gt;
                    &lt;div id=""suspects_personal_details""&gt;
                        &lt;PD 
                            hidden=""hidden"" 
                            readOnly={this.state.readOnly}
                            populatedSuspect={populatedSuspect}
                        /&gt;
                        &lt;br/&gt;
                        &lt;br/&gt;
                        &lt;PNS hidden=""hidden"" readOnly={this.state.readOnly}/&gt;
                        &lt;br/&gt;
                        &lt;br/&gt;
                        &lt;Email readOnly={this.state.readOnly}/&gt;
                        &lt;br/&gt;
                        &lt;br/&gt;
                    &lt;/div&gt;
                    &lt;div id=""suspects_address""&gt;
                        &lt;A readOnly={this.state.readOnly}/&gt;
                        &lt;br/&gt;
                        &lt;br/&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/form&gt;
        );
    }
});
</code></pre>

<p>My routes look like this :</p>

<pre><code>var routes = module.exports = (

    &lt;Route path='/suspects' handler={SPA}&gt;
    &lt;Route name='NaturalPersonList' path='NaturalPersonList' handler={NaturalPersonList} &gt;
    &lt;Route name='NaturalPerson' path='NaturalPerson/:naturalPersonId' handler={NaturalPerson} /&gt;
    &lt;Route name='EditNaturalPerson' path='EditNaturalPerson' handler={EditNaturalPerson}&gt;
    &lt;Route name='PersonalDetails' handler={PersonalDetails} /&gt;
    &lt;Route name='NaturalPersonAddress' handler={NPAddress} /&gt;
    &lt;Route name='PhoneNumbers' handler={PhoneNumbers} /&gt;
    &lt;Route name='Email' handler={Email} /&gt;
    &lt;/Route&gt;
    &lt;/Route&gt;
    &lt;/Route&gt;    
);
</code></pre>

<p>I am using react-router 0.13.3</p>
","6193446","","6193446","","2016-05-04 15:43:28","2016-05-04 15:43:28","React.js : re-rendering a component using react-router.link","<node.js><reactjs>","0","3","","",""
"36179704","1","36179969","","2016-03-23 13:35:05","","0","798","<p>I'm with some questions on the use of component react.
Basically I want to use the ""Title"" component in various parts of the code, but it always has ""states"" that vary. I do not quite understand the official documentation on this issue, as I do to inherit this component, and only change the ""states"" for what I want?
I know the question seems silly, but I'm learning and React is very different from everything I saw.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var Title = React.createClass({
  displayName: ""Title"",
  getDefaultProps: function () {
    return {
      className: """"
    }
  },
  render: function () {
    return &lt;h1 className={this.props.className}&gt;{this.state.content}&lt;/h1&gt;
  }
});</code></pre>
</div>
</div>
</p>
","6104530","","","","","2016-03-23 13:45:56","Reusing react component","<javascript><reactjs><react-jsx>","2","1","","",""
"43726814","1","43766651","","2017-05-01 21:30:32","","3","262","<p>I'm getting a warning on the following line on my react component</p>

<pre><code>handleToggle: Function;
</code></pre>

<p>I'm using <a href=""https://github.com/yannickcr/eslint-plugin-react"" rel=""nofollow noreferrer"">eslint-plugin-react</a> and <a href=""https://flow.org/"" rel=""nofollow noreferrer"">Flow</a> and I'm getting a warning ""handleToggle should be placed after constructor"". This is related to rule react/sort-comp. I tried with the following on my .eslintrc.json</p>

<pre><code> ""react/sort-comp"": [1, {
  ""order"": [
    ""static-methods"",
    ""lifecycle"",
    ""everything-else"",
    ""render""
  ],
  ""groups"": {
    ""lifecycle"": [
      ""displayName"",
      ""propTypes"",
      ""contextTypes"",
      ""childContextTypes"",
      ""/^.*: Function$/"",
      ""mixins"",
      ""statics"",
      ""defaultProps"",
      ""state"",
      ""constructor"",
      ""getDefaultProps"",
      ""getInitialState"",
      ""getChildContext"",
      ""componentWillMount"",
      ""componentDidMount"",
      ""componentWillReceiveProps"",
      ""shouldComponentUpdate"",
      ""componentWillUpdate"",
      ""componentDidUpdate"",
      ""componentWillUnmount""
    ]
  }
}]
</code></pre>

<p>But I'm unable to fix the warning. I want the Function Types before constructor the same as the other Type Definition. How can I achieve this?</p>
","5623087","","4076315","","2017-05-03 02:09:47","2017-05-03 17:44:15","How to fix warning caused by Flow Function Types using eslint-plugin-react?","<reactjs><eslint><flowtype>","1","1","","",""
"34832813","1","","","2016-01-16 22:24:27","","2","684","<p>I have a redux reducer loaded with several reactjs components.</p>

<p>I want to load these inside other components through <code>this.props</code></p>

<p>Like: <code>this.props.components.MyReactComponent</code></p>

<pre><code>class OtherComponent extends Component {
  render() {
    const Component = this.props.components.MyReactComponent
    return (
      &lt;div&gt;
        &lt;Component /&gt;
      &lt;/div&gt;
    )
  }
}
</code></pre>

<p>Is this possible? If so, how?</p>

<p><strong>EDIT</strong> The component is a connected component. I am able to load it but it is broken. In this case, it is a counter, when you click to increment or decrement nothing happens. In the console, there is this error:</p>

<pre><code>Uncaught ReferenceError: _classCallCheck is not defined
</code></pre>

<p>if I convert the component into a dumb component (without connecting it), the error is this:</p>

<pre><code>Uncaught ReferenceError: _classCallCheck3 is not defined
</code></pre>

<p><strong>EDIT 2</strong></p>

<p>I found out why those errors show up. It is because the react component gets stripped out when stored in the reducer:</p>

<p>A react component would look something like this:</p>

<pre><code>{ function:
   { [Function: Connect]
     displayName: 'Connect(Counter)',
     WrappedComponent: { [Function: Counter] propTypes: [Object] },
     contextTypes: { store: [Object] },
     propTypes: { store: [Object] } } }
</code></pre>

<p>However, after I store it inside a reducer, it loses its properties and ends up looking something like this:</p>

<pre><code>{ function:
   { [Function: Connect] } }
</code></pre>

<p>After reading the comments below, I thought of an alternative. I can store in a reducer the path to each component, then make a new wrapper component that could render those other components from those paths.</p>

<p>I tried it but encoutered a different problem with the funcion <code>require</code> from nodejs that for some weird reason is not letting me user a variable as an argument. For example:</p>

<p>This works:</p>

<pre><code>var SomeContent = require('../extensions/myContent/containers')
</code></pre>

<p>This does not:</p>

<pre><code>var testpath = '../extensions/myContent/containers'
var SomeContent = require(testpath)
</code></pre>

<p>Giving me the following error:</p>

<pre><code>Uncaught Error: Cannot find module '../extensions/myContent/containers'.
</code></pre>

<p>It is adding a period at the end of the path. How can I prevent <code>require</code> to add that period?</p>

<p>If you can think of any other alternative I can implement for what I am trying to do, I would greatly appreciate it.</p>

<p><strong>EDIT 3</strong> Following Thomas advice...</p>

<p>What I am trying to accomplish is this:</p>

<p>I want to be able to render react components inside other react components, I know how to do it the same way most us know how to; however, I want to be able to do it by importing a file that would contain all the components  without actually having to import and export each one of them:</p>

<p>OtherComponent.js</p>

<pre><code>import React, { Component } from 'react'
import { SomeComponent } from '../allComponentes/index.js'

export default class OtherComponent extends Component {
  render() {
    return (
      &lt;SomeComponent /&gt;
    )
  }
}
</code></pre>

<p>SomeComponent.js</p>

<pre><code>import React, { Component } from 'react'

export default class SomeComponent extends Component {
  render() {
    return (
      &lt;div&gt;
        Hello
      &lt;/div&gt;
    )
  }
}
</code></pre>

<p>allComponents/index.js</p>

<pre><code>import SomeComponent from '../allComponents/SomeComponent/index.js'

export { SomeComponent }
</code></pre>

<p>What I am trying to do in <code>allComponents/index.js</code> is to avoid having import/export statements for each component by reading (with <code>fs</code> module) all the components inside the <code>allComponents</code> folder and export them. </p>

<p>allComponents/index.js (pseudocode)</p>

<pre><code>get all folders inside allComponents folder
  loop through each folder and require the components
    store each component inside an object

export object
</code></pre>

<p>When I tried that, I encountered multiple issues, for one, export statements have to be in the top-level, and second, <code>fs</code> would work only on the server side.</p>

<p>So, that is why I thought of loading all the components in a reducer and then pass them as props. But as I found out, they got stripped out when stored them in a reducer.</p>

<p>Then, I thought of only storing the path to those components inside a reducer and have a wrapper component that would use that path to <code>require</code> the needed component. This method almost worked out but the nodejs function <code>require</code> wont allow me to pass a variable as an argument (as shown in EDIT 2)</p>
","5415684","","5415684","","2016-01-17 18:27:30","2016-07-20 08:39:48","How to render a reactjs component stored in a redux reducer?","<reactjs><components><render><store><redux>","1","10","","",""
"49625893","1","","","2018-04-03 08:51:39","","0","42","<p>I am first time using styled-component with react.js. My code is in Abc.js and in styles.js I have styled-component code.</p>

<pre><code> export const StyledPopopDiv = styled.div`
  width: 200px;
  height: 100px;
  background: #cecece;
  position: fixed;
  z-index: 200;
  left: ${state =&gt; state.pos.x}px;
  top: {state.pos.y}px;
`;
StyledPopopDiv.displayName = 'StyledPopopDiv';
</code></pre>

<p>I am trying to pass state.pos.x in styled-component, but this is giving error <code>Cannot read property 'x' of undefined</code>.</p>

<p>I don't know what to do. Please help.</p>
","2756466","","","","","2018-06-18 05:19:02","using styled-component in react.js","<reactjs>","2","1","","",""
"44021015","1","44021595","","2017-05-17 09:35:58","","-1","48","<p>I have a nested array like this.Inside roles I have two more objects with roleId and roleName.
My requirement to show both the roleName of two objects in UI. How to achieve this in reactjs?</p>

<pre><code>0:Object
displayName: ""User Two""
dob:null
email:null
firstName:""User""
gender:null
languageId:null
lastAccessedOn:null
lastName:""Two""
middleName:null
password:null
pin:null

roles:Array(2)
0:Object
roleId:""37d8f51d-09c9-4d55-9ab0-60d0d031b412""
roleName:""Theranos Manufacturing""
1:Object
roleId:""af4c1fd4-6a7b-4b3e-aad1-da5b372502d8""
roleName:""Theranos Master Admin""

length:2
__proto__
:
Array(0)
</code></pre>
","7505840","","7505840","","2017-05-17 09:48:58","2017-05-17 09:59:26","how to iterate values in nested array in react js?","<reactjs>","1","0","","",""
"28072196","1","","","2015-01-21 16:31:31","","20","47885","<p>i would like to ask how to make a button but when the mouse is on the button (hover),the new button is displayed above the previous button... and it's in react.js.. thx</p>

<p>this is the way of my code..</p>

<pre><code>var Category = React.createClass({displayName: 'Category',
  render: function () {
      return (
        React.createElement(""div"", {className: ""row""}, 
        React.createElement(""button"", null, ""Search"",   {OnMouseEnter://I have no idea until here})
      )
    );
  }
});

React.render(React.createElement(Category), contain);
</code></pre>
","4479025","","1150613","","2015-09-03 03:54:10","2016-09-07 01:48:01","a hover button in react.js","<javascript><jquery><css><reactjs>","3","4","5","",""
"37442271","1","37448168","","2016-05-25 15:57:19","","1","532","<p>I create my typescript definitions for some <code>reactJS</code> components and I see that in react.d.ts file there is 2 interfaces:</p>

<pre><code>interface ComponentClass&lt;P&gt; {
    new(props?: P, context?: any): Component&lt;P, ComponentState&gt;;
    propTypes?: ValidationMap&lt;P&gt;;
    contextTypes?: ValidationMap&lt;any&gt;;
    childContextTypes?: ValidationMap&lt;any&gt;;
    defaultProps?: P;
    displayName?: string;
}
</code></pre>

<p>and:</p>

<pre><code>interface ClassicComponentClass&lt;P&gt; extends ComponentClass&lt;P&gt; {
    new(props?: P, context?: any): ClassicComponent&lt;P, ComponentState&gt;;
    getDefaultProps?(): P;
}
</code></pre>

<p>I see that ClassicComponentClass extends ComponentClass, but when I should use one of these? (when creating definition for component) Does this depends on how the component was created?</p>
","3914072","","3914072","","2016-05-25 16:22:40","2016-05-28 13:46:43","difference between ClassicComponentClass and ComponentClass in reactJS","<javascript><reactjs><interface><typescript><definition>","1","4","","",""
"44149696","1","44153402","","2017-05-24 05:30:02","","1","1686","<p>so I'm trying to get the paypal button to show up on my app but I can't get it work. I'm basing it off this jsfiddle. 
<a href=""https://jsfiddle.net/rbacekkb/"" rel=""nofollow noreferrer"">https://jsfiddle.net/rbacekkb/</a></p>

<p>I tried to put into my app but the button isn't showing up on the page that I want. I don't know what i did wrong. </p>

<pre><code>paypal.jsx

import React from 'react';



class PayPalButton extends React.Component {
    constructor() {
        super();
        // you can take this value from a config.js module for example.
        this.merchantId = '6XF3MPZBZV6HU';
    }

    componentDidMount() {
        let container = this.props.id;
        let merchantId = this.merchantId;
        window.paypalCheckoutReady = function() {
            paypal.checkout.setup(merchantId, {
                locale: 'en_US',
                environment: 'sandbox',
                container: container,
            });
        }
    }

    render() {
        return(
            &lt;a id={this.props.id} href=""/checkout"" /&gt;
        );
    }
}

module.exports = PayPalButton;
</code></pre>

<p>trying to get it show up in this page currently for testing.</p>

<pre><code>home.jsx

import React from ""react"";
import {Grid,Row,Col,Button,Jumbotron, Carousel, Panel} from ""react-bootstrap"";
import PayPalButton from ""../components/paypal"";
import {LinkContainer} from 'react-router-bootstrap';
import {Link} from 'react-router';

const title = (
    &lt;h3&gt;Fashion News&lt;/h3&gt;
)

const title2 = (
    &lt;h3&gt;Fashion History&lt;/h3&gt;
)

const title3 = (
    &lt;h3&gt;Fashion Items&lt;/h3&gt;
)

const Home = React.createClass({
  displayName: ""Home page"",
  componentDidMount(){
    console.log(this.props)
  },
  render(){
    return (

        &lt;PayPalButton id=""button"" /&gt;

    );
  }

});
module.exports = Home;
</code></pre>

<p>index.html</p>

<pre><code>&lt;script&gt;
    (function(){
      var ef = function(){};
      window.console = window.console || {log:ef,warn:ef,error:ef,dir:ef};
    }());
  &lt;/script&gt;
  &lt;script src=""//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.2/html5shiv.min.js""&gt;&lt;/script&gt;
  &lt;script src=""//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.2/html5shiv-printshiv.min.js""&gt;&lt;/script&gt;
  &lt;script src=""//cdnjs.cloudflare.com/ajax/libs/jquery/1.11.3/jquery.min.js""&gt;&lt;/script&gt;
  &lt;script src=""//cdnjs.cloudflare.com/ajax/libs/es5-shim/3.4.0/es5-shim.js""&gt;&lt;/script&gt;
  &lt;script src=""//cdnjs.cloudflare.com/ajax/libs/es5-shim/3.4.0/es5-sham.js""&gt;&lt;/script&gt;
  &lt;script src=""react-with-addons-15.1.0.js""&gt;&lt;/script&gt;
  &lt;script src=""react-dom-15.1.0.js""&gt;&lt;/script&gt;
  &lt;script src=""//www.paypalobjects.com/api/checkout.js"" async&gt;&lt;/script&gt;
    &lt;script src=""//cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.38/browser.js""&gt;&lt;/script&gt;
</code></pre>
","4569757","","","","","2018-02-06 20:06:42","paypal button for react.js","<javascript><reactjs><paypal>","2","1","1","",""
"37668368","1","37687440","","2016-06-06 23:33:45","","0","89","<p>I've tried following <a href=""https://github.com/reactjs/react-router/blob/master/docs/guides/ServerRendering.md"" rel=""nofollow noreferrer"">this guide</a> and <a href=""https://stackoverflow.com/questions/32789537/server-side-react-router-wont-render-my-routes"">this question</a>, but am getting undefined for all callback arguments when <code>ReactRouter.match</code> is fired. </p>

<p>This is my server:</p>

<pre><code>var app = new (require('express'))()
var port = 3000

var ReactDomServer = require('react-dom/server');
var ReactRouter = require('react-router');
var routes = require('./es6/routes.js');

app.use(function(req, res) {
    console.log(req.url);
    ReactRouter.match({ routes: routes, location: req.url }, function(error, redirectLocation, renderProps) {
        console.log('error', error); // undefined
        console.log('erredirectLocationror', redirectLocation); // undefined
        console.log('renderProps', renderProps); // undefined
    });
})

app.listen(port, function(error) {
  if (error) {
    console.error(error)
  } else {
    console.info(""==&gt; Listening on port %s. Open up http://localhost:%s/ in your browser."", port, port)
  }
})
</code></pre>

<p>like the comments show, <code>error</code>, <code>redirectLocation</code>, and <code>renderProps</code> all log as <code>undefined</code>.</p>

<p>Logging the <code>routes</code> variable kicks off: </p>

<pre><code>{ default: 
   { '$$typeof': Symbol(react.element),
     type: 
      { [Function]
        displayName: 'Route',
        createRouteFromReactElement: [Function: createRouteFromReactElement],
        propTypes: [Object] },
     key: null,
     ref: null,
     props: { path: '/', component: [Function: App], children: [Object] },
     _owner: null,
     _store: {} } }
</code></pre>

<p>It starts as a typescript file, <strong>routes.tsx</strong>:</p>

<pre><code>import * as React from 'react'
import { Route } from 'react-router'
import App from './containers/app';
import Home from './containers/home';

export default (
    &lt;Route path='/' component={App}&gt;
        &lt;Route path='/home' component={Home} /&gt;
    &lt;/Route&gt;
)
</code></pre>

<p>which compiles to <strong>es6/routes.js</strong></p>

<pre><code>""use strict"";
const React = require('react');
const react_router_1 = require('react-router');
const app_1 = require('./containers/app');
const home_1 = require('./containers/home');
Object.defineProperty(exports, ""__esModule"", { value: true });
exports.default = (React.createElement(react_router_1.Route, {path: '/', component: app_1.default}, React.createElement(react_router_1.Route, {path: '/home', component: home_1.default})));
//# sourceMappingURL=routes.js.map
</code></pre>

<p>What am I missing?</p>
","967405","","-1","","2017-05-23 12:08:01","2016-06-07 19:09:20","ReactRouter.match has no callback arguments when attempting to server-render react elements","<javascript><reactjs><typescript><react-router><server-rendering>","1","0","","",""
"51432061","1","51432890","","2018-07-19 21:35:23","","0","18","<p>I have a static three static properties (<code>Header</code>, <code>Body</code>, and <code>Footer</code>) set to a <code>Dialog</code> component. However, typescript throws the following error after wrapping the <code>Dialog</code> component in styled-components.</p>

<p><code>Property 'Header' does not exist on type 'StyledComponentClass...</code></p>

<p>Here is my <code>/Dialog.tsx</code>:</p>

<pre><code>import { Dialog as BlueprintDialog, IDialogProps } from '@blueprintjs/core';
import * as React from 'react';
import styled from 'styled-components';

import Body from './Dialog.Body';
import Footer from './Dialog.Footer';
import Header from './Dialog.Header';

/** ************************************************************************* */

type DefaultProps = {
  className: string;
};

export interface DialogProps extends IDialogProps {
  children?: React.ReactNode;
  className?: string;
  primary?: boolean;
}

class Dialog extends React.PureComponent&lt;DialogProps&gt; {
  static displayName = 'UI.Dialog';
  static defaultProps: DefaultProps = {
    className: '',
  };
  static Body: typeof Body;
  static Footer: typeof Footer;
  static Header: typeof Header;
  render() {
    return &lt;BlueprintDialog {...this.props} /&gt;;
  }
}

/** ************************************************************************* */

export default styled(Dialog)``;
</code></pre>

<p>And here is my <code>index.ts</code> where I piece it all together:</p>

<pre><code>import Dialog from './Dialog';
import DialogBody from './Dialog.Body';
import DialogFooter from './Dialog.Footer';
import DialogHeader from './Dialog.Header';

Dialog.Body = DialogBody; // TS Compilation Error :/
Dialog.Footer = DialogFooter; // TS Compilation Error :/
Dialog.Header = DialogHeader; // TS Compilation Error :/
export default Dialog;
</code></pre>

<p>I've tried doing the following, which works, but now interpolation fails for the root <code>Dialog</code> component:</p>

<pre><code>import { Dialog as BlueprintDialog, IDialogProps } from '@blueprintjs/core';
import * as React from 'react';
import styled from 'styled-components';

import Body from './Dialog.Body';
import Footer from './Dialog.Footer';
import Header from './Dialog.Header';

/** ************************************************************************* */

type DefaultProps = {
  className: string;
};

export interface DialogProps extends IDialogProps {
  children?: React.ReactNode;
  className?: string;
  primary?: boolean;
}

class Dialog extends React.PureComponent&lt;DialogProps&gt; {
  static displayName = 'UI.Dialog';
  static defaultProps: DefaultProps = {
    className: '',
  };
  render() {
    return &lt;BlueprintDialog {...this.props} /&gt;;
  }
}

/** ************************************************************************* */

const Styled = styled(Dialog)``;

class WithSubmodules extends Styled {
  static Body: typeof Body;
  static Footer: typeof Footer;
  static Header: typeof Header;
}

export default WithSubmodules;
</code></pre>

<p>An example of interpolation that throws the <code>Cannot call a class as a function</code> error:</p>

<pre><code>export default styled(InterpolationExample)`
  ${Dialog.Header} { /* WORKS :) */
    border: 1px solid green;
  }
  ${Dialog} { { /* Throws Error :/ */
    border: 1px solid pink;
  }
`;
</code></pre>
","1828780","","1828780","","2018-07-19 23:17:29","2018-07-19 23:17:29","How to hoist non react statics with typescript and styled-components?","<javascript><reactjs><typescript><styled-components>","1","0","","",""
"37274917","1","37275593","","2016-05-17 11:32:38","","2","54","<p>I am trying to create a table using reactjs. I wrote a class and using this as directive, passing config and data and trying to populate the table.</p>

<pre><code>function createRows() {
    let self = this;
    return  &lt;tbody&gt;{_.each(self.props.tableData, function(r) {
        &lt;tr&gt;
            {_.each(self.props.columnConfigs, function(c) {
            &lt;td&gt;{r[c.columnName]}&lt;/td&gt;
        })}
        &lt;/tr&gt;
    })}&lt;/tbody&gt;;
}

function createHeaders() {

    let self = this;
    return &lt;thead&gt;
    {_.each(self.props.columnConfigs, function(c) {
            &lt;th&gt;c.displayName&lt;/th&gt;
        })}
    &lt;/thead&gt;
}
class TableComponent extends React.Component {
    constructor(props, context) {
        super(props, context);
    }

    render() {

       return (&lt;table&gt;
            {createHeaders.call(this)}
            {createRows.call(this)}
        &lt;/table&gt;)
    }


}

function TableComponentFactory() {
    return TableComponent;
}

export default TableComponentFactory;
</code></pre>

<p>But this is not working. it throws an error:-</p>

<pre><code>Invariant Violation: Objects are not valid as a React child (found: object with keys {columnName, displayName, isSortable, path, hidden, columnStyle, editable, isId}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of `TableComponent`.
</code></pre>

<p>which is actually the columnConfig. I am not able to understand why this happening. What mistake I am doing, also a bit of explanation will be great.   </p>
","2696466","","","","","2016-05-17 12:01:38","creating table with reactjs","<angularjs><reactjs>","1","0","1","",""
"21130374","1","21130830","","2014-01-15 06:19:18","","5","1430","<p>Im loosely following facebooks React tutorial here, 
<a href=""http://facebook.github.io/react/docs/getting-started.html"" rel=""nofollow"">http://facebook.github.io/react/docs/getting-started.html</a>, but I am applying it to a different html file.</p>

<p>This is my html file, based on the react starter kit:</p>

<pre><code>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Hello React&lt;/title&gt;
    &lt;script src=""http://fb.me/react-0.8.0.js""&gt;&lt;/script&gt;
    &lt;script src=""http://code.jquery.com/jquery-1.10.0.min.js""&gt;&lt;/script&gt;
    &lt;script src=""http://cdnjs.cloudflare.com/ajax/libs/showdown/0.3.1/showdown.min.js""&gt;&lt;/script&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div id=""content""&gt;&lt;/div&gt;
    &lt;script src=""build/comment.js""&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>I installed react-tools, now when I run ""jsx --watch src/ build/""</p>

<p>It is converting this snippet:</p>

<pre><code>var CommentBox = React.createClass({
  render: function() {
    return (
      &lt;div className=""commentBox""&gt;
        Hello, world! I am a CommentBox.
      &lt;/div&gt;
    );
  }
});
React.renderComponent(
  &lt;CommentBox /&gt;,
  document.getElementById('content')
);
</code></pre>

<p>Into this snippet:</p>

<pre><code>var CommentBox = React.createClass({displayName: 'CommentBox',
  render: function() {
    return (
      react.DOM.div( {className:""commentBox""}, 
        "" Hello, world! I am a CommentBox. ""
      )
    );
  }
});
React.renderComponent(
  CommentBox(null ),
  document.getElementById('content')
);
</code></pre>

<p>But the tutorial shows this snippet: </p>

<pre><code>// tutorial1-raw.js
var CommentBox = React.createClass({
  render: function() {
    return (
      React.DOM.div({
        className: 'commentBox',
        children: 'Hello, world! I am a CommentBox.'
      })
    );
  }
});
React.renderComponent(
  CommentBox({}),
  document.getElementById('content')
);
</code></pre>

<p>Because of the lowercase 'r', the webpage throws an error, ""react is not defined"". Which is true. From chrome's console I can confirm that ""React"", not ""react"" is defined.</p>

<p>How do I get jsx to build the correct output as described in the tutorial?</p>
","2766370","","1434116","","2016-01-30 09:12:55","2016-01-30 09:12:55","jsx --watch converts jsx syntax to lowercase ""react"" instead of uppercase ""React""","<javascript><reactjs><react-jsx>","1","0","","",""
"46226989","1","","","2017-09-14 19:35:45","","0","18","<p>I'm trying to make a multipage mobile ui for my reactjs app. However, when trying to use react-router, I can't get any of my components to render. I'm following a tutorial for a very simple route implementation, but it doesn't seem to be working.</p>

<p>The below code renders just fine: (index.js)</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import App from './component/App';
import { AppContainer } from 'react-hot-loader';
import { overrideComponentTypeChecker } from 'react-toolbox';
import background from './component/Styles.css';
import { Router, hashHistory as history } from 'react-router';

const rootEl = document.getElementById('app');
document.body.style.backgroundColor = '#49c0f0';
const render = () =&gt; {
  ReactDOM.render(
    &lt;AppContainer&gt;
    &lt;App /&gt;
    &lt;/AppContainer&gt;,
    rootEl
  );
};

if (process.env.NODE_ENV !== 'production') {
  overrideComponentTypeChecker((classType, reactElement) =&gt; (
    reactElement &amp;&amp; (
      reactElement.type === classType
      || reactElement.type.name === classType.displayName
    )
  ));
  if (module.hot) {
    module.hot.accept('./component/App', render);
  }
}

render();
</code></pre>

<p>After changing the render portion of the code  to this the component stops rendering:</p>

<pre><code>const render = () =&gt; {
  ReactDOM.render(
    &lt;AppContainer&gt;
    &lt;Router&gt;
    &lt;Route component={App} /&gt;
    &lt;/Router&gt;
    &lt;/AppContainer&gt;,
    rootEl
  );
};
</code></pre>
","5432208","","","","","2017-09-14 19:35:45","Is router incompatible with react-toolbox, or am I miss-using router?","<javascript><reactjs><react-router><jsx>","0","4","","",""
"44863119","1","","","2017-07-01 16:28:23","","0","168","<p>I'm pretty new to React and Redux and very new to react-dnd, and I think I'm doing something wildly incorrect here. Although there are other similar posts out there I can't quite find a solution in them.</p>

<p>I'm working on a Kanban board app that is somewhat based on the one found at <a href=""https://survivejs.com/react/implementing-kanban/drag-and-drop/"" rel=""nofollow noreferrer"">https://survivejs.com/react/implementing-kanban/drag-and-drop/</a> though that version uses Alt.js and I'm using Redux.</p>

<p>The problem: when dragging a component, the action function is called but the case in the reducer (MOVE_TICKET) is not. This seems to be the case regardless of the content of the action function.</p>

<p>I linked the action to a click event and in this instance the action and reducer worked as expected. This leads me to think that it must be a problem with the way I've set up the Ticket component with the dnd functions.</p>

<p><strong>Ticket.js:</strong></p>

<pre><code>    import React from ""react"" 
    import {compose} from 'redux';
    import { DragSource, DropTarget } from 'react-dnd';
    import ItemTypes from '../constants/ItemTypes';
    import { moveTicket } from ""../actions/ticketsActions""


    const Ticket = ({
        connectDragSource, connectDropTarget, isDragging, isOver, onMove, id, children, ...props
    }) =&gt; {
      return compose (connectDragSource, connectDropTarget)(
        &lt;div style={{
          opacity: isDragging || isOver ? 0 : 1
        }} { ...props } className = 'ticket'&gt;
          &lt;h3 className = 'summary'&gt; { props.summary } &lt;/h3&gt;
          &lt;span className = 'projectName'&gt; { props.projectName }&lt;/span&gt;
          &lt;span className = 'assignee'&gt; { props.assignee } &lt;/span&gt;
          &lt;span className = 'priority'&gt; { props.priority } &lt;/span&gt;
        &lt;/div&gt;
      );
    };

    const ticketSource = {
      beginDrag(props) {
        return {
            id: props.id,
          status: props.status
        };
      }
    };

    const ticketTarget = {
      hover(targetProps, monitor) {
        const targetId = targetProps.id;
        const sourceProps = monitor.getItem();
        const sourceId = sourceProps.id;
        const sourceCol = sourceProps.status;
        const targetCol = targetProps.status;

        if(sourceId !== targetId) {
          targetProps.onMove({sourceId, targetId, sourceCol, targetCol});
        }
      }
    };

    export default compose(
        DragSource(ItemTypes.TICKET, ticketSource, (connect, monitor) =&gt; ({
          connectDragSource: connect.dragSource(),
          isDragging: monitor.isDragging()
        })),
        DropTarget(ItemTypes.TICKET, ticketTarget, (connect, monitor) =&gt; ({
          connectDropTarget: connect.dropTarget(),
          isOver: monitor.isOver()
        }))
    )(Ticket)
</code></pre>

<p><strong>ticketsReducer.js:</strong></p>

<pre><code>export default function reducer(state={
    tickets: [],
    fetching: false,
    fetched: false,
    error: null,
  }, action) { 

    switch (action.type) {
      case ""MOVE_TICKET"": {
        return [{...state, tickets: action.payload}]

      } 
    }
    return state
}
</code></pre>

<p><strong>ticketsActions.js</strong></p>

<pre><code>import store from '../store';


export function moveTicket({sourceId, targetId, sourceCol, targetCol}) {

    const columns = Object.assign({}, store.getState().tickets.tickets)    
    const sourceList = columns[sourceCol];
    const targetList = columns[targetCol];
    const sourceTicketIndex = sourceList.findIndex(ticket =&gt; ticket.id == sourceId);
    const targetTicketIndex = targetList.findIndex(ticket =&gt; ticket.id == targetId);

    if(sourceCol === targetCol){
      var arrayClone = sourceList.slice();
      arrayClone.splice(sourceTicketIndex, 1);
      arrayClone.splice(targetTicketIndex, 0, sourceList[sourceTicketIndex]);

      columns[sourceCol] = arrayClone;
    }

    return function(dispatch){
      dispatch({type: ""MOVE_TICKET"", payload: columns});
      }

}
</code></pre>

<p><strong>Column.js (where each Ticket component is rendered)</strong></p>

<pre><code>import React from ""react""
import uuid from ""uuid""
import { connect } from ""react-redux""
import ColumnsContainer from ""./ColumnsContainer""
import Ticket from ""./ticket""
import { moveTicket } from ""../actions/ticketsActions""

@connect((store) =&gt; {
  return {
    columns: store.columns.columns
  };
})
export default class Column extends React.Component {

    console(){
        console.log(this)
    }

    render(){

        const tickets = this.props.tickets.map((ticket, id) =&gt; 
            &lt;Ticket 
                key = {uuid.v4()}
                id={ticket.id}
                summary = { ticket.summary }
                assignee = { ticket.assignee }
                priority = { ticket.priority }
                projectName = { ticket.displayName }
                onMove={ moveTicket }
                status= { ticket.status }
            /&gt; 
        )

        return(
            &lt;div key = {uuid.v4()} className = { this.props.className }&gt;
                &lt;h2 key = {uuid.v4()}&gt;{ this.props.title }&lt;/h2&gt;
                &lt;ul key = {uuid.v4()}&gt;{ tickets }&lt;/ul&gt;
            &lt;/div&gt;
        )
    }

}
</code></pre>

<p>If anyone can see where I'm going wrong I could really use some assistance.</p>
","8002478","","472495","","2017-07-01 19:55:55","2017-07-01 19:55:55","Redux action not firing on move with react-dnd","<reactjs><redux><react-dnd>","1","0","","",""
"35766074","1","35897538","","2016-03-03 07:46:22","","2","689","<p>I have a rails app that uses react on the front end but I'm having trouble adding other react modules to my components. I am using <a href=""https://github.com/reactjs/react-rails"" rel=""nofollow"">react-rails</a> for incorporating react into my rails app. I would like to add <a href=""https://github.com/reactjs/react-modal"" rel=""nofollow"">react-modal</a> to a component. I've used rails-assets to add react-modal as a gem but I'm having trouble calling react-modal in my component. I was hoping it would be a similiar call as React.DOM but that hasn't seemed to be the case. </p>

<p>I can't use the normal 'require()' syntax due to sprockets and I would like to stick with rails-assets rather than browserify/webpack solutions.</p>

<p>So just to be clear I want to display the modal in my component and as of now I get an error returned that says 'Modal is not defined'. Thanks for any help.</p>

<p>This is the rails-assets sourced gem:</p>

<pre><code>### Rails Assets Gems
source 'https://rails-assets.org' do
  gem 'rails-assets-react-modal'
end
</code></pre>

<p>Application.js</p>

<pre><code>//= require react
//= require react_ujs
//= require react-modal
//= require components
</code></pre>

<p>This is my component:</p>

<pre><code>customStyles = content:
  top: '50%'
  left: '50%'
  right: 'auto'
  bottom: 'auto'
  marginRight: '-50%'
  transform: 'translate(-50%, -50%)'

DOM = React.DOM
@EntityBulkTracker = React.createClass
  displayName: 'EntityBulkTracker'

  getInitialState: -&gt;
    entity: @props.entity
    modalIsOpen: true

  openModal: (e) -&gt;
    @setState modalIsOpen: true

  closeModal: (e) -&gt;
    @setState modalIsOpen: false

  render: -&gt;
    DOM.div null,
      Modal
        isOpen: @state.modalIsOpen
        onRequestClose: @closeModal
        style: ""#{customStyles}""

        DOM.h2 null,
          ""Hello""
        DOM.input
          type: 'button'
          onClick: @closeModal
        DOM.div null,
          ""I am a modal""
</code></pre>
","1932636","","","","","2016-03-09 16:50:47","How to call react-modal from rails-assets.org in react-rails component","<ruby-on-rails><reactjs><react-rails><rails-assets>","2","1","","",""
"29775775","1","","","2015-04-21 14:54:04","","2","1515","<p>I write next reactjs 0.13.2 class with jsx template</p>

<pre><code>var ImageTest = React.createClass({
    getInitialState:function(){
         return {image:""https://pp.vk.me/c1432/g6369227/c_194fa45c.jpg""};
    },

    render: function () {
         return &lt;img src={this.state.image}/&gt;;
    }
});

$(document).ready(function () {
   React.render(&lt;ImageTest/&gt;, document.getElementById('card'));
});
</code></pre>

<p>I worked in Intelj Idea and have File watcher. FW run Babel task for transform this file to clean JS. And this file worked in browser Chrome</p>

<pre><code>""use strict"";

var ImageTest = React.createClass({
    displayName: ""ImageTest"",

    getInitialState: function getInitialState() {
        return { image: ""https://pp.vk.me/c1432/g6369227/c_194fa45c.jpg"" };
    },

    render: function render() {
        return React.createElement(""img"", { src: this.state.image });
    }
});

$(document).ready(function () {
    React.render(React.createElement(ImageTest, null), document.getElementById(""card""));
});
</code></pre>

<p>And throw next Exception on page load
Warning: Only functions or strings can be mounted as React components.
Uncaught TypeError: undefined is not a function</p>

<pre><code>function autoGenerateWrapperClass(type) {
    return ReactClass.createClass({
    tagName: type.toUpperCase(),
     render: function() {
      return new ReactElement(
      type,
      null,
      null,
      null,
      null,
      this.props
     );
   }
 });
}
</code></pre>

<p>This function in Reactjs raise exception, row this type.toUpperCase(). For <code>img</code> type==Object, if use <code>&lt;div&gt;</code> type==div. Whats wrong in code?</p>
","4796237","","","","","2015-05-27 12:33:22","Render image tag in jsx throw exception in reactjs","<reactjs><react-jsx>","1","3","","",""
"46470765","1","46471436","","2017-09-28 13:45:13","","0","159","<p>I'm trying to make a bar chart using react-chart.js-2. I just noticed that all bar chart example start from the minimum number of the data, not 0.</p>

<p>The example below, the bar chart starts from 40, not 0. What I want to do is to make a bar chart starting from 0, not the minimum number of the data.</p>

<p><a href=""https://i.stack.imgur.com/Hc44E.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Hc44E.png"" alt=""enter image description here""></a></p>

<p>Is it possible to make it using react-chart.js2?</p>

<p>Here is the code(mostly code from the official example )</p>

<pre><code>import React from 'react';
import {Bar} from 'react-chartjs-2';
import 'chartjs-plugin-datalabels';


const data = {
labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
datasets: [
 {
  label: 'My First dataset',
  backgroundColor: 'rgba(255,99,132,0.2)',
  borderColor: 'rgba(255,99,132,1)',
  borderWidth: 1,
  hoverBackgroundColor: 'rgba(255,99,132,0.4)',
  hoverBorderColor: 'rgba(255,99,132,1)',
  data: [65, 59, 80, 81, 56, 55, 40]
  }
 ]
 };


export default React.createClass({
displayName: 'BarExample',

render() {
 return (
  &lt;div&gt;
    &lt;h2&gt;Bar Example (custom size)&lt;/h2&gt;
    &lt;Bar
      data={data}
      width={150}
      height={100}

    /&gt;
  &lt;/div&gt;
  );
 }
});
</code></pre>

<p>Here is a <a href=""https://stackblitz.com/edit/react-kdqqpt"" rel=""nofollow noreferrer"">demo</a>.</p>
","6590570","","","","","2017-09-28 14:16:51","Is it possible to set up 0 as a minimum number for bar chart? react-chart.js-2","<reactjs><chart.js><react-chartjs>","1","0","","",""
"38936019","1","","","2016-08-13 19:01:28","","0","345","<p>I'm facing issues with passing the django render argument as a server response and fetch it using react component and then send it to html.</p>

<p><strong>Below is the Django code :</strong></p>

<pre><code>def view_personal_details (request):
    personal_detail_json = personal_details.objects.all()
    personal_detail = serializers.serialize('json', personal_detail_json)
    return render (request, ""webFiles/reactOutput.html"", {'personal_detail': personal_detail})
</code></pre>

<p><strong>Following is the react code, to fetch the 'personal_detail' sent via django response :</strong></p>

<pre><code>var categories = []; //{ ""model"": ""buglockerApp.authentication_details"", ""pk"": 1, ""fields"": { ""userid"": ""001"", ""password"": ""rajiv@247"", ""sec_que"": ""Pet Name"", ""sec_ans"": ""Jerry"" } }];

var App = _react2.default.createClass({
    displayName: 'App',

    getInitialState: function getInitialState() {
        return {
            data: null
        };
    },
    componentDidMount: function componentDidMount() {
        var self = this;
        //var http = require(""http"");
    var REQUEST_URL = ""/viewPersonalDetails"";
    // var request = http.get(REQUEST_URL, function (response) {
    //  console.log (""react response"" + JSON.stringify(response));
    //  var buffer = """", 
    //         data;
    //     console.log(""categories :"" + JSON.stringify(categories));
    //  response.on(""data"", function (chunk) {
    //         buffer += chunk;
    //  }); 

    //  response.on(""end"", function (err) {
       //      self.setState({
       //          categories: buffer
       //      });
       //      console.log('buffer: ' + buffer);
    //      console.log('categories: ' + JSON.stringify(categories));
    //  }); 
    // });

    fetch(REQUEST_URL, {
          method: 'get',
          dataType: 'json',
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
          }
        })
        .then((response) =&gt; 
          {
            return response.json() // &lt;&lt; This is the problem
          })
        .then((responseData) =&gt; { // responseData = undefined

           return responseData;
         })
        .then((data) =&gt; { 

           console.log(data);
         });
    },
    render: function render() {
        return _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(_griddleReact2.default, { results: categories, tableClassName: 'table', showFilter: true, showSettings: true, columns: [] })
        );
    }
});

_reactDom2.default.render(_react2.default.createElement(App, null), document.getElementById('app'));
</code></pre>

<p><strong>Below is the HTML Content to which the react component will render the output :</strong></p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang = ""en""&gt;
    &lt;head&gt;
      &lt;meta charset = ""UTF-8""&gt;
      &lt;title&gt;React First App&lt;/title&gt;
      {% load static  %}
    &lt;/head&gt;
    &lt;body&gt;
      Django Direct Output: &lt;br /&gt;
      {{ personal_detail }}
      ------------------------ &lt;br /&gt;
      React Output: &lt;br /&gt;
      &lt;div id = ""app""&gt;&lt;/div&gt;
      &lt;script src = ""{% static 'js/reactResponseNoDefaultJson.js' %}""&gt;&lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>The <strong>{{ personal_detail }}</strong> part (in above HTML content) gives the correct json value directly from Django, but the below part in html (i.e. app div and the javascript below) is not returning the content from react. <strong>reactResponseNoDefaultJson.js'</strong> is the minified react js.</p>
","5558037","","5558037","","2016-08-15 08:04:03","2016-08-15 08:43:03","Fetch django render argument in react js component","<javascript><html><django><reactjs>","1","6","","",""
"29753155","1","29763969","","2015-04-20 16:19:09","","1","720","<p>I am trying to use the react addon component, ReactCSSTransitionGroup, within a project that is using server-side rendering and React.NET. </p>

<p>Whenever I call @Html.React() within a view to start the server-side rendering, I get the following exception. </p>

<blockquote>
  <p>Error while rendering ""WorkOrderGeneralTab"" to ""react1"": Script threw
  an exception: 'ReactCSSTransitionGroup' is undefined. Line: 0 Column:0</p>
</blockquote>

<p>How can I get the react.net server-side renderer to recognise the definition of react addons like the CSSTransitionGroup?</p>

<p>Here is what I am doing elsewhere that is likely relevant</p>

<ul>
<li>react-with-addons.js (v0.13.1) is being bundled and sent to the client, along with our own jsx files.</li>
</ul>

<p>Here is whats in my ReactConfig.cs</p>

<pre><code>ReactSiteConfiguration.Configuration
            .AddScript(""~/Scripts/react-with-addons.js"")
            .AddScript(""~/Features/WorkOrder/_Notes.jsx"")
            .AddScript(""~/Features/WorkOrder/_General.jsx"");
</code></pre>

<p>Here is the server-side code (within a .cshtml file) that is throwing the exception</p>

<pre><code>@Html.React(""WorkOrderGeneralTab"", new
{
    workOrder = Model,
    tabName = ""General"",
    softCloseUrl = @Url.Action(""SoftClose""),
    reopenUrl = @Url.Action(""Reopen""),
    userPermissions = new { 
        softClose = @Html.UserHas(Permission.WorkOrderSoftClose),
        reopen = @Html.UserHas(Permission.WorkOrderReopen)
    }
})
</code></pre>

<p>Finally, here is the component that is throwing the exception. This component is instantiated and rendered by the WorkOrderGeneralTab's render function.</p>

<pre><code>var WOGeneralActionButtons = React.createClass({displayName: 'WOGeneralActionButtons',
  render: function() {
    var closeOrReopenBtn;
    // logic that chooses close vs reopen button... 

    var CopyDeleteButtons = &lt;WOCopyDeleteButtons/&gt;;
    var ExportPrintButtons = &lt;WOExportPrintButtons/&gt;;
    return (
          &lt;div className=""col-md-6 text-right""&gt;
            &lt;ReactCSSTransitionGroup transitionName=""example""&gt;
              {closeOrReopenBtn}
            &lt;/ReactCSSTransitionGroup&gt;
            {CopyDeleteButtons}
            {ExportPrintButtons}
          &lt;/div&gt;
    );
  }
});
</code></pre>

<p>I also have some css defined to back the transitionName=""example"".</p>

<p>What am I missing to get the server-side renderer to recognise ReactCSSTransitionGroup as a valid component? If I remove the ReactCSSTransitionGroup tag, everything else works as-is (hold the transition animation).</p>

<p>Thank you in advance!</p>
","4811187","","1455016","","2015-04-21 22:16:30","2015-04-21 22:16:30","How to use react addons with React.NET","<.net><reactjs><add-on>","1","0","","",""
"38941360","1","","","2016-08-14 10:33:51","","0","1518","<p>I am trying to build a web app where I am trying to call a function on button click. I am using react-engine as templating engine using JSX pages. Below is my layout.jsx page</p>

<pre><code>import React from 'react';
import Success from ""./components/success.jsx""; 
import ReactDOM from 'react-dom'; 

class Layout extends React.Component {
    constructor(props) {
        super(props);
        this.displayName = 'Layout';
        this.state = {data:[]};
        //this.arrayHandler = this.arrayHandler.bind(this);
        this.forceUpdateHandler = this.forceUpdateHandler.bind(this);
        this.printHandler = this.printHandler.bind(this);

    }

    /*function submitter(){
        //console.log(""in submitter function"", user.value);
    },*/
    /*arrayHandler(){
        var item = ""first item"";
        var myArray = this.state.data;
        myArray.push(item);
        this.setState({data:myArray})
    }*/

    forceUpdateHandler(){
        return this.forceUpdate();
    }

    printHandler(){
        return this.displayName = ""Sourav"";
    }

    render() {
        return (
            &lt;html&gt;
                &lt;head&gt;
                    &lt;title&gt;JSX&lt;/title&gt;
                &lt;/head&gt;

                &lt;body&gt;
                    &lt;h1&gt;Welcome to React JSX Page&lt;/h1&gt;
                    &lt;div id = ""maincontent""&gt;

                        &lt;Message msg = ""Displaying message""/&gt; 
                        &lt;p id = ""para""&gt;&lt;/p&gt; 
                        &lt;Success successMsg = ""Transaction successful""/&gt;
                        &lt;h2&gt;Arrays: {this.props.propArray}&lt;/h2&gt;
                        &lt;h2&gt;Objects: {this.props.propObject.objectName1}&lt;/h2&gt;

                        &lt;input type = ""button"" onClick = {this.props.propHandler} value = ""Add items""/&gt;
                        &lt;h3&gt;State Arrays: {this.state.data}&lt;/h3&gt;

                        &lt;button onClick = {this.forceUpdateHandler}&gt;FORCE UPDATE&lt;/button&gt;
                        &lt;h4&gt;Random number: {Math.random()}&lt;/h4&gt;

                        &lt;button onClick = {this.printHandler}&gt;Show name&lt;/button&gt;
                        &lt;p&gt;{this.displayName}&lt;/p&gt;

                    &lt;/div&gt;
                &lt;/body&gt;

            &lt;/html&gt;
            );
    }
}

Layout.propTypes = {
    propArray: React.PropTypes.array.isRequired,
    propObject: React.PropTypes.object,
    propHandler: React.PropTypes.func
}

Layout.defaultProps = {
    propArray: [1,2,3,4,5],
    propHandler: function arrayHandler(){
                    var item = ""first item"";
                    var myArray = this.state.data;
                    myArray.push(item);
                    this.setState({data:myArray})
                },
    propObject: {
      objectName1:""objectValue1"",
      objectName2: ""objectValue2"",
      objectName3: ""objectValue3""
   }
}

class Message extends React.Component{
    render(){
        return(
            &lt;div&gt;
                &lt;h2&gt;{this.props.msg}&lt;/h2&gt;
            &lt;/div&gt;
            )
    }
}



//ReactDOM.render(&lt;Layout/&gt;, );


export default Layout;
</code></pre>

<p>i have tried calling the function using both this.props as well as calling directly after binding this to it. However, both the approaches did not work.</p>

<p>Could you please help me with this. I am totally stuck here.</p>
","5568862","","","","","2016-08-14 13:06:57","onClick button event handler not working when using react.js JSX pages","<javascript><node.js><reactjs><react-jsx><react-engine>","1","3","1","",""
"39059800","1","","","2016-08-21 00:17:33","","2","2118","<p>I am using <code>AsyncStorage</code> to store some Firebase user data.</p>

<pre><code>AsyncStorage.setItem('firebaseUser', JSON.stringify(data))
</code></pre>

<p>React Native is blowing up with the below error when I try to retrieve the data</p>

<pre><code>AsyncStorage.getItem('firebaseUser')
</code></pre>

<blockquote>
  <p>JSON value '' of type NSNull cannot be converted to NSString
      +[RCTConvert NSString:] + 226 RCTConvert.m:56</p>
</blockquote>

<p>It appears that Firebase comes back with some <code>null</code> data (<code>displayName</code>, <code>photoUrl</code>, etc.) Not sure if it's related.</p>

<p>Versions:</p>

<pre><code>""react-native"": ""^0.31.0"",
""firebase"": ""^3.3.0"",
</code></pre>

<p>Update:
I actually narrowed it down to the Firebase module is using <code>AsyncStorage</code> to store its own data. When that happens, I get the JSON <code>&lt;null&gt;</code> error. When I clear <code>AsyncStorage</code>, it works again. Here's what the Firebase data object looks like:</p>

<pre><code>""{
  ""uid"": ""XwsK2"",
  ""displayName"": null,
  ""photoURL"": null,
  ""email"": ""test@test.com"",
  ""emailVerified"": false,
  ""isAnonymous"": false,
  ""providerData"": [
    {
      ""uid"": ""test@test.com"",
      ""displayName"": null,
      ""photoURL"": null,
      ""email"": ""test@test.com"",
      ""providerId"": ""password""
    }
  ],
  ""apiKey"": ""xLxzuyPlUqA88kEfy"",
  ""appName"": ""[DEFAULT]"",
  ""authDomain"": ""abc.firebaseapp.com"",
  ""stsTokenManager"": {
    ""apiKey"": ""xLxzuyPlUqA88kEfy"",
    ""refreshToken"": ""AJiUa4Y7b"",
    ""accessToken"": ""eyJhbGciOiJSUzjQzYzU3Nzk5NGVmNGNiy_DlQ8xQO7kq3YXxgntE9Q8YJA"",
    ""expirationTime"": 1472098951672
  },
  ""redirectEventId"": null
}""
</code></pre>
","993548","","1206613","","2016-12-17 13:36:49","2016-12-17 13:36:49","react native AsyncStorage firebase JSON value '<null>' of type NSNull cannot be converted to NSString","<firebase><react-native><firebase-authentication>","1","4","","",""
"47485689","1","47485780","","2017-11-25 11:56:41","","0","307","<p>I am trying to make a react messaging app where the channel page is composed a channel bar <code>Channel.js</code> (Parent Component) with a general and random channel and a message-list <code>ChannelMessage.js</code> (Child Component).</p>

<p>Currently, I can click on the channel bar and it changes the url and <code>this.props.channelName</code>, but the child component displays the same text, regardless of <code>Link</code> clicked. I believe it is because <code>ComponentDidMount</code> does not get called in the child component. How would I go about updating/rerendering the child component to get ComponentDidMount to reload?</p>

<p>Channel.js</p>

<pre><code>export default class Channel extends React.Component {
constructor(props) {
    super(props);
    this.state = {
        channelName: 'general'
    };
    this.handleSignOut = this.handleSignOut.bind(this);
}

...

render() {
    return (
        &lt;div className=""container""&gt;
            &lt;div className=""row""&gt;
                &lt;div className=""channel-list col-lg-2""&gt;
                    &lt;h2&gt;Channels&lt;/h2&gt;
                    &lt;ul className=""list-group""&gt;
                        &lt;li&gt;&lt;Link to=""/channel/general""
                            onClick={() =&gt; this.setState({ channelName: 'general' })}&gt;General&lt;/Link&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;Link to=""/channel/random""
                            onClick={() =&gt; this.setState({ channelName: 'random' })}&gt;Random&lt;/Link&gt;&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;div className=""footer-segment""&gt;
                        ...
                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;ChannelMessages channelName={this.state.channelName} /&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    );
}
</code></pre>

<p>ChannelMessages.js</p>

<pre><code>export default class ChannelMessages extends React.Component {
constructor(props) {
    super(props);
    this.state = {
        channelName: this.props.channelName,
        message: '',
        messages: [],
        textValue: ''
    }
    ...
}

componentWillReceiveProps(nextProps) {
    this.setState({channelName: nextProps.channelName})
}

componentDidMount() {
    this.messageRef = firebase.database().ref('messages/' + this.state.channelName);
    this.messageRef.limitToLast(500).on('value', (snapshot) =&gt; {
        let messages = snapshot.val();
        if (messages !== null) {
            let newMessages = [];
            for (let message in messages) {
                newMessages.push({
                    author: {
                        displayName: messages[message].author.displayName,
                        photoURL: messages[message].author.photoURL,
                        uid: messages[message].author.uid
                    },
                    body: messages[message].body,
                    createdAt: messages[message].createdAt,
                    id: message
                });
            }
            this.setState({ messages: newMessages, textValue: newMessages.body });
        }
        console.log(this.state.textValue)
    });
}

componentWillUnmount() {
    this.messageRef.off('value');
}

handleSubmitMessage(event) {
    event.preventDefault();
    let user = firebase.auth().currentUser;
    this.messageRef.push().set({
        author: {
            displayName: user.displayName,
            photoURL: user.photoURL,
            uid: user.uid
        },
        body: this.state.message,
        createdAt: firebase.database.ServerValue.TIMESTAMP
    });
    this.setState({ message: '' });
}

...

render() {
    return (...);
}
</code></pre>

<p>}</p>
","","user8896885","","","","2017-11-25 12:13:15","react child component not updating after parent state changed","<reactjs>","1","1","","",""
"38482701","1","","","2016-07-20 13:29:10","","-1","104","<p>I am new to reactJs and was going through the <a href=""https://github.com/kirupa/kirupa/blob/master/react/todo.htm"" rel=""nofollow"">code</a>. I want the babel format to be converted to javascript. So, I went to the <a href=""https://babeljs.io/repl/"" rel=""nofollow"">site</a> and converted JXS elements to its corresponding element in javascript for react. Now if using the javascript version of the code </p>

<pre><code>render: function render() {
            var _this = this;

            return React.createElement(""div"",{ className: ""todoListMain"" },
              React.createElement(""div"",{ className: ""header"" },
                React.createElement(
                  ""form"",
                  { onSubmit: this.addItem },
                  React.createElement(""input"", { ref: function ref(a) {
                      return _this._inputElement = a;
                    },
                    placeholder: ""enter task"" }),
                  React.createElement(""button"",{ type: ""submit"" },""add""
                  )
                )
              ),
              React.createElement(TodoItems, { entries: this.state.items })
            );
          }
</code></pre>

<p>getting error <code>Uncaught TypeError: Cannot set property '_inputElement' of undefined</code> in the browser console. But when I use the babel version of the same code which is </p>

<pre><code> render: function() {
        return (
          &lt;div className=""todoListMain""&gt;
            &lt;div className=""header""&gt;
              &lt;form onSubmit={this.addItem}&gt;
                &lt;input ref={(a) =&gt; this._inputElement = a}
                       placeholder=""enter task""&gt;
                &lt;/input&gt;
                &lt;button type=""submit""&gt;add&lt;/button&gt;
              &lt;/form&gt;
            &lt;/div&gt;
            &lt;TodoItems entries={this.state.items}/&gt;
          &lt;/div&gt;
        );
      }
</code></pre>

<p>it is working fine. What is creating problem in javascript code which is not happening in babel version ? Is the way of referencing is wrong in javascript version or something else is wrong ?</p>

<p>Javascript converted code added.</p>

<pre><code>var destination = document.querySelector(""#container"");

    var TodoItems = React.createClass({
      displayName: ""TodoItems"",

      render: function render() {
        var todoEntries = this.props.entries;

        function createTasks(item) {
          return React.createElement(""li"",{ key: item.key },item.text
          );
        }

        var listItems = todoEntries.map(createTasks);

        return React.createElement(""ul"",{ className: ""theList"" },listItems
        );
      }
    });

    var TodoList = React.createClass({
          displayName: ""TodoList"",

          getInitialState: function getInitialState() {
            return {
              items: []
            };
          },
          addItem: function addItem(e) {
            var itemArray = this.state.items;

            itemArray.push({
              text: this._inputElement.value,
              key: Date.now()
            });

            this.setState({
              items: itemArray
            });

            this._inputElement.value = """";

            e.preventDefault();
          },

          render: function render() {
            var _this = this;

            return React.createElement(""div"",{ className: ""todoListMain"" },
              React.createElement(""div"",{ className: ""header"" },
                React.createElement(
                  ""form"",
                  { onSubmit: this.addItem },
                  React.createElement(""input"", { ref: function ref(a) {
                      return _this._inputElement = a;
                    },
                    placeholder: ""enter task"" }),
                  React.createElement(""button"",{ type: ""submit"" },""add""
                  )
                )
              ),
              React.createElement(TodoItems, { entries: this.state.items })
            );
          }
    });

    ReactDOM.render(React.createElement(""div"",null,React.createElement(TodoList, null)), destination);
</code></pre>
","6603038","","6603038","","2016-07-20 13:39:47","2016-07-21 15:10:09","Difference between referencing in javascript and babel in reactJS","<javascript><reactjs><jsx>","1","5","","",""
"40183606","1","40183876","","2016-10-21 18:51:02","","2","39","<p>This is for a react JS project (<a href=""https://jsfiddle.net/y71r5r6b/16/"" rel=""nofollow"">jsfiddle</a>). The textbox should update with the true/false checked value of the checkbox, but it does not do so. Can someone explain why?</p>

<pre><code>var AutoGenerateCheckbox = React.createClass ({
  getInitialState: function() {
    return {checked: false};
  },
  update() {
    this.state.checked = !this.state.checked;
    alert(this.state.checked);
    this.props.onUpdate(this.state.checked);
  },
  render() {
    return (
      &lt;input type=""checkbox"" checked={this.state.checked} onChange={this.update} /&gt;
    );
  }
});

var TBox = React.createClass({displayName: 'TextBox',
  render: function() {
    return (
      &lt;div&gt;
        Checkbox value: {this.props.data}
      &lt;/div&gt;
    );
  }
});

var KApp = React.createClass({
  getInitialState: function() {
    return {autoChecked: false};
  },
  handleAutogenChange: function(val) {
    alert('handleAutogenChange:' + val);
    this.setState({autoChecked : val});
  },
  render: function() {
    return (
        &lt;div&gt;
        &lt;AutoGenerateCheckbox onUpdate={this.handleAutogenChange}/&gt;
        &lt;TBox data={this.state.autoChecked}/&gt;
      &lt;/div&gt;
    );
  }
});

ReactDOM.render(
  &lt;KApp /&gt;,
  document.getElementById('content')
);
</code></pre>
","668622","","","","","2016-10-21 19:09:26","Cannot interact between react components","<javascript><reactjs>","2","3","","",""
"39155043","1","39168678","","2016-08-25 21:32:57","","2","434","<p>I'm using <a href=""https://github.com/webpack/karma-webpack"" rel=""nofollow""><code>karma-webpack</code></a> and I am refactoring a React Component to use in multiple places. I moved the component
 to it's own file, so I can import it and <a href=""https://github.com/reactjs/react-redux/blob/master/docs/api.md#connectmapstatetoprops-mapdispatchtoprops-mergeprops-options"" rel=""nofollow"">connect</a> it differently by applying <code>mapStateToProps</code> / <code>mapDispatchToProps</code> in the HOC I later include on my page. </p>

<p>Here's the scenario: </p>

<p><code>EventTable</code> - <code>import</code>s EventTableComponent, exports <code>connect</code>ed / wrapped component
<code>MyEventTable</code> - <code>import</code>s EventTableComponent, exports <code>connect</code>ed / wrapped component
<code>EventTableComponent</code> - defines the props / behaviors shared to render the data rows</p>

<p>When I <code>git mv</code> EventTable to <code>EventTableComponent</code> and refactored the code so the <code>connected</code> stuff is in the HOCs, the tests start failing to import <code>EventTableComponent</code> <strong>only in <code>karma-webpack</code></strong>.  Chrome works just fine and the view render perfectly. QA is happy, or would be, but my build fails.</p>

<p>The build is failing because <code>WrappedComponent</code> is undefined for the <code>EventTable</code> and <code>MyEventTable</code> components, which causes <code>connect</code> to throw the message in the synopsis (<code>cannot read displayName of undefined</code>), but I don't even import either of these files into my test!  Instead, it fails while karma webpack is building, but before running any tests. </p>

<p>I fixed the build locally by destroying the view and making a ""fake"" / ""replacement"" like this: </p>

<pre><code>function EventTableComponent () { 
    return (&lt;div&gt;garbage here&lt;/div&gt;);
}
</code></pre>

<p>The build passes. </p>

<p>The most confusing part in all of this? I don't even test the HOC <em>at all</em>.    I import just the EventTableComponent into the test, but <code>karma-webpack</code>, as suggested in <a href=""http://redux.js.org/docs/recipes/WritingTests.html#connected-components"" rel=""nofollow"">the Redux Documentation</a>.</p>

<p>I've written a minimal example gist to illustrate: 
<a href=""https://gist.github.com/zedd45/cbc981e385dc33d6920d7fcb55e7a3e0"" rel=""nofollow"">https://gist.github.com/zedd45/cbc981e385dc33d6920d7fcb55e7a3e0</a></p>
","673958","","673958","","2016-08-25 22:49:37","2016-08-26 14:28:55","Redux + karma-webpack - cannot read displayName of undefined upon import of React.Component","<reactjs><webpack><redux><react-redux><karma-webpack>","1","1","1","",""
"39409320","1","","","2016-09-09 10:20:25","","0","237","<p>I have created a react application that has all the logic (like onchange functions) in the parent and all the html rendering in the children components.</p>

<p>In order to test if the right state changes are happening i have to enter text to the input fields and enter values but the only problem is I dont know how to access the children elements when i mount the parent in js dom. </p>

<p>Should i move logic into the child components or should i only unit test the functions of the parent component?</p>

<p>This is from the parent</p>

<pre><code>    render() {
    if (!this.state.accessTokenEntered) {
        return &lt;AccessTokenPage _onChange={this._onChange}
                                accessToken={this.state.inputs.accessToken}
                                env={this.state.inputs.env}
                                _onFirstClick={this._onFirstClick}/&gt;;
</code></pre>

<p>and this is the child</p>

<pre><code>const AccessToken = props =&gt;(
&lt;Layout&gt;
    &lt;Input name={""accessToken""} displayName={""Access Token""} _onChange={props._onChange}
           value={props.accessToken}/&gt;


    &lt;DropDown name={""env""} displayName={""Environment""} _onChange={props._onChange}
              data={['ppe', 'prod']} multiple={false}
              value={props.env}/&gt;

    &lt;br/&gt;

    &lt;div style={{""textAlign"": ""center""}}&gt;
        &lt;input type=""button"" onClick={props._onFirstClick} className=""btn btn-primary"" value=""Submit""/&gt;
    &lt;/div&gt;
&lt;/Layout&gt;
);
</code></pre>

<p>and this is the childs child</p>

<pre><code>const Input = props =&gt; (
&lt;div className=""form-group row""&gt;
    &lt;label className=""col-xs-2 col-form-label""&gt;{props.displayName}&lt;/label&gt;

    &lt;div className=""col-xs-10""&gt;
        &lt;input name={props.name} className=""form-control"" value={props.value}
               onChange={props._onChange}/&gt;&lt;/div&gt;
&lt;/div&gt;
);
</code></pre>
","4470070","","","","","2016-09-09 11:03:58","How do i unit test a react app that has all the text fields in the children components?","<unit-testing><reactjs><jsdom>","1","0","","",""
"38437260","1","","","2016-07-18 12:54:29","","0","105","<p>I am using <code>react-bootstrap</code> for its layout features. I am using the <code>Row</code> tag and getting the following error :</p>

<blockquote>
  <p>Invariant Violation: Row.render(): A valid ReactComponent must be
  returned. You may have returned undefined, an array or some other
  invalid object.</p>
</blockquote>

<p>My usage is as follows . Please point me out to anything I might have missed :</p>

<pre><code>var Row = require('react-bootstrap/lib').Row;


module.exports = React.createClass({

validateForm: function() {
        console.log(""i am validating the transaction details"");
        var input=this.refs.form;
        return(input.validateForm());

    },
render : function(){
return(
&lt;div&gt;
&lt;Row&gt;
&lt;/Row&gt;
  &lt;/div&gt;
); 

}

});
</code></pre>

<p>EDIT :</p>

<p>Even the following gives the same error :</p>

<pre><code>var React = require('react');
var ReactBootstrap = require('react-bootstrap');


module.exports = React.createClass({

validateForm: function() {
        console.log(""i am validating the transaction details"");
        var input=this.refs.form;
        return(input.validateForm());

    },
render : function(){
return(
&lt;div&gt;
&lt;ReactBootstrap.Row&gt;Hello World
&lt;/ReactBootstrap.Row&gt;
  &lt;/div&gt;
); 

}

});
</code></pre>

<p>EDIT :
on doing console.log(Reactbootstrap.Row) , I get the following output :</p>

<pre><code>function (props, context, updater) {
          // This constructor gets overridden by mocks. The argument is used
          // by mocks to assert on what gets mounted.

          if (process.env.NODE_ENV !== 'production') {
            process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. ) : void 0;
          }

          // Wire up auto-binding
          if (this.__reactAutoBindPairs.length) {
            bindAutoBindMethods(this);
          }

          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;

          this.state = null;

          // ReactClasses doesn't have constructors. Instead, they use the
          // getInitialState and componentWillMount methods for initialization.

          var initialState = this.getInitialState ? this.getInitialState() : null;
          if (process.env.NODE_ENV !== 'production') {
            // We allow auto-mocks to proceed as if they're returning null.
            if (initialState === undefined &amp;&amp; this.getInitialState._isMockFunction) {
              // This is probably bad practice. Consider warning here and
              // deprecating this convenience.
              initialState = null;
            }
          }
          !(typeof initialState === 'object' &amp;&amp; !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

          this.state = initialState;
        }
</code></pre>

<p>The above component was called TransactionDetails and I have used this TransactionDetails component in transaction.jsx which looks like follows :</p>

<pre><code>'use strict';

var Layout = require('../layout.jsx');
var React = require('react');
var Validation = require('react-validation');
var validator = require('validator');
var TextInput=require('../common/textInput.jsx');
var RadioButtonSet=require('../common/radioButtonSet.jsx');
var TransactionDetails = require('./transactionDetails.jsx');
var AddressList = require ('../suspects/AddressList.jsx');
module.exports = React.createClass({
 onClick:function(){
   console.log(""I was called from transactions"");
 }, 
 validateForm: function(e) {

        console.log(""i am validating the form"");
        var input=this.refs.transactionDetails;
        if(input.validateForm()===false){
          e.preventDefault();
          alert(""There are validation errors"");
        }


    },

  render: function render() {
      var populatedTransaction;
      var transactions = this.props.transactions;
      var suspects= this.props.suspects;
      var populatedSuspect = suspects[0];
      for(var i=0 ;i&lt;transactions.length;i++){
        if(transactions[i].id===this.props.params.Id){
            populatedTransaction = transactions[i];
            break;
        }
      }
    return (
        &lt;Layout {...this.props} addBundle='true'&gt;
        &lt;section className=""suspects-section""&gt;
        &lt;h2&gt;Transactions&lt;/h2&gt;
        &lt;div&gt;
        &lt;form method=""post"" action=""/PostTransaction"" onSubmit={this.validateForm}&gt;
        &lt;input type=""hidden"" name=""transaction_id"" value={populatedTransaction.id} /&gt;
        &lt;TransactionDetails ref=""transactionDetails"" populatedTransaction={populatedTransaction} {...this.props} /&gt;
        &lt;input ref=""numberInput"" type=""hidden"" name=""_csrf"" value={this.props._csrf} /&gt;
        &lt;input type=""submit"" value=""Save""  /&gt;
        &lt;/form&gt;
        &lt;/div&gt;
        &lt;/section&gt;
        &lt;/Layout&gt;
    );
  }
});
</code></pre>
","6193446","","6193446","","2016-07-18 13:48:12","2016-07-18 13:48:12","Row.render error on using Row from react-bootstrap","<reactjs><react-bootstrap>","1","0","","",""
"39167820","1","","","2016-08-26 13:43:36","","8","3210","<p>I have a strange problem related to the function ‘connect’ and a presentational component</p>

<pre><code>import React from 'react';
import { withRouter } from 'react-router';
import { connect } from 'react-redux';

import * as optionGroupActions from 'actions/optionGroupActions';
import OptionGroupForm from 'components/optionGroup/OptionGroupForm';

const mapDispatchToProps = (dispatch, ownProps) =&gt; {
  return {
    saveOptionGroup: (optionGroup) =&gt; {
      dispatch(optionGroupActions.fetchSaveOptionGroup(optionGroup));
    },
    onClickCancel: () =&gt; {
      ownProps.router.push('/product/options');
    }
  };
};

const OptionGroupAddContainer = connect(
  null,
  mapDispatchToProps
)(OptionGroupForm);

export default OptionGroupAddContainer;
</code></pre>

<p>This works but if I change the import with this</p>

<pre><code>import { OptionGroupForm } from 'components’;
</code></pre>

<p>I got this error:</p>

<pre><code>connect.js:57Uncaught TypeError: Cannot read property 'displayName' of undefined
</code></pre>

<p>components/index.js looks like</p>

<pre><code>// OptionGroups
import OptionGroupForm from 'components/optionGroup/OptionGroupForm';

export {
  OptionGroupForm
};
</code></pre>
","2529315","","2529315","","2016-08-26 14:41:20","2016-08-26 14:41:20","Use component with connect() - Cannot read property 'displayName' of undefined","<reactjs><ecmascript-6><redux>","2","1","1","",""
"30601291","1","30601589","","2015-06-02 16:14:22","","2","1266","<p>I've managed to properly use webpack dev server alongside with a node server (express), using the plugin section inside webpack's config.</p>

<p>It all works fine but now I'm trying to go isomorphic and use client-side components inside the express application.</p>

<p>So far the only problem I'm encountering is that without webpack 'parsing' my server-side code I get to a situation where I require components but the paths are not solved</p>

<p>I.E.</p>

<p><strong>Inside a component</strong></p>

<pre><code>'use strict';

import React from 'react';
import { RouteHandler, Link } from 'react-router';
import Header from 'components/header/main'; // &lt;-- This line causes the error because webpack is not working when parsing this JSX server-side

export default React.createClass({
    displayName: 'App',
    render() {
        return ( // ... More code
</code></pre>

<p>Shall I configure webpack in another way or do I have to change all the imports to be valid server-side?</p>

<p>the codebase is here in case you want to see the actual state <a href=""https://github.com/vshjxyz/es6-react-flux-node-quickstart"" rel=""nofollow"">https://github.com/vshjxyz/es6-react-flux-node-quickstart</a></p>
","771589","","771589","","2015-06-02 16:19:27","2015-06-04 10:10:27","Webpack-dev-server and isomorphic react-node application","<node.js><reactjs><webpack><isomorphic-javascript><webpack-dev-server>","2","1","","",""
"39885009","1","39888356","","2016-10-05 23:05:15","","0","1012","<p>When I look at the following line in this <a href=""https://github.com/clauderic/react-sortable-hoc"" rel=""nofollow"">example</a>:</p>

<p><code>const SortableItem = SortableElement(({value}) =&gt; &lt;li&gt;{value}&lt;/li&gt;);</code></p>

<p>then I don't understand <strong>where is the lambda function</strong> <code>({value}) =&gt; &lt;li&gt;{value}&lt;/li&gt;</code> <strong>used</strong> in <a href=""https://github.com/clauderic/react-sortable-hoc/blob/master/src/SortableElement/index.js"" rel=""nofollow"">SortableElement</a> ?</p>

<p>Can someone please enlighten me ?</p>

<p>SortableElement's code:</p>

<pre><code>import React, {Component, PropTypes} from 'react';
import {findDOMNode} from 'react-dom';
import invariant from 'invariant';

// Export Higher Order Sortable Element Component
export default function SortableElement (WrappedComponent, config = {withRef: false}) {
    return class extends Component {
        static displayName = (WrappedComponent.displayName) ? `SortableElement(${WrappedComponent.displayName})` : 'SortableElement';
        static WrappedComponent = WrappedComponent;
        static contextTypes = {
            manager: PropTypes.object.isRequired
        };
        static propTypes = {
            index: PropTypes.number.isRequired,
            collection: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
            disabled: PropTypes.bool
        };
        static defaultProps = {
            collection: 0
        };
        componentDidMount() {

            let {collection, disabled, index} = this.props;

            if (!disabled) {
                this.setDraggable(collection, index);
            }
        }
        componentWillReceiveProps(nextProps) {
            const {index} = this.props;
            if (index !== nextProps.index &amp;&amp; this.node) {
                this.node.sortableInfo.index = nextProps.index;
            }
            if (this.props.disabled !== nextProps.disabled)
            {
                let {collection, disabled, index} = nextProps;
                if (disabled) {
                    this.removeDraggable(collection);
                }
                else {
                    this.setDraggable(collection, index);
                }
            }
        }
        componentWillUnmount() {
            let {collection, disabled} = this.props;

            if (!disabled) this.removeDraggable(collection);
        }
        setDraggable(collection, index){
            let node = this.node = findDOMNode(this);

            node.sortableInfo = {index, collection};

            this.ref = {node};
            this.context.manager.add(collection, this.ref);
        }
        removeDraggable(collection) {
            this.context.manager.remove(collection, this.ref);
        }
        getWrappedInstance() {
            invariant(config.withRef, 'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableElement() call');
            return this.refs.wrappedInstance;
        }
        render() {
            const ref = (config.withRef) ? 'wrappedInstance' : null;
            return (
                &lt;WrappedComponent ref={ref} {...this.props} /&gt;
            );
        }
    }
}
</code></pre>
","1198559","","","","","2016-10-06 08:47:16","function argument in component's constructor in react.js","<reactjs>","3","0","","",""
"30537696","1","30538283","","2015-05-29 19:32:57","","0","477","<p>I have Problem implementing Reactjs 0.13.1 in angularJS customs directive when I call MYCOMPONENT mixin and pass it to react I have this error </p>

<pre><code>TypeError: Cannot read property '__reactAutoBindMap' of undefined
    at ReactClass.createClass.Constructor (react-with-addons-0.13.1.js:6237)
    at Object.fn (ReceptionReactController.js:21)
    at Scope.$get.Scope.$digest (angular.js:14243)
    at Scope.$get.Scope.$apply (angular.js:14506)
    at done (angular.js:9659)
    at completeRequest (angular.js:9849)
    at XMLHttpRequest.requestLoaded (angular.js:9790)(anonymous function) @ angular.js:11607$get @ angular.js:8557$get.Scope.$digest @ angular.js:14261$get.Scope.$apply @ angular.js:14506done @ angular.js:9659completeRequest @ angular.js:9849requestLoaded @ angular.js:9790
</code></pre>

<p>I don't know why the __reactAutoBindMap is undefined  inside react constructor?</p>

<p>MYCOMPONENT.js</p>

<pre><code>var MYCOMPONENT = React.createClass({
    displayName: 'MYCOMPONENT',
    render: function () {
        return React.DOM.div(null, ""Rendering faster in AngularJs with "", this.props.framework);

    }
});
</code></pre>

<p>angular view </p>

<pre><code>&lt;body &gt;
    &lt;h1&gt;Faster Rendering With ReactJs&lt;/h1&gt;
    &lt;div &gt;
        &lt;input ng-model=""framework"" /&gt;
        &lt;hr&gt;
        &lt;fast-ng framework=""framework""&gt;&lt;/fast-ng&gt;
    &lt;/div&gt;
&lt;/body&gt;
</code></pre>

<p>controller and directive </p>

<pre><code>/** @jsx React.DOM*/
(function () {
    'use strict';

    var app = angular.module('App');

    var ReceptionReactController = function ($scope){
        $scope.framework = 'test';

    };

    app.controller('ReceptionReactController', ['$scope', ReceptionReactController]).directive('fastNg', function(){
        return {
            restrict: 'E',
            scope: {
                framework: '='
            },
            link: function (scope, el, attrs){
                scope.$watch('framework', function(newValue, oldValue){
                    React.render(
                        MYCOMPONENT({ framework: newValue }),
                        el[0]
                    );
                });
            }
        }
    });

}());
</code></pre>

<p><img src=""https://i.stack.imgur.com/8mwVt.png"" alt=""enter image description here""></p>

<p>I have fork plunker <a href=""http://plnkr.co/edit/UMfKatketZadKVnvlfJV?p=preview"" rel=""nofollow noreferrer"">http://plnkr.co/edit/UMfKatketZadKVnvlfJV?p=preview</a></p>
","","user474901","","user474901","2015-05-29 20:01:35","2015-05-29 20:20:13","angularjs and react property '__reactAutoBindMap' of undefined","<javascript><angularjs><angularjs-directive><reactjs>","1","0","","",""
"38456112","1","","","2016-07-19 10:37:02","","0","98","<p>I am new to react, first app. I am trying to create a custom element with attributes of data. For the time being I am writing in plain ES5 so no JSX, Babel or ES6 yet. That will be next.</p>

<pre><code>var myEl = React.createClass({
    displayName : 'elCont',
    render: function() {
        return(
            React.createElement('My-Shiney-Element', {
                data: data,
                conf: conf
            })
         );
     )}


var data = [1,2,3,4,5,6];
var conf = {""show"": true};
</code></pre>

<p>I can see in the html <code>&lt;my-shiney-element&gt;&lt;\my-shiney-element&gt;</code> But not the attributes?</p>
","2244072","","2244072","","2016-07-19 10:55:58","2016-07-19 11:03:31","Creating react element with custom attributes","<javascript><reactjs>","1","0","","",""
"39613455","1","39613893","","2016-09-21 10:05:12","","0","208","<p>I'm writing reactjs (coffescript+JSX syntax). If user writes something into input and then  clicks on the button, get ajax request is sent and the result in callback function (json object) isn't inserted into the state <strong>names</strong> using setState and I get following error: <strong>cannot read property ""names"" of undefined</strong></p>

<p>I don't know where should be a problem </p>

<pre><code>$ -&gt;
# first component
 MainComponent = React.createClass
  getInitialState: -&gt;
   names:[]

  _getSpecificCard: (card_name) -&gt;
   $.get ""home/users/#{card_name}"", (newuser) -&gt; @setState names:@state.names.concat([newuser])                                               

  _getAllcards: -&gt;
   @state.names.map((user) -&gt;
    &lt;Card key={user.id} name={user.login} avatarurl={user.avatar_url}  /&gt;)

  render: -&gt;
   cards= @_getAllcards
   &lt;div&gt;
    &lt;SimpleForm addCard={@_getSpecificCard} /&gt;
     {cards}
   &lt;/div&gt;

# second component
 SimpleForm= React.createClass

  _handleSubmit: (e) -&gt;
   e.preventDefault()
   textInput= @refs.login
   @props.addCard(textInput.value)

  render: -&gt;
   &lt;form onSubmit={@_handleSubmit}&gt;
    &lt;input placeholder=""github login"" ref=""login"" /&gt;
    &lt;button&gt;Show user&lt;/button&gt;
   &lt;/form&gt;

# third component
 Card = React.createClass
  render: -&gt;
   &lt;div&gt;
    &lt;h3&gt;{@props.name}&lt;/h3&gt;
     &lt;img src={@props.avatarurl} width=80 /&gt;
   &lt;/div&gt;

 ReactDOM.render(&lt;MainComponent /&gt;,document.getElementById(""pluralsight""))
</code></pre>

<p>// compiled version </p>

<pre><code>$(function() {
  var Card, MainComponent, SimpleForm;
  MainComponent = React.createClass({displayName: ""MainComponent"",
    getInitialState: function() {
      return {
        names: []
      };
    },
    _getSpecificCard: function(card_name) {
      return $.get(""home/users/"" + card_name, function(newuser) {
        return this.setState({
          names: this.state.names.concat([newuser])
        });
      });
    },
    _getAllcards: function() {
      return this.state.names.map(function(user) {
        return React.createElement(Card, {
          ""key"": user.id,
          ""name"": user.login,
          ""avatarurl"": user.avatar_url
        });
      });
    },
    render: function() {
      var cards;
      cards = this._getAllcards;
      return React.createElement(""div"", null, React.createElement(SimpleForm, {
        ""addCard"": this._getSpecificCard
      }), cards);
    }
  });
  SimpleForm = React.createClass({displayName: ""SimpleForm"",
    _handleSubmit: function(e) {
      var textInput;
      e.preventDefault();
      textInput = this.refs.login;
      return this.props.addCard(textInput.value);
    },
    render: function() {
      return React.createElement(""form"", {
        ""onSubmit"": this._handleSubmit
      }, React.createElement(""input"", {
        ""placeholder"": ""github login"",
        ""ref"": ""login""
      }), React.createElement(""button"", null, ""Show user""));
    }
  });
  Card = React.createClass({displayName: ""Card"",
    render: function() {
      return React.createElement(""div"", null, React.createElement(""h3"", null, this.props.name), React.createElement(""img"", {
        ""src"": this.props.avatarurl,
        ""width"": 80
      }));
    }
  });
  return ReactDOM.render(React.createElement(MainComponent, null), document.getElementById(""pluralsight""));
});
</code></pre>
","3055526","","3055526","","2016-09-21 12:57:38","2016-09-21 12:57:38","cannot read property ""names"" of undefined in react","<javascript><reactjs><coffeescript><jsx>","2","1","","",""
"30624670","1","30627400","","2015-06-03 15:37:37","","1","896","<p>I have angular application and we start using react as render data.we have one problem is how can we call $scope.showUserDetails from directive react component
.I tried using this.props.scope.$parent.showUserDetails(); <code>I have Uncaught TypeError: Cannot read property '$parent' of undefined</code> </p>

<p>react component</p>

<pre><code> /** @jsx React.DOM */
var MYCOMPONENT = React.createClass({
    displayName: 'MYCOMPONENT',
    handleClick: function (e) {
        console.log('You clicked');
        this.props.scope.$parent.showUserDetails();
    },
    render: function (){     
        var listUser = this.props.data.map(function(item){

            return(
                React.DOM.div(
                    {
                        className: 'panel panel-default staff-reception ' + item.statusType.toLocaleLowerCase() + 'Office',
                        'ng-click': 'showUserDetails(' + item + ')',
                        onClick: this.handleClick
                    },
                    React.DOM.div(
                        {
                             className: 'panel-body'
                        },
                        React.DOM.span(null, item.firstName + ' ' + item.lastName + ' ' + item.directDial + ' Ext:' + item.voiceMailExt)
             )
             )
             );
        },this);

        return (React.DOM.div({className:'col-xs-12 col-md-6 col-lg-4'}, listUser));
    }
});
</code></pre>

<p>controller </p>

<pre><code>(function () {

    'use strict';
    var app = angular.module('app');

    var ReceptionReactController = function ($scope, ReceptionReactService, $modal) {


        $scope.showUserDetails = function (user, index) {
            var modalInstance = $modal.open({
                templateUrl: 'UserDetails.html',
                controller: UserDetailsController,
                size: 'lg',
                resolve: {
                    user: function () {
                        return user;
                    }
                }
            });
            modalInstance.result.then(function (userUpdatedStatus) {
                updateUserStatus(userUpdatedStatus);

            }, function () {

            });
        };




    };

    app.controller('ReceptionReactController', ['$scope', 'ReceptionReactService', '$modal', '$window', ReceptionReactController]).directive('fastNg', function () {
        return {
            restrict: 'E',
            scope: {
                data: '='
            },
            link: function (scope, el, attrs){
                scope.$watch('data', function(newValue, oldValue){
                    React.render(React.createElement(
                          MYCOMPONENT, {
                              data: newValue
                          }),
                          el[0]
                        );
                });
            }
        }
    });

}());
</code></pre>

<p>view </p>

<pre><code> &lt;fast-ng data=""ListTitleUsers.users""&gt;&lt;/fast-ng&gt;
</code></pre>
","","user474901","","user474901","2015-06-03 19:02:43","2015-06-03 19:02:43","how to call parent function controller from directive react component angularjs + reactjs?","<angularjs><angularjs-directive><angularjs-scope><reactjs>","1","0","","",""
"47980042","1","47980463","","2017-12-26 14:38:35","","0","46","<p>By the will of fate I have to work with react.js using only ES3 standrad. So, jsx, class and other things.<br>
Using React.createClass and React.createElement I managed to crate a interactive input component that reflects input text to the label above input field.
<a href=""https://i.stack.imgur.com/UOzv0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/UOzv0.png"" alt=""enter image description here""></a>
<br> The code for this is following:</p>

<pre><code>requirejs.config({
    // module name mapped to CDN url
    paths: {
        // Require.js appends `.js` extension for you
        'react': 'https://unpkg.com/react@15.3.2/dist/react',
        'react-dom': 'https://unpkg.com/react-dom@15.3.2/dist/react-dom'
    }
});

requirejs(['react', 'react-dom'], function(React, ReactDOM) {
      'use strict';
      var Input;
      var cr, root;
      cr = React.createElement;

      Input = React.createClass({
        displayName: 'Input',

        getInitialState: function getInitialState() {return {typed: ''};},

        onChange: function onChange(event) {
          this.setState({typed: event.target.value});
        },

        render: function render() {
          return cr('div', null,
            cr('div', null, '=&gt;' + this.state.typed),
            cr('input', { type: 'text', onChange: this.onChange.bind(this)})
            );
          }
        });

        root = Input;
        var app = document.getElementById('app');
        ReactDOM.render(cr(root, null), app);
});
</code></pre>

<p>but now I'm trying to create a new component with two Input components inside:</p>

<pre><code>    InputBlock = React.createClass({
    displayName: 'InputBlock',
    render: function render() {
      return cr('div', null, 
        cr('Input', null), 
        cr('Input', null)
        );
      }
    });
</code></pre>

<p>And I expected to see two element with dynamic behavior, but get only two simple input fields:
<a href=""https://i.stack.imgur.com/bdZKx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bdZKx.png"" alt=""enter image description here""></a></p>

<p>I understand that I miss something obvious, but I'm very new to react.js and can't see the whole picture yet.
Please, help.</p>

<p>Full implementation of final code</p>

<pre><code>requirejs.config({
    // module name mapped to CDN url
    paths: {
        // Require.js appends `.js` extension for you
        'react': 'https://unpkg.com/react@15.3.2/dist/react',
        'react-dom': 'https://unpkg.com/react-dom@15.3.2/dist/react-dom'
    }
});

requirejs(['react', 'react-dom'], function(React, ReactDOM) {
      'use strict';
      var Input, InputBlock;
      var cr, root;
      cr = React.createElement;

      Input = React.createClass({
        displayName: 'Input',

        getInitialState: function getInitialState() {return {typed: ''};},

        onChange: function onChange(event) {
          this.setState({typed: event.target.value});
        },

        render: function render() {
          return cr('div', null,
            cr('div', null, '=&gt;' + this.state.typed),
            cr('input', { type: 'text', onChange: this.onChange.bind(this)})
            );
          }
        });

        InputBlock = React.createClass({
        displayName: 'InputBlock',
        render: function render() {
          return cr('div', null, 
            cr('Input', null), 
            cr('Input', null)
            );
          }
        });

        root = InputBlock;
        var app = document.getElementById('app');
        ReactDOM.render(React.createElement(root, null), app);
});
</code></pre>
","714873","","7461381","","2017-12-26 14:39:26","2017-12-26 15:14:55","components inside components in react with vanilla JS","<javascript><reactjs>","1","0","","",""
"51293414","1","51293524","","2018-07-11 20:03:06","","0","16","<p>Following docs for authenticating users in firebase for authentication and DB access in a react-native app via firebase package (<a href=""https://firebase.google.com/docs/auth/web/password-auth"" rel=""nofollow noreferrer"">https://firebase.google.com/docs/auth/web/password-auth</a> (following this tutorial: <a href=""https://medium.com/dailyjs/react-native-email-authentication-with-firebase-4be20142b0a9"" rel=""nofollow noreferrer"">https://medium.com/dailyjs/react-native-email-authentication-with-firebase-4be20142b0a9</a>)), am now at a point where I have a successful firebase auth response object from the code</p>

<pre><code>    firebase.auth().signInWithEmailAndPassword(email, password)
    .then((res) =&gt; { 
        console.log(`Login successful: ${JSON.stringify(res)}`)
        //TODO: signin stuff, eg. storing user session credentials?
        this.props.navigation.navigate('MainNav')
    })
    .catch((res) =&gt; {
        console.log(`Login was not successful: ${JSON.stringify(res)}`)
        this.setState({signinError: res.message})
    });
</code></pre>

<p>of the form</p>

<pre><code>    Object {
       ""apiKey"": ""qwerty"",
       ""appName"": ""[DEFAULT]"",
       ""authDomain"": ""myapp-z12345.firebaseapp.com"",
       ""createdAt"": ""1531206612000"",
       ""displayName"": null,
       ""email"": ""me@gmail.com"",
       ""emailVerified"": false,
       ...
       ""stsTokenManager"": Object {
            ""accessToken"":""qwerty"",
            ""apiKey"": ""qwerty"",
            ""expirationTime"": 1531339781120,
            ""refreshToken"": ""qwerty"",
       },
       ""uid"": ""qwerty123"",
     }
</code></pre>

<p>My question is: what am I supposed to do with these values? What do the different tokens do (totally new to firebase and moblie apps)? Which should be stored and which should be accessed some other way? </p>

<p>Looking at the firebase docs, I don't see any token being used to access firebase DB (I'm actually using firestore, <a href=""https://firebase.google.com/docs/firestore/quickstart"" rel=""nofollow noreferrer"">https://firebase.google.com/docs/firestore/quickstart</a>), so I'm a bit confused about their use.</p>
","8236733","","","","","2018-07-11 20:21:05","What parts of firebase.auth response should be stored locally (in reactjs app)? What do they do?","<firebase><react-native>","2","0","","",""
"35494916","1","35494974","","2016-02-19 00:01:40","","1","1169","<p>I'm building a Express app using React. I start my server, go to localhost and I see a blank page, when I check the developer tools on chrome it shows me that my js file is plain HTML. Why is that?</p>

<p>This is my <code>server.js</code>:</p>

<pre><code>var express = require('express');

var app = express();
var port = process.env.NODE_ENV || 3000;

app.get('*', function(req, res) {
    res.sendFile(__dirname + '/public/views/index.html');
});

app.listen(port, function() {
    console.log('Listening to http://localhost:' + port);
});
</code></pre>

<p>This is my <code>app.js</code>:</p>

<pre><code>var React = require('react'),
    ReactDOM = require('react-dom');

var App = React.createClass({displayName: ""App"",
    render () {
        return (
            React.createElement(""h1"", null, ""Hello World!!!!!"")
        )
    }
});

ReactDOM.render(React.createElement(App, null), document.getElementById('main-app'));
</code></pre>

<p>My <code>index.html</code>:</p>

<pre><code>&lt;body&gt;
    &lt;div id=""main-app""&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;script src=""public/assets/dist/javascripts/app.js""&gt;&lt;/script&gt;
</code></pre>

<p>This is what I see on developer tools:
<a href=""http://i.stack.imgur.com/2Hy4N.png"" rel=""nofollow"">image</a></p>
","4980591","","","","","2016-02-19 01:40:27","Express app not rendering my react components","<node.js><express><reactjs>","1","0","1","",""
"38057041","1","","","2016-06-27 14:49:36","","1","840","<p>I have used these npm dependencies while rendering the react using node on server side.</p>

<pre><code>var React = require('react');
var ReactDOMServer = require('react-dom/server');
var request = require('request');
</code></pre>

<p>I can not use <code>componentDidMount</code> because it is never called while rendering server side. So, I used <code>componentWillMount</code> and my final code structure is like this : </p>

<pre><code>var Content = React.createClass({
displayName: 'Content',
getInitialState: function getInitialState() {
    console.log('getInitialState');
    return {
        xyz : [],
        abc : ''
    };
},

componentWillMount: function componentWillMount() { 
    console.log('componentWillMount');  
    request(
        'some_url', 
        function (error, response, body) {
            console.log(response.statusCode);
         if (!error &amp;&amp; response.statusCode == 200) {
            console.log('Request Call');
            this.setState = {
                    xyz : [],
                    abc : ''
           }
        } 
    }.bind(this));
},
render: function render() {
    console.log('render');
    return React.createElement(
        'div',
        { 
            className: 'clearfix container-fluid padding-none' },
            React.createElement(TopSection, { title: this.state.title, slug: this.state.slug })
       );
    }
});
</code></pre>

<p>My LifeCycle is going as follow</p>

<pre><code>getInitialState
componentWillMount
render
Request Call
render
</code></pre>

<p>and after the render is called second time i got this error</p>

<pre><code>Warning: React can't find the root component node for data-reactid
      value `.1va42hea328.1.0.1`. If you're seeing this message, it 
probably means that you've loaded two copies of React on the page. At   this
time, only a single copy of React can be loaded at a time.

/Users/me/Desktop/Projects/silly-poke/node_modules/react/lib/ReactMount.js:715

firstChildren[0] = deepestAncestor.firstChild;
                                  ^

TypeError: Cannot read property 'firstChild' of undefined
</code></pre>

<p>Output of <code>npm ls</code> is as below : </p>

<pre><code>     ├─┬ compression@1.6.2
│ ├─┬ accepts@1.3.3
│ │ ├─┬ mime-types@2.1.11
│ │ │ └── mime-db@1.23.0
│ │ └── negotiator@0.6.1
│ ├── bytes@2.3.0
│ ├─┬ compressible@2.0.8
│ │ └── mime-db@1.23.0
│ ├─┬ debug@2.2.0
│ │ └── ms@0.7.1
│ ├── on-headers@1.0.1
│ └── vary@1.1.0
├─┬ express@4.14.0
│ ├─┬ accepts@1.3.3
│ │ ├─┬ mime-types@2.1.11
│ │ │ └── mime-db@1.23.0
│ │ └── negotiator@0.6.1
│ ├── array-flatten@1.1.1
│ ├── content-disposition@0.5.1
│ ├── content-type@1.0.2
│ ├── cookie@0.3.1
│ ├── cookie-signature@1.0.6
│ ├─┬ debug@2.2.0
│ │ └── ms@0.7.1
│ ├── depd@1.1.0
│ ├── encodeurl@1.0.1
│ ├── escape-html@1.0.3
│ ├── etag@1.7.0
│ ├─┬ finalhandler@0.5.0
│ │ ├── statuses@1.3.0
│ │ └── unpipe@1.0.0
│ ├── fresh@0.3.0
│ ├── merge-descriptors@1.0.1
│ ├── methods@1.1.2
│ ├─┬ on-finished@2.3.0
│ │ └── ee-first@1.1.1
│ ├── parseurl@1.3.1
│ ├── path-to-regexp@0.1.7
│ ├─┬ proxy-addr@1.1.2
│ │ ├── forwarded@0.1.0
│ │ └── ipaddr.js@1.1.1
│ ├── qs@6.2.0
│ ├── range-parser@1.2.0
│ ├─┬ send@0.14.1
│ │ ├── destroy@1.0.4
│ │ ├─┬ http-errors@1.5.0
│ │ │ ├── inherits@2.0.1
│ │ │ └── setprototypeof@1.0.1
│ │ ├── mime@1.3.4
│ │ ├── ms@0.7.1
│ │ └── statuses@1.3.0
│ ├── serve-static@1.11.1
│ ├─┬ type-is@1.6.13
│ │ ├── media-typer@0.3.0
│ │ └─┬ mime-types@2.1.11
│ │   └── mime-db@1.23.0
│ ├── utils-merge@1.0.0
│ └── vary@1.1.0
├── parent-require@1.0.0
├─┬ react@0.14.8
│ ├─┬ envify@3.4.1
│ │ ├─┬ jstransform@11.0.3
│ │ │ ├── base62@1.1.1
│ │ │ ├─┬ commoner@0.10.4
│ │ │ │ ├─┬ commander@2.9.0
│ │ │ │ │ └── graceful-readlink@1.0.1
│ │ │ │ ├─┬ detective@4.3.1
│ │ │ │ │ ├── acorn@1.2.2
│ │ │ │ │ └── defined@1.0.0
│ │ │ │ ├─┬ glob@5.0.15
│ │ │ │ │ ├─┬ inflight@1.0.5
│ │ │ │ │ │ └── wrappy@1.0.2
│ │ │ │ │ ├── inherits@2.0.1
│ │ │ │ │ ├─┬ minimatch@3.0.2
│ │ │ │ │ │ └─┬ brace-expansion@1.1.5
│ │ │ │ │ │   ├── balanced-match@0.4.1
│ │ │ │ │ │   └── concat-map@0.0.1
│ │ │ │ │ ├─┬ once@1.3.3
│ │ │ │ │ │ └── wrappy@1.0.2
│ │ │ │ │ └── path-is-absolute@1.0.0
│ │ │ │ ├── graceful-fs@4.1.4
│ │ │ │ ├── iconv-lite@0.4.13
│ │ │ │ ├─┬ mkdirp@0.5.1
│ │ │ │ │ └── minimist@0.0.8
│ │ │ │ ├── private@0.1.6
│ │ │ │ ├── q@1.4.1
│ │ │ │ └─┬ recast@0.10.43
│ │ │ │   ├── ast-types@0.8.15
│ │ │ │   ├── esprima-fb@15001.1001.0-dev-harmony-fb
│ │ │ │   └── source-map@0.5.6
│ │ │ ├── esprima-fb@15001.1.0-dev-harmony-fb
│ │ │ ├── object-assign@2.1.1
│ │ │ └─┬ source-map@0.4.4
│ │ │   └── amdefine@1.0.0
│ │ └── through@2.3.8
│ └─┬ fbjs@0.6.1
│   ├── core-js@1.2.6
│   ├─┬ loose-envify@1.2.0
│   │ └── js-tokens@1.0.3
│   ├─┬ promise@7.1.1
│   │ └── asap@2.0.4
│   ├── ua-parser-js@0.7.10
│   └── whatwg-fetch@0.9.0
├── react-dom@0.14.8
└─┬ request@2.72.0
  ├── aws-sign2@0.6.0
  ├── aws4@1.4.1
  ├─┬ bl@1.1.2
  │ └─┬ readable-stream@2.0.6
  │   ├── core-util-is@1.0.2
  │   ├── inherits@2.0.1
  │   ├── isarray@1.0.0
  │   ├── process-nextick-args@1.0.7
  │   ├── string_decoder@0.10.31
  │   └── util-deprecate@1.0.2
  ├── caseless@0.11.0
  ├─┬ combined-stream@1.0.5
  │ └── delayed-stream@1.0.0
  ├── extend@3.0.0
  ├── forever-agent@0.6.1
  ├─┬ form-data@1.0.0-rc4
  │ └── async@1.5.2
  ├─┬ har-validator@2.0.6
  │ ├─┬ chalk@1.1.3
  │ │ ├── ansi-styles@2.2.1
  │ │ ├── escape-string-regexp@1.0.5
  │ │ ├─┬ has-ansi@2.0.0
  │ │ │ └── ansi-regex@2.0.0
  │ │ ├─┬ strip-ansi@3.0.1
  │ │ │ └── ansi-regex@2.0.0
  │ │ └── supports-color@2.0.0
  │ ├─┬ commander@2.9.0
  │ │ └── graceful-readlink@1.0.1
  │ ├─┬ is-my-json-valid@2.13.1
  │ │ ├── generate-function@2.0.0
  │ │ ├─┬ generate-object-property@1.2.0
  │ │ │ └── is-property@1.0.2
  │ │ ├── jsonpointer@2.0.0
  │ │ └── xtend@4.0.1
  │ └─┬ pinkie-promise@2.0.1
  │   └── pinkie@2.0.4
  ├─┬ hawk@3.1.3
  │ ├── boom@2.10.1
  │ ├── cryptiles@2.0.5
  │ ├── hoek@2.16.3
  │ └── sntp@1.0.9
  ├─┬ http-signature@1.1.1
  │ ├── assert-plus@0.2.0
  │ ├─┬ jsprim@1.3.0
  │ │ ├── extsprintf@1.0.2
  │ │ ├── json-schema@0.2.2
  │ │ └── verror@1.3.6
  │ └─┬ sshpk@1.8.3
  │   ├── asn1@0.2.3
  │   ├── assert-plus@1.0.0
  │   ├── dashdash@1.14.0
  │   ├── ecc-jsbn@0.1.1
  │   ├── getpass@0.1.6
  │   ├── jodid25519@1.0.2
  │   ├── jsbn@0.1.0
  │   └── tweetnacl@0.13.3
  ├── is-typedarray@1.0.0
  ├── isstream@0.1.2
  ├── json-stringify-safe@5.0.1
  ├─┬ mime-types@2.1.11
  │ └── mime-db@1.23.0
  ├── node-uuid@1.4.7
  ├── oauth-sign@0.8.2
  ├── qs@6.1.0
  ├── stringstream@0.0.5
  ├── tough-cookie@2.2.2
  └── tunnel-agent@0.4.3
</code></pre>

<p>means  there is no other version of react loading as i have seen problem on searching this error.</p>
","1788641","","","","","2016-12-02 09:04:23","TypeError: Cannot read property 'firstChild' of undefined While rendering the react page server side","<javascript><node.js><reactjs>","1","8","","",""
"48023263","1","48031465","","2017-12-29 13:20:56","","1","135","<p>I'm trying to learn react router (v4) in depth by building a simple app with firebase, what i am doing is when a user login with google using firebase they will be redirected to another component and when they go to the root path again '/' they will no longer see the login ( i am doing this by redirecting based on state )</p>

<p>I have two problems</p>

<p>My first problem is on successful authentication the user will be redirected to the /dashboard as expected but if i go back or type the root path again the login page will be shown briefly and then redirect.. i think because my method is not fast enough which is the <code>componentWillMount();</code></p>

<p>My second problem is i want to pass in some props to the dashboard but i don't know how, i've been looking and searching in the internet but i have no idea how to implement it... </p>

<p>this is my login.js, i want to pass the currentUser to dashboard and also when user goes back to the login path and if they are logged in i want to redirect them fast enough without showing the login page...</p>

<pre><code>  state = {
        currentUser: null,
        successLogin: false
    }

    googleAuth = () =&gt; {
        auth.signInWithPopup(provider).then(response =&gt; {
            const token = response.credential.accessToken;
            const currentUser = response.user;
        }).catch(error =&gt; {
            console.log(error.code , 'occured');
        })
    }

    // firebase.auth().signInWithPopup(provider).then(function(result) {
    //   var token = result.credential.accessToken;
    //   var user = result.user;
    // }).catch(function(error) {
    //   var errorCode = error.code;
    //   var errorMessage = error.message;
    //   var email = error.email;
    //   var credential = error.credential;
    // });

    componentDidMount() {
        auth.onAuthStateChanged(user =&gt; {
            if(user) {
                console.log('a user was successfuly logged in')
                this.setState({
                    currentUser: user.displayName,
                    successLogin: true
                })
            } else {
                console.log('eerror')
            }
        })
    }

    componentDidUpdate() {
        if(this.state.successLogin){
            this.props.history.replace(""/dashboard"");
        } else {
            console.log('not a successful login');
        }
    }

    componentWillMount() {
        if(this.state.successLogin){
            &lt;Redirect to=""/dashboard""/&gt;
        }
    }
</code></pre>

<p>here is my dashboard im creating new state for the user since i don't know how to get the currentUser state from the login...</p>

<pre><code> state = {
        user: null
    }

    componentDidMount(){
       auth.onAuthStateChanged(user =&gt; {
            this.setState({
                user: user.displayName
            })
       })
    }
    render(){
        const { user } = this.state;
        return (
            &lt;h1&gt; DashBoard {user}&lt;/h1&gt;
            )
    }
}
</code></pre>

<p>this is my routes.js</p>

<pre><code>&lt;BrowserRouter&gt;
     &lt;div&gt;
          &lt;Switch&gt;
            &lt;Route path='/' exact component={Login} /&gt;
            &lt;Route path='/register' component={Register} /&gt; 
            &lt;Route path='/dashboard' component={MainDashBoard} /&gt;
          &lt;/Switch&gt;
      &lt;/div&gt;
&lt;/BrowserRouter&gt;
</code></pre>

<p>I know that i can use redux but i don't want to jump into redux yet....</p>
","4344549","","4387980","","2017-12-30 10:46:57","2017-12-30 10:46:57","How do I pass a prop into a react-router Route?","<reactjs><firebase><react-router><firebase-authentication><react-router-v4>","1","0","","",""
"47359773","1","","","2017-11-17 21:47:32","","0","92","<p>I'm fairly new to the Firebase ecosystem, so I hope I'm not asking something too basic.
I'm using the <a href=""https://github.com/firebase/firebase-js-sdk"" rel=""nofollow noreferrer"" title=""firebase-js-sdk"">firebase-js-sdk</a> along with an e-mail + password registration. When the user signs up using an e-mail I prompt them to select their username and I store it using the <code>user.updateProfile()</code> method. This works fine, as the next time I call <code>firebase.auth().currentUser</code> I see the displayName property containing the updated value.<br>
As for facebook, I'm using the <a href=""https://github.com/facebook/react-native-fbsdk"" rel=""nofollow noreferrer"" title=""react-native-fbsdk"">react-native-fbsdk</a>, and I authenticate the user using the following function: <br></p>

<pre><code>const fbLogin = () =&gt; {
  return new Promise((resolve, reject) =&gt; {

    LoginManager
      .logInWithReadPermissions(['public_profile', 'email'])
      .then((result) =&gt; {
        if (result.isCancelled) {
          console.log('login cancelled');
        } else {
          AccessToken
            .getCurrentAccessToken()
            .then((data) =&gt; {
              const credentials = firebase.auth.FacebookAuthProvider.credential(data.accessToken);
              firebase
                .auth().signInWithCredential(credentials)
                .then((res) =&gt; resolve(res))
                .catch((err) =&gt; reject(err));
            })
        }
      }).catch(err =&gt; reject(err));

  });
}
</code></pre>

<p>Once I store the user's data on Firebase I ask him to choose an username and I update the displayName following the same steps of the e-mail authentication. This seems to work too because if I call <code>firebase.auth().currentUser</code> I see the updated displayName. The only problem is when I reload the app the displayName is back to the facebook name. <br>
My questions are: <br></p>

<ul>
<li>Is it possible to override the displayName provided by Facebook?</li>
<li>If so, is this the correct approach to do so?</li>
</ul>

<p>Thanks in advance to anyone that will help :)</p>
","4811744","","4811744","","2017-11-17 22:31:12","2017-11-17 22:31:12","Firebase - Change displayName for Facebook provider","<javascript><facebook><firebase><react-native>","0","6","","",""
"32092020","1","","","2015-08-19 09:47:43","","3","1521","<p>I'm writing a very simple Nodejs app. I use React + Socket.io. </p>

<p>There's a root element which immediately renders another react component (you may wonder why I have this root element. The reason is that I want to be able to mount one of the two components after receiving a message from server, but for the start I render a preselected component). 
In this root component , I define a socket in <code>componentDidMount</code> . Now the problem is that I want to pass this socket to all of the children (so they can listen and communicate with the server messages.) But if I connect to the server in <code>componentDidMount</code> of the root, during the rendering there is no socket as it's not connected yet and <code>null</code> will be passed to the child components. </p>

<pre><code>'use strict';

var React = require('react');
var ioClient = require('socket.io-client');
var UsersList = require('./usersList');
var Game = require('./game');
var socket;

var Snake = React.createClass({

    displayName: 'Snake',

    propTypes: {},

    getDefaultProps: function() {
        return {};
    },

    mixins: [],

    getInitialState: function() {
        return ({
            usersList: true,
            game: false
        });
    },

    componentWillMount: function() {
    },

    componentWillUnmount: function() {
        this.socket.close();
    },
    componentDidMount: function() {
        socket = ioClient.connect(); // this happens after render
    },
    render: function() {
        var result = null;
        if (this.state.usersList) {
            result = &lt;UsersList socket={socket}/&gt; // therefore this one is passed as null
        } else { //game : true
            result = &lt;Game socket={socket}/&gt;
        }
        return (&lt;div&gt;
            {result}
        &lt;/div&gt;)
    }
});

module.exports = Snake;

'use strict';

var React = require('react');

    var UsersList = React.createClass({

        displayName: 'UsersList',

        propTypes: {},

        getDefaultProps: function() {
            return {};
        },

        mixins: [],

        getInitialState: function() {
            return ({
                usersList:[]
            });
        },
        componentWillReceiveProps: function(){
        },
        componentWillMount: function() {
        },

        componentWillUnmount: function() {
        },

        componentDidMount: function(){ 
            var socket = this.props.socket; // this one was passed into the component as null
            socket.on('usersList', function(data){ // so this one returns an error
                this.setState({
                    usersList: data.usersList
                });
            });
        },
        render: function() {
            var users = [];
            for (var i = 0 ; i &lt; this.state.usersList.length ; i++){
                users.push(&lt;span&gt;{this.state.usersList[i]}&lt;/span&gt;);
            }
            return(&lt;div&gt;{users}&lt;/div&gt;);
        }
    });

    module.exports = UsersList;
</code></pre>

<p>So , now you may ask why I don't put <code>io.connect()</code> in <code>componentWillMount</code> or at the top of the file. Well , it doesn't work ! it returns this error : <code>Cannot find property ""protocol"" ...</code>. 
I cannot put it in <code>render</code> , <code>componentWillMount</code> , top of the file ...</p>

<p>Any idea on how to do this ? </p>
","1664315","","","","","2015-08-21 00:16:55","socket.io-client + react, where to connect to the server?","<node.js><socket.io><reactjs>","1","1","1","",""
"38393967","1","","","2016-07-15 10:35:54","","0","711","<p>I'm compiling my react component with gulp webpack stream into a <code>TncComponent.js</code> file, which I will <code>require</code> in another <code>.js</code> file.</p>

<p><strong>Component:</strong></p>

<pre><code>let TncComponent = React.createClass ( {
    render() {
        return (
            &lt;div className=""terms-and-conditions""&gt;
               hello

            &lt;/div&gt;
        )

    }
} );

export default TncComponent;
</code></pre>

<p>Then in one of my <code>.js</code> file I want to render the component via a <code>onClick</code> event.</p>

<p><strong>JS file</strong></p>

<pre><code>export const init = () =&gt; {
    let tnc_init = () =&gt; {
        require.ensure ( [], ( require )=&gt; {
            let TncComponent = require ( '../TncComponent' );
            let $tnc = $ ( '.tnc' );
            $tnc.on ( 'click', ( e )=&gt; {
                e.preventDefault ();
                console.log ( document.getElementById ( 'tnc-root' ) );
                console.log ( TncComponent );
                ReactDOM.render (
                    React.createElement ( TncComponent, document.getElementById ( 'tnc-root' ) ) );
            } );
        } );

    }
    tnc_init ();
}
</code></pre>

<p>But <code>console.log(TncComponent)</code> returns an empty object.</p>

<p>How should I load the react component?</p>

<p><strong>TncComponent.js</strong></p>

<pre><code>/******/ (function(modules) { // webpackBootstrap
/******/    // The module cache
/******/    var installedModules = {};

/******/    // The require function
/******/    function __webpack_require__(moduleId) {

/******/        // Check if module is in cache
/******/        if(installedModules[moduleId])
/******/            return installedModules[moduleId].exports;

/******/        // Create a new module (and put it into the cache)
/******/        var module = installedModules[moduleId] = {
/******/            exports: {},
/******/            id: moduleId,
/******/            loaded: false
/******/        };

/******/        // Execute the module function
/******/        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/        // Flag the module as loaded
/******/        module.loaded = true;

/******/        // Return the exports of the module
/******/        return module.exports;
/******/    }


/******/    // expose the modules object (__webpack_modules__)
/******/    __webpack_require__.m = modules;

/******/    // expose the module cache
/******/    __webpack_require__.c = installedModules;

/******/    // __webpack_public_path__
/******/    __webpack_require__.p = """";

/******/    // Load entry module and return exports
/******/    return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

    module.exports = __webpack_require__(4);


/***/ },
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */
/***/ function(module, exports) {

    ""use strict"";

    Object.defineProperty(exports, ""__esModule"", {
        value: true
    });
    var TncComponent = React.createClass({
        displayName: ""TncComponent"",
        render: function render() {
            return React.createElement(
                ""div"",
                { className: ""terms-and-conditions"" },
                ""hello""
            );
        }
    });

    exports.default = TncComponent;

/***/ }
/******/ ]);
</code></pre>
","440646","","440646","","2016-07-15 23:05:44","2016-07-15 23:05:44","Loading react component with require.ensure()","<reactjs><webpack>","0","3","","",""
"40910593","1","","","2016-12-01 12:23:07","","1","484","<p>I have authenticated my user, I have got a uid. But when I try and write to the database using the suggested code from Firebase, </p>

<pre><code>var isNewUser = true;

var ref = new Firebase(""https://&lt;YOUR-FIREBASE-APP&gt;.firebaseio.com"");
ref.onAuth(function(authData) {
  if (authData &amp;&amp; isNewUser) {
    // save the user's profile into the database so we can list users,
    // use them in Security and Firebase Rules, and show profiles
    ref.child(""users"").child(authData.uid).set({
      provider: authData.provider,
      name: getName(authData)
    });
  }
});

// find a suitable name based on the meta info given by each provider
function getName(authData) {
  switch(authData.provider) {
     case 'password':
       return authData.password.email.replace(/@.*/, '');
     case 'twitter':
       return authData.twitter.displayName;
     case 'facebook':
       return authData.facebook.displayName;
  }
}
</code></pre>

<p>I am returning an error that <code>onAuth</code> is not a function.</p>

<p>I thought it might be an issue with passing Firebase through the props so logged out a couple of paths to see if I could find the function <code>onAuth</code> but could not. Any suggestions? As i'm just testing the relevant code can be found in account.js with n the <code>componentWillMount</code> function. </p>

<p>Login. js</p>

<pre><code>'use strict';
import {
  AppRegistry,
  Text,
  TextInput,
  View,
  TouchableHighlight,
  ToolbarAndroid,
  ActivityIndicator
} from 'react-native';
import React, {Component} from 'react';
import Signup from './Signup';
import Account from './Account';
import styles from '../styles/baseStyles.js';

export default class Login extends Component {

  constructor(props){
    super(props);
    // We have the same props as in our signup.js file and they serve the same purposes.
    this.state = {
      loading: false,
      email: '',
      password: ''
    }
  }

  render() {
    // The content of the screen should be inputs for a username, password and submit button.
    // If we are loading then we display an ActivityIndicator.
    const content = this.state.loading ? &lt;ActivityIndicator size=""large""/&gt; :
      &lt;View&gt;
        &lt;TextInput
          style={styles.textInput}
          onChangeText={(text) =&gt; this.setState({email: text})}
          value={this.state.email}
          placeholder={""Email Address""} /&gt;
        &lt;TextInput
          style={styles.textInput}
          onChangeText={(text) =&gt; this.setState({password: text})}
          value={this.state.password}
          secureTextEntry={true}
          placeholder={""Password""} /&gt;
        &lt;TouchableHighlight onPress={this.login.bind(this)} style={styles.primaryButton}&gt;
          &lt;Text style={styles.primaryButtonText}&gt;Login&lt;/Text&gt;
        &lt;/TouchableHighlight&gt;
        &lt;TouchableHighlight onPress={this.goToSignup.bind(this)} style={styles.transparentButton}&gt;
          &lt;Text style={styles.transparentButtonText}&gt;New here?&lt;/Text&gt;
        &lt;/TouchableHighlight&gt;
      &lt;/View&gt;;

    // A simple UI with a toolbar, and content below it.
    return (
        &lt;View style={styles.container}&gt;
        &lt;View style={styles.body}&gt;
          {content}
        &lt;/View&gt;
      &lt;/View&gt;
        );
  }

  login(){
    this.setState({
      loading: true
    });
    // Log in and display an alert to tell the user what happened.
    this.props.firebaseApp.auth().signInWithEmailAndPassword(this.state.email, this.state.password
    ).then((userData) =&gt;
      {
        this.setState({
            loading: false,
          username:""mone""
          });
        this.props.navigator.push({
          component: Account
        });
      }
    ).catch((error) =&gt;
        {
          this.setState({
            loading: false
          });
        alert('Login Failed. Please try again' + error.message);
    });
  }

  // Go to the signup page
  goToSignup(){
    this.props.navigator.push({
      component: Signup
    });
  }
}

AppRegistry.registerComponent('Login', () =&gt; Login);
</code></pre>

<p>main.js</p>

<pre><code>import React, { Component } from 'react';
'use strict';
import {
  AppRegistry,
  Text,
  StyleSheet,
  ActivityIndicator,
  View,
  Navigator,
} from 'react-native';

import Login from '../login/pages/Login';
import Account from '../login/pages/Account';

import * as firebase from 'firebase';

const firebaseConfig ={
    apiKey: ""AIzaSyAaJuCW0nsMLqi-ke6K_bTDhBujilgWneQ"",
    authDomain: ""test-app-657c0.firebaseapp.com"",
    databaseURL: ""https://test-app-657c0.firebaseio.com"",
    storageBucket: ""test-app-657c0.appspot.com"",
    messagingSenderId: ""215519929651""
  };


const firebaseApp = firebase.initializeApp(firebaseConfig);


import styles from '../login/styles/baseStyles.js';

class Main extends Component {
  constructor(props){
    super(props);
    this.state = {
      // the page is the screen we want to show the user, we will determine that
      // based on what user the firebase apI returns to us.
      page: null
    };
  }

  componentWillMount(){
    // We must asynchronously get the auth state, if we use currentUser here, it'll be null
    const unsubscribe = firebaseApp.auth().onAuthStateChanged((user) =&gt; {
      // If the user is logged in take them to the accounts screen
      if (user != null) {
        this.setState({page: Account});
        return;
      }
      // otherwise have them login
      this.setState({page: Login});
      // unsubscribe this observer
      unsubscribe();
    });


  }



  render() {
    if (this.state.page) {
      return (
        // Take the user to whatever page we set the state to.
        // We will use a transition where the new page will slide in from the right.
        &lt;Navigator
          initialRoute={{component: this.state.page}}
          configureScene={() =&gt; {
            return Navigator.SceneConfigs.FloatFromRight;
          }}
          renderScene={(route, navigator) =&gt; {
            if(route.component){
              // Pass the navigator the the page so it can navigate as well.
              // Pass firebaseApp so it can make calls to firebase.
              return React.createElement(route.component, { navigator, firebaseApp});
            }
        }} /&gt;
      );
    } else {
      return (
        // Our default loading view while waiting to hear back from firebase
        &lt;View style={styles.container}&gt;
          &lt;View style={styles.body}&gt;
            &lt;ActivityIndicator size=""large"" /&gt;
          &lt;/View&gt;
        &lt;/View&gt;
      );
    }
  }
}

module.exports = Main;
</code></pre>

<p>account</p>

<pre><code>'use strict';
import {
  AppRegistry,
  StyleSheet,
  Text,
  View,
  Image,
  TouchableHighlight,
  ToolbarAndroid
} from 'react-native';
import React, {Component} from 'react';
import Login from './Login';
import styles from '../styles/baseStyles.js';

// Styles specific to the account page
const accountStyles = StyleSheet.create({
  email_container: {
    padding: 20
  },
  email_text: {
    fontSize: 18
  }
});

export default class Account extends Component {

  constructor(props) {
    super(props);
    this.state = {
      loading: true,
    }
  }

  componentWillMount() {
    // get the current user from firebase
    const userData = this.props.firebaseApp.auth().currentUser;
    this.setState({
      user: userData,
      loading: false
    });

    console.log(userData);

    console.log(this.props.firebaseApp)

     console.log(this.props.firebaseApp.auth())

      var isNewUser = true;

      var ref = this.props.firebaseApp;
      ref.onAuth(function(authData) {
        if (authData &amp;&amp; isNewUser) {
          // save the user's profile into the database so we can list users,
          // use them in Security and Firebase Rules, and show profiles
          ref.child(""users"").child(authData.uid).set({
            provider: authData.provider,
            name: getName(authData)
          });
        }
      });
      // find a suitable name based on the meta info given by each provider
      function getName(authData) {
        switch(authData.provider) {
           case 'password':
             return authData.password.email.replace(/@.*/, '');
           case 'twitter':
             return authData.twitter.displayName;
           case 'facebook':
             return authData.facebook.displayName;
        }
      }



  }

  render() {
    // If we are loading then we display the indicator, if the account is null and we are not loading
    // Then we display nothing. If the account is not null then we display the account info.
    const content = this.state.loading ? &lt;ActivityIndicator size=""large""/&gt; :
       this.state.user &amp;&amp;
        &lt;View style={styles.body}&gt;
          &lt;View style={accountStyles.email_container}&gt;
            &lt;Text style={accountStyles.email_text}&gt;{this.state.user.email}&lt;/Text&gt;
          &lt;/View&gt;
          &lt;TouchableHighlight onPress={this.logout.bind(this)} style={styles.primaryButton}&gt;
            &lt;Text style={styles.primaryButtonText}&gt;Logout&lt;/Text&gt;
          &lt;/TouchableHighlight&gt;

          &lt;TouchableHighlight onPress={this.logout.bind(this)} style={styles.primaryButton}&gt;
            &lt;Text style={styles.primaryButtonText}&gt;Logout&lt;/Text&gt;
          &lt;/TouchableHighlight&gt;
        &lt;/View&gt;
      ;
    return (
      &lt;View style={styles.container}&gt;
        &lt;View style={styles.body}&gt;
          {content}
        &lt;/View&gt;
      &lt;/View&gt;
    );
  }

  logout() {
    // logout, once that is complete, return the user to the login screen.
    this.props.firebaseApp.auth().signOut().then(() =&gt; {
      this.props.navigator.push({
        component: Login
      });
    });
  }
}

AppRegistry.registerComponent('Account', () =&gt; Account);
</code></pre>
","7236092","","5637321","","2016-12-01 23:41:37","2016-12-05 12:53:18","Authenticating a user in firebase with react native Onauth not a function","<javascript><firebase><react-native><firebase-authentication>","1","0","","",""
"40934534","1","","","2016-12-02 14:30:16","","3","404","<p>I'm trying to embedding text/html in a react Modal component. But when I run my app with electron the Google Inspector show me some errors.</p>

<blockquote>
  <p>Uncaught invariant.js:38 Uncaught Invariant Violation: The <code>style</code> prop expects a mapping from style properties to values, not a string. For example, <code>style={{marginRight: spacing + 'em'}}</code> when using JSX. This DOM node was rendered by <code>Example</code>.</p>
</blockquote>

<p><strong>SOLUTION : Replace the <code>&lt;object&gt;</code> by <code>&lt;webview&gt;</code></strong></p>

<p>this is my code </p>

<pre><code>import React from 'react';
import SkyLight from 'react-skylight';

class Example extends React.Component {
  constructor(props){
    super(props);
  }

  render() {
    return (
      &lt;div&gt;
        &lt;section&gt;
          &lt;h1&gt;React SkyLight&lt;/h1&gt;
          &lt;button onClick={() =&gt; this.refs.simpleDialog.show()}&gt;Ouvrez le modal&lt;/button&gt;
        &lt;/section&gt;
        &lt;SkyLight  hideOnOverlayClicked ref=""simpleDialog"" title=""Hi, I'm a simple modal""&gt;
          &lt;object type=""text/html"" data=""http://www.example.com"" style=""width:100%; height:100%""&gt;
            &lt;p&gt;backup content&lt;/p&gt;
          &lt;/object&gt;
        &lt;/SkyLight&gt;
      &lt;/div&gt;
    )
  }
}

Example.displayName = 'Example';

export default Example;
</code></pre>
","4795976","","4288327","","2016-12-02 15:18:49","2016-12-02 15:18:49","How to embed text/html in react component?","<javascript><html><reactjs>","1","0","","",""
"31956604","1","31964006","","2015-08-12 05:20:39","","2","1562","<p>I use the following dependencies with CommonJS.<br>
I am trying to render App and Home together.<br>
Home component should only render when <code>DefaultRoute</code>'s path is  <code>path=""/""</code> or <code>path=""home""</code>.<br>
but for some reasons, I got lots of warnings.<br>
What am I missing?<br>
I've spent days by followings a bunch of examples and tutorials..<br>
Any hint or solution would be very appreciated.  </p>

<p><strong>package.json</strong></p>

<pre><code>""dependencies"": {
  ""browserify"": ""~&gt; 10.2.4"",
  ""browserify-incremental"": ""^3.0.1"",
  ""coffeeify"": ""~&gt; 0.6"",
  ""events"": ""^1.0.2"",
  ""flux"": ""^2.0.3"",
  ""i18next-client"": ""^1.10.2"",
  ""object-assign"": ""^3.0.0"",
  ""react"": ""^0.13.3"",
  ""react-router"": ""^0.13.3"",
  ""reactify"": ""^1.1.1""
}
</code></pre>

<p><strong>app.js</strong></p>

<pre><code>var Main = require(""./main.js"");
var Router = require(""react-router"");
var Route = Router.Route;
var DefaultRoute = Router.DefaultRoute;
var RouteHandler = Router.RouteHandler;
var Home = require(""./components/home.js.jsx"");

var App = React.createClass({
  getInitialState: function(){
    return {
      signedIn: null,
      currentUser: null
    };
  },
  componentWillMount: function(){
    $.ajax({
      url: ""/is_signed_in"",
      method: ""GET"",
      dataType: ""json""
    }).success(function(response){
      this.setSignedIn(response);
    }.bind(this));
  },
  componentDidMount: function(){
    Main();
  },
  setSignedIn: function(response){
    this.setState({ signedIn: response.signed_in, currentUser: $.parseJSON(response.current_user) });
    console.log(Home);
  },
  render: function(){
    // &lt;RouteHandler signedIn={this.state.signedIn} /&gt;
    return (&lt;RouteHandler /&gt;);
  }
});

// React.render(&lt;App /&gt;, document.body);

var routes = (
  &lt;Route handler={App}&gt;
    &lt;DefaultRoute handler={Home} /&gt;
  &lt;/Route&gt;
);

Router.run(routes, function(Handler){
  React.render(&lt;Handler/&gt;, document.body);
});
</code></pre>

<p><strong>Logs</strong></p>

<pre><code>Warning: Failed Context Types: Required context `routeDepth` was not specified in `RouteHandler`. Check the render method of `App`.
Warning: Failed Context Types: Required context `router` was not specified in `RouteHandler`. Check the render method of `App`.
Warning: owner-based and parent-based contexts differ (values: `undefined` vs `1`) for key (routeDepth) while mounting RouteHandler (see: http://fb.me/react-context-by-parent)
Warning: owner-based and parent-based contexts differ (values: `undefined` vs `function (props, context) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (""production"" !== ""development"") {
        (""production"" !== ""development"" ? warning(
          this instanceof Constructor,
          'Something is calling a React component directly. Use a factory or ' +
          'JSX instead. See: https://fb.me/react-legacyfactory'
        ) : null);
      }

      // Wire up auto-binding
      if (this.__reactAutoBindMap) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (""production"" !== ""development"") {
        // We allow auto-mocks to proceed as if they're returning null.
        if (typeof initialState === 'undefined' &amp;&amp;
            this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      (""production"" !== ""development"" ? invariant(
        typeof initialState === 'object' &amp;&amp; !Array.isArray(initialState),
        '%s.getInitialState(): must return an object or null',
        Constructor.displayName || 'ReactCompositeComponent'
      ) : invariant(typeof initialState === 'object' &amp;&amp; !Array.isArray(initialState)));

      this.state = initialState;
    }`) for key (router) while mounting RouteHandler (see: http://fb.me/react-context-by-parent)
Uncaught TypeError: Cannot read property 'getRouteAtDepth' of undefined
Warning: Failed Context Types: Required context `routeDepth` was not specified in `RouteHandler`. Check the render method of `App`.
Warning: Failed Context Types: Required context `router` was not specified in `RouteHandler`. Check the render method of `App`.
Warning: owner-based and parent-based contexts differ (values: `undefined` vs `1`) for key (routeDepth) while mounting RouteHandler (see: http://fb.me/react-context-by-parent)
Warning: owner-based and parent-based contexts differ (values: `undefined` vs `function (props, context) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (""production"" !== ""development"") {
        (""production"" !== ""development"" ? warning(
          this instanceof Constructor,
          'Something is calling a React component directly. Use a factory or ' +
          'JSX instead. See: https://fb.me/react-legacyfactory'
        ) : null);
      }

      // Wire up auto-binding
      if (this.__reactAutoBindMap) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (""production"" !== ""development"") {
        // We allow auto-mocks to proceed as if they're returning null.
        if (typeof initialState === 'undefined' &amp;&amp;
            this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      (""production"" !== ""development"" ? invariant(
        typeof initialState === 'object' &amp;&amp; !Array.isArray(initialState),
        '%s.getInitialState(): must return an object or null',
        Constructor.displayName || 'ReactCompositeComponent'
      ) : invariant(typeof initialState === 'object' &amp;&amp; !Array.isArray(initialState)));

      this.state = initialState;
    }`) for key (router) while mounting RouteHandler (see: http://fb.me/react-context-by-parent)
Uncaught TypeError: Cannot read property '_currentElement' of null
</code></pre>

<p><strong>home.js.jsx</strong></p>

<pre><code>var home = function(){

  var HomeHero = React.createClass({
    componentWillMount: function() {
      document.getElementsByClassName(""homeHero"")[0].className = ""homeHero container header pure-u-1 u-size1040"";
    },
    render: function() {
      return(
        &lt;div className=""hero textAlignCenter""&gt;
          &lt;h1 className=""hero-logo""&gt;&lt;a href=""/""&gt;LOGO&lt;/a&gt;&lt;/h1&gt;
          &lt;h2 className=""hero-description""&gt;DESCRIPTION.&lt;/h2&gt;
        &lt;/div&gt;
      );
    }
  });

  var Home = React.createClass({
    render: function() {
      return (
        &lt;div&gt;
        Home
       &lt;/div&gt;
      );
    }
  });

  React.render(&lt;HomeHero /&gt;, document.getElementsByClassName(""homeHero"")[0]);
  React.render(&lt;Home /&gt;, document.getElementsByClassName(""home"")[0]);

};

module.exports = home;
</code></pre>

<hr>

<p><strong>Finally Fixed The Problems!</strong> 
I actually use Ruby on Rails framework and <code>react-rails</code> gem.
I suppose the react files from the gem is different with original react.
As soon as I replace <em>react gem</em> files with <em>react</em> installed from npm, everything worked.</p>

<p>damn...it took me several days to figure out.
thank you for all of the answers guys.</p>
","2553000","","2553000","","2015-08-13 10:19:48","2015-08-13 10:19:48","how to use react-router? it shows warnings","<javascript><reactjs><browserify><reactjs-flux><react-router>","2","0","2","",""
"40989849","1","","","2016-12-06 07:17:43","","1","1368","<p>I am trying to implement <a href=""https://github.com/nfl/react-helmet"" rel=""nofollow noreferrer"">react-helmet</a>  as a dynamic meta tag in our application, which uses server side rendering. I am little confused about it's setup (<a href=""https://github.com/nfl/react-helmet"" rel=""nofollow noreferrer"">react-helmet</a>), it's working but breaking on first page load. The second time I reload the page the tag displayed however. I am also getting errors in the browser console. Please can someone suggest what to do? Please see my code below,</p>

<p>I access the route <a href=""http://localhost:8081/about"" rel=""nofollow noreferrer"">http://localhost:8081/about</a></p>

<p>Layout.jsx</p>

<pre><code>var React = require('react');
var Helmet = require('react-helmet');

var Layout = React.createClass({
    displayName: 'Layout',
    render: function() {
        ""use strict"";
        let head = Helmet.rewind();
        return (
            &lt;html&gt;
                &lt;head&gt;
                  &lt;link rel='stylesheet' href='/css/application.css' /&gt;
                  {head.title.toComponent()}
                  {head.meta.toComponent()}
                  {head.link.toComponent()}
                &lt;/head&gt;
                &lt;body &gt;
                    {this.props.children}

                &lt;/body&gt;
            &lt;/html&gt;
        );
    }
});

module.exports= Layout;
</code></pre>

<p>About.jsx</p>

<pre><code>var React = require('react');
var Helmet = require('react-helmet');

module.exports = React.createClass({
    displayName: 'About',
    render: function() {
        return (
          &lt;div&gt;
            &lt;Helmet
              title=""About Title""
              meta={[
                  {""name"": ""about description"", ""content"": ""about Helmet application""}
              ]}
            /&gt;
            &lt;p&gt;
                Current: &lt;strong&gt;About&lt;/strong&gt;
            &lt;/p&gt;
          &lt;/div&gt;
        );
    }
});
</code></pre>

<p>Please find the attachments,
<a href=""https://i.stack.imgur.com/mjA5E.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mjA5E.png"" alt=""enter image description here""></a>
<a href=""https://i.stack.imgur.com/tHVXW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tHVXW.png"" alt=""enter image description here""></a></p>

<p>Please suggest what to do, reply if any other information needed.</p>
","5635321","","4758562","","2016-12-06 08:07:25","2017-05-26 18:37:57","Integrating react-helmet as dynamic meta tag in react js appliction","<reactjs><meta-tags>","0","1","","",""
"48857689","1","48967454","","2018-02-18 23:21:39","","2","135","<p>As soon as I add <code>""react-hot-loader/babel""</code> to my <code>.babelrc</code>, it breaks my React components.</p>

<p>Specifically, I have some code that looks like this:</p>

<pre><code>export default class Editor extends React.Component {

    componentDidMount() {
        console.log('this.canvas',this.canvas);
        // ...
    }

    setRef = node =&gt; {
        console.log('setRef');
        this.canvas = node;
    }

    render() {
        // tabIndex is needed to receive keyboard events -- https://stackoverflow.com/a/12887221/65387
        return &lt;canvas className={this.props.className} ref={this.setRef} tabIndex={0} /&gt;;
    }
}
</code></pre>

<p>When I run it, I see this in my Chrome dev tools:</p>

<blockquote>
  <p>setRef<br>
  this.canvas undefined</p>
</blockquote>

<p>Which is quite strange, because we can see it's setting <code>this.canvas</code> <em>before</em> calling <code>componentDidMount</code> so I don't know what <code>react-hot-loader/babel</code> is doing to break that.</p>

<p>Without <code>react-hot-loader/babel</code>, everything works fine, including hot-reloading.</p>

<p>So, my questions are:</p>

<ol>
<li>What does ""react-hot-loader/babel"" actually do?</li>
<li>How do I get it to <em>not</em> break my class properties?</li>
</ol>

<hr>

<p>This is with React 16.1, react-hot-loader 3, webpack 3.11, babel 6.x</p>

<hr>

<p>My <code>.babelrc</code> if you want to see that:</p>

<pre><code>{
    ""plugins"": [
        ""transform-object-rest-spread"",
        ""syntax-jsx"",
        ""transform-react-jsx"",
        ""transform-react-display-name"",
        ""transform-class-properties"",
        ""transform-function-bind"",
        ""transform-decorators-legacy""
    ],
    ""compact"": false,
    ""env"": {
        ""development"": {
            ""plugins"": [
                ""transform-react-jsx-self"",
                ""transform-react-jsx-source"",
                [
                    ""styled-components"",
                    {
                        ""displayName"": true,
                        ""minify"": false
                    }
                ]
                // https://stackoverflow.com/q/48857689/65387
                //""react-hot-loader/babel""
            ],
            ""presets"": [
                [
                    ""env"",
                    {
                        ""targets"": {
                            ""browsers"": ""last 2 chrome versions""
                        },
                        ""modules"": false
                    }
                ]
            ],
        },
        ""webpack"": {
            ""presets"": [
                [
                    ""env"",
                    {
                        ""targets"": {
                            ""node"": ""current""
                        },
                        ""modules"": ""commonjs""
                    }
                ]
            ]
        }
    }
}
</code></pre>
","65387","","65387","","2018-02-19 00:15:34","2018-02-24 21:02:55","""react-hot-loader/babel"" breaks my build -- why is it needed?","<reactjs><webpack><react-hot-loader>","2","9","0","",""
"47830891","1","","","2017-12-15 10:57:16","","0","283","<p><strong>What i am trying to do:</strong>
Adding <code>vidyoConnector.js</code> script to a react component in order to create a <code>WebRTC</code> instance with vidyo.</p>

<p><strong>What is happening:</strong>
Instead of adding the particular <code>vidyoConnector.js</code> it loads <code>index.html</code> because of which i get an <strong>unexpected token error</strong> in console.</p>

<p>I am using <code>react-async-script-loader</code> to load this vidyoConnector script.
Also tried to add the script using <strong>Weback addAssetPlugin</strong> but ended up breaking the Build.</p>

<p><strong>What i am expecting :</strong>
Any best approach to load a library file into the component which has its dependency.</p>

<p>Note - The Vidyo library has been written in <code>jquery</code> and hence do not support the ES6 modular pattern. </p>

<p>Please help me with any best approach to achieve the same.</p>

<pre><code>import React from ""react"";
import { FormattedMessage } from ""react-intl"";
import scriptLoader from ""react-async-script-loader"";
import messages from ""./messages"";
import $ from ""jquery"";

class HomePage extends React.Component {

  componentDidMount() {
      const script = document.createElement(""script"");
      const webrtcLogLevel = ""&amp;webrtcLogLevel=info"";
      const webrtc = true;
      const plugin = false;

      script.src = ""https://static.vidyo.io/4.1.15.7/javascript/VidyoClient/VidyoClient.js?onload=onVidyoClientLoaded&amp;webrtc="" +
  webrtc +
  ""&amp;plugin="" +
  plugin +
  webrtcLogLevel;
script.async = true;

script.onload = () =&gt; {
  VidyoClientInitialize($);
  console.log(VC);
};

   document.getElementsByTagName(""head"")[0].appendChild(script);
}

render() {
   return (
      &lt;div&gt;
        &lt;h1&gt;
          &lt;FormattedMessage {...messages.header} /&gt;
        &lt;/h1&gt;
        &lt;button onClick={this.joinCall}&gt;Connect&lt;/button&gt;
         &lt;div id=""renderer"" /&gt;
       &lt;/div&gt;
      );
   }

  onVidyoClientLoaded(status) {
     console.log(
         ""Status: "" + status.state + ""Description: "" + status.description
     );
     switch (status.state) {
         case ""READY"": // The library is operating normally
             $(""#connectionStatus"").html(""Ready to Connect"");
             $(""#helper"").addClass(""hidden"");
             StartVidyoConnector(VC, VCUtils.params.webrtc);
           break;
         case ""RETRYING"": 
             $(""#connectionStatus"").html(
      ""Temporarily unavailable retrying in "" +
        status.nextTimeout / 1000 +
        "" seconds""
    );
    break;
  case ""FAILED"": // The library operating has stopped
    ShowFailed(status);
    $(""#connectionStatus"").html(""Failed: "" + status.description);
    break;
  case ""FAILEDVERSION"": // The library operating has stopped
    UpdateHelperPaths(status);
    ShowFailedVersion(status);
    $(""#connectionStatus"").html(""Failed: "" + status.description);
    break;
  case ""NOTAVAILABLE"": // The library is not available
    UpdateHelperPaths(status);
    $(""#connectionStatus"").html(status.description);
    break;
  }
  return true;
}

joinCall() {
  vidyoConnector.Connect({
  host: ""prod.vidyo.io"", 
  token: ""XXXX"", 
  displayName: ""Sachin"", 
  resourceId: ""demoRoom"", 
  onSuccess: function() {
    console.log(""Connected!! YAY!"");
  },
  onFailure: function(reason) {
    console.error(""Connection failed"");
  },
  onDisconnected: function(reason) {
    console.log("" disconnected - "" + reason);
  }
 });
 }
}

export default scriptLoader([
  ""./vidyoConnector.js"",
])(HomePage);
</code></pre>

<p><a href=""https://i.stack.imgur.com/m8z7a.png"" rel=""nofollow noreferrer"">console view of loaded js file</a></p>
","9103136","","6359835","","2017-12-15 13:14:06","2017-12-15 13:14:06","unable to load a local js file in react component ( Using React-Biolerplate )","<javascript><jquery><reactjs>","0","2","","",""
"48247588","1","","","2018-01-14 07:44:43","","2","45","<p>I am using react and firebase auth using facebook. I am using the following code to sign in using facebook.</p>

<pre><code>  const result = await auth().signInWithPopup(provider)
</code></pre>

<p>The full code is </p>

<pre><code>import React, {
Component
} from 'react'
import './StartPage.css'
import fire from '../../fire.js'
import {
provider,
auth
} from '../../fire.js';
class StartPage extends Component {


constructor(props) {
    super(props)
    this.login = this.login.bind(this)

    this.loggedIn = this.loggedIn.bind(this)
}
async login() {
    provider.addScope('user_birthday');
    const result = await auth().signInWithPopup(provider)
    console.log(result)
      console.log(result.credential.accessToken)
    this.setState({
        user: result.user
    });
   console.log(""Logged in"")
    this.props.history.push('/vote')
}


loggedIn() {
    console.log('meh')
    // make check for login here
    this.props.history.push('/vote')
}

render() {

    return ( &lt;
        div className = ""StartPage"" &gt;
        &lt;
        div className = ""StartPage-up"" &gt;
        &lt;
        div className = ""StartPage-up-logo-container"" &gt;
        &lt;
        img className = ""StartPage-up-logo""
        src = ""http://koyilandykoottam.in/images/home/logo.png"" / &gt;
        &lt;
        /div&gt; &lt;
        div className = ""StartPage-up-poy"" &gt; PERSON OF THE YEAR &lt; /div&gt; &lt; /
        div &gt; &lt;
        div className = ""StartPage-down"" &gt;
        &lt;
        button className = ""StartPage-facebook-login""
        onClick = {
            this.login
        } &gt;
        Login with facebook &lt;
        /button&gt; &lt; /
        div &gt; &lt;
        /div&gt;
    )
}
}

export default StartPage
</code></pre>

<p>Logging result.user shows me only displayName and email id of the logged in user. Is there a way to get the facebook uid of the person logged in?</p>
","7622009","","5861618","","2018-01-14 09:01:03","2018-01-14 16:27:50","How to get facebook uid in firebase using react?","<reactjs><firebase><firebase-database>","1","4","","",""
"48753480","1","","","2018-02-12 18:51:18","","0","46","<p>So i am new to learning Reactjs. While learning l had a old code which is written in reactjs version 0.13. And i want to add a <a href=""https://www.npmjs.com/package/react-portal-tooltip/%22Tooltip%22"" rel=""nofollow noreferrer"">ToolTip</a> on that button. I am not able to add because i know only new version code and how to add. So please suggest me what to do my container code is below</p>

<pre><code>define(['react'], function(React, ) {
     var D = React.DOM;
     return React.createClass({
         displayName: 'BetButton',
         propTypes: {
             engine: React.PropTypes.object.isRequired,
             placeBet: React.PropTypes.func.isRequired,
             cancelBet: React.PropTypes.func.isRequired,
             cashOut: React.PropTypes.func.isRequired,
             isMobileOrSmall: React.PropTypes.bool.isRequired,
             betSize: React.PropTypes.string.isRequired,
             betInvalid: React.PropTypes.any.isRequired,
             cashOutInvalid: React.PropTypes.any.isRequired,
             controlsSize: React.PropTypes.string.isRequired
         },
         getInitialState: function() {},
         style: function() {
             if (this.state.hovered) {
                 return {
                     backgroundColor: ""red""
                 }
             } else {
                 return {
                     backgroundColor: ""grey""
                 }
             }
         },
         onMouseOver: function() {
             this.setState({
                 hovered: true
             });
         },
         onMouseOut: function() {
             this.setState({
                 hovered: false
             });
         },
         componentDidMount: function() {},
         componentWillUnmount: function() {},
         render: function() {
             return D.div({
                 className: 'bet-button-container',
                 onClick: onClickFun,
                 onMouseDown: onMouseDownFun,
                 onMouseUp: onMouseUpFun,
                 onMouseOver: onMouseOverFun,
                 onMouseOver: this.onMouseOver,
                 onMouseOut: this.onMouseOut,
                 style: this.style()
             }, btnContent);
         }
     });
 });
</code></pre>

<p>Now my task is that to add a tooltip on mouseOver in that code. I am trying to change some css properties. I have no idea how to do that in old version code but i had dine in new reactjs app same stuff. Thanks for your time.</p>
","7943901","","9095070","","2018-02-12 20:24:00","2018-02-12 20:24:00","Add tooltip on a button in reactjs old version(0.13)","<javascript><css><node.js><reactjs>","0","0","","",""
"40367352","1","","","2016-11-01 19:33:39","","0","1502","<p>I am creating a react component that has a form that uses places to help users fill in their address easier. It's been working great, However I am wondering if there is a way to stop the places input from displaying the entire address, as I would like to use it as a address field (with just the street address, if possible).</p>

<p>Right now I am just hiding it after the user searches and selects inside it initially, but when the user wants to come back and change the field or whatever I need to manage setting it back to the places field (showing it again in place of the address bar) and all the states and focus/click/key down around that (which is possible but i'm wondering if there is an easier way). </p>

<p>So - I could get around this if the google places input just did not show the entire address when I selected one. Perhaps there is a way to intercept the place details result, I can't tell from reading the API docs. Here is my implementation so far :</p>

<pre><code>import React from 'react';
import ShippingAddress from './shippingAddress.jsx';

import _ from 'lodash';

function reducePlaces(memo, item) {
  return {
    ...memo,
    [item.types[0]]: {
      long_name: item.long_name,
      short_name: item.short_name
    }
  };
}

export default class MyCheckoutShipping extends React.Component {
  constructor(props) {
    super(props);

    this.geolocate = this.geolocate.bind(this);
    this.initAutocomplete = this.initAutocomplete.bind(this);
    this.fillInAddress = this.fillInAddress.bind(this);
  }

  componentDidMount() {
    this.initAutocomplete();
  }

  initAutocomplete() {
    // eslint-disable-next-line no-undef
    const autocomplete = new google.maps.places.Autocomplete((this.refs.autoCompletePlaces), {types: ['geocode']});

    autocomplete.addListener('place_changed', this.fillInAddress);
    this.setState({ autocomplete });
  }

  fillInAddress() {
    const place = this.state.autocomplete.getPlace();
    const addressObj = _.reduce(place.address_components, reducePlaces, { street_address: place.name });

    this.props.updateShippingAddress(addressObj);
  }

  geolocate() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        const geolocation = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };

        // eslint-disable-next-line no-undef
        const circle = new google.maps.Circle({
          center: geolocation,
          radius: position.coords.accuracy
        });
        this.state.autocomplete.setBounds(circle.getBounds());
      });
    }
  }

  render() {
    let autoCompleteStyle;

    if (this.props.user.checkout.shipping.address) {
      autoCompleteStyle = { 'display': 'none'};
    }
    return (
  &lt;div className=""col-xs-12 My-checkout-shipping""&gt;
    &lt;div className=""col-sm-12 col-md-8 shipping-information""&gt;

      &lt;form&gt;

          &lt;div className=""form-group"" style={autoCompleteStyle}&gt;
            &lt;input
              type=""text""
              className=""form-control""
              placeholder=""Street Address""
              onFocus={this.geolocate}
              ref=""autoCompletePlaces""
              /&gt;
          &lt;/div&gt;

          &lt;ShippingAddress address={this.props.user.checkout.shipping.address} /&gt;


      &lt;/form&gt;

    &lt;/div&gt;
  &lt;/div&gt;
  );
}
}

MyCheckoutShipping.displayName = 'MyCheckoutShipping';

MyCheckoutShipping.propTypes = {
  user: React.PropTypes.object,
  updateShippingAddress: React.PropTypes.func
};
</code></pre>

<p>So it just inits on component mount and I have my google api script with key on my index.html - this has all been working great. Does anyone know a way to have the places field only put the street address and not the full address so I do not have to micromanage all the user states? Thanks For reading!</p>
","3201696","","","","","2017-02-10 06:24:51","Google places autocomplete in react, don't display full address in places input","<javascript><google-maps><reactjs><google-places-api>","0","0","1","",""
"49746773","1","","","2018-04-10 06:26:46","","0","12","<p>I've been doing a lot of reading and tutorials on js react with server-side applications. I'm practicing on a mockup app and I am seeing the following line of code which I dont know where the variable number <strong><code>var _printArea = __webpack_require__(215);</code></strong> came from.</p>

<p>This is the code full code, can anyone please kindly explain where the 215 is being gathered from? </p>

<p><strong>CODE</strong></p>

<pre><code>var _contentAreanew = __webpack_require__(215);

var _contentAreanew2 = _interopRequireDefault(_contentAreanew);

$(document).ready(function () {

    if (document.getElementById('content-area-new')) {
        (0, _reactDom.render)(_react2.default.createElement(
            _reactRedux.Provider,
            { store: _store2.default },
            _react2.default.createElement(_contentAreanew2.default, null)
        ), document.getElementById('content-area-new'));
    }
});

/// RENDER PART  
var contentAreanew = _react2.default.createClass({
    displayName: 'contentAreanew',


    render: function render() {

          return _react2.default.createElement(
            'div',
            { className: 'container' },
            _react2.default.createElement(
                'div',
                { className: 'row' },

                'content here'

            ),


        );
    }
});
</code></pre>

<p>THanks</p>
","7738813","","","","","2018-04-10 06:26:46","how to connect data to js react webpack","<reactjs><react-router>","0","0","","",""
"41581130","1","41582557","","2017-01-11 01:03:38","","6","6277","<p>I know that is <a href=""https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/display-name.md"" rel=""noreferrer"">it considered a good practice</a> to name react component by adding a <code>displayName</code> property, but not sure I know why. In react docs, it say:</p>

<blockquote>
  <p>The displayName string is used in debugging messages. JSX sets this value automatically; see JSX in Depth.</p>
</blockquote>

<p>Why is is so important? what will happen if I won't add it? (so far I didn't have it and had no issues debugging)</p>

<p>Are there any recommendations /  good practices on how to name the components? </p>
","1393862","","","","","2017-01-11 04:10:03","What is React component 'displayName' is used for?","<reactjs><eslint>","1","1","2","",""
"33440604","1","33440735","","2015-10-30 16:24:33","","1","612","<p>I am actually updating <a href=""https://github.com/ezequiel/react-typeahead-component"" rel=""nofollow"">https://github.com/ezequiel/react-typeahead-component</a> this component to be compatible to react >= 0.14 but while changing the methods I just run into one error:</p>

<p>Exchange <code>this.getDOMnode</code> for the reason it is deprecated with <code>this.findDOMnode</code> it occurs an error: <code>Uncaught TypeError: this.findDOMNode is not a function</code></p>

<p>So I tried a lot about that React isn't binding <code>this</code> automatically in 0.14 to several functions. But it did not really helped me out.</p>

<pre class=""lang-js prettyprint-override""><code>module.exports = React.createClass({
  displayName: 'Aria Status',

  propTypes: process.env.NODE_ENV === 'production' ? {} : {
    message: React.PropTypes.string
  },

  componentDidMount: function() {
    var _this = this;

    _this.setTextContent(_this.props.message).bind(this);
  },

  componentDidUpdate: function() {
    var _this = this;

    _this.setTextContent(_this.props.message).bind(this);
  },

  render: function() {
    return (
      React.createElement(""span"", {
        role: ""status"",
        ""aria-live"": ""polite"",
        style: {
          left: '-9999px',
          position: 'absolute'
        }
      })
    );
  },

  setTextContent: function(textContent) {
    this.findDOMNode().textContent = textContent || '';
  }
});
</code></pre>

<p>Maybe someone can point me somewhere to go ahead!</p>
","3318813","","","","","2015-10-30 16:39:36","reactjs - this is not a function error on upgrade","<javascript><function><reactjs><deprecated><typeahead>","1","1","","",""
"50477403","1","","","2018-05-22 22:39:36","","0","21","<p>I have successfully created an API that uses passport-google-oauth to return a JWT. Currently when I go through the process using my API routes it returns a json object with a JWT Bearer token.</p>

<p>I am attempting to use Reactjs on the front end however am running into a couple issues. </p>

<p>In my signin button component I am just trying to retrieve the result with the bearer token to pass it into a reducer</p>

<ol>
<li><p>When using Axios -> I am running into a CORS issue when using exios and cant return a result, when adding CORS into my build and a proxy to my react project I recieve the following error <code>No 'Access-Control-Allow-Origin' header is present on the requested resource.</code></p></li>
<li><p>When I use a anchor tag with href link the authentication successfully works however it redirects to the /api/auth/google/callback link itself instead of allowing me to catch the bearer token and then run it through my reducers to save it into local storage and update my state.</p></li>
</ol>

<p>Am I missing a step? Ive looked for a few hours at various resources online and cant seem to find the solution im looking for</p>

<p><strong>React</strong></p>

<p>(for simplicity at the moment I am just trying to catch the response, which should be returned bearer token, however I am unable to do this)</p>

<pre><code>googleAuth = (e) =&gt; {
    e.preventDefault()

    axios.get('/api/auth/google')
        .then(res =&gt; console.log(res))
        .catch(err =&gt; console.log(err))
}

render() {
    return (
        &lt;button onClick={this.googleAuth}&gt;Signin With Google&lt;/button&gt;
    )
}
</code></pre>

<p><strong>API</strong></p>

<p><strong>Routes</strong></p>

<pre><code>router.get('/google', passport.authenticate('google', {
    session: false,
    scope: ['profile', 'email']
}))

router.get('/google/callback', passport.authenticate('google', { session: false }), generateUserToken)
</code></pre>

<p><strong>Strategy</strong></p>

<pre><code>passport.use(new passportGoogle.OAuth2Strategy(googleConfig, async (request, accessToken, refreshToken, profile, done) =&gt; {
        // Check for existing user
        const existingUser = await User.findOne({
            providers: {
                $elemMatch: {
                    provider: 'Google',
                    providerId: profile.id
                }
            }
        })

        // If user exists return done
        if (existingUser) return done(null, existingUser)

        // If user does not exist create a new user
        const newUser = await new User({
            name: profile.displayName,
            providers: [
                {
                    provider: 'Google',
                    providerId: profile.id
                }
            ]
        }).save()

        // Create profile with new user information
        const newProfile = await new Profile({
            userId: newUser.id
        }).save()

        return done(null, newUser)
    }))
</code></pre>
","2850804","","","","","2018-05-22 22:39:36","Google-OAuth REST Api to react","<reactjs><jwt><google-oauth2>","0","0","","",""
"41059756","1","41059829","","2016-12-09 11:45:52","","2","98","<p>I just had the craziest bug. In my <code>onKeyDown</code> I destructred the <code>preventDefault</code> out of <code>e</code>. However when I would call <code>preventDefault()</code> I would get:</p>

<blockquote>
  <p>TypeError: this is undefined[Learn More]react-dom.js:13987:5</p>
</blockquote>

<p>I am using React v15.4.1 and the line is highlighted in my screenshot below:</p>

<p><img src=""https://i.imgur.com/zv1Fr5I.png"" alt=""""></p>

<p>If I don't destructure and just use <code>e.preventDefaut()</code> it works. Does anyone know why this is? Is this a bug in babel?</p>

<pre><code>const El = React.createClass({
  displayName: 'El',
  onKeyDown(e) {
    let { key, preventDefault } = e;
    preventDefault();
  },
  render() {
    return React.createElement('input', { onKeyDown:this.onKeyDown });
  }
});
</code></pre>
","1828637","","","","","2016-12-09 11:55:24","If destructure preventDefault - with babel in react - this is undefined","<reactjs><babeljs>","1","0","","",""
"50893786","1","50893882","","2018-06-17 04:48:22","","0","33","<p>I'm building a react-native app using Facebook login via Firebase and storing the credentials in my redux state.  On my login page, I have a button that triggers a check to see if the person is already logged in.  If they are, it goes straight to the ""Dashboard"" (via react-navigation) and if the person is not logged in, it opens up the Facebook flow.</p>

<p>The issue I'm having is that, after going through the Facebook flow, nothing happens.  However, when I click on the ""Login"" button one more time, then it does successfully load the person and do the redirect.  Any idea what could be going on here?  I have a feeling I'm not using my async/await properly, but can't seem to figure it out.  Below is my code for the relevant parts.</p>

<h1>part of /screens/Login.js</h1>

<pre><code>  logUserIn = async (loadUser, setLoggedInUser) =&gt; {
    await loadCurrentUser(loadUser);
    console.log(this.props.user.name);
    if (Boolean(this.props.user.name)) {
      await setLoggedInUser(true);
    } else {
      loginWithFacebook()
      .then(loadCurrentUser(loadUser));
    }
  };

  render() {
    const { navigate } = this.props.navigation;
    const {
      loadUser,
      user,
      isLoggedIn,
      setLoggedInUser,
    } = this.props;
    return (
      &lt;View style={ styles.container }&gt;
        &lt;Button
          title='Login'
          onPress={ () =&gt; this.logUserIn(loadUser, setLoggedInUser) }
          /&gt;
      &lt;/View&gt;
    );
  }
}
</code></pre>

<h1>/services/facebookAPI.js</h1>

<pre><code>export const loadCurrentUser = async (loadUser) =&gt; {
  const user = await userLoginStatus();
  console.log('pre-if: ' + Boolean(await user));
  if (Boolean(user)) {
    console.log('post-if: ' + Boolean(user));
    console.log(user.displayName + ' is logged in!');
    loadUser(user);
  } else {
    console.log('user not logged in');
    return null;
  }
};
</code></pre>

<h1>/actions/actions.js</h1>

<pre><code>export const setLoggedInUser = (isLoggedIn) =&gt; (dispatch) =&gt; {
  dispatch({
    type: 'LOGGED_IN',
    isLoggedIn: isLoggedIn,
  });
  dispatch(NavigationActions.navigate({ routeName: 'Dashboard' }));
};
</code></pre>
","6019120","","","","","2018-06-17 06:43:31","When logging in using Facebook, the redux store is not updating for my react native app","<javascript><react-native>","2","0","","",""
"51013981","1","","","2018-06-24 21:09:36","","0","55","<p>so I wrote the following code:</p>

<pre><code>    ""use strict"";

import React from 'react';
import { TableHeader, TableBody, TableRow, TableColumn, Button } from 'react- 
md';
import { DataTable } from 'react-md';

import { VoteListRow } from './VoteListRow';
import Page from './Page'


export const VoteList = ({data}) =&gt; (
    &lt;Page&gt;
        &lt;DataTable plain&gt;
            &lt;TableHeader&gt;
                &lt;TableRow&gt;
                    &lt;TableColumn&gt;Question&lt;/TableColumn&gt;
                    &lt;TableColumn&gt;Number of Items&lt;/TableColumn&gt;
                &lt;/TableRow&gt;
            &lt;/TableHeader&gt;
            &lt;TableBody&gt;
                {data.map((poll) =&gt; &lt;VoteListRow poll={poll}/&gt;)}
            &lt;/TableBody&gt;
        &lt;/DataTable&gt;
    &lt;/Page&gt;
);
</code></pre>

<p>and i currently receive the following error: TypeError: Cannot read property 'displayName' of undefined at VoteList.js: 20. I see that there is probably an error with the imports, but I can't figure out what exactly I'm doing wrong. Do you have an idea?</p>
","4359902","","","","","2018-06-24 21:09:36","TypeError: Cannot read property 'displayName' of undefined","<javascript><node.js><reactjs>","0","1","","",""
"32229910","1","","","2015-08-26 14:50:58","","1","624","<p>my jsx file successfully recognizes the react-bootstrap elements but there's no styling to them. my project's node-modules folder contains both react-bootstrap and bootstrap. why is this happening?</p>

<pre><code>var React = require('react');
var Button = require('react-bootstrap').Button;
var Jumbotron = require('react-bootstrap').Jumbotron;

var ReactComponentHi = React.createClass({displayName: 'Hi',

    render: function() {
        return (
            &lt;div&gt;
                &lt;Button bsStyle='success'&gt;
                    clickk
                &lt;/Button&gt;
                &lt;Jumbotron&gt;
                    &lt;h1&gt;Hello, world!&lt;/h1&gt;
                    &lt;p&gt;This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.&lt;/p&gt;
                    &lt;p&gt;&lt;Button bsStyle='primary'&gt;Learn more&lt;/Button&gt;&lt;/p&gt;
                &lt;/Jumbotron&gt;
            &lt;/div&gt;

        );
    }
});

module.exports = ReactComponentHi;
</code></pre>

<p><a href=""https://i.stack.imgur.com/Edjmi.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Edjmi.png"" alt=""what the results look like""></a></p>
","2624644","","","","","2016-03-15 20:16:39","react-bootstrap contains no css","<node.js><twitter-bootstrap><reactjs><react-bootstrap>","1","3","","",""
"41492176","1","41493434","","2017-01-05 18:30:11","","0","840","<p>When running babel-node server.js everything works fine, but when I create a build and transpile my es6 code with babel the match function doesn't find a match and I always get returned the 404 error message. I am using this on my Isomorphic / Universal server. </p>

<p>When I console.log the values in the ES6 version and the transpiled version those are looking the same. </p>

<p>Actual ES6 match code in my server.js</p>

<pre><code>let history = useRouterHistory(useQueries(createMemoryHistory))()
    let routes = createRoutes(history)
    let location = history.createLocation(req.url)

    match({ all_routes, location }, (error, redirectLocation, renderProps) =&gt; {
        if (redirectLocation) {
            res.redirect(301, redirectLocation.pathname + redirectLocation.search)
        } else if (error) {
            res.status(500).send(error.message)
        } else if (renderProps == null) {
            res.status(404).send('Not found')
        } else {
</code></pre>

<p>My .babelrc looks like this:</p>

<pre><code>{
  ""presets"": [""es2015"", 'stage-2',""react""],
  ""plugins"": [ ""transform-object-rest-spread"",""transform-react-jsx""]
}
</code></pre>

<p>My routes file:</p>

<pre><code>const routes = function(){
    return (
        &lt;Router history={browserHistory}&gt;
            &lt;Route path=""/"" component={App}&gt;
                &lt;IndexRoute component={Home} /&gt;
                &lt;Route path=""contact""   component={Contact} /&gt;
                &lt;Route path=""login""     component={Login} /&gt; 
                &lt;Route path=""*""         component={NotFound} /&gt;
            &lt;/Route&gt;
        &lt;/Router&gt;
    )
}
</code></pre>

<p>When I console.log Routes it looks like this:</p>

<pre><code>{ '$$typeof': Symbol(react.element),
  type: 
   { [Function]
     displayName: 'Route',
     createRouteFromReactElement: [Function: createRouteFromReactElement],
     propTypes: 
      { path: [Object],
        component: [Object],
        components: [Object],
        getComponent: [Object],
        getComponents: [Object] } },
  key: null,
  ref: null,
  props: 
   { path: '/',
     component: { [Function] displayName: 'App' },
     children: 
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ] },
  _owner: null,
  _store: {} }
</code></pre>
","5322269","","5322269","","2017-01-05 21:28:48","2017-01-05 21:28:48","react-router match does not work after transpiling es6 with babel","<reactjs><react-router>","1","0","","",""
"51028452","1","","","2018-06-25 16:57:26","","0","26","<p>I'm trying to use React-select with new version reactjs16
as I read the document and follow as you can see the below code but it not work just show input instead of select.</p>

<hr>

<p>Another thing can anyone help me to find the better packages for selection in reactjs.</p>

<pre><code>import React from 'react'
import Select from 'react-select';
import createClass from 'create-react-class';
import PropTypes from 'prop-types';

const STATES = require('./status');

var Selects = createClass({
    displayName: 'StatesField',
    propTypes: {
        label: PropTypes.string,
        searchable: PropTypes.bool,
    },
    getDefaultProps () {
        return {
            label: 'States:',
            searchable: true,
        };
    },
    getInitialState () {
        return {
            country: 'AU',
            disabled: false,
            searchable: this.props.searchable,
            selectValue: 'new-south-wales',
            clearable: true,
            rtl: false,
        };
    },
    clearValue (e) {
        this.select.setInputValue('');
    },
    switchCountry (e) {
        var newCountry = e.target.value;
        this.setState({
            country: newCountry,
            selectValue: null,
        });
    },
    updateValue (newValue) {
        this.setState({
            selectValue: newValue,
        });
    },
    focusStateSelect () {
        this.select.focus();
    },
    toggleCheckbox (e) {
        let newState = {};
        newState[e.target.name] = e.target.checked;
        this.setState(newState);
    },
    render () {
    var options = STATES[this.state.country];
    console.log(options)
        return (
            &lt;div className=""section""&gt;

      &lt;Select
          className=""portfolio select-box Select-value""
                    id=""state-select""
                    ref={(ref) =&gt; { this.select = ref; }}
                    onBlurResetsInput={false}
                    onSelectResetsInput={false}
                    autoFocus
                    options={options}
                    simpleValue
                    clearable={this.state.clearable}
                    name=""selected-state""
                    disabled={this.state.disabled}
                    value={this.state.selectValue}
                    onChange={this.updateValue}
                    rtl={this.state.rtl}
                    searchable={this.state.searchable}
        /&gt;
    &lt;/div&gt;      
        );
    }
});
export default Selects
</code></pre>

<p>Below is the result I got from react-select
<a href=""https://i.stack.imgur.com/XwFNx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XwFNx.png"" alt=""enter image description here""></a></p>
","2942729","","","","","2018-06-25 16:57:26","React-select2.00 not working reactjs 16","<reactjs><react-select>","0","0","","",""
"32293420","1","","","2015-08-30 05:18:35","","1","207","<p>Trying to get a very basic react/jspm example working over on plnkr.co but it is erroring out with a number of 404's. Most notably the following:</p>

<pre><code>Uncaught (in promise) Error: XHR error (404 Not Found) loading https://npm.jspm.io/react-tools@0.13.3/vendor/fbtransform/visitors
    Error loading https://npm.jspm.io/react-tools@0.13.3/vendor/fbtransform/visitors as ""./vendor/fbtransform/visitors"" from https://npm.jspm.io/react-tools@0.13.3/main.js
    Error loading https://registry.jspm.io/js/app.jsx.js!https://registry.jspm.io/jsx.js
    at r (https://jspm.io/system@0.18.17.js:5:11565)
    at XMLHttpRequest.o.onreadystatechange (https://jspm.io/system@0.18.17.js:5:12090)
</code></pre>

<p>Any thoughts on how to get past these and get the sample to render?</p>

<h1>--> <a href=""http://plnkr.co/edit/TfvRer4Ijvoub4xFj9VO"" rel=""nofollow"">problem plnkr.co sample here</a> &lt;--</h1>

<hr>

<p>The code was also copied in the following code snippet (which obviously will never work here as different JSX files are required) just for SO readers that doesn't want to go to plnkr.co.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>// app.jsx
import React from 'react'
import Test from './test.jsx!'

React.render(
  &lt;Test /&gt;
, document.getElementById('main')
);

//------------------------------
// test.jsx
import React from 'react'

export default React.createClass({
    displayName: 'Test'
  , render: function () {
      return (
        &lt;div&gt;Awesome Test!&lt;/div&gt;
      )
    }
})

//------------------------------
//config.js
System.config({
});</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!-- index.html --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div id=""main""&gt;&lt;/div&gt;
    &lt;script src=""https://jspm.io/system@0.18.17.js""&gt;&lt;/script&gt;	
    &lt;script type=""text/javascript"" src=""config.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript""&gt;
      System.import('js/app.jsx!jsx')
    &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;</code></pre>
</div>
</div>
</p>
","1402137","","146513","","2016-03-07 03:10:33","2016-03-07 03:10:33","basic JSPM React sample failing erroring on loading react-tools/vendor/fbtransform/visitors","<javascript><reactjs><systemjs><jspm><plnkr.co>","1","0","","",""
"48238919","1","","","2018-01-13 10:19:06","","0","95","<p>TypeError: Cannot read property 'displayName' of undefined</p>

<blockquote>
<pre><code>This error is located at: 
    in Item (at connectStyle.js:384)
    in Styled(Item) (at LoginForm.js:56)
    in RCTView (at View.js:71)
    in View (at Form.js:10)
    in Form (at connectStyle.js:384)
    in Styled(Form) (at LoginForm.js:55)
    in RCTView (at View.js:71)
    in View (at View.js:9)
    in ViewNB (at connectStyle.js:384)
    in Styled(ViewNB) (at LoginForm.js:54)
    in LoginForm (created by Connect(LoginForm))
    in Connect(LoginForm) (at App.js:24)
    in RCTView (at View.js:71)
    in View (at ScrollView.js:717)
    in RCTScrollView (at ScrollView.js:811)
    in ScrollView (at KeyboardAwareScrollView.js:27)
    in KeyboardAwareScrollView (at Content.js:10)
    in Content (at connectStyle.js:384)
    in Styled(Content) (at App.js:23)
    in RCTView (at View.js:71)
    in View (at Container.js:15)
    in Container (at connectStyle.js:384)
    in Styled(Container) (at App.js:21)
    in Provider (at App.js:20)
    in App (at renderApplication.js:35)
    in RCTView (at View.js:71)
    in View (at AppContainer.js:102)
    in RCTView (at View.js:71)
    in View (at AppContainer.js:122)
    in AppContainer (at renderApplication.js:34)
&lt;unknown&gt;
    C:\xampp\htdocs\React\ProfilesApp\node_modules\native-base\dist\src\basic\Item.js:36:13
Function.remove
    C:\xampp\htdocs\React\ProfilesApp\node_modules\native-base\node_modules\lodash\lodash.js:6997:12
Item.componentWillReceiveProps
    C:\xampp\htdocs\React\ProfilesApp\node_modules\native-base\dist\src\basic\Item.js:35:17
callComponentWillReceiveProps
    C:\xampp\htdocs\React\ProfilesApp\node_modules\react-native\Libraries\Renderer\ReactNativeRenderer-dev.js:5936:13
updateClassInstance
    C:\xampp\htdocs\React\ProfilesApp\node_modules\react-native\Libraries\Renderer\ReactNativeRenderer-dev.js:6134:6
updateClassComponent
    C:\xampp\htdocs\React\ProfilesApp\node_modules\react-native\Libraries\Renderer\ReactNativeRenderer-dev.js:7827:21
beginWork
    C:\xampp\htdocs\React\ProfilesApp\node_modules\react-native\Libraries\Renderer\ReactNativeRenderer-dev.js:8284:15
performUnitOfWork
    C:\xampp\htdocs\React\ProfilesApp\node_modules\react-native\Libraries\Renderer\ReactNativeRenderer-dev.js:10513:15
workLoop
    C:\xampp\htdocs\React\ProfilesApp\node_modules\react-native\Libraries\Renderer\ReactNativeRenderer-dev.js:10584:25
Object._invokeGuardedCallback
    C:\xampp\htdocs\React\ProfilesApp\node_modules\react-native\Libraries\Renderer\ReactNativeRenderer-dev.js:134:9
</code></pre>
</blockquote>

<p>Here is is my Login Form</p>

<pre><code>import React , {Component} from 'react';
import { StyleSheet  } from 'react-native';
import { Form, Item, Input, Label, Button,Text, View} from 'native-base';
import { connect } from 'react-redux';
import { emailChanged } from '../actions';
import { passwordChanged } from '../actions';
class LoginForm extends Component {

    onEmailChange(text) {

        this.props.emailChanged(text); // Calling the action creator
    }
    passwordChange(text) {
        this.props.passwordChanged(text);
    }
render() {
    return (
        &lt;View&gt;
    &lt;Form style={styles.form}&gt;
        &lt;Item floatingLabel&gt;
            &lt;Label&gt;email&lt;/Label&gt;
            &lt;Input onChangeText={this.onEmailChange.bind(this)}
            value={this.props.email}
             /&gt;
            }
        &lt;/Item&gt;
        &lt;Item floatingLabel last&gt;
            &lt;Label&gt;Password&lt;/Label&gt;
            &lt;Input secureTextEntry
             onChangeText={this.passwordChange.bind(this)}
            /&gt;
        &lt;/Item&gt;
    &lt;/Form&gt;

    &lt;/View&gt;
    );
}   

}


const mapStateToProps = state =&gt;{
    return {
        email: state.auth.email,

    };
};
export default  connect(mapStateToProps , {emailChanged})(LoginForm);
</code></pre>

<p>My AuthReducer </p>

<pre><code>export default (state = INITIAL_STATE, action ) =&gt; {
    console.log(action.payload);
    switch (action.type) {
        case EMAIL_CHANGED :

         return { ...state, email: action.payload};
        default: 
        return state;
    }
}
</code></pre>

<p>Action Creator </p>

<pre><code>import { EMAIL_CHANGED } from './types';
export const emailChanged = (text) =&gt; {
    return {
        type: EMAIL_CHANGED,
        payload: text
    }
}
</code></pre>

<p>I don't get this error when empty my onEmailChange(text) function, which calls in the action creator. Is that problem related to native-base? Am I doing something wrong with my action creator?</p>

<p>Edit: I forgot to add, I get this error everytime I type into the input field</p>
","7599905","","7599905","","2018-01-13 10:24:43","2018-01-13 10:52:20","react-native redux Login Form throws an 'TypeError: Cannot read property 'displayName' of undefined''","<javascript><react-native><redux>","1","2","","",""
"50567857","1","","","2018-05-28 13:44:46","","0","33","<p>i'm doing some graphs work and when i change the graph
instead of trying to look for all variables in the screen to zero and to look at all the graphs functions to render it live
i just want to restart the current screen (meaning as if it would go to the same scene for the first time)</p>

<p>how do i do that without actually exiting and reentering the scene ?</p>

<p>to be sure here is my code: </p>

<pre><code>import React, {Component} from 'react';
import {View, Text, StyleSheet, processColor, Picker} from 'react-native';
import { Button} from ""native-base"";
import './globals.js'


import {CombinedChart} from 'react-native-charts-wrapper';
import moment from 'moment';

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'stretch',
        backgroundColor: 'transparent',
        paddingTop:20
    }
});

var InsulinShort = [];
var InsulinLong = [];
var glocuseTests = [];
const injectionsCount = 1000;

for (var i = 1; i &lt; injectionsCount; i++) {
    var random = Math.random();
    if (random &lt;= 0.7) {
        var gloguseValue = Math.floor(Math.random() * 40) + 75;
        var gloguseposition = Math.random();

        glocuseTests.push({x:i+gloguseposition, y: gloguseValue, marker: ""level: ""+gloguseValue});

    }
}
for (var i = 1; i &lt; injectionsCount; i++) {
    var random = Math.random();
    if (random &lt;= 0.15) {
        var shortvalue = Math.floor(Math.random() * 16) + 1  ;
        var shortPosition = Math.round(Math.random() * 100) / 100;
        InsulinShort.push({x:i+shortPosition,y: shortvalue*20, marker: shortvalue+ "" units of short insulin""});
    }else if (random &lt;= 0.3) {
        var longePosition = Math.round(Math.random() * 10) / 10;
        var longvalue = Math.floor(Math.random() * 16) + 1;
        InsulinLong.push({x:i+longePosition,y: longvalue*20, marker: longvalue+ "" units of long insulin""});
    }else{
    }
}
export default class LogGraph extends Component {

    constructor() {
        super();
        // var valueFormatter = new Array(3515599953920);


        this.state = {
            selectedPeriod: ""all"",
            loading: true,
            days:365,
            legend: {
                enabled: true,
                textSize: 18,
                form: 'SQUARE',
                formSize: 18,
                xEntrySpace: 10,
                yEntrySpace: 5,
                formToTextSpace: 5,
                wordWrapEnabled: true,
                maxSizePercent: 0.5
            },
            xAxis: {
                valueFormatter: [
                    '01/04/18',
                    '02/04/18',
                    '03/04/18',
                    '04/04/18',
                    '05/04/18',
                    '06/04/18',
                    '07/04/18',
                    '08/04/18',
                    '09/04/18',
                    '10/04/18',
                    '11/04/18',
                    '12/04/18',
                    '13/04/18',
                    '14/04/18',
                    '15/04/18',
                    '16/04/18',
                    '17/04/18',
                    '18/04/18',
                    '19/04/18',
                    '20/04/18',
                ],
                // valueFormatterPattern:'ssss',
                // limitLines:100,
                // drawLimitLinesBehindData:false,
                // avoidFirstLastClipping: false,
                textColor: processColor('#000'),
                gridColor: processColor('#000'),
                axisLineColor: processColor('#000'),
                drawGridLines:true,
                drawAxisLine:false,
                drawLabels:true,

                granularityEnabled: true,
                // granularity:1515599953920,
                granularity: 1,
                // granularity: 131096  ,
                position:'TOP',
                textSize: 10,
                labelRotationAngle:45,
                gridLineWidth: 1,
                axisLineWidth: 2,
                gridDashedLine: {
                    lineLength: 10,
                    spaceLength: 10
                },
                centerAxisLabels:false,
            },

            yAxis: {
                left: {
                    axisMinimum: 0,
                    axisMaximum: 400,
                    labelCount: 6,
                    labelCountForce: true,
                    granularityEnabled: true,
                    granularity: 5,
                },
                right: {
                    axisMinimum: 0,
                    axisMaximum: 20,
                    labelCount: 6, // 0 5 10 15 20 25 30
                    labelCountForce: true,
                    granularityEnabled: true,
                    granularity: 5,
                }
            },

            marker: {
                enabled: true,
                markerColor: processColor('#F0C0FF8C'),
                textColor: processColor('white'),
                markerFontSize: 18,
            },

            data: {
                barData: {
                    config: {
                        barWidth: 1 / 24 ,
                    },
                    dataSets: [{
                        values:InsulinLong,
                        label: 'Long Insulin',
                        config: {
                            drawValues: false,
                            colors: [processColor('#a2a4b2')],
                        }
                    },{
                        values:InsulinShort,
                        label: 'Short Insulin',
                        config: {
                            barShadowColor: processColor('red'),
                            highlightAlpha: 200,
                            drawValues: false,
                            colors: [processColor('#d0d5de')],
                        }
                    }]

                },
                lineData: {
                    dataSets: [{
                        values: glocuseTests,
                        label: 'Glucose Level',
                        config: {
                            drawValues: false,
                            colors: [processColor('#0090ff')],
                            // mode: ""CUBIC_BEZIER"",
                            drawCircles: true,
                            lineWidth: 3,
                        }
                    }],
                },
            }
        };

    }


    pickerZoomSelected (value) {
      // this.setState({selectedPeriod: value})
      global.graphStateChoosen = value
      this.resetscreen();

    }

    resetscreen() {

    }


    pickerDaysSelected (value) {
      this.setState({days: value})
    }

    isGraphItemLegal (itemTime) {

      // console.log (""log was made at: ""+itemTime)

      // multiplied by 1000 so that the argument is in milliseconds, not seconds.
      var itemDate = new Date(itemTime*1000);
      // Hours part from the timestamp
      var itemHour = itemDate.getHours();
      // Minutes part from the timestamp
      var itemMinutes = ""0"" + itemDate.getMinutes();
      // Seconds part from the timestamp
      var itemSeconds = ""0"" + itemDate.getSeconds();

      // console.log (""refactured: ""+itemHour + ':' + itemMinutes.substr(-2) + ':' + itemSeconds.substr(-2));
      // console.log (""selected piriod: "" + this.state.selectedPeriod);

      if (global.graphStateChoosen == ""all"")  {
        // console.log (""dont show item+1"");
        return true;
      }

      // //blocks morning \ afternoon \ evening
      if ((itemHour &gt; 18) &amp;&amp; (itemHour &lt; 24)) {
        console.log (""EVENING ITEM: ""+itemHour + ':' + itemMinutes.substr(-2) + ':' + itemSeconds.substr(-2));
        // console.log (""is it equal ?: "" + this.state.selectedPeriod == ""evening"");

        if (!(global.graphStateChoosen == ""evening"")|| (global.graphStateChoosen == ""all""))  {
          // console.log (""dont show item+1"");
          return false;
        }

      } else if ((itemHour &gt; 6) &amp;&amp; (itemHour &lt; 13)) {
        console.log (""MORNING ITEM: ""+itemHour + ':' + itemMinutes.substr(-2) + ':' + itemSeconds.substr(-2));
        // console.log (""is it equal ?: "" + this.state.selectedPeriod == ""evening"");
        if (!(global.graphStateChoosen === ""morning"")|| (global.graphStateChoosen == ""all""))  {
          // console.log (""dont show item+2"");
          return false;
        }

      } else if ((itemHour &gt; 13) &amp;&amp; (itemHour &lt; 18)) {
        console.log (""AFTERNOON ITEM: ""+itemHour + ':' + itemMinutes.substr(-2) + ':' + itemSeconds.substr(-2));
        if (! (global.graphStateChoosen == ""afternoon"") || (global.graphStateChoosen == ""all""))  {
          // console.log (""dont show item+3"");
          return false;
        }
      }

      return true;

    }

    clearList() {

    }

    creatList(logs){
        // var startTime = moment().millisecond();

        var list = [];

        var time = false;

        if (logs) {
            // console.log('firstLogDay',moment(firstLogDay).format('L'));
            let gloguseItems   = [];
            let shortItems     = [];
            let longItems      = [];
            let firstValidFlag = false;
            let firstLogTime;
            let lastLogTime;
            let days;
            let firstLogDate;
            let firstLogDayTime;
            lastLogTime        = logs[0].time;
            for (var i = logs.length-1; i &gt;= 0; i--) {
                console.log (""cheking i: ""+i);
                let item = logs[i];
                if ( !firstValidFlag &amp;&amp;  ['glucose', 'long', 'short'].indexOf(item.type) &gt;= 0 )  {
                    // debugger;
                    firstValidFlag = true;
                    firstLogTime = logs[i].time;
                    days = Math.round((lastLogTime-firstLogTime)/(1000*60*60*24));
                    firstLogDate = moment(firstLogTime).format('YYYY-MM-DD');
                    // console.log('firstLogDate',firstLogDate);
                    firstLogDayTime = new Date(firstLogDate);
                    firstLogDayTime = firstLogDayTime.getTime() - (2*60*60*1000);
                    // console.log('firstLogDayTime',firstLogDayTime);
                }

                console.log (""runing on i: ""+i);
                console.log (""with our time: ""+this.state.graphStateChoosen);

                var isItemLegal = this.isGraphItemLegal(item.time);

                console.log (""answer is: "" + isItemLegal);

                if ((firstValidFlag) &amp;&amp; (isItemLegal)) {

                    let logX = ( item.time - firstLogDayTime ) /  1000 / 60 / 60 /24;

                    // logX =  Math.round(logX * 10) / 10
                    if (logX) {
                        // logX = item.time;
                        // console.log(logX);
                        let logY = item.amount;
                        if (item.type !== 'glucose') {
                            if (item.type === 'short') {
                                shortItems.push({
                                    x: logX,
                                    y:  logY*20,
                                    marker: logY+ "" units of short insulin"" + moment(item.time).format('LLL')
                                })
                            }
                            if (item.type === 'long') {
                                longItems.push({
                                    x: logX,
                                    y:  logY*20,
                                    marker: logY+ "" units of long insulin"" +  moment(item.time).format('LLL')
                                })
                            }
                        }else{
                            if(item.type === 'glucose'){
                                gloguseItems.push({
                                    x: logX,
                                    y: parseInt(logY),
                                    marker: ""level: ""+ logY +  moment(item.time).format('LLL')
                                })
                            }
                        }
                    }
                }

            }

            console.log (""Reached Here"");

            let oldData = this.state.data;

            console.log (""Reached Here 1"");
            oldData.lineData.dataSets[0].values = gloguseItems;
            oldData.barData.dataSets[1].values = shortItems;
            oldData.barData.dataSets[0].values = longItems;


            let DayFlag = firstLogDate;
            let valueFormatter = [];

            console.log (""Reached Here 2"");
            valueFormatter.push(moment(DayFlag).format('DD/MM/YYYY'));
            for (let i = 0; i &lt; days; i++) {
                DayFlag = moment(DayFlag).add(1, 'days');
                valueFormatter.push(DayFlag.format('DD/MM/YYYY'));
            }

            console.log (""Reached Here 3"");
            let xAxis = this.state.xAxis;
            xAxis.valueFormatter = valueFormatter;
            console.log (""Reached Here 4"");
            this.setState({
                data:oldData,
                days:days,
                xAxis:xAxis,
                loading:false
            });

            console.log (""Reached Here 5"");

        }else{
            this.setState({loading:false});
        }

    }

    componentDidMount() {

        this.creatList(this.props.logs);
    }

    zoomTwentyPressed() {
      console.log (""pressed 25"");
    }

    zoomFiftyPressed() {
      console.log (""pressed 50"");
    }

    zoomHundredPressed() {
      console.log (""pressed 100""+this.state.days);
      // CHANGE ZOOM HERE
      // this.combinedChart.zoom = 80
      // this.setState({days: this.state.days/2})

    }


    static displayName = 'Combined';

    handleSelect(event) {
        let entry = event.nativeEvent
        if (entry == null) {
            this.setState({...this.state, selectedEntry: null})
        } else {
            this.setState({...this.state, selectedEntry: JSON.stringify(entry)})
        }

        // console.log(event.nativeEvent)
    }

    render() {
        return (

            &lt;View style={styles.container}&gt;

                {
                    (this.state.loading) ? &lt;Text&gt;Loading&lt;/Text&gt;:
                    &lt;CombinedChart
                        data={this.state.data}
                        ref={component =&gt; this.combinedChart = component}
                        xAxis={this.state.xAxis}
                        yAxis={this.state.yAxis}
                        legend={this.state.legend}
                        onSelect={this.handleSelect.bind(this)}
                        onChange={(event) =&gt; console.log(event.nativeEvent)}
                        marker={this.state.marker}
                        animation={{durationY: 1000,durationX: 1000}}
                        maxVisibleValueCount={16}
                        autoScaleMinMaxEnabled={true}
                        zoom={{scaleX: Math.floor(this.state.days/12), scaleY: 1, xValue:  4, yValue: 4, axisDependency: 'LEFT'}}
                        style={styles.container}/&gt;
                }

                &lt;Text style={{
                  paddingLeft: 20,
                  fontSize: 20
                }}&gt;
                  Zoom Options
                &lt;/Text&gt;

                &lt;View style={styles.buttonWrap}&gt;

                    &lt;View style={{
                      flexDirection:'row',
                      marginLeft:20,
                      paddingLeft: 80,
                      paddingTop: 20,
                      justifyContent: 'space-around',
                    }}&gt;


                    &lt;Picker
                      style={{width:'80%'}}
                      selectedValue={this.state.PickerValueLong}
                      onValueChange={ (itemValue, itemIndex) =&gt; {
                          // console.log(this);
                          this.pickerDaysSelected(itemValue);
                        }}&gt;

                      &lt;Picker.Item label=""x100 Days"" value='100' /&gt;
                      &lt;Picker.Item label=""x50 Days"" value='50' /&gt;
                      &lt;Picker.Item label=""x25 Days"" value='25' /&gt;

                    &lt;/Picker&gt;


                    &lt;Picker
                      style={{width:'80%'}}
                      selectedValue= {global.graphStateChoosen}
                      onValueChange= {(itemValue, itemIndex) =&gt; {
                          // console.log(this);
                          this.pickerZoomSelected(itemValue);
                        }}&gt;

                      &lt;Picker.Item label=""Morning"" value='morning' /&gt;
                      &lt;Picker.Item label=""Afternoon"" value='afternoon' /&gt;
                      &lt;Picker.Item label=""Evening"" value='evening' /&gt;
                      &lt;Picker.Item label=""All Day"" value='all' /&gt;

                    &lt;/Picker&gt;




                    &lt;/View&gt;



                &lt;/View&gt;

            &lt;/View&gt;


        );

    }
}
</code></pre>

<p>thnx</p>
","2560571","","","","","2018-05-28 20:39:57","how to restart current screen in react native?","<react-native>","2","0","","",""
"33097193","1","","","2015-10-13 07:59:07","","0","568","<p>Hi all I am using coffee script and ReactJS for my site. So far I have a smooth development until I encounter String with hashtag and then convert hash tag to react element</p>

<p>React ELEMENT</p>

<pre><code>@HashtagLink = React.createClass
displayName: 'hashtag link' 
  render: -&gt;
    React.DOM.a null,
      href:'/hashtag/' + @props.hashtag
      @props.hashtag
</code></pre>

<p>JS function </p>

<pre><code>@hashTagToLink = (string) -&gt;
  string.replace(/#(\S*)/g,'&lt;a href=""http://emilenriquez.com""&gt;$1&lt;/a&gt;')
</code></pre>

<p>Sample String : <code>I am a string with #hashtag I want to be converted to link</code></p>

<p>Desired Output: I am a string with <a href=""http://emilenriquez.com"" rel=""nofollow"">#hashtag</a> I want to be converted to link</p>

<p>Current Output: <code>I am a string with &lt;a href=""emilenriquez.com""&gt;#hashtag&lt;/a&gt; I want to be converted to string</code></p>
","1418771","","1418771","","2015-10-13 08:07:42","2015-10-13 13:47:57","String containing hashtag to reactjs element","<javascript><html><regex><coffeescript><reactjs>","1","0","","",""
"49802465","1","49802668","","2018-04-12 17:14:51","","1","68","<p>I need Some Help as possible.
In my code I have scene that return into my view, an array with names. However, I want to do something also. When I click the name, I want to take the email of the name I have clicked and past to my post method, to return in another scene with information of the email person. Here is my code: </p>

<p><strong>My Users Class with all elements</strong></p>

<pre><code>import React from 'react';
import ListaItens from './ListaUsers'
import BarraNavegacao from './BarraNavegacao';
import {View,Image,Alert,TouchableHighlight,AsyncStorage} from 'react-native';
import axios from 'axios';

export default class Users extends React.Component {
    constructor(props) {
      super(props);
      this.state = {tituloBarraNav: 'Colaboradores',testLocal:''};
}
</code></pre>

<p><strong>My refresh function is into Component Users</strong></p>

<pre><code>  async refresh() {
    let tmp_localData = {};
    AsyncStorage.getItem('localData', (err, result) =&gt; {
        //console.log(result);
        tmp_localData = JSON.parse(result);
        //console.log('Local temp: ', tmp_localData.User.email);

    }).then((result) =&gt; {
        tmp_localData = JSON.parse(result);

        //console.log('Email: ', tmp_localData.email);
        axios({
                method: 'post',
                url: 'my url'
                data: {
                    email: 'someEmail@test.com,
                }
            },
            console.log('aqui esta o email'),

        ).then((response) =&gt; {
            //console.log('Get tmpLocal ----------',tmp_localData);
            //console.log('Get response ----------',response);
            tmp_localData.User = {
                ""userID"": response.data.response.userID,
                ""displayName"": response.data.response.displayName,
                ""email"": response.data.response.email,
                ""avatar"": response.data.response.avatar,
                ""gender"": response.data.response.gender,
                ""Session"": {
                    ""token"": response.data.response.token,
                },
                ""FootID"": response.data.response.FootID,
            };
            //this.refresh();
            //console.log('Set tmpLocal',tmp_localData);
            AsyncStorage.setItem('localData', JSON.stringify(tmp_localData), () =&gt; {

            }).then((result) =&gt; {
                this.props.navigator.push({id: 'MenuPrincipal'});
                console.log('Navigator',this.props.navigator);

                //Alert.alert('Clicou Aqui ');

            });

        }).catch((error) =&gt; {
            if (error.response) {
                // The request was made and the server responded with a status code
                // that falls out of the range of 2xx
                console.log(error.response.data);
                console.log(error.response.status);
                console.log(error.response.headers);
                Alert.alert('Não foi possivel mudar o utilizador');
            } else if (error.request) {
                // The request was made but no response was received
                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of
                // http.ClientRequest in node.js
                console.log('erro de ligaçao', error.message);
                Alert.alert('Não foi possivel mudar o utilizador');
                console.log(error.request);
            } else {
                // Something happened in setting up the request that triggered an Error
                console.log('erro de codigo no then', error.message);
                Alert.alert('Não foi possivel mudar o utilizador');
            }
            console.log(error.config);
            Alert.alert('Não foi possivel mudar o utilizador');
        });
    });
}
</code></pre>

<p><strong>My render in Users</strong></p>

<pre><code>render(){
    const {principal, conteudo,imgConteudo1,imgConteudo2, texto,box}= myStyle;
    return(
        &lt;View style={principal}&gt;

            &lt;BarraNavegacao back navigator={this.props.navigator} tituloProp={this.state.tituloBarraNav}/&gt;
            &lt;TouchableHighlight onPress={() =&gt; {this.refresh();}}
                                clearButtonMode={'while-editing'}
                                activeOpacity={1} underlayColor={'white'}&gt;
                &lt;ListaItens/&gt;
            &lt;/TouchableHighlight&gt;
        &lt;/View&gt;
       );
     }
}
</code></pre>

<p>I have ListaItems Component that will walk through an array and will put inside ScroolView with map method. So the code is:</p>

<p><strong>My ListaItems Class</strong></p>

<pre><code>import React from 'react';
import { ScrollView} from 'react-native';
import axios from 'axios';
import Items from './Items';

export default class ListaItens extends React.Component {

constructor(props) {
    super(props);
    this.state = {listaItens: [], listaEmail: [] };
}
componentWillMount() {
    //request http
    axios.get('my url')
        .then((response) =&gt; {
            this.setState({listaItens: response.data.response})
        })
        .catch(() =&gt; {
            console.log('Erro ao imprimir os dados')
        });
}

render() {
    return (
        &lt;ScrollView&gt;
            {this.state.listaItens.map(item =&gt;(&lt;Items key={item.email} item={item}/&gt;))}
        &lt;/ScrollView&gt;
       );
    }
}
</code></pre>

<p>The last component is the component the build what i want to show inside scrollview in <em>ListaItems</em>. The component name is Items. the code is:</p>

<p><strong>My Items Class</strong></p>

<pre><code>import React, {Component} from 'react';
import {Text, Alert, View, Image,} from 'react-native';

export default class Items extends Component {
constructor(props) {
    super(props);
    this.state = {listaEmail: ''};
}
render() {
    const {foto, conteudo, texto, box, test} = estilo;
    return (
        &lt;View&gt;
            &lt;Text/&gt;
            &lt;Text/&gt;
            &lt;View style={conteudo}&gt;
                &lt;Image style={foto} source={{uri: this.props.item.avatar}}/&gt;
                &lt;Text style={texto}&gt;{this.props.item.displayName}&lt;/Text&gt;
            &lt;/View&gt;
            &lt;View style={test}&gt;
                &lt;Text style={texto}&gt;{this.props.item.email}&lt;/Text&gt;
            &lt;/View&gt;

        &lt;/View&gt;
      );
   }
}
</code></pre>

<p>So, in <strong>Users Class</strong> for <em>refresh() function</em> in the post method on this <strong>email: ""someEmail@test.com"",</strong> I want to be dynamic, when I click the name of a person in <strong>Items Class</strong>, I want to take the the email here on <strong>this.props.item.email</strong> and put in parameter on post method of <strong>Users Class----refresh()----axios()---Data---email:the email i want to past</strong>.</p>

<p>A litle help here, please. I am desperate right now because i have tryied and I did not make it </p>
","9131876","","9131876","","2018-04-13 16:56:14","2018-04-13 16:56:14","Passing value of component to another Scene to use in post method - react native","<react-native>","1","0","","",""
"33508325","1","","","2015-11-03 20:21:04","","0","343","<p>I'm using a subrender approach (split the react component creation in a helpers methods) on my React 0.13 App like this. But I got an error:</p>

<blockquote>
  <p>Invariant Violation: addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component's <code>render</code> method</p>
</blockquote>

<p>So, how can manage my on the fly created react components that depend on the DOM to avoid to get fat my primary render method?</p>

<p>Any clue how to refactor that to the new approach in the 0.14 React version?</p>

<pre class=""lang-js prettyprint-override""><code>module.exports = React.createClass({
displayName: 'Typed',
render: function() {
    var _this = this;

    return (
      React.createElement(""div"", {
            style: {
                position: 'relative'
            },
            className: 'react-typeahead-container ' + _this.props.className},
        _this._renderInput(),
        _this._renderDropdown(),
        _this._renderAriaMessageForOptions(),
        _this._renderAriaMessageForIncomingOptions()
      )
    );
},
_renderInput: function() {
    var _this = this,
        state = _this.state,
        props = _this.props,
        inputValue = props.inputValue,
        inputValue = props.inputValue,
        className = 'react-typeahead-input',
        inputDirection = getTextDirection(inputValue);

    return (
        React.createElement(""div"", {
            style: {
                position: 'relative'
            },
            className: ""react-typeahead-input-container""},
            React.createElement(Input, {
                ref: ""input"", //this does not works :(
                role: ""combobox""
            )
        )
    );
},
</code></pre>
","253403","","1199684","","2015-11-05 22:17:44","2015-12-29 23:16:19","How Refs works on react 0.14","<javascript><reactjs>","2","3","","",""
"50468996","1","","","2018-05-22 13:29:34","","0","57","<p>i'm doing my first React Native app,
i'm using <code>react-native-charts-wrapper</code> to show graphs.</p>

<p>i have a listener for buttons (see code below comment // CHANGE ZOOM HERE)  in my screen to set a predefined zoom in the graph that i'm showing.</p>

<p>How would i do that ? 
Does anyone has any experience using that library ?</p>

<p>here is my screen:</p>

<pre><code>import React, {Component} from 'react';
import {View, Text, StyleSheet, processColor} from 'react-native';
import { Button} from ""native-base"";

import {CombinedChart} from 'react-native-charts-wrapper';
import moment from 'moment';

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'stretch',
        backgroundColor: 'transparent',
        paddingTop:20
    }
});

var InsulinShort = [];
var InsulinLong = [];
var glocuseTests = [];
const injectionsCount = 1000;

for (var i = 1; i &lt; injectionsCount; i++) {
    var random = Math.random();
    if (random &lt;= 0.7) {
        var gloguseValue = Math.floor(Math.random() * 40) + 75;
        var gloguseposition =Math.random();
        glocuseTests.push({x:i+gloguseposition,y: gloguseValue, marker: ""level: ""+gloguseValue});
    }
}
for (var i = 1; i &lt; injectionsCount; i++) {
    var random = Math.random();
    if (random &lt;= 0.15) {
        var shortvalue = Math.floor(Math.random() * 16) + 1  ;
        var shortPosition = Math.round(Math.random() * 100) / 100;
        InsulinShort.push({x:i+shortPosition,y: shortvalue*20, marker: shortvalue+ "" units of short insulin""});
    }else if (random &lt;= 0.3) {
        var longePosition = Math.round(Math.random() * 10) / 10;
        var longvalue = Math.floor(Math.random() * 16) + 1;
        InsulinLong.push({x:i+longePosition,y: longvalue*20, marker: longvalue+ "" units of long insulin""});
    }else{
    }
}
export default class LogGraph extends Component {

    constructor() {
        super();
        // var valueFormatter = new Array(3515599953920);

        this.state = {
            loading: true,
            days:1000,
            legend: {
                enabled: true,
                textSize: 18,
                form: 'SQUARE',
                formSize: 18,
                xEntrySpace: 10,
                yEntrySpace: 5,
                formToTextSpace: 5,
                wordWrapEnabled: true,
                maxSizePercent: 0.5
            },
            xAxis: {
                valueFormatter: [
                    '01/04/18',
                    '02/04/18',
                    '03/04/18',
                    '04/04/18',
                    '05/04/18',
                    '06/04/18',
                    '07/04/18',
                    '08/04/18',
                    '09/04/18',
                    '10/04/18',
                    '11/04/18',
                    '12/04/18',
                    '13/04/18',
                    '14/04/18',
                    '15/04/18',
                    '16/04/18',
                    '17/04/18',
                    '18/04/18',
                    '19/04/18',
                    '20/04/18',
                ],
                // valueFormatterPattern:'ssss',
                // limitLines:100,
                // drawLimitLinesBehindData:false,
                // avoidFirstLastClipping: false,
                textColor: processColor('#000'),
                gridColor: processColor('#000'),
                axisLineColor: processColor('#000'),
                drawGridLines:true,
                drawAxisLine:false,
                drawLabels:true,

                granularityEnabled: true,
                // granularity:1515599953920,
                granularity: 1,
                // granularity: 131096  ,
                position:'TOP',
                textSize: 10,
                labelRotationAngle:45,
                gridLineWidth: 1,
                axisLineWidth: 2,
                gridDashedLine: {
                    lineLength: 10,
                    spaceLength: 10
                },
                centerAxisLabels:false,
            },

            yAxis: {
                left: {
                    axisMinimum: 0,
                    axisMaximum: 400,
                    labelCount: 6,
                    labelCountForce: true,
                    granularityEnabled: true,
                    granularity: 5,
                },
                right: {
                    axisMinimum: 0,
                    axisMaximum: 20,
                    labelCount: 6, // 0 5 10 15 20 25 30
                    labelCountForce: true,
                    granularityEnabled: true,
                    granularity: 5,
                }
            },

            marker: {
                enabled: true,
                markerColor: processColor('#F0C0FF8C'),
                textColor: processColor('white'),
                markerFontSize: 18,
            },

            data: {
                barData: {
                    config: {
                        barWidth: 1 / 24 ,
                    },
                    dataSets: [{
                        values:InsulinLong,
                        label: 'Long Insulin',
                        config: {
                            drawValues: false,
                            colors: [processColor('#a2a4b2')],
                        }
                    },{
                        values:InsulinShort,
                        label: 'Short Insulin',
                        config: {
                            barShadowColor: processColor('red'),
                            highlightAlpha: 200,
                            drawValues: false,
                            colors: [processColor('#d0d5de')],
                        }
                    }]

                },
                lineData: {
                    dataSets: [{
                        values: glocuseTests,
                        label: 'Glucose Level',
                        config: {
                            drawValues: false,
                            colors: [processColor('#81d0fa')],
                            // mode: ""CUBIC_BEZIER"",
                            drawCircles: true,
                            lineWidth: 3,
                        }
                    }],
                },
            }
        };

    }

    creatList(logs){
        // var startTime = moment().millisecond();



        var list = [];

        var time = false;

        if (logs) {
            // console.log('firstLogDay',moment(firstLogDay).format('L'));
            let gloguseItems   = [];
            let shortItems     = [];
            let longItems      = [];
            let firstValidFlag = false;
            let firstLogTime;
            let lastLogTime;
            let days;
            let firstLogDate;
            let firstLogDayTime;
            lastLogTime        = logs[0].time;
            for (var i = logs.length-1; i &gt;= 0; i--) {
                let item = logs[i];
                if ( !firstValidFlag &amp;&amp;  ['glucose', 'long', 'short'].indexOf(item.type) &gt;= 0 )  {
                    // debugger;
                    firstValidFlag = true;
                    firstLogTime = logs[i].time;
                    days = Math.round((lastLogTime-firstLogTime)/(1000*60*60*24));
                    firstLogDate = moment(firstLogTime).format('YYYY-MM-DD');
                    // console.log('firstLogDate',firstLogDate);
                    firstLogDayTime = new Date(firstLogDate);
                    firstLogDayTime = firstLogDayTime.getTime() - (2*60*60*1000);
                    // console.log('firstLogDayTime',firstLogDayTime);
                }

                if (firstValidFlag) {

                    let logX = ( item.time - firstLogDayTime ) /  1000 / 60 / 60 /24;
                    // logX =  Math.round(logX * 10) / 10
                    if (logX) {
                        // logX = item.time;
                        // console.log(logX);
                        let logY = item.amount;
                        if (item.type !== 'glucose') {
                            if (item.type === 'short') {
                                shortItems.push({
                                    x: logX,
                                    y:  logY*20,
                                    marker: logY+ "" units of short insulin"" + moment(item.time).format('LLL')
                                })
                            }
                            if (item.type === 'long') {
                                longItems.push({
                                    x: logX,
                                    y:  logY*20,
                                    marker: logY+ "" units of long insulin"" +  moment(item.time).format('LLL')
                                })
                            }
                        }else{
                            if(item.type === 'glucose'){
                                gloguseItems.push({
                                    x: logX,
                                    y: parseInt(logY),
                                    marker: ""level: ""+ logY +  moment(item.time).format('LLL')
                                })
                            }
                        }
                    }
                }

            }
            let oldData = this.state.data;
            oldData.lineData.dataSets[0].values = gloguseItems;
            oldData.barData.dataSets[1].values = shortItems;
            oldData.barData.dataSets[0].values = longItems;
            let DayFlag = firstLogDate;
            let valueFormatter = [];
            valueFormatter.push(moment(DayFlag).format('DD/MM/YYYY'));
            for (let i = 0; i &lt; days; i++) {
                DayFlag = moment(DayFlag).add(1, 'days');
                valueFormatter.push(DayFlag.format('DD/MM/YYYY'));
            }
            let xAxis = this.state.xAxis;
            xAxis.valueFormatter = valueFormatter;
            this.setState({
                data:oldData,
                days:days,
                xAxis:xAxis,
                loading:false
            });

        }else{
            this.setState({loading:false});
        }

    }
    componentDidMount() {

        this.creatList(this.props.logs);
    }

    zoomTwentyPressed() {
      console.log (""pressed 25"");
    }

    zoomFiftyPressed() {
      console.log (""pressed 50"");
    }

    zoomHundredPressed() {
      console.log (""pressed 100"");
      // CHANGE ZOOM HERE

    }


    static displayName = 'Combined';

    handleSelect(event) {
        let entry = event.nativeEvent
        if (entry == null) {
            this.setState({...this.state, selectedEntry: null})
        } else {
            this.setState({...this.state, selectedEntry: JSON.stringify(entry)})
        }

        // console.log(event.nativeEvent)
    }

    render() {
        return (

            &lt;View style={styles.container}&gt;

                {
                    (this.state.loading) ? &lt;Text&gt;Loading&lt;/Text&gt;:
                    &lt;CombinedChart
                        data={this.state.data}
                        xAxis={this.state.xAxis}
                        yAxis={this.state.yAxis}
                        legend={this.state.legend}
                        onSelect={this.handleSelect.bind(this)}
                        onChange={(event) =&gt; console.log(event.nativeEvent)}
                        marker={this.state.marker}
                        animation={{durationY: 1000,durationX: 1000}}
                        maxVisibleValueCount={16}
                        autoScaleMinMaxEnabled={true}
                        zoom={{scaleX: Math.floor(this.state.days/12), scaleY: 1, xValue:  4, yValue: 4, axisDependency: 'LEFT'}}
                        style={styles.container}/&gt;
                }

                &lt;View style={styles.buttonWrap}&gt;

                    &lt;Button block light onPress={this.zoomTwentyPressed()} style={(this.state.view === 'graph')?styles.buttonStyleCurrent:styles.buttonStyle}&gt;
                        &lt;Text&gt;x100&lt;/Text&gt;
                    &lt;/Button&gt;
                    &lt;Button block light onPress={this.zoomFiftyPressed()} style={(this.state.view === 'graph')?styles.buttonStyleCurrent:styles.buttonStyle}&gt;
                        &lt;Text&gt;x50&lt;/Text&gt;
                    &lt;/Button&gt;
                    &lt;Button block light onPress={this.zoomHundredPressed()} style={(this.state.view === 'graph')?styles.buttonStyleCurrent:styles.buttonStyle}&gt;
                        &lt;Text&gt;x25&lt;/Text&gt;
                    &lt;/Button&gt;

                &lt;/View&gt;

            &lt;/View&gt;


        );

    }
}
</code></pre>
","2560571","","","","","2018-05-22 13:29:34","how to set zoom in react-native-charts-wrapper?","<reactjs><react-native>","0","0","","",""
"50868038","1","50868693","","2018-06-15 01:30:41","","0","28","<p>Something weird is happening when I try to us select in reactjs.
Here is my code:</p>

<pre class=""lang-js prettyprint-override""><code>onDropDownChange=(e)=&gt;{
    let val = this.props.contactUsReducer.contactUsList.filter(function(item) {
        return item.topic == e.target.value
    });
    let key= e.target.value;
    let name= e.target.name;
    console.log(""key ""+key+""  val: ""+val[0].displayName+"" name:""+name);
    this.setState(prevState =&gt; {
        return ( {...prevState, [name]:key, displayName: val[0].displayName})
    }, function () {
        console.log(this.state);
    });
}
</code></pre>

<p>and in my render I have </p>

<pre class=""lang-html prettyprint-override""><code>&lt;select type=""select"" className=""text-input flex-row-right-item"" onChange={this.onDropDownChange} name=""topic"" value={this.state.displayName}&gt;
  {this.createSelectItems(this.props.contactUsReducer.contactUsList)}
&lt;/select&gt;
</code></pre>

<p>Also here is my helper function:</p>

<pre class=""lang-js prettyprint-override""><code>createSelectItems=(itemsList)=&gt; {
    let items = [];

    for (let i = 0; i &lt; itemsList.length; i++) {
            items.push(&lt;option key={itemsList[i].topic} value={itemsList[i].topic}&gt;{itemsList[i].displayName}&lt;/option&gt;);

    }
    return items;
}
</code></pre>

<p>Now when I try to change the select box nothing will change in the UI so select box does not show the updated selection but I clearly see in the state that the state has been updated. Why the changes does not get reflected in select box.</p>

<p>Any idea?</p>
","7272998","","7103969","","2018-06-15 03:02:41","2018-06-15 03:24:08","Select in react does not reflect the state changes","<javascript><reactjs>","3","1","","",""
"50638963","1","","","2018-06-01 08:14:17","","1","61","<p>I have read all the other topics about this issue, but no one is the solution to my problem. </p>

<p>I don't know why, but I can't pass props to react-navigation when I try to navigate, I always get this error: </p>

<blockquote>
  <p>""Undefined ' this.props.navigation.state.props.p'""</p>
</blockquote>

<p>There is my code:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react'
import {View, Text, ActivityIndicator, StyleSheet} from 'react-native'
import * as firebase from 'firebase';

const config = {
    apiKey: ""AIzaSyBeFuR40n7vp1XU9edL8PeOFq3UafKQ314"",
    authDomain: ""anylibrary-961e1.firebaseapp.com"",
    databaseURL: ""https://anylibrary-961e1.firebaseio.com"",
    projectId: ""anylibrary-961e1"",
    storageBucket: ""anylibrary-961e1.appspot.com"",
    messagingSenderId: ""482573837189""
};

export default class Loading extends React.Component {
    static navigationOptions = {
        header: null,
    };


    constructor(props) {
        super(props);
    }


    componentWillMount() {
        if (!firebase.apps.length) {
            firebase.initializeApp(config);
        }
    }

    componentDidMount() {
        firebase.auth().onAuthStateChanged(user =&gt; {
            const {navigate} = this.props.navigation;
            if (user) {
                navigate('UserArea', {p: 'Profile'});
            } else {
                navigate('MainPage');
            }
        })
    }

    render() {
        return (
            &lt;View style={styles.container}&gt;
                &lt;Text&gt;Loading...&lt;/Text&gt;
                &lt;ActivityIndicator size=""large""/&gt;
            &lt;/View&gt;
        );
    }
}
const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
    }
})</code></pre>
</div>
</div>
</p>

<p>And:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react';
import {StyleSheet, View, Alert} from 'react-native';
import Profile from './Profile';
import Notifications from './Notifications';
import Search from './Search';
import Home from './Home';
import Tabbar from 'react-native-tabbar-bottom'
import * as firebase from 'firebase';

const config = {
    apiKey: ""AIzaSyBeFuR40n7vp1XU9edL8PeOFq3UafKQ314"",
    authDomain: ""anylibrary-961e1.firebaseapp.com"",
    databaseURL: ""https://anylibrary-961e1.firebaseio.com"",
    projectId: ""anylibrary-961e1"",
    storageBucket: ""anylibrary-961e1.appspot.com"",
    messagingSenderId: ""482573837189""
};


export default class UserArea extends React.Component {
    static navigationOptions = {
        header: null,
    }

    constructor(props) {
        super(props);
        this.state = {
            page: this.props.navigation.state.props.p,
            name: '',
        }
    }

    componentWillMount(){
        if (!firebase.apps.length) {
            firebase.initializeApp(config);
        }
    }

    componentDidMount() {
        firebase.auth().onAuthStateChanged(user =&gt; {
             this.state.name = user.displayName;
        })
    }

    render() {

        return (
            &lt;View style={styles.container}&gt;
                {this.state.page === ""Home"" &amp;&amp; &lt;Home navigation={this.props.navigation}&gt;Home&lt;/Home&gt;}
                {this.state.page === ""Profile"" &amp;&amp; &lt;Profile navigation={this.props.navigation}&gt;Profile&lt;/Profile&gt;}
                {this.state.page === ""Notifications"" &amp;&amp;   &lt;Notifications navigation={this.props.navigation}&gt;Notifications&lt;/Notifications&gt;}
                {this.state.page === ""Search"" &amp;&amp; &lt;Search navigation={this.props.navigation}&gt;Search&lt;/Search&gt;}

                &lt;Tabbar
                    stateFunc={(tab) =&gt; {
                        this.setState({page: tab.page})
                        //this.props.navigation.setParams({tabTitle: tab.title})
                    }}
                    activePage={this.state.page}
                    tabbarBgColor='#00619A'
                    iconColor='#99c2ff'
                    tabs={[
                        {
                            page: ""Home"",
                            icon: ""home"",
                            iconText: ""Home""
                        },
                        {
                            page: ""Profile"",
                            icon: ""person"",
                            iconText: ""Profile""
                        },
                        {
                            page: ""Notifications"",
                            icon: ""notifications"",
                            badgeNumber: 0,
                            iconText: ""Notifications""
                        },
                        {
                            page: ""Search"",
                            icon: ""search"",
                            iconText: ""Search""
                        },
                    ]}
                /&gt;
            &lt;/View&gt;
        );
    }
}

const styles = StyleSheet.create({
    container: {
        flex: 1
    }
});</code></pre>
</div>
</div>
</p>

<p>Basically i send it like that:</p>

<pre><code>navigate('UserArea', {p: 'Profile'});
</code></pre>

<p>and try to acces it like that:</p>

<pre><code>page: this.props.navigation.state.props.p,
</code></pre>

<p>Anyone?</p>

<p>Where is the problem?</p>

<p>What I am doing wrong?</p>
","9088646","","3677277","","2018-06-01 09:12:32","2018-06-01 09:12:32","Undefined ' this.props.navigation.state.props.p' navigation react-native","<javascript><reactjs><react-native><navigation>","2","2","","",""
"50666834","1","50667046","","2018-06-03 13:17:55","","0","51","<p>i got the problem with new React, Webpack project. Can't resolve error at browser console appearing: <strong>""Uncaught TypeError: (0 , _react.createClass) is not a function""</strong></p>

<p>Can you help me?</p>

<p><strong><em>Opera console screenshot</em></strong></p>

<p><a href=""https://i.stack.imgur.com/8DOz4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8DOz4.png"" alt=""Opera console screenshot: &#39;Uncaught TypeError: (0 , _react.createClass) is not a function&#39;""></a></p>

<p><strong><em>webpack.config.babel.js</em></strong></p>

<pre class=""lang-js prettyprint-override""><code>import path from 'path';

export default {
    mode: 'development', // development, production or none
    entry: './assets/js/index.js',
    output: {
        path: path.resolve(__dirname, 'dist/js'),
        filename: 'bundle.js',
        sourceMapFilename: 'bundle.map'
    },
    // devtool: '#source-map',
    module: {
        rules: [{
            test: /\.js$/,
            exclude: /node_modules/,
            loaders: ['babel-loader']
        }]
    }
};
</code></pre>

<p><strong><em>.babelrc</em></strong></p>

<pre class=""lang-json prettyprint-override""><code>{
    ""presets"": [
        ""env"",
        ""stage-0"",
        ""react""
    ]
}
</code></pre>

<p><strong><em>index.js</em></strong></p>

<pre class=""lang-js prettyprint-override""><code>import { createClass } from 'react';
import { render } from 'react-dom';

const Note = createClass({
    displayName: 'Note',
    render() {
        return (
            &lt;div className='TEST'&gt;
                Hello world
            &lt;/div&gt;
        );
    }
});

render(
    &lt;Note /&gt;,
    document.body
);
</code></pre>

<p><strong><em>Project screenshot in visual studio code</em></strong></p>

<p><a href=""https://i.stack.imgur.com/95ITK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/95ITK.png"" alt=""Project screenshot in visual studio code""></a></p>

<p><strong><em>package.json</em></strong></p>

<pre class=""lang-json prettyprint-override""><code>{
  ""dependencies"": {
    ""normalize.css"": ""^8.0.0"",
    ""react"": ""^16.4.0"",
    ""react-dom"": ""^16.4.0""
  },
  ""devDependencies"": {
    ""babel-core"": ""^6.26.3"",
    ""babel-loader"": ""^7.1.4"",
    ""babel-preset-env"": ""^1.7.0"",
    ""babel-preset-react"": ""^6.24.1"",
    ""babel-preset-stage-0"": ""^6.24.1"",
    ""eslint"": ""^4.19.1"",
    ""eslint-plugin-react"": ""^7.8.2"",
    ""path"": ""^0.12.7"",
    ""webpack"": ""^4.10.2"",
    ""webpack-cli"": ""^2.1.4""
  },
  ""name"": ""notes"",
  ""version"": ""0.0.1"",
  ""description"": """",
  ""main"": ""webpack.config.babel.js"",
  ""scripts"": {
    ""build"": ""webpack"",
    ""watch"": ""webpack --watch"",
    ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1""
  },
  ""author"": ""Andrew Dyachenko"",
  ""license"": ""ISC""
}
</code></pre>
","3688243","","3688243","","2018-06-03 13:35:30","2018-06-03 14:04:05","Uncaught TypeError: (0 , _react.createClass) is not a function","<reactjs><webpack>","1","6","","",""