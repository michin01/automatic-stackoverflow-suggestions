Id,PostTypeId,AcceptedAnswerId,ParentId,CreationDate,DeletionDate,Score,ViewCount,Body,OwnerUserId,OwnerDisplayName,LastEditorUserId,LastEditorDisplayName,LastEditDate,LastActivityDate,Title,Tags,AnswerCount,CommentCount,FavoriteCount,ClosedDate,CommunityOwnedDate
"50244172","1","","","2018-05-09 01:11:51","","0","33","<p>I'm trying to create a live streaming audio platform using a library based off of WebRTC. The actual setup thus far has been pretty straight forward until I tried to hook the visualization element that i created up to my live stream. Every example of a visualizer that I have found on the web requires an audio element with an src tag. The problem that I'm encountering is that the I have this event.stream that is an srcObject but I cannot find an src. I've tried the URL.createObjectUrl(srcObject) which did seem to create a blob url of sorts, but upon entering that into my src, nothing happened. I'm using react for my front end which has also proved to be a bit of a hurtle because most of the examples I've found, including the ones done by the guy who created the library I'm using was done by appending the audio element directly to the DOM which I'm trying to avoid. Below is the media element containing the audio element and the visualizer. </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>class MediaElement extends Component{

  render(){
    console.log('mediaElement ', this.props.event.mediaElement)
    console.log('src ', this.props.src)
    return this.props.event.stream ? (
      &lt;Fragment&gt;
        &lt;audio
          id=""stream""
          autoPlay={true}
          playsInline={true}
          controls={true}
          muted={true}
          src={this.props.src}
          // ref={(element) =&gt; {
          //   if (element){
          //     element.srcObject = this.props.event.stream;
          //   }
          // }}
        /&gt;
        &lt;AudioSpectrum
        id=""audio-canvas""
        height={200}
        width={300}
        audioId={'stream'}
        capColor={'red'}
        capHeight={2}
        meterWidth={2}
        meterCount={512}
        meterColor={[
          {stop: 0, color: '#f00'},
          {stop: 0.5, color: '#0CD7FD'},
          {stop: 1, color: 'red'}
        ]}
        gap={4}
        /&gt;
      &lt;/Fragment&gt;
    )
    : null;
  }
}

export default MediaElement;</code></pre>
</div>
</div>
</p>

<p>Notice I've commented out the ref on the audio element. I'm a bit new to this so I'm not sure why it doesn't work when using both, but I feel like it has something to do with duplicate audio references. I'm passing the src and the event down from the parent component which is where I'm using the createObjectUrl function to create the src. Lastly, I should say that I've seen this warning about the deprecation of createObjectUrl, so I'm wondering if there is an alternative out there, as I can't seem to find one. Any help or advice with live streaming audio visualization would be greatly appreciated. Thanks peeps!</p>
","9761795","","","","","2018-05-09 01:11:51","react live stream audio frequency visualization","<reactjs><audio><streaming><visualization><live>","0","0","","",""
"50298107","1","50299704","","2018-05-11 18:19:38","","0","51","<p>I've been learning React for a couple of days, this time I'm trying to create a grid of draggable widgets, and I found this library on github: <a href=""https://github.com/STRML/react-grid-layout"" rel=""nofollow noreferrer"">react-grid-layout</a> which does that.</p>

<p>This time, I'm trying to toggle draggable or <code>static</code> property when clicking on a <code>button</code> but I'm having some troubles doing so.</p>

<p>This is my <code>App.js</code>:</p>

<pre><code>import React, { Component } from 'react';
import {InputText} from 'primereact/components/inputtext/InputText';
import GridLayout from 'react-grid-layout';
import './App.css';

class App extends Component {
    render() {
        var layout = [
            {i: 'a', x: 0, y: 0, w: 10, h: 4},
            {i: 'b', x: 1, y: 0, w: 3, h: 2},
            {i: 'c', x: 4, y: 0, w: 1, h: 2}
        ];
        return (
            &lt;React.Fragment&gt;
                &lt;button onClick={this.toggleStatic (layout)}&gt;Enable&lt;/button&gt;
                &lt;GridLayout className=""layout"" layout={layout} cols={30} rowHeight={30} width={1200} onDragStop={this.onDragStop}&gt;
                    &lt;div key=""a""&gt;a&lt;/div&gt;
                    &lt;div key=""b""&gt;b&lt;/div&gt;
                    &lt;div key=""c""&gt;c&lt;/div&gt;
                &lt;/GridLayout&gt;
            &lt;/React.Fragment&gt;
        );
    }

    toggleStatic(layout) {
        console.log('Layout', layout);
    }

    onDragStop(layout) {
        layout[0].static = true;
        console.log(layout);
    }
}

export default App;
</code></pre>

<p>My <code>index.js</code>:</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import registerServiceWorker from './registerServiceWorker';
import 'react-grid-layout/css/styles.css';
import 'react-resizable/css/styles.css';
import 'primereact/resources/themes/omega/theme.css';
import 'primereact/resources/primereact.min.css';

ReactDOM.render(&lt;App /&gt;, document.getElementById('root'));
registerServiceWorker();
</code></pre>

<p>And my <code>index.css</code>:</p>

<pre><code>body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
}

.react-grid-item:not(.react-grid-placeholder) {
    background-color: #ccc;
    border: 1px solid black;
}

.layout {
    background-color: #333;
}

.title {
    font-weight: bold;
}
</code></pre>

<p>If I check my console, right after reloading the page I get my <code>layout</code> logged into it, before any click:</p>

<pre><code>Layout […]
​0: Object { i: ""a"", x: 0, y: 0, … }
1: Object { i: ""b"", x: 1, y: 0, … }    ​
2: Object { i: ""c"", x: 4, y: 0, … }    ​
length: 3
__proto__: Array []
</code></pre>

<p>But if I change my <code>button</code> to:</p>

<pre><code>&lt;button onClick={this.toggleStatic}&gt;Enable&lt;/button&gt;
</code></pre>

<p>i.e. removing the parameter <code>layout</code> from it, I get this output in the console:</p>

<pre><code>Layout Proxy
    &lt;target&gt;: Object { … }
    &lt;handler&gt;: Object { … }
</code></pre>

<p>Right now, my code changes <code>static</code> of first widget to <code>true</code> when any component is dragged, I'm trying to change it for all of then on a button click.</p>

<p>I found this post on the library's issues: <a href=""https://github.com/STRML/react-grid-layout/issues/327"" rel=""nofollow noreferrer"">Assign static dinamically/programatically</a>, but they're using <code>react-redux</code>.</p>

<p>I found them using this as well:</p>

<pre><code>const mapStateToProps = state =&gt; {
  return {
    ...state.dashboard.asMutable()
  };
};
</code></pre>

<p>But I'm not sure what does that does.</p>

<p>Any suggestion to at least receive the <code>layout</code> var into the <code>toggleStatic</code> might be enough for me for this matter.</p>
","2180785","","2180785","","2018-05-11 20:36:31","2018-05-11 21:34:05","ReactJS react-grid-layout toggle static property","<javascript><reactjs><draggable><react-grid-layout>","1","0","","",""
"47027283","1","49583395","","2017-10-31 03:10:17","","0","435","<p>After adding some interface types to our graphql queries our react-apollo app was getting the fragmentMatcher error:</p>

<blockquote>
  <p>You are using the simple (heuristic) fragment matcher, but your
  queries contain union or interface types.
       Apollo Client will not be able to able to accurately map fragments.To make this error go away, use the
  IntrospectionFragmentMatcher as described in the docs:
  <a href=""http://dev.apollodata.com/react/initialization.html#fragment-matcher"" rel=""nofollow noreferrer"">http://dev.apollodata.com/react/initialization.html#fragment-matcher</a></p>
</blockquote>

<p>I have followed the guide and the error does not go away, it still says I am using the heuristic fragment matcher even though I am not? Any thoughts?</p>

<p>Using <code>react-apollo@1.2.0</code> &amp; <code>apollo-cache-inmemory@1.0.0</code> and here is my apollo config:</p>

<pre><code>...

import {
  ApolloClient,
  createNetworkInterface,
  IntrospectionFragmentMatcher,
} from 'react-apollo'
import {InMemoryCache} from 'apollo-cache-inmemory'
import SchemaData from '../data/schema.json'

const filteredData = SchemaData.data.__schema.types.filter(
  type =&gt; type.possibleTypes !== null,
)
const fragmentMatcher = new IntrospectionFragmentMatcher({
  introspectionQueryResultData: {
    __schema: {
      types: filteredData,
    },
  },
})
const cache = new InMemoryCache({fragmentMatcher})
...

const client = new ApolloClient({
  cache,
  networkInterface,
  dataIdFromObject: result =&gt; {
    if (result.uuid &amp;&amp; result.__typename) {
      return result.__typename + result.uuid
    }
    return null
  },
})
</code></pre>
","6144056","","6144056","","2017-10-31 03:28:03","2018-03-31 01:41:53","Graphql react-apollo IntrospectionFragmentMatcher issues","<javascript><reactjs><graphql><react-apollo><apollo-client>","2","0","","",""
"38645808","1","38777419","","2016-07-28 20:07:34","","3","199","<p>I'm trying to update react-router to v2.6 and react-router-relay to v0.7 in my app but I'm struggling to follow the changelogs to address all breaking changes. I think I addressed all changes but I still can't make it work. </p>

<blockquote>
  <p>Warning: [react-router] Location ""/"" did not match any routes</p>
</blockquote>

<p>Here is a step by step guide on what I did to address the changes. First I updated the npm modules. </p>

<p>My previous package.json where everything worked:</p>

<pre><code>""dependencies"": {
    ""babel-polyfill"": ""^6.9.1"",
    ""babel-runtime"": ""^6.9.2"",
    ""graphiql"": ""0.7.3"",
    ""graphql"": ""^0.6.2"",
    ""history"": ""1.13.1"",
    ""isomorphic-fetch"": ""^2.1.1"",
    ""react"": ""^15.2.1"",
    ""react-addons-shallow-compare"": ""^15.2.1"",
    ""react-dom"": ""^15.2.1"",
    ""react-loader"": ""^2.0.0"",
    ""react-relay"": ""^0.9.2"",
    ""react-router"": ""1.0.0-rc3"",
    ""react-router-relay"": ""^0.7.0"",
    ""superagent"": ""^1.2.0""
  },
  ""devDependencies"": {
    ""babel-core"": ""^6.11.4"",
    ""babel-eslint"": ""^6.1.2"",
    ""babel-jest"": ""^13.2.2"",
    ""babel-loader"": ""^6.2.4"",
    ""babel-plugin-add-module-exports"": ""^0.2.1"",
    ""babel-plugin-transform-runtime"": ""^6.9.0"",
    ""babel-preset-es2015"": ""^6.9.0"",
    ""babel-preset-react"": ""^6.11.1"",
    ""babel-preset-stage-0"": ""^6.5.0"",
    ""babel-preset-stage-1"": ""^6.5.0"",
    ""babel-preset-stage-2"": ""^6.11.0"",
    ""babel-relay-plugin"": ""^0.9.2"",
    ""jest-cli"": ""^12.1.1"",
    ""react-addons-test-utils"": ""^15.2.1"",
    ""webpack"": ""^1.13.1""
  },
</code></pre>

<p>My new package.json, where I'm getting errors:</p>

<pre><code>""dependencies"": {
    ""babel-polyfill"": ""^6.9.1"",
    ""babel-runtime"": ""^6.9.2"",
    ""graphiql"": ""0.7.3"",
    ""graphql"": ""^0.6.2"",
    ""isomorphic-fetch"": ""^2.1.1"",
    ""react"": ""^15.2.1"",
    ""react-addons-shallow-compare"": ""^15.2.1"",
    ""react-dom"": ""^15.2.1"",
    ""react-loader"": ""^2.0.0"",
    ""react-relay"": ""^0.9.2"",
    ""react-router"": ""^2.6.0"",
    ""react-router-relay"": ""^0.13.3"",
    ""superagent"": ""^1.2.0""
  },
  ""devDependencies"": {
    ""babel-core"": ""^6.11.4"",
    ""babel-eslint"": ""^6.1.2"",
    ""babel-jest"": ""^14.0.0"",
    ""babel-loader"": ""^6.2.4"",
    ""babel-plugin-add-module-exports"": ""^0.2.1"",
    ""babel-plugin-transform-runtime"": ""^6.9.0"",
    ""babel-preset-es2015"": ""^6.9.0"",
    ""babel-preset-react"": ""^6.11.1"",
    ""babel-preset-stage-0"": ""^6.5.0"",
    ""babel-preset-stage-1"": ""^6.5.0"",
    ""babel-preset-stage-2"": ""^6.11.0"",
    ""babel-relay-plugin"": ""^0.9.2"",
    ""jest-cli"": ""^12.1.1"",
    ""react-addons-test-utils"": ""^15.2.1"",
    ""webpack"": ""^1.13.1""
  },
</code></pre>

<p>I removed the history module because it is now a direct dependency of react-router. Once I installed the latest modules, I reloaded my page and got the following errors:</p>

<p><strong>Error 1:</strong></p>

<blockquote>
  <p>Warning: [react-router] It appears you have provided a deprecated history object to <code>&lt;Router/&gt;</code>, please use a history provided by React Router with <code>import { browserHistory } from 'react-router'</code> or <code>import { hashHistory } from 'react-router'</code>. If you are using a custom history please create it with <code>useRouterHistory</code>, see <a href=""https://github.com/reactjs/react-router/blob/master/upgrade-guides/v2.0.0.md#using-history-with-router"" rel=""nofollow noreferrer"">https://github.com/reactjs/react-router/blob/master/upgrade-guides/v2.0.0.md#using-history-with-router</a> for details.</p>
</blockquote>

<p><strong>Error 2:</strong> </p>

<blockquote>
  <p>Warning: Failed context type: Invalid prop/context <code>relay</code> supplied to <code>Relay(App)</code>, expected <code>undefined</code> to be an object conforming to the <code>RelayEnvironment</code> interface.</p>

<pre><code>in Relay(App) (created by RouterContext)
in RouterContext (created by Router)
in Router
</code></pre>
</blockquote>

<p><strong>Error 3:</strong></p>

<blockquote>
  <p>Warning: Failed context type: Required context <code>route</code> was not specified in <code>Relay(App)</code>.</p>

<pre><code>in Relay(App) (created by RouterContext)
in RouterContext (created by Router)
in Router
</code></pre>
</blockquote>

<p><strong>Error 4:</strong> </p>

<blockquote>
  <p>Uncaught Invariant Violation: RelayContainer: <code>Relay(App)</code> was rendered with invalid Relay context <code>undefined</code>. Make sure the <code>relay</code> property on the React context conforms to the <code>RelayEnvironment</code> interface.</p>
</blockquote>

<p>The first error gives a handy link to the upgrade-guides for react-router, so I followed it and updated my app.js file accordingly. </p>

<p>Before my changes it looked this:</p>

<pre><code>import babelPolyfill from 'babel-polyfill';
import React from 'react';
import ReactDOM from 'react-dom';
import ReactRouterRelay from 'react-router-relay';
import Loader from 'react-loader';
import { Router, Route } from 'react-router';
import createBrowserHistory from 'history/lib/createBrowserHistory';

import WelcomeQueries from './queries/WelcomeQueries';
import AppQueries from './queries/AppQueries';
import LandingQueries from './queries/LandingQueries';

import App from './components/app';
import Landing from './components/landing';

import './relay';

const renderProps = {
  renderLoading: () =&gt; &lt;Loader /&gt;,
};

ReactDOM.render((
  &lt;Router history={createBrowserHistory()} createElement={ReactRouterRelay.createElement}&gt;
    &lt;Route component={App} queries={AppQueries} {...renderProps}&gt;
      &lt;Route path=""/myapp"" component={Landing} queries={LandingQueries} {...renderProps} /&gt;
    &lt;/Route&gt;
    &lt;Route path=""/myapp/tracks"" component={Welcome} queries={WelcomeQueries} {...renderProps}/&gt;
  &lt;/Router&gt;
), document.getElementById('myapp-body'));
</code></pre>

<p><strong>Attempt 1</strong></p>

<p>Using the update guide to 2.x I've changed my app.js file to use a <strong>custom history</strong> like this:</p>

<pre><code>import babelPolyfill from 'babel-polyfill';
import React from 'react';
import ReactDOM from 'react-dom';
import ReactRouterRelay from 'react-router-relay';
import Loader from 'react-loader';

import { Router, Route, useRouterHistory } from 'react-router'
import { createHashHistory } from 'history'

import WelcomeQueries from './queries/WelcomeQueries';
import AppQueries from './queries/AppQueries';
import LandingQueries from './queries/LandingQueries';

import App from './components/app';
import Landing from './components/landing';

import './relay';

const renderProps = {
  renderLoading: () =&gt; &lt;Loader /&gt;,
};

const appHistory = useRouterHistory(createHashHistory)({ queryKey: false })

ReactDOM.render((
  &lt;Router history={appHistory} createElement={ReactRouterRelay.createElement}&gt;
    &lt;Route component={App} queries={AppQueries} {...renderProps}&gt;
      &lt;Route path=""/myapp"" component={Landing} queries={LandingQueries} {...renderProps} /&gt;
    &lt;/Route&gt;
    &lt;Route path=""/myapp/tracks"" component={Welcome} queries={WelcomeQueries} {...renderProps}/&gt;
  &lt;/Router&gt;
), document.getElementById('myapp-body'));
</code></pre>

<p>This then gives me the following error in the browser:</p>

<p><strong>Error 5</strong></p>

<blockquote>
  <p>Warning: [react-router] Location ""/"" did not match any routes</p>
</blockquote>

<p>I believe that is the solution I want.. However I wasn't sure, so I also tried going the <strong>Browser (HTML5 pushState) History</strong> way and tried the following change: </p>

<p><strong>Attempt 2</strong></p>

<pre><code>import babelPolyfill from 'babel-polyfill';
import React from 'react';
import ReactDOM from 'react-dom';
import ReactRouterRelay from 'react-router-relay';
import Loader from 'react-loader';

import { Router, Route, browserHistory } from 'react-router'

import WelcomeQueries from './queries/WelcomeQueries';
import AppQueries from './queries/AppQueries';
import LandingQueries from './queries/LandingQueries';

import App from './components/app';
import Landing from './components/landing';

import './relay';

const renderProps = {
  renderLoading: () =&gt; &lt;Loader /&gt;,
};

const appHistory = useRouterHistory(createHashHistory)({ queryKey: false })

ReactDOM.render((
  &lt;Router history={browserHistory} createElement={ReactRouterRelay.createElement}&gt;
    &lt;Route component={App} queries={AppQueries} {...renderProps}&gt;
      &lt;Route path=""/myapp"" component={Landing} queries={LandingQueries} {...renderProps} /&gt;
    &lt;/Route&gt;
    &lt;Route path=""/myapp/tracks"" component={Welcome} queries={WelcomeQueries} {...renderProps}/&gt;
  &lt;/Router&gt;
), document.getElementById('myapp-body'));
</code></pre>

<p>When loading this, I get back errors 2, 3 and 4. I think Attempt 1 is the correct approach but I don't know what this error means and googling it, gave me tons of answers (<a href=""https://stackoverflow.com/questions/34837138/react-router-location-did-not-match-any-routes"">1</a>, <a href=""https://github.com/reactjs/react-router/issues/2117"" rel=""nofollow noreferrer"">2</a>, which linked me to <a href=""https://github.com/reactjs/react-router/blob/master/upgrade-guides/v1.0.0.md#links"" rel=""nofollow noreferrer"">3</a> and even <a href=""https://github.com/reactjs/react-router/issues/3541"" rel=""nofollow noreferrer"">4</a> with IndexRoute), which I tried but none of the answers worked.</p>

<p>My App.js file looks like this, just for reference:</p>

<pre><code>import React from 'react';
import Relay from 'react-relay';
import Top from './top';

export class App extends React.Component {
  render() {
    return (
      &lt;div&gt;
        &lt;Top viewer={this.props.viewer}/&gt;
        {this.props.children}
      &lt;/div&gt;
    );
  }
}

export default Relay.createContainer(App, {
  fragments: {
    viewer: () =&gt; Relay.QL`
      fragment on Viewer {
        ${Top.getFragment('viewer')}
      }
    `,
  },
});
</code></pre>

<p>I'm not 100% sure if this might be the reason but I know that <a href=""https://github.com/reactjs/react-router/blob/master/CHANGES.md#v200-rc6"" rel=""nofollow noreferrer"">react-router v2.0.0-rc6</a> had a breaking change with the top level Router export being removed but I don't really know what that means for me? Does that I can't use Router anymore? If so, what am I supposed to instead?</p>

<p>After days of research and trial and error, I'm giving up and hope that someone here can help. Any pointers in the right direction would be greatly appreciated.</p>
","1229014","","-1","","2017-05-23 11:44:25","2016-08-04 21:07:17","Update react-router and react-router-relay to v2.x from v1.x (Location ""/"" did not match any routes)","<react-router><react-router-relay>","1","0","2","",""
"43058332","1","","","2017-03-27 23:51:41","","0","269","<p>I'm having real trouble figuring out the way that Graphene Django should be used with react-router-relay. Let's say I can use the following GraphQL query fine via the GraphiQL console on my Django server:</p>

<pre><code>query {
  allThreads {
    edges {
      node {
        id
      }
    }
  }
}
</code></pre>

<p>This is presumably Graphene's alternative to the commmon <code>viewer</code> wrapper used because Relay doesn't support connections on root queries. So I understand that allThreads is really a node (of type ThreadNodeConnection), and has an edges connections that I can query. </p>

<p>The trouble is I can't figure out how to use this with Relay, and specifically react-router-relay. I have a React view with a fragment on it like this (with a child Thread component elsewhere):</p>

<pre><code>fragments: {
      store: () =&gt; Relay.QL`
        fragment on Query {
          allThreads (first:300) {
            edges {
              node {
                // child's fragment included here
              }
            },
          }
        }
      `,
    },
</code></pre>

<p>Webpack checks this against my live schema and likes it. Then I create the following in my index.js for router:</p>

<pre><code>const ViewerQueries = {
  store: () =&gt; Relay.QL`query { allThreads(first:300) }`
};

ReactDOM.render(
  &lt;Router
    forceFetch
    environment={Relay.Store}
    render={applyRouterMiddleware(useRelay)}
    history={browserHistory}
  &gt;
    &lt;Route path='/' component={ThreadList} queries={ViewerQueries} /&gt;
  &lt;/Router&gt;
  , document.getElementById('container')
)
</code></pre>

<p>Already I'm feeling a little unsure because I figure I'm doing ViewerQueries wrong, but it's hard to know because everyone else uses this to accommodate their <code>viewer</code> wrapper on their GraphQL connections, but Graphene has a different wrapper on each connection, so this might only work for my single route, but that's okay for now. Webpack likes it against the schema again. But when I load the page, I get a 'bad request' and the error that:</p>

<blockquote>
  <p>""Fragment F1 cannot be spread here as objects of type
  ThreadNodeConnection can never be of type Query""</p>
</blockquote>

<p>To be honest, that's about where I couldn't proceed, because I'm clearly not understanding something about either how Graphene Django constructs the schema, or how the GraphQL fragments should be written, or how the Route query should be written. Trouble is I can't figure out which of these things is wrong, and there don't seem to be any resources out there around people using these particular combinations of technologies. </p>

<p>For completeness, my Graphene Django schema setup is (slightly simplified):</p>

<p>project/threads/schema.py:</p>

<pre><code>class ThreadNode(DjangoObjectType):
    class Meta:
        model = Thread
        interfaces = (relay.Node, )

...

class Query(graphene.AbstractType):
    all_threads = DjangoFilterConnectionField(ThreadNode)
    thread = relay.Node.Field(ThreadNode, id=graphene.Int())

    def resolve_all_threads(self, args, context, info):
        return Thread.objects.select_related('author__profile').all()

    def resolve_thread(self, args, context, info):
        id = args.get('id')

        if id is not None:
            return Thread.objects.get(pk=id)

        return None
</code></pre>

<p>project/schema.py:</p>

<pre><code>class Query(project.threads.schema.Query, graphene.ObjectType):
    pass

schema = graphene.Schema(query=Query)
</code></pre>

<p>If anyone has used this particular combination before and has any advice, that'd be amazing.</p>
","850947","","2030321","","2017-04-05 08:42:42","2017-06-05 23:00:20","Graphene Django and react-router-relay","<django><relay><graphene-python><react-router-relay>","1","3","","",""
"33932997","1","","","2015-11-26 07:40:45","","2","2004","<p>I want to use this module <a href=""https://github.com/nucleartux/react-native-date"" rel=""nofollow"">https://github.com/nucleartux/react-native-date</a> for react-native. I trying to install this module, but when I do step 4 (Register React Package) I have an error with build.
Error message: </p>

<blockquote>
  <p>MainActivity.java:31: error: incompatible types: MainActivity cannot be converted to FragmentActivity
  .addPackage(new ReactDatePackage(this))
                                                   ^
  Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
  1 error<br>
  :app:compileDebugJavaWithJavac FAILED<br>
  * What went wrong:
  Execution failed for task ':app:compileDebugJavaWithJavac'.
  Compilation failed.</p>
</blockquote>

<p>Code with error:</p>

<pre><code>package com.myapp;

import android.app.Activity;
import android.os.Bundle;
import android.view.KeyEvent;

import com.facebook.react.LifecycleState;
import com.facebook.react.ReactInstanceManager;
import com.facebook.react.ReactRootView;
import com.facebook.react.modules.core.DefaultHardwareBackBtnHandler;
import com.facebook.react.shell.MainReactPackage;
import com.facebook.soloader.SoLoader;

import me.nucleartux.date.ReactDatePackage;
import android.support.v4.app.FragmentActivity;

public class MainActivity extends Activity implements

DefaultHardwareBackBtnHandler {

private ReactInstanceManager mReactInstanceManager;
private ReactRootView mReactRootView;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mReactRootView = new ReactRootView(this);

    mReactInstanceManager = ReactInstanceManager.builder()
            .setApplication(getApplication())
            .setBundleAssetName(""index.android.bundle"")
            .setJSMainModuleName(""index.android"")
            .addPackage(new MainReactPackage())
            .addPackage(new ReactDatePackage(this))
            .setUseDeveloperSupport(BuildConfig.DEBUG)
            .setInitialLifecycleState(LifecycleState.RESUMED)
            .build();

    mReactRootView.startReactApplication(mReactInstanceManager, ""myapp"", null);

    setContentView(mReactRootView);
}

@Override
public boolean onKeyUp(int keyCode, KeyEvent event) {
    if (keyCode == KeyEvent.KEYCODE_MENU &amp;&amp; mReactInstanceManager != null) {
        mReactInstanceManager.showDevOptionsDialog();
        return true;
    }
    return super.onKeyUp(keyCode, event);
}

@Override
public void onBackPressed() {
  if (mReactInstanceManager != null) {
    mReactInstanceManager.onBackPressed();
  } else {
    super.onBackPressed();
  }
}

@Override
public void invokeDefaultOnBackPressed() {
  super.onBackPressed();
}

@Override
protected void onPause() {
    super.onPause();

    if (mReactInstanceManager != null) {
        mReactInstanceManager.onPause();
    }
}

@Override
protected void onResume() {
    super.onResume();

    if (mReactInstanceManager != null) {
        mReactInstanceManager.onResume(this);
    }
}
}
</code></pre>

<p>Can you help me to fix this problem, please?</p>
","5334001","","5334001","","2015-11-26 10:18:50","2015-11-28 15:34:08","error: incompatible types: MainActivity cannot be converted to FragmentActivity .addPackage(new ReactDatePackage(this))","<javascript><java><android><react-native>","1","0","","",""
"42988052","1","42988257","","2017-03-23 22:21:27","","0","486","<p>I'm playing with react-native / redux and am dispatching an action that is supposed to display a number yet an error gets thrown:</p>

<blockquote>
  <p>Unhandled JS Exception: Objects are not valid as a React child (found:
  object with keys {type, payload}). If you meant to render a collection
  of children, use an array instead or wrap the object using
  createFragment(object) from the React add-ons. Check the render method
  of <code>Text</code>.</p>
</blockquote>

<p>createStore.js</p>

<pre><code>import { createStore, applyMiddleware, combineReducers } from 'redux';
import createLogger from 'redux-logger';
import numReducer from './reducers/numReducer';

const logger = createLogger();

export default (initialState = {}) =&gt; (
  createStore(
    combineReducers({
      numbers: numReducer
    }),
    initialState,
    applyMiddleware(logger)
  )
);
</code></pre>

<p>App.js</p>

<pre><code>import React from 'react';
import { Provider } from 'react-redux';
import HomeScreen from './components/HomeScreen';
import createStore from './createStore';

const store = createStore();

export default () =&gt; (
  &lt;Provider store={store}&gt;
    &lt;HomeScreen /&gt;
  &lt;/Provider&gt;
);
</code></pre>

<p>numReducer.js</p>

<pre><code>import { LIST_NUMBERS, PICK_NUMBER } from '../actions/actionTypes';

export default (state = [], action = {}) =&gt; {
  switch (action.type) {
    case LIST_NUMBERS:
      return action.payload || [];
    case PICK_NUMBER:
      return action.payload;
    default:
      return state;
  }
};
</code></pre>

<p>HomeScreen.js</p>

<pre><code>import React from 'react';
import { View } from 'react-native';
import NavContainer from '../containers/NavContainer';


const HomeScreen = () =&gt; (
  &lt;View&gt;
    &lt;NavContainer /&gt;
  &lt;/View&gt;
);

export default HomeScreen;
</code></pre>

<p>NavContainer.js</p>

<pre><code>import { bindActionCreators } from 'redux';
import { connect } from 'react-redux';

import { listNumbers, pickNumber } from '../actions/numberActions';

import Nav from '../components/Nav';

const mapStateToProps = state =&gt; ({
  numbers: state.numbers
});

const mapDispatchToProps = dispatch =&gt; (
  bindActionCreators({
    listNumbers,
    pickNumber
  }, dispatch)
);

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(Nav);
</code></pre>

<p>Nav.js</p>

<pre><code>import React, { Component, PropTypes } from 'react';
import { View, Text } from 'react-native';


export default class Nav extends Component {

  render() {
    return (
      &lt;View&gt;
        &lt;Text&gt;FirstLine&lt;/Text&gt;
        &lt;Text&gt;SecondLind&lt;/Text&gt;
        &lt;Text&gt;Number: {this.props.pickNumber(3)}&lt;/Text&gt;
      &lt;/View&gt;
    );
  }

}
</code></pre>

<p>Please advise what I am doing wrong. Thank you</p>
","1945363","","1945363","","2017-03-23 22:29:47","2017-03-23 22:49:27","react-native / redux - action not working?","<react-native><redux>","1","0","","",""
"51197609","1","","","2018-07-05 18:14:39","","-1","32","<p>hi im working with reactjs and for some reasons i need to transform this button</p>

<pre><code>          &lt;div className=""main-toolbar__actions""&gt;
            &lt;a className=""btn btn-default""&gt;{t('generic.Cancel')}&lt;/a&gt;
            &lt;a
              className=""btn btn-primary regular-green""
              onKeyPress={() =&gt; {}}
              role=""button""
              tabIndex={0}
              onClick={this.save}
            &gt;
              {t('generic.Next')}
            &lt;/a&gt;
          &lt;/div&gt;

save = () =&gt; {
 const {
  match: {
    params: { claimid },
  },
  setBasicToClaim,
} = this.props
setBasicToClaim(claimid, { ...this.state })}
</code></pre>

<p>To this this one</p>

<pre><code>setToolBarInfo({
  image: 'https://images-cdn.9gag.com/photo/aXvYNN2_700b.jpg',
  title: 'New Client',
  subtitle: '',
  details: [
    &lt;Fragment&gt;
      {t('generic.Created')}: &lt;strong&gt;Jun 30, 2018&lt;/strong&gt;,
    &lt;/Fragment&gt;,
    &lt;Fragment&gt;
      {t('generic.By')}: &lt;strong&gt;Samuel Jackson&lt;/strong&gt;
    &lt;/Fragment&gt;,
  ],
  buttons: [
    {
      // icon: 'group_work',
      label: 'Cancel',
      className: 'btn btn-default', // 'btn btn-primary regular-green',
      func: row =&gt; {
        console.log('ClientNew &gt;&gt; row_1: ', row)
      },
    },
    {
      // icon: 'more_horiz',
      label: 'Next',
      className: 'btn btn-primary regular-green',
      func: row =&gt; {
        console.log('ClientNew &gt;&gt; row_2: ', row)
      },
    },
  ],
})
</code></pre>

<p>since i can already render the button what i need more than anything is to implement the function ""save"" to the second example, on to the ""Next"" button, so if anyone could help me i would be grateful</p>
","8485597","","8485597","","2018-07-05 18:48:01","2018-07-05 18:48:01","how transform this button into this other? react js","<javascript><reactjs><react-redux>","0","0","","",""
"51305514","1","","","2018-07-12 12:17:17","","0","43","<p>I have the following component that makes a form and use formik for form validation and has a custom input field created with react-places-autocomplete for entering an address to the form. the form is working fine, However the validation is not showing even though the address field is required, When I make it empty the error validation from formik is not showing. </p>

<p>Below is the code for the components:</p>

<pre><code>//FormikErrorLabel component

import React from 'react';

const FormikErrorLabel = ({ error, children, ...props }) =&gt; {
    return &lt;label {...props}&gt;{children}&lt;/label&gt;
}
export default FormikErrorLabel;

//FormikErrorLabel component

import React from 'react';

const FormikInputFeedback = ({ children }) =&gt; (
    &lt;span className=""text-danger""&gt;{children}&lt;/span&gt;
)

export default FormikInputFeedback;

//FormikPlacesAutoComplete custom input places auto complete component with formik validation

import React, { Component } from ""react"";
    import classnames from ""classnames"";
    import FormikErrorLabel from ""./FormikErrorLabel"";
    import FormikInputFeedback from ""./FormikInputFeedback"";
    import apiKey from ""../../configureMap"";
    import Script from ""react-load-script"";
    import PlacesAutocomplete, {
      geocodeByAddress,
      getLatLng
    } from ""react-places-autocomplete"";


    const styles = {
        autocompleteContainer:{
            zIndex:1000
        }
    }
    class FormikPlacesAutoComplete extends Component {
      constructor(props) {
        super(props);
        this.state = { 
            address: '',
            scriptLoaded:false
        };
      }

      handleScriptLoad = () =&gt; {
        this.setState({scriptLoaded:true});
      };

      handleChange = address =&gt; {
        this.setState(()=&gt;{
            this.props.form.setFieldValue('coordinates',address)
            return {address};
        });
      };

      handleSelect = address =&gt; {

              geocodeByAddress(address)
                .then(results =&gt; getLatLng(results[0]))
                .then(latLng =&gt; {
                    console.log('Success', latLng);
                    this.setState(()=&gt;{
                        this.props.form.setFieldValue('coordinates',address)
                        return {address};
                    });
                })
                .catch(error =&gt; console.error('Error', error));

      };

      render() {
        const {
          field: { name, ...field }, // { name, value, onChange, onBlur }
          form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.
          className,
          label,
          ...props
        } = this.props;

        const error = errors[name];
        const touch = touched[name];
        const classes = classnames(
          ""form-group"",
          {
            ""animated shake error"": !!error
          },
          className
        );

        console.log(""props"", props);
        return (
          &lt;React.Fragment&gt;
            &lt;Script
              url={`https://maps.googleapis.com/maps/api/js?key=${apiKey}&amp;libraries=places`}
              onLoad={this.handleScriptLoad}
            /&gt;
            { this.state.scriptLoaded &amp;&amp;
                &lt;div className={classes}&gt;
                    &lt;FormikErrorLabel htmlFor={name} error={error}&gt;
                        {label}
                    &lt;/FormikErrorLabel&gt;

                    &lt;PlacesAutocomplete
                        name={name}
                        id={name}

                        {...field}
                        {...props}
                        // onChange={(selectValue) =&gt; this.setState(() =&gt; {
                        //     this.props.form.setFieldValue('categories',selectValue)
                        //     return { selectValue } 
                        // })}

                        value={this.state.address}
                        onChange={this.handleChange}
                        onSelect={this.handleSelect}
                        // className=""form-control""
                    &gt;
                        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) =&gt; (
                        &lt;div&gt;
                            &lt;input
                            {...getInputProps({
                                placeholder: 'Search Places ...',
                                className: 'location-search-input form-control',
                            })}
                            /&gt;
                            &lt;div className=""autocomplete-dropdown-container""&gt;
                            {loading &amp;&amp; &lt;div&gt;Loading...&lt;/div&gt;}
                            {suggestions.map(suggestion =&gt; {
                                const className = suggestion.active
                                ? 'suggestion-item--active'
                                : 'suggestion-item';
                                // inline style for demonstration purpose
                                const style = suggestion.active
                                ? { backgroundColor: '#fafafa', cursor: 'pointer' }
                                : { backgroundColor: '#ffffff', cursor: 'pointer' };
                                return (
                                &lt;div
                                    {...getSuggestionItemProps(suggestion, {
                                    className,
                                    style,
                                    })}
                                &gt;
                                    &lt;span&gt;{suggestion.description}&lt;/span&gt;
                                &lt;/div&gt;
                                );
                            })}
                            &lt;/div&gt;
                        &lt;/div&gt;
                        )}
                    &lt;/PlacesAutocomplete&gt;

                    {touch &amp;&amp; error &amp;&amp; &lt;FormikInputFeedback&gt;{error}&lt;/FormikInputFeedback&gt;}
                &lt;/div&gt;
            }
          &lt;/React.Fragment&gt;
        );
      }
    }

    export default FormikPlacesAutoComplete;




//Form component 
import React, { Component } from ""react"";
import PropTypes from ""prop-types"";
import { bindActionCreators } from ""redux"";
import { connect } from ""react-redux"";
import { actions as locationActions } from ""../../duckes/locations"";
import { getElementByID } from ""../../utils"";
import toastr from ""toastr"";
import { Formik, Form, Field } from 'formik'
import { object, string, array } from 'yup';
import isEmpty from 'lodash/isEmpty'
import FormikTextInput from ""../common/FormikTextInput"";
import FormikSelectInput from ""../common/FormikSelectInput"";
import FormikPlacesAutoComplete from ""../common/FormikPlacesAutoComplete"";

class ManageLocationPage extends Component {


  render() {

    })
    return (

      &lt;Formik

          validationSchema={object().shape({

            coordinates: string()
              .required('Coordinates is required.')
          })}

          initialValues={
              {...this.props.location }
          }

          onSubmit={(values, actions) =&gt; {
            console.log('form values:',values)
          }}

          render={({errors, dirty, isSubmitting, values, setFieldValue}) =&gt; (
            &lt;Form&gt;
              &lt;h3 className=""my-5 text-capitalize""&gt;Manage Location&lt;/h3&gt;

              &lt;Field
                type=""text""
                name=""coordinates""
                label=""Coordinates""
                component={FormikPlacesAutoComplete}
              /&gt;

              &lt;button
                type=""submit""
                className=""btn btn-default""
                disabled={isSubmitting || !isEmpty(errors) || !dirty}
              &gt;
                Save
              &lt;/button&gt;
            &lt;/Form&gt;
          )}

        /&gt;
    );
  }
}

//Prop Types validation
ManageLocationPage.propTypes = {
  location: PropTypes.object.isRequired,
  categories: PropTypes.array.isRequired,
  actions: PropTypes.object.isRequired
};

//Redux connect
const mapStateToProps = ({ locations, categories }, ownProps) =&gt; {
  let location = {
   ...
    coordinates: """"
  };
  return {
    location: getElementByID(....) || location,

  };
};

const mapDispatchToProps = dispatch =&gt; {
  return {
    actions: bindActionCreators(locationActions, dispatch)
  };
};

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(ManageLocationPage);
</code></pre>

<p>My code is based on <a href=""https://github.com/hibiken/react-places-autocomplete"" rel=""nofollow noreferrer"">react-places-autocomplete</a> example, And this <a href=""https://keyholesoftware.com/2017/10/23/the-joy-of-forms-with-react-and-formik/"" rel=""nofollow noreferrer"">article</a>.</p>

<p>How to make the formik validation errors to show?</p>

<p>It seems that there is something that maybe I am missing about formik validation,
When I clear the address field in the GUI and debug my FormikPlacesAutoComplete onChange handler:</p>

<ol>
<li>handleChange = address => {</li>
<li>this.setState(()=>{</li>
<li>this.props.form.setFieldValue('address',address);</li>
<li>this.props.form.setFieldValue('latLng',{lat:null,lng:null})</li>
<li>return {address};</li>
<li>});</li>
<li>};</li>
</ol>

<p>I see that after the lines 3,4 when I check the form values in the debugger log:
this.props.form.values.address = ""AZ, USA"" (instead of """" )</p>

<p>this.props.form.values.latLng = {lat: 34.0489281, lng: -111.09373110000001}  (instead of {lat: null, lng: null} )</p>

<p>Formik doesn't react after lines 3,4 maybe I didn't completely understandd how  this.props.form.setFieldValue works, 
I thought setFieldValue  will trigger the validation, I will further investigate.</p>
","6261230","","6261230","","2018-07-20 16:27:08","2018-07-20 16:27:08","Formik validation not working for my custom react-places-autocomplete component","<reactjs><googleplacesautocomplete><formik>","0","0","","",""
"51341027","1","51341273","","2018-07-14 15:53:17","","0","26","<p>I try to adapt this <a href=""https://www.w3schools.com/howto/howto_js_tabs.asp"" rel=""nofollow noreferrer"">tabs</a> to react.
The idea is to add active class for the key clicked with handleclick function</p>

<pre><code>class Tabs extends React.Component {
  constructor(props) {
    super(props);
    this.state = { selected: 0 };
    this.handleClick = this.handleClick.bind(this);
  }

  handleClick(key, event) {
    event.preventDefault();
    this.setState({
      selected: key
    });
  }
  render() {
    var activeClass = this.state.selected === this.props.key ? ""active"" : """";
    return (
      &lt;React.Fragment&gt;
        &lt;div class=""tab""&gt;
          &lt;button
            key=""1""
            className={""tablinks"" + activeClass}
            onClick={this.handleClick}
          &gt;
            London
          &lt;/button&gt;
          &lt;button
            key=""2""
            className={""tablinks"" + activeClass}
            onClick={this.handleClick}
          &gt;
            Paris
          &lt;/button&gt;
          &lt;button
            key=""3""
            className={""tablinks"" + activeClass}
            onClick={this.handleClick}
          &gt;
            Tokyo
          &lt;/button&gt;
        &lt;/div&gt;
        &lt;div key=""1"" className={""tabcontent"" + activeClass}&gt;
          &lt;h3&gt;London&lt;/h3&gt;
          &lt;p&gt;London is the capital city of England.&lt;/p&gt;
        &lt;/div&gt;

        &lt;div key=""2"" className={""tabcontent"" + activeClass}&gt;
          &lt;h3&gt;Paris&lt;/h3&gt;
          &lt;p&gt;Paris is the capital of France.&lt;/p&gt;
        &lt;/div&gt;

        &lt;div key=""3"" className={""tabcontent"" + activeClass}&gt;
          &lt;h3&gt;Tokyo&lt;/h3&gt;
          &lt;p&gt;Tokyo is the capital of Japan.&lt;/p&gt;
        &lt;/div&gt;
      &lt;/React.Fragment&gt;
    );
  }
}

ReactDOM.render(&lt;Tabs /&gt;, document.querySelector("".container""));
</code></pre>

<p>but I get two errors:</p>

<p>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of <code>Tabs</code>.</p>

<p>and</p>

<p>Uncaught Error: Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. Check the render method of <code>Tabs</code>.</p>

<p>here is the <a href=""https://jsfiddle.net/7ebzkv53/6/"" rel=""nofollow noreferrer"">jsfiddle link</a> </p>
","10081393","","3617886","","2018-07-14 15:56:19","2018-07-14 16:41:36","react createElement and invariant errors","<javascript><reactjs>","2","0","","",""
"34512794","1","34513205","","2015-12-29 14:10:30","","6","1025","<p>First of all I'm totally new to react so I'm not sure if my code is already written the ""react way"".</p>

<p>So far I've created a couple of react classes which render a Bootstrap Modal. To set the initial states I call an Ajax function within the <code>componentsDidMount</code> function. This works fine until I try to insert plain HTML into the modal body.</p>

<p>The server request works fine and I get plain HTML code in my <code>this.state.data.content</code> but if I try to insert this into the modal body I receive following error:</p>

<blockquote>
  <p>Error: Invariant Violation: Objects are not valid as a React child (found: object with keys {__html}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons.</p>
</blockquote>

<p>Does anyone know how to fix this? Am I even doing the right thing here?</p>

<p>Thanks!</p>

<pre><code>&lt;script type=""text/babel""&gt;

    var Modal = ReactBootstrap.Modal;
    var Button = ReactBootstrap.Button;
    var ButtonToolbar = ReactBootstrap.ButtonToolbar;


    var L5fmHeaderButton = React.createClass({

        render: function() {
            var iconClass = ""glyphicon "" + this.props.buttonIcon;
            return(
                &lt;button onClick={this.props.onClick} className=""lfm-Modal-Button""&gt;
                    &lt;span className={iconClass} aria-hidden=""true""&gt;&lt;/span&gt;&amp;nbsp;
                    {this.props.buttonText}
                &lt;/button&gt;
            );
        }
    });

    var L5fmModalBody = React.createClass({

        rawMarkup: function() {
            return { __html: this.props.content };
        },

        render: function() {

            return(
                &lt;Modal.Body&gt;
                    dangerouslySetInnerHTML={this.rawMarkup()}
                &lt;/Modal.Body&gt;
            );
        }

    });

    var L5fmModal = React.createClass({

        getInitialState : function() {
            return {
                data : []
            };
        },

        componentDidMount: function() {
            $.ajax({
                url: 'L5fm/setInitialState',
                dataType: 'json',
                cache: false,
                success: function(data) {
                    this.setState({data: data});
                    console.log(data);
                    console.log(this.state.data);
                }.bind(this),
                error: function(xhr, status, err) {
                    console.error(this.props.url, status, err.toString());
                }.bind(this)
            });
        },

        changeDirectory : function() {
            if (this.state.privateDir) {
                this.setState({privateDir: false});
            }
            else {
                this.setState({privateDir: true});
            }
        },

        render: function() {

            if(this.state.data.privateDir) {
                var browseIcon = ""glyphicon-folder-open"";
                var browseText = ""browse all files"";
            }
            else {
                var browseIcon = ""glyphicon-briefcase"";
                var browseText = ""browse private files"";
            }

            return(

                &lt;Modal {...this.props} bsSize=""large"" aria-labelledby=""contained-modal-title-lg""&gt;
                    &lt;Modal.Header closeButton&gt;
                        &lt;div className=""header-button-group""&gt;
                            &lt;L5fmHeaderButton buttonIcon=""glyphicon-cloud-upload"" buttonText=""upload"" /&gt;
                            &lt;L5fmHeaderButton buttonIcon=""glyphicon-list"" buttonText=""list View"" /&gt;
                            &lt;L5fmHeaderButton onClick={this.changeDirectory} buttonIcon={browseIcon} buttonText={browseText} /&gt;
                        &lt;/div&gt;
                &lt;/Modal.Header&gt;
                    &lt;L5fmModalBody content={this.state.data.content}/&gt;
                &lt;/Modal&gt;
            );
        }

    });


    var App = React.createClass({
        getInitialState: function() {
            return { lgShow: false };
        },
        render: function() {
            let lgClose = () =&gt; this.setState({ lgShow: false });

            return (
                    &lt;ButtonToolbar&gt;
                       &lt;Button bsStyle=""primary"" onClick={()=&gt;this.setState({ lgShow: true })}&gt;
                           Launch large demo modal
                       &lt;/Button&gt;

                       &lt;L5fmModal show={this.state.lgShow} onHide={lgClose} /&gt;
                    &lt;/ButtonToolbar&gt;
            );
        }
    });

    ReactDOM.render(&lt;App /&gt;, document.getElementById(""modal""));

&lt;/script&gt;
</code></pre>
","4263513","","","","","2015-12-29 14:35:35","reactjs and rendering plain HTML","<javascript><ajax><reactjs>","1","2","","",""
"43690916","1","43756607","","2017-04-29 01:26:31","","2","836","<p>I've ejected from the default <a href=""https://github.com/facebookincubator/create-react-app"" rel=""nofollow noreferrer"">create-react-app</a> project and am attempting to create a second, <code>maintenance.html</code> page that Webpack can inject into as it does by default with <code>public/index.html</code>. I've read through a number of issues; and the docs for HtmlWebpackPlugin, which states it should be as easy as:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>to this:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  filename: '/public/maintenance.html',
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>I keep getting the following error when I want to convert vars like <code>%PUBLIC_URL%</code> to their actual value:</p>

<p><code>URIError: Failed to decode param '/%PUBLIC_URL%/scripts/modernizr.custom.js'</code></p>

<ul>
<li>even though they work fine in <code>public/index.html</code>. Any ideas what I'm doing wrong? I've made sure I don't have any rules setup to do anything else with <code>.html</code> files; as I've seen a few people get mixed up there. Have been messing around with the settings and combing through GitHub issues, but feel like I'm running in circles. Thanks!</li>
</ul>

<p>Here's the current <code>webpack.config.dev.js</code> file:</p>

<pre><code>/* THIS FILE HAS BEEN EDITED A BIT FROM https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/config/webpack.config.dev.js */

const autoprefixer = require('autoprefixer');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');
const InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');
const WatchMissingNodeModulesPlugin = require('react-dev-utils/WatchMissingNodeModulesPlugin');
const getClientEnvironment = require('./env');
const paths = require('./paths');

// Custom
const cssnano = require('cssnano');
const flexbugs = require('postcss-flexbugs-fixes');
const svgFragments = require('postcss-svg-fragments');

const fs = require('fs');

// Don't show deprecations
process.noDeprecation = true;

// @remove-on-eject-begin
// `path` is not used after eject - see https://github.com/facebookincubator/create-react-app/issues/1174
const path = require('path');
// @remove-on-eject-end

// Webpack uses `publicPath` to determine where the app is being served from.
// In development, we always serve from the root. This makes config easier.
const publicPath = '/';
// `publicUrl` is just like `publicPath`, but we will provide it to our app
// as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.
// Omit trailing slash as %PUBLIC_PATH%/xyz looks better than %PUBLIC_PATH%xyz.
const publicUrl = '';
// Get environment variables to inject into our app.
const env = getClientEnvironment(publicUrl);
// Get environment object passed down to HTML template
const envObject = env.raw;
// Read SVG sprite
const svgSprite = fs.readFileSync(`${paths.appPublic}/images/sprite.svg`, 'utf8');
// Add SVG output to variable object passed to HTML template
envObject.SVG_SPRITE = svgSprite;

// This is the development configuration.
// It is focused on developer experience and fast rebuilds.
// The production configuration is different and lives in a separate file.
module.exports = {
  /// You may want 'eval' instead if you prefer to see the compiled output in DevTools.
  // See the discussion in https://github.com/facebookincubator/create-react-app/issues/343.
  devtool: 'eval',
  // These are the ""entry points"" to our application.
  // This means they will be the ""root"" imports that are included in JS bundle.
  // The first two entry points enable ""hot"" CSS and auto-refreshes for JS.
  entry: [
    // Include an alternative client for WebpackDevServer. A client's job is to
    // connect to WebpackDevServer by a socket and get notified about changes.
    // When you save a file, the client will either apply hot updates (in case
    // of CSS changes), or refresh the page (in case of JS changes). When you
    // make a syntax error, this client will display a syntax error overlay.
    // Note: instead of the default WebpackDevServer client, we use a custom one
    // to bring better experience for Create React App users. You can replace
    // the line below with these two lines if you prefer the stock client:
    // require.resolve('webpack-dev-server/client') + '?/',
    // require.resolve('webpack/hot/dev-server'),
    require.resolve('react-dev-utils/webpackHotDevClient'),
    // Polyfills
    require.resolve('./polyfills'),
    // Finally, this is your app's code:
    paths.appIndexJs,
    // We include the app code last so that if there is a runtime error during
    // initialization, it doesn't blow up the WebpackDevServer client, and
    // changing JS code would still trigger a refresh.
  ],
  output: {
    // Next line is not used in dev but WebpackDevServer crashes without it:
    path: paths.appBuild,
    // Add /* filename */ comments to generated require()s in the output.
    pathinfo: true,
    // This does not produce a real file. It's just the virtual path that is
    // served by WebpackDevServer in development. This is the JS bundle
    // containing code from all our entry points, and the Webpack runtime.
    filename: 'static/js/bundle.js',
    // This is the URL that app is served from. We use ""/"" in development.
    publicPath: publicPath,
  },
  externals: {
    gsap: 'TweenMax',
  },
  resolve: {
    // This allows you to set a fallback for where Webpack should look for modules.
    // We read `NODE_PATH` environment variable in `paths.js` and pass paths here.
    // We placed these paths second because we want `node_modules` to ""win""
    // if there are any conflicts. This matches Node resolution mechanism.
    // https://github.com/facebookincubator/create-react-app/issues/253
    modules: ['node_modules'].concat(paths.nodePaths),
    // These are the reasonable defaults supported by the Node ecosystem.
    // We also include JSX as a common component filename extension to support
    // some tools, although we do not recommend using it, see:
    // https://github.com/facebookincubator/create-react-app/issues/290
    extensions: ['.js', '.json', '.jsx'],
    alias: {
      react: path.resolve('./node_modules/react'),
      // Support React Native Web
      // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/
      'react-native': 'react-native-web',
    },
  },
  // @remove-on-eject-begin
  // Resolve loaders (webpack plugins for CSS, images, transpilation) from the
  // directory of `react-scripts` itself rather than the project directory.
  resolveLoader: {
    modules: [
      // Lerna hoists everything, so we need to look in our app directory
      paths.appNodeModules,
    ],
  },
  module: {
    rules: [
      // Disable require.ensure as it's not a standard language feature.
      { parser: { requireEnsure: false } },
      {
        test: /\.(js|jsx)$/,
        enforce: 'pre',
        use: [
          {
            // @remove-on-eject-end
            loader: 'eslint-loader',
          },
        ],
        include: paths.appSrc,
      },
      // ** ADDING/UPDATING LOADERS **
      // The ""url"" loader handles all assets unless explicitly excluded.
      // The `exclude` list *must* be updated with every change to loader extensions.
      // When adding a new loader, you must add its `test`
      // as a new entry in the `exclude` list for ""url"" loader.

      // ""file"" loader makes sure those assets get served by WebpackDevServer.
      // When you `import` an asset, you get its (virtual) filename.
      // In production, they would get copied to the `build` folder.
      {
        test: /\.(ico|jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)(\?.*)?$/,
        loader: 'file-loader',
        options: {
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // ""url"" loader works like ""file"" loader except that it embeds assets
      // smaller than specified limit in bytes as data URLs to avoid requests.
      // A missing `test` is equivalent to a match.
      {
        test: /\.(mp4|webm|wav|mp3|m4a|aac|oga)(\?.*)?$/,
        loader: 'url-loader',
        options: {
          limit: 10000,
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // Process JS with Babel.
      {
        test: /\.(js|jsx)$/,
        include: paths.appSrc,
        loader: 'babel-loader',
        options: {
          // @remove-on-eject-end
          // This is a feature of `babel-loader` for webpack (not Babel itself).
          // It enables caching results in ./node_modules/.cache/babel-loader/
          // directory for faster rebuilds.
          cacheDirectory: true,
        },
      },
      {
        test: /\.less$/,
        use: [
          {
            loader: 'style-loader',
          },
          {
            loader: 'css-loader',
            options: {
              sourceMap: true,
            }
          },
          {
            loader: 'postcss-loader',
            options: {
              sourceMap: true,
              ident: 'postcss', // https://webpack.js.org/guides/migrating/#complex-options
              plugins: () =&gt; [
                autoprefixer({
                  browsers: [
                    '&gt;2%',
                    'last 2 versions',
                    'not ie &lt; 11',
                  ],
                  cascade: false,
                }),
                cssnano({
                  discardUnused: false,
                  zindex: false,
                  reduceIdents: false,
                  mergeIdents: false,
                }),
                flexbugs(),
                svgFragments(),
              ],
            },
          },
          {
            loader: 'less-loader',
            options: {
              sourceMap: true,
            }
          },
        ],
      },
    ],
  },
  plugins: [
    // Makes some environment variables available in index.html.
    // The public URL is available as %PUBLIC_URL% in index.html, e.g.:
    // &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
    // In development, this will be an empty string.
    new InterpolateHtmlPlugin(envObject),
    // Generates an `index.html` file with the &lt;script&gt; injected.
    new HtmlWebpackPlugin({
      inject: true,
      template: paths.appHtml,
      minify: {
        minifyCSS: true,
      },
    }),
    // Makes some environment variables available to the JS code, for example:
    // if (process.env.NODE_ENV === 'development') { ... }. See `./env.js`.
    new webpack.DefinePlugin(env.stringified),
    // This is necessary to emit hot updates (currently CSS only):
    new webpack.HotModuleReplacementPlugin(),
    // Watcher doesn't work well if you mistype casing in a path so we use
    // a plugin that prints an error when you attempt to do this.
    // See https://github.com/facebookincubator/create-react-app/issues/240
    new CaseSensitivePathsPlugin(),
    // If you require a missing module and then `npm install` it, you still have
    // to restart the development server for Webpack to discover it. This plugin
    // makes the discovery automatic so you don't have to restart.
    // See https://github.com/facebookincubator/create-react-app/issues/186
    new WatchMissingNodeModulesPlugin(paths.appNodeModules),
  ],
  // Some libraries import Node modules but don't use them in the browser.
  // Tell Webpack to provide empty mocks for them so importing them works.
  node: {
    fs: 'empty',
    net: 'empty',
    tls: 'empty',
  },
  // Turn off performance hints during development because we don't do any
  // splitting or minification in interest of speed. These warnings become
  // cumbersome.
  performance: {
    hints: false,
  },
};
</code></pre>

<p>Here's the HTML of <code>public/index.html</code></p>

<pre><code>&lt;!doctype html&gt;
&lt;html lang=""en""&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" /&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt;
    &lt;meta name=""theme-color"" content=""#ffffff""&gt;
    &lt;meta name=""apple-mobile-web-app-capable"" content=""yes""&gt;
    &lt;meta name=""format-detection"" content=""telephone=no""&gt;
    &lt;link id=""js-favicon"" rel=""icon"" type=""image/png"" href=""%PUBLIC_URL%/favicon-32x32.png"" sizes=""32x32""&gt;
    &lt;link rel=""manifest"" href=""%PUBLIC_URL%/manifest.json""&gt;
    &lt;link rel=""apple-touch-icon"" sizes=""180x180"" href=""%PUBLIC_URL%/apple-touch-icon.png""&gt;
    &lt;link rel=""mask-icon"" href=""%PUBLIC_URL%/safari-pinned-tab.svg"" color=""#0081c6""&gt;

    &lt;script src=""%PUBLIC_URL%/scripts/modernizr.custom.js""&gt;&lt;/script&gt;
    &lt;title&gt;&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;!-- SVG sprite --&gt;
    &lt;div style=""border: 0px; clip: rect(0px 0px 0px 0px); height: 0px; overflow: hidden; padding: 0px; position: absolute; width: 0px;""&gt;%SVG_SPRITE%&lt;/div&gt;
    &lt;div id=""app"" style=""overflow: hidden;""&gt;&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>I've also tried just duplicating this over to <code>public/maintenance.html</code> with no luck.</p>
","1026742","","1026742","","2017-05-02 19:07:08","2017-05-03 10:53:58","Additional HtmlWebpackPlugin() pages with create-react-app","<reactjs><webpack>","1","8","","",""
"51312071","1","51312148","","2018-07-12 18:13:05","","1","14","<p>I trying to add new button which would add new tabs
I'm using <a href=""https://github.com/reactjs/react-tabs"" rel=""nofollow noreferrer"">react-tabs</a>
which build tabs like this</p>

<pre><code>&lt;Tabs&gt;
  &lt;TabList&gt;
    &lt;Tab&gt;Title 1&lt;/Tab&gt;
    &lt;Tab&gt;Title 2&lt;/Tab&gt;
  &lt;/TabList&gt;
  &lt;TabPanel&gt;
    &lt;h2&gt;Any content 1&lt;/h2&gt;
  &lt;/TabPanel&gt;
  &lt;TabPanel&gt;
    &lt;h2&gt;Any content 2&lt;/h2&gt;
  &lt;/TabPanel&gt;
&lt;/Tabs&gt;
</code></pre>

<p>so I need two loop one for the tab and another one for tabpanel
like this</p>

<pre><code>&lt;Fragment&gt;
  &lt;Tabs&gt;
    &lt;TabList&gt;
      {stats.map(({ figure = """", instructions = """" }, i) =&gt; {
        &lt;Tab&gt;
          &lt;RichText
            tagName=""h2""
            placeholder={__(""Write Recipe title…"")}
            value={figure}
            onChange={value =&gt; updateStatProp(i, ""figure"", value[0])}
          /&gt;
        &lt;/Tab&gt;;
      })}
    &lt;/TabList&gt;
    {stats.map(({ figure = """", instructions = """" }, i) =&gt; {
      &lt;TabPanel&gt;
        &lt;RichText
          tagName=""div""
          multiline=""p""
          className=""steps""
          placeholder={__(""Write the instructions…"")}
          value={instructions}
          onChange={value =&gt; updateStatProp(i, ""instructions"", value[0])}
        /&gt;
        &lt;Button
          isLarge={true}
          onClick={() =&gt; {
            const newStats = _cloneDeep(stats);
            newStats.splice(i, 1);
            setAttributes({ stats: newStats });
          }}
        &gt;
          &lt;Dashicon icon=""no-alt"" /&gt;
        &lt;/Button&gt;
      &lt;/TabPanel&gt;;
    })}
  &lt;/Tabs&gt;
  &lt;div style={{ textAlign: ""center"", padding: ""8px 0"" }}&gt;
    {stats.length &lt; 5 &amp;&amp; (
      &lt;Button
        isLarge={true}
        onClick={() =&gt; {
          const newStats = _cloneDeep(stats);
          newStats.push({ figure: """", instructions: """" });
          setAttributes({ stats: newStats });
        }}
      &gt;
        Add new stat
      &lt;/Button&gt;
    )}
  &lt;/div&gt;
&lt;/Fragment&gt;
</code></pre>

<p>The state is stats.
Each item in the stats array looks something like this { figure: '100k', instructions:'humans'}
The button ""add new stat"" just appends a new stat object to this array and calls setAttributes.
The remove button just removes the item at that index.</p>

<p>It doesn't give any errors but there isn't any tab added when I click on add new stat button
<a href=""https://i.stack.imgur.com/3O7AH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3O7AH.png"" alt=""enter image description here""></a></p>
","6485567","","3617886","","2018-07-12 18:15:05","2018-07-12 18:18:57","button for add and remove component in react","<javascript><reactjs>","1","0","","",""
"51452489","1","","","2018-07-21 03:16:29","","0","22","<p>I am doing pdf upload in react js. I want to upload pdf file and just wants to show on the top of the upload button with small div along with remove button, if I click on the remove then it should be removed.</p>

<p>The same I have done it for image successfully. I can upload image and also can preview. But I need some help in doing pdf upload</p>

<p>here is my code, </p>

<pre><code> this.state = {
      file: '',
      imagePreviewUrl: ''
    }
</code></pre>

<p>getPhoto (e) {
    e.preventDefault();</p>

<pre><code>let reader = new FileReader();
let file = e.target.files[0];

reader.onloadend = () =&gt; {
  this.setState({
    file: file,
    imagePreviewUrl: reader.result
  });
}
  reader.readAsDataURL(file);
}

 render() {
  const { imagePreviewUrl, file } = this.state;
  let imagePreview = null;
     if (imagePreviewUrl) {
        imagePreview = (&lt;img src={imagePreviewUrl} /&gt;);
      } else {
        imagePreview = (&lt;div className=""previewText""&gt;Please select an Image for Preview&lt;/div&gt;);
      }
return (
      &lt;React.Fragment&gt;
      &lt;div className={styles.previewBlock}&gt;
        {imagePreview}
        &lt;div className={styles.fileName}&gt;{file.name}&lt;span&gt;
        &lt;i className=""fa fa-times"" /&gt;&lt;/span&gt;&lt;/div&gt;
      &lt;/div&gt;
  )
 }
</code></pre>
","9890728","","","","","2018-07-21 13:40:36","How to upload only PDF file and preview in react Js","<reactjs><pdf><file-upload>","2","0","","",""
"49919565","1","","","2018-04-19 11:06:56","","1","118","<p>I want to use rtl layout in my react application. I have used material-ui next version to integrate this application. I have used below code to make application layout rtl. Some components work properly in the rtl layout but some components doesn't affected.</p>

<pre><code>/**
 * App.js Layout Start Here
 */
import React, { Component } from 'react';
import { connect } from 'react-redux';
import classnames from 'classnames';
import { MuiThemeProvider } from 'material-ui/styles';
import { IntersectingCirclesSpinner } from 'react-epic-spinners';
import { IntlProvider } from 'react-intl';
import { Redirect, Route } from 'react-router-dom';
import { NotificationContainer } from 'react-notifications';

// app routes
import Dashboard from '../routes/dashboard';
import AppSignUp from '../routes/AppSignUp';

// App locale
import AppLocale from '../lang';

// themes
import lightTheme from './themes/lightTheme';
import darkTheme from './themes/darkTheme';

class App extends Component {

  state = {
    loading: true
  }

  componentDidMount() {
    let self = this;
    setTimeout(() =&gt; {
      self.setState({ loading: false });
    }, 1000);
  }

  render() {
    const { locale, darkMode, rtlLayout } = this.props.settings;
    if (this.state.loading) {
      return (
        &lt;div className=""d-flex justify-content-center""&gt;
          &lt;IntersectingCirclesSpinner color=""red"" className=""rct-loader"" /&gt;
        &lt;/div&gt;
      );
    }
    const currentAppLocale = AppLocale[locale.locale];
    let theme = '';
    if (darkMode) {
      theme = darkTheme
    } else {
      theme = lightTheme
    }
    if (rtlLayout) {
      theme.direction = 'rtl'
    } else {
      theme.direction = 'ltr'
    }
    return (
      &lt;MuiThemeProvider theme={theme}&gt;
        &lt;IntlProvider
          locale={currentAppLocale.locale}
          messages={currentAppLocale.messages}
        &gt;
          &lt;React.Fragment&gt;
            &lt;NotificationContainer /&gt;
            &lt;Route path=""/dashboard"" component={Dashboard} /&gt;
            &lt;Route path=""/signup"" component={AppSignUp} /&gt;
          &lt;/React.Fragment&gt;
        &lt;/IntlProvider&gt;
      &lt;/MuiThemeProvider&gt;
    );
  }
}

// map state to props
const mapStateToProps = ({ settings, authUser }) =&gt; {
  const { user } = authUser;
  return { settings, user };
};

export default connect(mapStateToProps)(App);
</code></pre>

<p>It doesn't work properly also i have added</p>

<pre><code>&lt;html dir=""rtl""&gt;...&lt;/html&gt;
</code></pre>
","8258746","","","","","2018-04-19 11:06:56","How to use rtl layout of material-ui next in react app","<reactjs><material-ui>","0","5","","",""
"49069746","1","49070103","","2018-03-02 13:06:35","","3","706","<p>I am trying to create a stateless component in React with the sole purpose of acting as a reusable wrapper. I am also using CSS Modules because I want to have fully modular CSS.</p>

<p>The thing is I don't want to add unnecessary elements (and even more so <code>&lt;div&gt;</code>s), but instead I want to use React's Fragments.</p>

<p>Now, the problem I have is Fragment (at least for now) do not accept classNames. So if I try this:</p>

<p>// In Wrapper.js:</p>

<pre><code>import React, { Fragment } from 'react'
import styles from './Wrapper.css'

const wrapper = (props) =&gt; (
    &lt;Fragment className={styles.wrapper}&gt;
        {props.children}
    &lt;/Fragment&gt;
)

export default wrapper
</code></pre>

<p>In (for example) Navbar.js:</p>

<pre><code>import React from 'react'
import styles from './Navbar.css'
import Wrapper from '../../Layout/Wrapper'

const navBar = (props) =&gt; (
    &lt;nav className={styles.navBar}&gt;
        &lt;Wrapper&gt;
            This is the site's main navigation bar.
        &lt;/Wrapper&gt;
    &lt;/nav&gt;
)

export default navBar
</code></pre>

<p>Now I can of course, use a div instead of the Fragment, but is there any other workaround to avoid using unnecessary markup, of which I am totally unaware at this hour of the night? :)</p>

<p>Thanks in advance for any insight, recommendation, correction, or any other form of help!</p>
","8819076","","","","","2018-03-02 13:55:01","Workaround to add className to Fragment in React","<javascript><reactjs><css-modules><react-css-modules>","3","3","","",""
"49324042","1","","","2018-03-16 15:12:32","","0","46","<p>I've been developing an app with <strong>Electron, React JS</strong> and <strong>Chart JS.</strong> I'm trying to wrap an extension of Chart JS called <a href=""https://github.com/chartjs/Chart.smith.js"" rel=""nofollow noreferrer"">Chart.smith.js</a> with React.</p>

<p>I tried first render it with plain html and javascript and it worked like expected.</p>

<p>Then i tried to wrap it with React but it keeps getting me this error: </p>

<pre><code>./src/components/Content/Graphs/SmithChart.jsx
Module not found: Can't resolve 'Chart.Smith' in 'C:\Users\dv_co\Documents\UNIVERSIDADE\POE\PRÁTICA\pocket-vna\src\components\Content\Graphs'
</code></pre>

<p>Here is my code:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React, { Component, Fragment } from 'react'
import Chart from 'chart.js'
require('Chart.Smith')

export default class SmithChart extends Component{

    componentDidMount(){
        var ctx = document.getElementById(""smith-chart"").getContext('2d');
        let  chartInstance = new Chart(ctx, 
            {
                type: 'smith',
                data: {
                    datasets: [{
                        data: [{
                            real: 0.1,
                            imag: 0
                        }, {
                            real: 1,
                            imag: 0
                        }, {
                            real: 0,
                            imag: -1
                        }, {
                            real: 20,
                            imag: 0
                        }],
                        label: 'Dataset 1',
                        borderColor: '#36A2EB',
                        pointBackgroundColor: '#36A2EB',
                        backgroundColor: 'rgba(54,162,235, 0.4)'
                    }]
                },
                options: {
                    title: {
                        display: true,
                        text: 'Smith Chart Extension'
                    },
                    legend: {
                        display: false
                    }
                }
            }
        );
    }
    
    render(){
        return(
            &lt;Fragment&gt;
                &lt;canvas id=""smith-chart"" className=""extra-large-chart""&gt;&lt;/canvas&gt;
            &lt;/Fragment&gt;
        )
    }
} </code></pre>
</div>
</div>
</p>
","6802432","","","","","2018-03-16 15:12:32","chart js smith chart react wrapper","<javascript><reactjs><chart.js><wrapper>","0","1","","",""
"49619386","1","","","2018-04-02 22:00:06","","2","131","<p>I am encountering this error when attempting to use Fragments with React / Typescript with Visual Studio 2017:</p>

<p><strong>NodeInvocationException:</strong> Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: symbol.</p>

<p><strong>Stack:</strong></p>

<ul>
<li>react 16.3</li>
<li>react-dom 16.3</li>
<li>typescript 2.6.2</li>
</ul>

<p>I am also testing with sample code:</p>

<pre><code>public render() {
        return (
            &lt;&gt;
            Some text.
            &lt;h2&gt;A heading&lt;/h2&gt;
            More text.
            &lt;h2&gt;Another heading&lt;/h2&gt;
            Even more text.
          &lt;/&gt;
        );
    }
</code></pre>

<p>I found similar issues <a href=""https://stackoverflow.com/questions/48235692/jsx-fragment-syntax-generates-element-type-is-invalid"">here</a>. In his last comments Stephen Muhr says he updated his vendor.js bundle to get it to work without providing much details. From his comments, it sounds like he had an issue with upgrading to react 16.2. However, for me, I can verify that react 16.3 is running successfully (I output react version at runtime). So, it may not resolve my issue. I could not add to comments on that question since I am a new user.</p>

<p>Since the error is a server side error, I am thinking I am missing a configuration specifying the correct version of typescript. I used npm install typescript@2.6.2 and it exists in the node_modules folder. I also downloaded the TypeScript SDK for 2.6.2 and installed it. I've also set the project properties to Typescript 2.6 (and have also tried 'use latest'). None of these have worked.</p>

<p>I can not figure out how to output the typescript version being used at run-time.</p>

<p><strong>EDIT</strong>
The following returned different versions of typescript on my machine:
 - <strong>tsc -v</strong> yields 2.3.5. 
 - <strong>npm ls -g typescript</strong> yields 2.6.2. 
 - <strong>npm ls typescript</strong> yields 2.6.2. </p>

<p>So, it looks like tsc -v is out of date but I have no idea how to update it.</p>

<p>If anyone can offer any suggestions as to what may be causing this error, I would appreciate it. Thank you.</p>
","9588147","","9588147","","2018-04-02 22:12:13","2018-04-02 22:23:33","React Fragment results in Element Type is Invalid Error in Visual Studio 2017","<reactjs><typescript><visual-studio-2017><typescript2.6>","1","0","","",""
"44568756","1","44629961","","2017-06-15 13:24:27","","4","275","<p>I am randomly getting a crash when trying to load a jsbundle (offline react app)</p>

<pre><code>mReactInstanceManager = ReactInstanceManager.builder().setApplication(mActivity.getApplication())
.setJSBundleFile(appPath)
.addPackage(mReactPackage).addPackage(new MyCustomReactPackage())
.setUseDeveloperSupport(false)//For performance use false
.setInitialLifecycleState(LifecycleState.RESUMED)
.setNativeModuleCallExceptionHandler(new NativeModuleCallExceptionHandler() {
       @Override
       public void handleException(Exception e) {
            e.printStackTrace();
            Logger.e(TAG,""Exception while opening app ""+ Log.getStackTraceString(e));
       }
       })
.build();
reactRootView.startReactApplication(mReactInstanceManager, launchClassName, initialProps);  
</code></pre>

<hr>

<p>Stacktrace:</p>

<pre><code>LOCATION com.facebook.react.JSCConfig$1.a()
EXCEPTION java.lang.NoClassDefFoundError
MESSAGE com.facebook.react.bridge.WritableNativeMap
at com.facebook.react.JSCConfig$1.a()(null:14)
    at com.facebook.react.ReactInstanceManager.k()(null:359)
    at com.facebook.react.ReactInstanceManager.j()(null:353)
    at com.facebook.react.ReactInstanceManager.c()(null:295)
    at com.facebook.react.ReactRootView.a()(null:221)
    at com.example.sdk.uidesign.fragments.AppFragment.b()(null:215)
    at com.example.sdk.uidesign.ActivityV2.a()(null:1265)
    at com.example.sdk.uidesign.adapter.AppsAdapter.a()(null:102)
    at com.example.sdk.uidesign.adapter.AppsAdapter.a()(null:37)
    at com.example.sdk.uidesign.a.e$a$1.onClick()(null:135)
    at android.view.View.performClick()(View.java:4790)
    at android.view.View$PerformClick.run()(View.java:19883)
    at android.os.Handler.handleCallback()(Handler.java:739)
    at android.os.Handler.dispatchMessage()(Handler.java:95)
    at android.os.Looper.loop()(Looper.java:135)
    at android.app.ActivityThread.main()(ActivityThread.java:5268)
    at java.lang.reflect.Method.invoke()(Method.java:-2)
    at java.lang.reflect.Method.invoke()(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run()(ZygoteInit.java:902)
    at com.android.internal.os.ZygoteInit.main()(ZygoteInit.java:697)
</code></pre>

<p>Any help would be appreciated.</p>
","1317348","","1761003","","2017-06-26 05:34:42","2017-07-14 07:02:03","NoClassDefFoundError com.facebook.react.bridge.WritableNativeMap","<android><reactjs><react-native>","1","1","","",""
"49537151","1","","","2018-03-28 14:25:41","","0","63","<p>we still have the issue that after push from 'react-router-redux' the url changes but the dom is not rerendering. Even after reading and trying:</p>

<ul>
<li><a href=""https://github.com/reactjs/react-redux/blob/master/docs/troubleshooting.md#my-views-arent-updating-when-something-changes-outside-of-redux"" rel=""nofollow noreferrer"">https://github.com/reactjs/react-redux/blob/master/docs/troubleshooting.md#my-views-arent-updating-when-something-changes-outside-of-redux</a></li>
<li><a href=""https://github.com/ReactTraining/react-router/issues/4924"" rel=""nofollow noreferrer"">https://github.com/ReactTraining/react-router/issues/4924</a></li>
<li><a href=""https://github.com/ReactTraining/react-router/blob/master/packages/react-router/docs/guides/redux.md"" rel=""nofollow noreferrer"">https://github.com/ReactTraining/react-router/blob/master/packages/react-router/docs/guides/redux.md</a></li>
</ul>

<p>app.js</p>

<pre><code>import React from 'react';
import { Reboot } from 'material-ui';
import { Switch, Route, BrowserRouter as Router, withRouter } from 'react-router-dom';

import Shell from '../Shell';
import Home from '../Home';
import Verify from '../Verified';
import Event from '../Event/EventWrapper';
import RoomWrapper from '../Room/RoomWrapper';
import Room from '../Room/RoomComponent';

const App = () =&gt; (
    &lt;React.Fragment&gt;
        &lt;Reboot/&gt;
        &lt;Router&gt;
            &lt;div&gt;
                &lt;Shell/&gt;
                &lt;Switch&gt;
                    &lt;Route exact path=""/"" component={Home}/&gt;
                    &lt;Route exact path=""/room"" component={RoomWrapper}/&gt;
                    &lt;Route path=""/room/:id"" component={Room}/&gt;
                    &lt;Route exact path=""/event"" component={Event}/&gt;
                    &lt;Route exact path=""/verify"" component={Verify}/&gt;
                &lt;/Switch&gt;
            &lt;/div&gt;
        &lt;/Router&gt;
    &lt;/React.Fragment&gt;
);

export default withRouter(App);
</code></pre>

<p>Component</p>

<pre><code>const mapDispatchToProps = dispatch =&gt; ({
    handleCreate: (roomName, roomHash) =&gt; {
        dispatch(valueRoomCreateWithRouteChange(roomName, roomHash));
    },
});

@withRouter
@connect(mapStateToProps, mapDispatchToProps)
@withStyles(styles)
class RoomCreate extends React.Component {
    state = {
        name: String,
    };

    handleChange = event =&gt; this.setState({ name: event.target.value });

    render() {
        const { name } = this.state;
        const {
            classes, handleCreate,
        } = this.props;

        return (
            &lt;React.Fragment&gt;
                &lt;div className={classes.relative}&gt;
                    &lt;TextField
                        className={classes.textField}
                        onChange={this.handleChange}
                        autoFocus
                        margin=""dense""
                        id=""name""
                        label=""Room name""
                        type=""text""
                        fullWidth
                        required/&gt;
                    &lt;Button raised color=""secondary""
                        onClick={() =&gt; {
                            handleCreate(name, randomString({ length: 5, letters: 'uppercase' }));
                        }}
                        className={classes.primary}&gt;
                        Create
                    &lt;/Button&gt;
                &lt;/div&gt;
            &lt;/React.Fragment&gt;
        );
    }
}
</code></pre>

<p>Action</p>

<pre><code>import { push } from 'react-router-redux';

export const ROOM_CREATE = 'ROOM_CREATE';

export const valueRoomCreate = (roomName, roomHash) =&gt; ({
    type: ROOM_CREATE,
    roomName,
    roomHash,
    created: true,
});

// TODO: Implement async method wi`enter code here`th router push

export const valueRoomCreateWithRouteChange = (roomName, roomHash) =&gt; (dispatch) =&gt; {
    dispatch(valueRoomCreate(roomName, roomHash));
    dispatch(push(`/room/${roomHash}`));
};
</code></pre>

<p>Thanks a lot guys</p>
","6236788","","","","","2018-03-28 17:45:44","After trying every ""bugfix"" react-router redux push still not rerendering,","<reactjs><redux><react-router>","1","0","","",""
"49703053","1","49703202","","2018-04-07 01:56:02","","2","55","<p>What's the idiomatic React way to write a component that nests specific child components? I know how to write a component that simply wraps <code>props.children</code>, like this example from React's own docs:</p>

<pre><code>function FancyBorder(props) {
  return (
    &lt;div className={'FancyBorder FancyBorder-' + props.color}&gt;
      {props.children}
    &lt;/div&gt;
  );
}
</code></pre>

<p>But what if I wanted to create a pair of components that can be used like this:</p>

<pre><code>&lt;TabSet&gt;
  &lt;Tab name=""Mammals""&gt;
     content for &lt;b&gt;warm blooded&lt;/b&gt; creatures here
  &lt;/Tab&gt;
  &lt;Tab name=""Fish""&gt;
     content for &lt;b&gt;cold blooded&lt;/b&gt; creatures here
  &lt;/Tab&gt;
&lt;/TabSet&gt;
</code></pre>

<p>Here's my initial implementation of <code>TabSet</code> (using <a href=""https://reactstrap.github.io/"" rel=""nofollow noreferrer"">reactstrap</a>), simplified to remove styling, selected-tab management, and other stuff not related to this question. </p>

<pre><code>import React, {Fragment, Component} from 'react';
import { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';

export default class TabSet extends Component {

  render(props) { 
    return (
      &lt;Fragment&gt;
        &lt;Nav tabs&gt;
          {props.children.map((tab,i) =&gt; 
            &lt;NavItem key={i}&gt;
              &lt;NavLink&gt;
                { tab.name }
              &lt;/NavLink&gt;
            &lt;/NavItem&gt;
          )}
        &lt;/Nav&gt;
        &lt;TabContent&gt;
          {props.children.map((tab,i) =&gt; 
            &lt;TabPane key={i} tabId={i}&gt;
              { tab.children }
            &lt;/TabPane&gt;
          )}
        &lt;/TabContent&gt;
      &lt;/Fragment&gt;
    );
  }

}
</code></pre>

<p>Where I'm stuck is how to implement the <code>Tab</code> component. Logically, it's part of the <code>TabSet</code> component-- it should never stand alone. And its implementation should be painfully simple because it doesn't actually do anything-- it's just a container for a <code>name</code> attribute and child elements.</p>

<p>So, here's a few questions: </p>

<ul>
<li>Should I create a separate JS file for the <code>Tab</code> component, or is it so simple that I should just export it as part of the implementation of the <code>TabSet</code> component? If the latter, how?</li>
<li>In classes that use <code>TabSet</code>, will I need two <code>import</code> statements, or is there a way I can import both <code>TabSet</code> and <code>Tab</code> with one <code>import</code>, kinda like <code>import React, {Fragment} from 'react'</code> works ?  If the latter, then how would the export statement look in TabSet.js?</li>
</ul>

<p>Apologies for what's probably an obvious question-- I'm a newbie to both React and ES6. </p>
","126352","","","","","2018-04-07 02:29:07","Pattern for react components that require specific contained components","<reactjs><ecmascript-6><react-component>","2","1","","",""
"43532367","1","","","2017-04-21 01:21:08","","2","760","<p>when I update RN from 0.41 to 0.43.3,I suffered a crazy problem, if I run gradlew assembleRelease, the apk build failed, but when I add option --debug, the apk build successful, it should be the problem of progurad, but i cannot fix it, any help is appreciated:</p>

<pre><code>-gradlew assembleRelease
...
Loading dependency graph, done.easeJsAndAssets
warning: the transform cache was reset.
bundle: start
bundle: finish
bundle: Writing bundle output to:xxx\android\app\build\intermediates\assets\release\index.android.bundle
bundle: Done writing bundle output
bundle: Copying 5 asset files
bundle: Done copying assets

FAILURE: Build failed with an exception.

* What went wrong:
Unable to process incoming event 'ProgressComplete ' (ProgressCompleteEvent)
</code></pre>

<p>if I run gradlew assembleRelease --debug</p>

<pre><code>-gradlew assembleRelease --debug
...
[LIFECYCLE] [org.gradle.BuildResultLogger] BUILD SUCCESSFUL
</code></pre>

<p>run gradlew assembleRelease --info or --stacktrace all failed, no warning messages show.</p>

<p>When i build apk use android studio,it shows:</p>

<pre><code>    Initializing...
Note: the configuration refers to the unknown class 'com.facebook.react.uimanager.UIProp'
Note: the configuration refers to the unknown class 'sun.misc.Unsafe'
Note: the configuration refers to the unknown class 'android.text'
Note: com.facebook.common.webp.WebpSupportStatus: can't find dynamically referenced class com.facebook.webpsupport.WebpBitmapFactoryImpl
Note: com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider: can't find dynamically referenced class com.facebook.imagepipeline.animated.factory.AnimatedFactoryImplSupport
Note: com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider: can't find dynamically referenced class com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl
Note: com.facebook.imagepipeline.nativecode.WebpTranscoderFactory: can't find dynamically referenced class com.facebook.imagepipeline.nativecode.WebpTranscoderImpl
Note: okhttp3.internal.platform.AndroidPlatform: can't find dynamically referenced class com.android.org.conscrypt.SSLParametersImpl
Note: okhttp3.internal.platform.AndroidPlatform: can't find dynamically referenced class org.apache.harmony.xnet.provider.jsse.SSLParametersImpl
Note: okhttp3.internal.platform.Platform: can't find dynamically referenced class sun.security.ssl.SSLContextImpl
Note: com.facebook.react.views.textinput.ReactTextInputManager accesses a declared field 'mCursorDrawable' dynamically
Note: the configuration keeps the entry point 'com.facebook.drawee.drawable.ForwardingDrawable { void setTransformCallback(com.facebook.drawee.drawable.TransformCallback); }', but not the descriptor class 'com.facebook.drawee.drawable.TransformCallback'
Note: the configuration keeps the entry point 'com.facebook.drawee.view.DraweeView { void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy); }', but not the descriptor class 'com.facebook.drawee.interfaces.DraweeHierarchy'
Note: the configuration keeps the entry point 'com.facebook.drawee.view.DraweeView { void setController(com.facebook.drawee.interfaces.DraweeController); }', but not the descriptor class 'com.facebook.drawee.interfaces.DraweeController'
Note: the configuration keeps the entry point 'com.facebook.drawee.view.GenericDraweeView { GenericDraweeView(android.content.Context,com.facebook.drawee.generic.GenericDraweeHierarchy); }', but not the descriptor class 'com.facebook.drawee.generic.GenericDraweeHierarchy'
Note: the configuration keeps the entry point 'com.facebook.imagepipeline.request.ImageRequest { ImageRequest(com.facebook.imagepipeline.request.ImageRequestBuilder); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequestBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.animated.EventAnimationDriver { EventAnimationDriver(java.util.List,com.facebook.react.animated.ValueAnimatedNode); }', but not the descriptor class 'com.facebook.react.animated.ValueAnimatedNode'
Note: the configuration keeps the entry point 'com.facebook.react.bridge.ModuleSpec { ModuleSpec(java.lang.Class,javax.inject.Provider); }', but not the descriptor class 'javax.inject.Provider'
Note: the configuration keeps the entry point 'com.facebook.react.cxxbridge.ModuleHolder { ModuleHolder(java.lang.String,boolean,boolean,boolean,javax.inject.Provider); }', but not the descriptor class 'javax.inject.Provider'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatShadowNode { void collectState(com.facebook.react.flat.StateBuilder,float,float,float,float,float,float,float,float); }', but not the descriptor class 'com.facebook.react.flat.StateBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatShadowNode { void setNodeRegion(com.facebook.react.flat.NodeRegion); }', but not the descriptor class 'com.facebook.react.flat.NodeRegion'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatTextShadowNode { void performCollectAttachDetachListeners(com.facebook.react.flat.StateBuilder); }', but not the descriptor class 'com.facebook.react.flat.StateBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatUIViewOperationQueue$DetachAllChildrenFromViews { FlatUIViewOperationQueue$DetachAllChildrenFromViews(com.facebook.react.flat.FlatUIViewOperationQueue); }', but not the descriptor class 'com.facebook.react.flat.FlatUIViewOperationQueue'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatUIViewOperationQueue$ViewManagerCommand { FlatUIViewOperationQueue$ViewManagerCommand(com.facebook.react.flat.FlatUIViewOperationQueue,int,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.flat.FlatUIViewOperationQueue'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatViewManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatViewManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTImageViewManager { RCTImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTImageViewManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTImageViewManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTTextInput { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTTextManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTTextManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setHotspot(com.facebook.react.flat.FlatViewGroup,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void receiveCommand(com.facebook.react.flat.FlatViewGroup,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setNeedsOffscreenAlphaCompositing(com.facebook.react.flat.FlatViewGroup,boolean); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setPointerEvents(com.facebook.react.flat.FlatViewGroup,java.lang.String); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setRemoveClippedSubviews(com.facebook.react.flat.FlatViewGroup,boolean); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setHitSlop(com.facebook.react.flat.FlatViewGroup,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTVirtualText { void performCollectAttachDetachListeners(com.facebook.react.flat.StateBuilder); }', but not the descriptor class 'com.facebook.react.flat.StateBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.modules.core.Timing { com.facebook.react.modules.core.Timing$IdleCallbackRunnable access$1202(com.facebook.react.modules.core.Timing,com.facebook.react.modules.core.Timing$IdleCallbackRunnable); }', but not the descriptor class 'com.facebook.react.modules.core.Timing$IdleCallbackRunnable'
Note: the configuration keeps the entry point 'com.facebook.react.modules.dialog.AlertFragment { AlertFragment(com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener,android.os.Bundle); }', but not the descriptor class 'com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener'
Note: the configuration keeps the entry point 'com.facebook.react.modules.dialog.SupportAlertFragment { SupportAlertFragment(com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener,android.os.Bundle); }', but not the descriptor class 'com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.FrescoModule { FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipelineConfig); }', but not the descriptor class 'com.facebook.imagepipeline.core.ImagePipelineConfig'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.ReactNetworkImageRequest { com.facebook.react.modules.fresco.ReactNetworkImageRequest fromBuilderWithHeaders(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequestBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.ReactNetworkImageRequest { ReactNetworkImageRequest(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequestBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.SystraceRequestListener { void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequest'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.SystraceRequestListener { void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequest'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.SystraceRequestListener { void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequest'
Note: the configuration keeps the entry point 'com.facebook.react.modules.image.ImageLoaderModule { void registerRequest(int,com.facebook.datasource.DataSource); }', but not the descriptor class 'com.facebook.datasource.DataSource'
Note: the configuration keeps the entry point 'com.facebook.react.shell.MainPackageConfig$Builder { com.facebook.react.shell.MainPackageConfig$Builder setFrescoConfig(com.facebook.imagepipeline.core.ImagePipelineConfig); }', but not the descriptor class 'com.facebook.imagepipeline.core.ImagePipelineConfig'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.NativeViewHierarchyManager { void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[]); }', but not the descriptor class 'com.facebook.react.uimanager.ViewAtIndex'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.NativeViewHierarchyOptimizer { NativeViewHierarchyOptimizer(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ShadowNodeRegistry); }', but not the descriptor class 'com.facebook.react.uimanager.ShadowNodeRegistry'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.NativeViewHierarchyOptimizer { void handleManageChildren(com.facebook.react.uimanager.ReactShadowNode,int[],int[],com.facebook.react.uimanager.ViewAtIndex[],int[]); }', but not the descriptor class 'com.facebook.react.uimanager.ViewAtIndex'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.UIViewOperationQueue { void enqueueManageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[]); }', but not the descriptor class 'com.facebook.react.uimanager.ViewAtIndex'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,int); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void getDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageView { ReactImageView(android.content.Context,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageView { void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType); }', but not the descriptor class 'com.facebook.drawee.drawable.ScalingUtils$ScaleType'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageView { void setControllerListener(com.facebook.drawee.controller.ControllerListener); }', but not the descriptor class 'com.facebook.drawee.controller.ControllerListener'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ProgressBarShadowNode { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setStyle(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode { FrescoBasedReactTextInlineImageShadowNode(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan { FrescoBasedReactTextInlineImageSpan(android.content.res.Resources,int,int,android.net.Uri,com.facebook.react.bridge.ReadableMap,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager { FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactEditText { void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher); }', but not the descriptor class 'com.facebook.react.views.textinput.SelectionWatcher'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputShadowNode { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.DrawableWithIntrinsicSize { DrawableWithIntrinsicSize(android.graphics.drawable.Drawable,com.facebook.imagepipeline.image.ImageInfo); }', but not the descriptor class 'com.facebook.imagepipeline.image.ImageInfo'
Note: the configuration keeps the entry point 'com.facebook.yoga.YogaBaselineFunction { float baseline(com.facebook.yoga.YogaNodeAPI,float,float); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.yoga.YogaMeasureFunction { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.imagepicker.ImagePickerModule { void putExtraFileInfo(java.lang.String,com.imagepicker.ResponseHelper); }', but not the descriptor class 'com.imagepicker.ResponseHelper'
Note: there were 3 references to unknown classes.
      You should check your configuration for typos.
      (http://proguard.sourceforge.net/manual/troubleshooting.html#unknownclass)
Note: there were 78 unkept descriptor classes in kept class members.
      You should consider explicitly keeping the mentioned classes
      (using '-keep').
      (http://proguard.sourceforge.net/manual/troubleshooting.html#descriptorclass)
Note: there were 7 unresolved dynamic references to classes or interfaces.
      You should check if you need to specify additional program jars.
      (http://proguard.sourceforge.net/manual/troubleshooting.html#dynamicalclass)
Note: there were 1 accesses to class members by means of introspection.
      You should consider explicitly keeping the mentioned class members
      (using '-keep' or '-keepclassmembers').
      (http://proguard.sourceforge.net/manual/troubleshooting.html#dynamicalclassmember)
</code></pre>

<p>how to modify my proguard file?</p>
","6233129","","6233129","","2017-04-21 03:20:41","2017-11-23 10:01:31","[react-native]update RN to 0.43.3 build failed","<android><react-native>","0","3","","",""
"43613449","1","","","2017-04-25 14:25:45","","0","732","<p>Long story short: I'm trying to create a native module for an react-native project for AndroidPay. Integration of AndroidPay is possible only using fragments (which are in final ""Buy with AndroidPay"" buttons). So the algorithm is pretty simple, export a placeholder in react-native, wrap it in a component and at some point just add fragment into that placeholder using it's id. So the code looks like:</p>

<pre><code>public class AndroidPayPlaceholderViewManager extends SimpleViewManager&lt;FrameLayout&gt;{
    public static final String REACT_CLASS = ""AndroidPayButton"";

    public AndroidPayPlaceholderViewManager(ReactApplicationContext context) {
        super();
    }

    @Override
    public String getName() {
        return REACT_CLASS;
    }

    @Override
    protected FrameLayout createViewInstance(ThemedReactContext reactContext) {
        return (FrameLayout) LayoutInflater.from(reactContext).inflate(R.layout.android_pay_frg_placeholder, null);
    }
}
</code></pre>

<p>android_pay_placeholder.xml</p>

<pre><code>&lt;FrameLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    android:layout_gravity=""center_horizontal""&gt;
    &lt;FrameLayout
        android:id=""@+id/android_pay_placeholder""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""
        android:layout_gravity=""center_horizontal""&gt;
    &lt;/FrameLayout&gt;
&lt;/FrameLayout&gt;
</code></pre>

<p>js component wrapper</p>

<pre><code>import {View, requireNativeComponent} from 'react-native';
import React, {Component} from 'react';
import {NativeModules, findNodeHandle} from 'react-native';
import {isAndroid} from '../utils';


let iface = {
    propTypes: {
        ...View.propTypes, // include the default view properties
        foo: String
    }
};

let AndroidPayButtonNative = requireNativeComponent('NewStoreAndroidPayButton', iface);
console.log('AndroidPayButtonNative: ', AndroidPayButtonNative);
let AndroidPayModule = isAndroid() ? NativeModules.NewStoreAndroidPay : null;

class AndroidPayButton extends Component {
    state = {
        loaded: false
    };

    componentDidMount() {
        AndroidPayModule.loadFragment();
    }

    render() {
        return (
            &lt;AndroidPayButtonNative {...this.props} /&gt;
        );
    }
}

export {AndroidPayButton};
</code></pre>

<p>android native module which is in charge of loading the fragment</p>

<pre><code>public class AndroidPayModule extends ReactContextBaseJavaModule implements ActivityEventListener, LifecycleEventListener {
....
@ReactMethod
    public void loadFragment(int placeholderId) {
        ...
        WalletFragment mWalletFragment = WalletFragment.newInstance(...);


        // add Wallet fragment to the UI
        getCurrentActivity().getFragmentManager().beginTransaction()
                .add(R.id.android_pay_placeholder, mWalletFragment)
                .commit();

        // [END params_builder]
    }
....
}
</code></pre>

<p>So, when I add the ""placeholder"" view to the screen I can see it and even checked with LayoutInspector, the id is right:</p>

<p><a href=""https://i.stack.imgur.com/CcyCL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CcyCL.png"" alt=""enter image description here""></a></p>

<p>And the result that I always get is exception:</p>

<pre><code>java.lang.IllegalArgumentException: No view found for id 0x7f0d00a6 (com.qwerty.playground:id/android_pay_placeholder) for fragment WalletFragment{388fd9c #0 id=0x7f0d00a6}
    at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:965)
    at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:1148)
    at android.app.BackStackRecord.run(BackStackRecord.java:793)
    at android.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1535)        
    at android.app.FragmentManagerImpl$1.run(FragmentManager.java:482)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5417)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
</code></pre>

<p>So guys, any idea why FragmentManager can't just find a view which definitely exists and maybe someone of you did this trick with fragments and react-native and succeeded? Any help would be appreciated! Thanks!</p>
","587186","","3931192","","2017-10-22 14:53:12","2017-10-22 14:53:12","Add fragment into react-native view","<android><android-fragments><react-native><android-fragmentmanager>","0","2","","",""
"50372019","1","","","2018-05-16 13:16:44","","0","49","<p>I'm currently using react-apollo in a react-native app and I'm facing an issue.</p>

<p>Whenever I try to make a query containing an union, it fails, throwing the following network error:</p>

<blockquote>
  <p>Network error: Requested keys of a value that is not an object</p>
</blockquote>

<p>I'm using the exact same code in a React.js app, which works just fine. The GraphQL endpoint is my own server, developed in PHP with the Youshido bundle.</p>

<p>Here's the fragment declaration part :</p>

<pre><code>const httpLink = new HttpLink({uri: 'http://10.1.68.64:8000/graphql'});

const fragmentMatcher = new IntrospectionFragmentMatcher({
    introspectionQueryResultData: {
      __schema: {
        types: [
          {
            ""kind"": ""UNION"",
            ""name"": ""QuestionUnion"",
            ""possibleTypes"": [
              {
                ""name"": ""QuestionUnionTypeA""
              },
              {
                ""name"": ""QuestionUnionTypeB""
              },
              {
                ""name"": ""QuestionUnionTypeC""
              }
            ]
          },
        ],
      },
    }
});

const cache = new InMemoryCache({ fragmentMatcher });

const client = new ApolloClient({
    link: httpLink,
    cache: cache,
});
</code></pre>

<p>The query in a Screen.js file (Exactly the same in React.js and react-native):</p>

<pre><code>const FindForm = gql`query FindForm($id: ID!){
    findForm(id: $id){
        id
        title
        questions {
            id
            ... on QuestionUnionTypeA {
                parameterA
            } 
            ... on QuestionUnionTypeB {
                parameterB
            }
            ... on QuestionUnionTypeC {
                parameterC
            }
        }
    }
}`;
</code></pre>

<p>The part using the query in the same Screen.js file:</p>

<pre><code>const resultDisplayer = ({ data }) =&gt; {
    if(data.error){
        return &lt;Text&gt; {JSON.stringify(data)} &lt;/Text&gt;;
    }
    if(data.loading){
        return &lt;Spinner/&gt;;
    }
    else {
        return &lt;Text&gt; Ok &lt;/Text&gt;;
    }
};

const query = graphql(FindForm, {
    options: {
        variables: {
            id: this.state.id,
        }
    }
})(resultDisplayer);
</code></pre>

<p>The troubling part is that the error is not thrown in a few cases:</p>

<ul>
<li>When I'm remotely debugging the app</li>
<li>When the query does not contain the union part</li>
<li>When the union part has nothing to return (If there are no instance of QuestionUnionTypeA, B and C)</li>
</ul>

<p>Thus I guess I'm doing something wrong but I can't seem to find where I've been mistaken. If you guys have any idea, I'm willing to try anything that comes up.</p>
","6315852","","","","","2018-05-16 13:16:44","Using GraphQL's union with apollo-react in react-native","<react-native><graphql><apollo><react-apollo>","0","0","","",""
"43907525","1","43957072","","2017-05-11 05:53:20","","0","231","<p>Objects are not valid as a React child  (found: object with keys {style, title}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of <code>View</code>. </p>

<p>I don't know what to make of the trace I've pasted, because it's not in my code at all. Any ideas would be greatly appreciated! Thanks.</p>

<p><a href=""https://i.stack.imgur.com/T4pEc.png"" rel=""nofollow noreferrer"">Trace on simulator</a></p>

<p>index.ios.js</p>

<pre><code>import React, { Component } from 'react';
import {
  AppRegistry,
  StyleSheet,
  Navigator
} from 'react-native';

import Product from './product.js';
import Services from './services.js';
import ProductsList from './productslist.js';
import AddProduct from './addProduct.js';
import {StackNavigator} from 'react-navigation';

const routes = [
  {
    title : 'Services',
    renderFunc : (navigator) =&gt; &lt;Services navigator={navigator} /&gt;
  },
  {
    title : 'Marketplace',
    renderFunc : (navigator) =&gt; &lt;ProductsList navigator={navigator}/&gt;
  }
];

const stackNavigatorRoutes = {
  Services : {
    screen : Services,
  },
  ProductsList : {
    screen : ProductsList
  },
  Product : {
    screen : Product
  },
  AddProduct : {
    screen : AddProduct
  }
};

const AppNavigator = StackNavigator({
  ...stackNavigatorRoutes,
},
{
    initialRouteName : 'Services',
    navigationOptions : {
        header : {
          style : {
            height : 60,
            backgroundColor : 'cadetblue'
          },
          title : 'ResiShare'
        }
    }
});

class Rs extends Component {
  render() {
    return (
        &lt;AppNavigator /&gt;
        // &lt;ProductsList /&gt;
        // &lt;AddProduct /&gt;
      );
  }
}
</code></pre>
","3349399","","3349399","","2017-05-11 12:02:34","2017-05-13 19:14:10","How do I debug ""Objects are not valid as a React child"" react native error","<react-native>","1","2","","",""
"48975515","1","48975533","","2018-02-25 16:04:18","","2","46","<p>I am using mobx + react setup for this subpage to make a searchable list of users. My list of items is not rendering with if statement. In the solution I am trying to render one of two lists in my subpage. Depending on boolean 'isSearching'. First element should be shown when input field is empty, and second one is when input field has value written. They are same arrays, Only difference between lists arrays are that one of them is filtered.</p>

<p><strong>Code:</strong></p>

<pre><code> &lt;ul className='items__block'&gt;
    {
        this.props.PeopleStore.people.isSearching = false ?
            (this.props.PeopleStore.people.map(this.person))
        : 
            (this.props.PeopleStore.searchingList.map(this.person))
    }
&lt;/ul&gt;
</code></pre>

<p>Althought if I remove condition, it <strong>works separated:</strong></p>

<pre><code>&lt;ul className='items__block'&gt;
    {
       this.props.PeopleStore.people.map(this.person)
    }
&lt;/ul&gt;


&lt;ul className='items__block'&gt;
    {
       this.props.PeopleStore.people.map(this.person)
    }
&lt;/ul&gt;
</code></pre>

<p><strong>Store file:</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code> import { runInAction, observable, action, toJS } from 'mobx';
    // ES7 compiler
    import regeneratorRuntime from 'regenerator-runtime';

    class PeopleStore {
        @observable people = [];
        @observable loading = false;
        @observable isSearching = false;
        @observable searchingList = [];

    // API call
    loadPeople = async() =&gt; {
        this.loading = true;
        const response = await fetch('https://randomuser.me/api/?results=71');
        const json = await response.json();
        runInAction(() =&gt; {
            this.people = json.results;
        });
        this.loading = false;
        console.log(toJS(this.people));
    }

    // this function is called by onChange event
    @action.bound filterList = textTyped =&gt; {
       // changing boolean to identify if input is empty or not
        if (textTyped.target.value.length &lt; 1) {
            this.isSearching = false;
        } else {
            this.isSearching = true;
        }
        
        console.log(this.isSearching);
        
        let peoplesNames = [];
        for (let i = 0; i &lt; this.people.length; i++) {
            peoplesNames.push(toJS(this.people[i]));
        }
        peoplesNames = peoplesNames.filter(function(item) {
            return item.name.first.toLowerCase().search(textTyped.target.value.toLowerCase()) !== -1
        });
        
        this.searchingList = peoplesNames;
    // tracking both arrays, they both work
        console.log(toJS(this.searchingList));
        console.log(toJS(this.people));
        }
    }

    export default new PeopleStore();</code></pre>
</div>
</div>
</p>

<p><strong>Component file:</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>@inject('showHandler', 'PeopleStore') @observer
    class PickList extends React.Component {
    
    componentWillMount() {
        this.props.PeopleStore.loadPeople();
    }
    
    
    person = ({name, picture}, index) =&gt;
        &lt;li className=""items__block--user"" key={index} onClick={this.props.PeopleStore.selectPerson}&gt;
            &lt;img className=""user--image"" src={picture.medium} alt=""face"" /&gt;
            &lt;span className=""user--name""&gt;{`${name.first} ${name.last}`}&lt;/span&gt;
        &lt;/li&gt;;

    render() {
        if (this.props.PeopleStore.loading) {
            return (
                &lt;div className=""loader""&gt;&lt;/div&gt;
            );
        }

        return (
            &lt;React.Fragment&gt;
                &lt;input className=""users__block--input"" onChange={this.props.PeopleStore.filterList}&gt;&lt;/input&gt;
                &lt;ul className='items__block'&gt;
                    {
                    this.props.PeopleStore.people.isSearching = false //checks mobx prop
                    ?
                    (this.props.PeopleStore.people.map(this.person))
                    : 
                    (this.props.PeopleStore.searchingList.map(this.person))
                    }
                &lt;/ul&gt;</code></pre>
</div>
</div>
</p>

<p>Why is it not working? On page render <strong>isSearching</strong> prop is set to <strong>false</strong> and that should effect the if statement as it is.</p>
","8610581","","5185595","","2018-02-25 17:03:57","2018-02-25 17:03:57","How to render element conditionally in react","<javascript><reactjs><if-statement><mobx><mobx-react>","1","0","","",""
"49011111","1","","","2018-02-27 14:32:51","","0","61","<p>I am new to relay. I have read various answers on this topic but none has made it clear how to set variables from a react component for a relay fragment. I am using relay modern. I believe this is how to write a fragment that is expecting a variable. In the documentation it states that: ""Any arguments defined inside @argumentDefinitions will be local variables available inside the fragment's scope. "" I am also unclear what the fragment scope here is and I think I understand what this means then I would be closer to the answer I am looking for. I think in relay classic you would do something like this inside the component: </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>this.props.relay.setVariables({ id: ""something""})</code></pre>
</div>
</div>
</p>

<p>This is what my fragment looks like</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>export default createFragmentContainer(
  Posts,
  graphql`
    fragment Post_Viewer on Viewer @argumentDefinitions( id: { type: ""String"" }) {
      User(id: $id) {
        firstName
        lastName
      }
    }
   `
  )</code></pre>
</div>
</div>
</p>
","9415197","","9415197","","2018-02-27 14:58:04","2018-02-27 14:58:04","How to set variables in react component for a relay fragment?","<javascript><reactjs><variables><scope><relay>","0","0","","",""
"35895302","1","35896814","","2016-03-09 15:08:20","","7","14627","<p>I've been attempting to fetch some data from a server and for some odd reason <code>componentDidMount()</code> is not firing as it should be. I added a <code>console.log()</code> statement inside of <code>componentDidMount()</code> to check if it was firing. I know the request to the server works as it should As I used it outside of react and it worked as it should.</p>

<pre class=""lang-js prettyprint-override""><code>class App extends React.Component {
  constructor(props, context) {
    super(props, context);
    this.state = {
      obj: {}
    };
  };

  getAllStarShips () {
    reachGraphQL('http://localhost:4000/', `{
     allStarships(first: 7) {
       edges {
         node {
           id
           name
           model
           costInCredits
           pilotConnection {
             edges {
               node {
                 ...pilotFragment
               }
             }
           }
         }
       }
     }
    }
    fragment pilotFragment on Person {
     name
     homeworld { name }
   }`, {}). then((data) =&gt; {
     console.log('getALL:', JSON.stringify(data, null, 2))
      this.setState({
        obj: data
      });
   });
  }

  componentDidMount() {
    console.log('Check to see if firing')
    this.getAllStarShips();
  }

  render() {
    console.log('state:',JSON.stringify(this.state.obj, null, 2));
  return (
    &lt;div&gt;
      &lt;h1&gt;React-Reach!&lt;/h1&gt;
      &lt;p&gt;{this.state.obj.allStarships.edges[1].node.name}&lt;/p&gt;
    &lt;/div&gt;
  );
}

}

render(
  &lt;App&gt;&lt;/App&gt;,
  document.getElementById('app')
);
</code></pre>
","3915146","","","","","2017-07-17 14:47:30","componentDidMount() not being called when react component is mounted","<reactjs>","1","7","2","",""
"44674711","1","44675207","","2017-06-21 11:21:33","","0","92","<p>I am trying to show <code>message</code> <code>'hello brozz..'</code> from the reducer to a component <code>render()</code> method.<code>ComponentDidMount()</code> get the <code>this.props.message</code> as <a href=""https://i.stack.imgur.com/qpNj6.png"" rel=""nofollow noreferrer"">please see the image</a>. And my reducer is like </p>

<pre><code> export const geod = (state ={}, action) =&gt; {
      console.log('inside reducer');
        switch(action.type){


            case 'INITIAL_MESSAGE':

              return [
                        ...state, {
                          message:'hello brozz..'
                        }
                      ]
            case 'CLICK_MESSAGE':
                  return [ 
                            ...state, { 
                                            message: ''
                                      }
                          ]
            default:
                    return state;
        }

     };
</code></pre>

<p>But I can not use <code>this.props.message</code> as <code>&lt;div&gt;&lt;div&gt;{this.props.message}&lt;/div&gt;&lt;/div&gt;</code> inside the render method. I am getting the error </p>

<pre><code>Objects are not valid as a React child (found: object with keys {}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons
</code></pre>

<p>My component is,</p>

<pre><code>import React, { Component } from 'react';
import logo from './logo.svg';
import './App.css';
import { initialMessageAction, clickButtonAction } from './redux.js';
import { connect } from 'react-redux';
import { Message } from './messageComponent';

class App extends Component {

  componentWillMount() {
    console.log('component will mount');
    let data = this.props.initialMessageAction();
  }
  componentDidUpdate() {
    console.log('comp Did Update')
    console.log(this.props.message)
  }
  render() {

    return (
      &lt;div className=""App""&gt;
        &lt;div className=""App-header""&gt;        
        &lt;/div&gt;
        &lt;p className=""App-intro""&gt;
        react-redux-data-flow
        &lt;/p&gt; 
              &lt;div&gt;{this.props.message}&lt;/div&gt;
             &lt;div&gt;{this.props? &lt;div&gt;hi ..&lt;button onClick={ () =&gt; this.props.clickButtonAction() }&gt;hide message&lt;/button&gt;&lt;/div&gt;: ''}&lt;/div&gt;
      &lt;/div&gt;
    );
  }
}


    const mapStateToProps = (state, ownProperty) =&gt; ({ 

    message:state.geod,   


  });   

   const mapDispatchToProps =  { 

     initialMessageAction,
    clickButtonAction

  } 

  export default connect(
                             mapStateToProps,
                             mapDispatchToProps

                    )(App);
</code></pre>
","6108331","","6108331","","2017-06-21 11:49:54","2017-06-21 12:12:09","Can not show message from the reducer in react","<reactjs><react-redux>","1","3","2","",""
"36507534","1","","","2016-04-08 19:13:51","","0","368","<p>I am using the React-Rails gem and accessing a json object <code>items</code> from a Rails controller. </p>

<p>Rails controller:</p>

<pre><code>class ItemsController &lt; ApplicationController
  def index
    @items = Item.all
    render json: @items
  end
end
</code></pre>

<p>My React <code>App</code> component accesses these items and attempts to pass it as a prop to a child component: </p>

<pre><code>class App extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            items: {},
            activeTab: 'items'
        };
    }

    componentDidMount() {
        $.getJSON('/items.json', (response) =&gt; { 
            this.setState({ items: response }) 
        });
    }

  render () {
        return (
            &lt;div&gt;
                &lt;ItemsContent items={this.state.items}&gt; 
            &lt;/div&gt;
        );
  }
}
</code></pre>

<p>And this child component looks like this:</p>

<pre><code>class ItemsContent extends React.Component {
  render () {           
    return (
      &lt;div&gt;
        &lt;div&gt;Items: {this.props.items}&lt;/div&gt;
      &lt;/div&gt;
    );
  }
}

ItemsContent.propTypes = {
  items: React.PropTypes.object
};
</code></pre>

<p>And I get this error: </p>

<pre><code>react.js?body=1:1324 Uncaught Invariant Violation: Objects are not valid as a React child (found: object with keys {}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of `ItemsContent`.
</code></pre>

<p>How do I get around this? Is there a way to easily use JSON objects in my React components?</p>

<p>Right now I tried wrapping the JSON object in an array:</p>

<pre><code>            tabbedContent = &lt;ItemsContent items={[this.state.items]}&gt;&lt;/ItemsContent&gt;;
</code></pre>
","2082000","","2082000","","2016-04-08 19:23:27","2016-04-08 21:20:02","react json Objects are not valid as a React child","<ruby-on-rails><ruby><reactjs><react-rails>","2","2","","",""
"36226702","1","","","2016-03-25 19:32:56","","12","2916","<p>I am attempting to wrap the YouTube Android API as a UI Component for React Native. I have been successful in the Android configuration of things (getting onInitializationSuccess), however I am unable to figure out how get the YouTubePlayerView back to my React Native app.</p>

<p>According to the docs, they recommend using YouTubePlayerFragment if you can not extend YouTubeBaseActivity. Since React Native on Android does not use XML based layouts I attempted to create the views programmatically. However, when I return the wrapping View ( I tried as a FrameLayout, but not sure if that was the right choice) I created it does not render anything on the application.</p>

<p>I am looking to keep it extremely simple for now, here are the necessary bits of code:</p>

<p><strong>YouTubeManager.java</strong></p>

<pre><code>public class YouTubeManager extends SimpleViewManager&lt;FrameLayout&gt;  implements YouTubePlayer.OnInitializedListener {
// ...
@Override
    protected FrameLayout createViewInstance(ThemedReactContext reactContext) {
        this.reactContext = reactContext;

        FrameLayout view = new FrameLayout(reactContext);
        view.setId(View.generateViewId());


        FragmentManager fragmentManager = activity.getFragmentManager();
        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();

        YouTubePlayerFragment fragment = new YouTubePlayerFragment();
        fragmentTransaction.add(view.getId(), fragment);

        fragmentTransaction.commit();

        fragment.initialize(""SECRET_KEY"", this);

        return view;
    }
// ... 
}
</code></pre>

<p><strong>YouTube.js</strong></p>

<pre><code>class YouTube extends Component {
    render () {
        return &lt;YouTubeAndroid {...this.props}/&gt;;
    }
};

var iface = {
    name : 'YouTube',
    propTypes : {
        ...View.propTypes
    },
};


var YouTubeAndroid = requireNativeComponent('YouTube', iface);

module.exports = YouTube;
</code></pre>

<p><strong>index.android.js</strong></p>

<pre><code>var YouTube = require('./YouTube');

class YouTubePlayer extends Component {
  render() {
    return (
      &lt;View style={styles.container}&gt;
        &lt;Text&gt;hello&lt;/Text&gt;
        &lt;YouTube /&gt;
      &lt;/View&gt;
    );
  }
}
</code></pre>

<p>Any help would be really appreciated, thank you!</p>
","398136","","","","","2016-03-30 02:33:46","Exposing Fragment in React Native Android ViewManager","<android><react-native><android-youtube-api>","1","4","3","",""
"45802834","1","","","2017-08-21 17:39:29","","4","165","<p>I am tring to test my components but every component that exports createFragmentContainer shows me this issue:</p>

<pre><code>console.error node_modules\react-native\Libraries\Core\ExceptionsManager.js:73
      Warning: Failed context type: Invalid prop/context `relay` supplied to `Relay(Product)`, expected `undefined` to be an object with an `environment` and `variables`.
          in Relay(Product)
    console.error node_modules\react-native\Libraries\Core\ExceptionsManager.js:73
      React caught an error thrown by Relay(Product). You should fix this error in your code. Consider adding an error boundary to your tree to customize error handling behavior.

      TypeError: Cannot read property 'environment' of undefined

      The error is located at:
          in Relay(Product)
</code></pre>

<p>so does jest support fragment containers or the problem is in my project ?</p>
","5586995","","184883","","2017-08-22 07:03:23","2017-08-22 07:03:23","Testing Relay [createFragmentContainer] with jest?","<reactjs><unit-testing><react-native><jestjs>","0","1","1","",""
"44336300","1","","","2017-06-02 19:39:49","","1","52","<p>My backend schema has a model, <code>Request</code>, that uses a polymorphic association such that several different models all have-many Requests and a <code>Request</code> can belong to any one of those different models.</p>

<p>I've got a React Component, <code>RequestList</code>, that I want to be able to use in any of it's potential parent models.</p>

<p>Here's some sample code:</p>

<p>FooShowView.js</p>

<pre><code>class FooShowView extends Component {
  render() {
    return (
      &lt;RequestList router={this.props.router} /&gt;
    )
  }
}

export default Relay.createContainer(ShowView, {
  initialVariables: {
    FooId: null
  },
  fragments: {
    viewer: (variables) =&gt; {
      return Relay.QL`
        fragment on Viewer {
          Foo(id: $FooId) {
            id${ RequestList.getFragment('Foo') }
          }
        }`
      `
    }
  }
});
</code></pre>

<p>RequestList.js</p>

<pre><code>class RequestList extends Component {

  renderRows = () =&gt; {
    return this.props.requests.edges.map(edge =&gt; edge.node).map((intReq, i) =&gt; {
      return (
        &lt;RequestRow
          request={ intReq }
          key={ i }
        /&gt;
      );
    });
  }

  render() {
    return (
      &lt;Table&gt;
        { this.renderRows() }
      &lt;/Table&gt;
    );
  }
};

export default Relay.createContainer(RequestList, {
  fragments: {
    foo: () =&gt; Relay.QL`
      fragment on Foo {
        requests(first: 10) {
          edges {
            node {
              ${ RequestRow.getFragment('request') }
            }
          }
        }
      }
    `,
  }
})
</code></pre>

<p>The problem is that now to render the RequestTable for another one of <code>Request</code>'s parents, say in the <code>BarShowView</code>, I'd need to add a new fragment to <code>RequestList</code>:</p>

<pre><code>bar: () =&gt; Relay.QL`
  fragment on Bar {
    requests(first: 10) {
      edges {
        node {
          ${ RequestRow.getFragment('request') }
        }
      }
    }
  }
`,
</code></pre>

<p>And then Relay will spit out warnings that I need to provide both bar and foo as props to my List, even if it's not relevant to the current view.</p>

<p>Since <code>Request</code> is associated with roughly 8 different models in my schema, this will quickly become unreasonable.</p>

<p>What is the correct way to create a reusable react component that will render the polymorphic children of whatever record I'm looking at?</p>
","5062425","","","","","2017-06-07 15:31:16","Writing Fragments for Polymorphic Associations in RelayJS and GraphQL","<reactjs><relayjs><graphql-js>","1","0","1","",""
"35254232","1","35493988","","2016-02-07 13:44:18","","1","929","<p>As per instructions of adding <a href=""https://github.com/lelandrichardson/react-native-maps/blob/master/docs/installation.md"" rel=""nofollow"">react-native-maps</a>, adding to MainActivity:</p>

<pre><code>protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    mReactRootView = new ReactRootView(this);

    mReactInstanceManager = ReactInstanceManager.builder()
            .setApplication(getApplication())
            .setBundleAssetName(""index.android.bundle"")
            .setJSMainModuleName(""index.android"")
            .addPackage(new MainReactPackage())
            .addPackage(new AirPackage()) // &lt;---- and This!
            .setUseDeveloperSupport(BuildConfig.DEBUG)
            .setInitialLifecycleState(LifecycleState.RESUMED)
            .build();

    mReactRootView.startReactApplication(mReactInstanceManager, ""MelBike"", null);

    setContentView(mReactRootView);

}
</code></pre>

<p>I encountered this exception: </p>

<pre><code>java.lang.AssertionError: Attached DialogModule to host with pending alert but no FragmentManager (not attached to an Activity).
                                                           at com.facebook.infer.annotation.Assertions.assertNotNull(Assertions.java:28)
                                                           at com.facebook.react.modules.dialog.DialogModule.onHostResume(DialogModule.java:199)
                                                           at com.facebook.react.bridge.ReactContext.onResume(ReactContext.java:140)
                                                           at com.facebook.react.ReactInstanceManagerImpl.moveReactContextToCurrentLifecycleState(ReactInstanceManagerImpl.java:761)
                                                           at com.facebook.react.ReactInstanceManagerImpl.setupReactContext(ReactInstanceManagerImpl.java:599)
                                                           at com.facebook.react.ReactInstanceManagerImpl.access$700(ReactInstanceManagerImpl.java:84)
                                                           at com.facebook.react.ReactInstanceManagerImpl$ReactContextInitAsyncTask.onPostExecute(ReactInstanceManagerImpl.java:187)
                                                           at com.facebook.react.ReactInstanceManagerImpl$ReactContextInitAsyncTask.onPostExecute(ReactInstanceManagerImpl.java:162)
                                                           at android.os.AsyncTask.finish(AsyncTask.java:651)
                                                           at android.os.AsyncTask.-wrap1(AsyncTask.java)
                                                           at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:668)
                                                           at android.os.Handler.dispatchMessage(Handler.java:102)
                                                           at android.os.Looper.loop(Looper.java:148)
                                                           at android.app.ActivityThread.main(ActivityThread.java:5417)
                                                           at java.lang.reflect.Method.invoke(Native Method)
                                                           at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
                                                           at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
</code></pre>

<p>This is the source of the exception in react native code, DialogModule class:</p>

<pre><code>public void onHostResume() {
mIsInForeground = true;
// Check if a dialog has been created while the host was paused, so that we can show it now.
FragmentManagerHelper fragmentManagerHelper = getFragmentManagerHelper();
Assertions.assertNotNull(
    fragmentManagerHelper,
    ""Attached DialogModule to host with pending alert but no FragmentManager "" +
    ""(not attached to an Activity)."");
fragmentManagerHelper.showPendingAlert();
</code></pre>

<p>I have tried to comment out the assertion in DialogModule class and run <strong>react-native run-android</strong> but it seems it was not reflected in compiled code that ran in my emulator.</p>

<p>Also tried to set the <strong>LifecycleState.RESUMED</strong> to <strong>LifecycleState.BEFORE_RESUME</strong> but then the app only loads blank screen and Dev menu wasn't functioning properly.</p>

<p>Am I missing something?</p>
","5895020","","","","","2016-09-13 11:48:06","react-native-maps integration issue with react-native 0.19.0","<android><react-native>","1","0","1","",""
"37274917","1","37275593","","2016-05-17 11:32:38","","2","54","<p>I am trying to create a table using reactjs. I wrote a class and using this as directive, passing config and data and trying to populate the table.</p>

<pre><code>function createRows() {
    let self = this;
    return  &lt;tbody&gt;{_.each(self.props.tableData, function(r) {
        &lt;tr&gt;
            {_.each(self.props.columnConfigs, function(c) {
            &lt;td&gt;{r[c.columnName]}&lt;/td&gt;
        })}
        &lt;/tr&gt;
    })}&lt;/tbody&gt;;
}

function createHeaders() {

    let self = this;
    return &lt;thead&gt;
    {_.each(self.props.columnConfigs, function(c) {
            &lt;th&gt;c.displayName&lt;/th&gt;
        })}
    &lt;/thead&gt;
}
class TableComponent extends React.Component {
    constructor(props, context) {
        super(props, context);
    }

    render() {

       return (&lt;table&gt;
            {createHeaders.call(this)}
            {createRows.call(this)}
        &lt;/table&gt;)
    }


}

function TableComponentFactory() {
    return TableComponent;
}

export default TableComponentFactory;
</code></pre>

<p>But this is not working. it throws an error:-</p>

<pre><code>Invariant Violation: Objects are not valid as a React child (found: object with keys {columnName, displayName, isSortable, path, hidden, columnStyle, editable, isId}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of `TableComponent`.
</code></pre>

<p>which is actually the columnConfig. I am not able to understand why this happening. What mistake I am doing, also a bit of explanation will be great.   </p>
","2696466","","","","","2016-05-17 12:01:38","creating table with reactjs","<angularjs><reactjs>","1","0","1","",""
"45902594","1","","","2017-08-27 07:19:04","","0","64","<p>I'm using some library, it's return to me Dom object of html element. 
So I wanna set this dom object to state in reactjs and render to UI like this: </p>

<pre><code>this.setState({
  video: videoElement
})
render () {
  return (
         &lt;div&gt;{this.state.video}&lt;/div&gt;
         )
       }     
</code></pre>

<p>Because video is not React element. So I got an error: </p>

<pre><code>invariant.js:44 Uncaught (in promise) Error: Objects are not valid as a React child (found: [object HTMLVideoElement]). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of `Video`.
</code></pre>

<p>Are there any way to convert Dom Object to React element?</p>
","1694163","","","","","2017-08-27 09:13:40","Convert Dome javascript Object to react element","<javascript><reactjs>","1","2","","",""
"46644417","1","46665602","","2017-10-09 10:36:23","","0","132","<p>I cant seem to get the ""count"" data to show up in the UI. I'm sure I'm missing something about using two fragments in the same container or rendering the edges array or async, maybe.
All other data is showing except <code>{this.props.link.votes.count}</code> which comes up empty in the UI while throwing no errors on the server or client in dev tools. Its just not showing up. 
Any help would be greatly appreciated. Thank you.</p>

<p>The react component looks like:</p>

<pre><code>       &lt;div className=""f6 lh-copy gray""&gt;
        {"" ""}
        {this.props.link.votes.count} votes | by {"" ""}
        {this.props.link.postedBy
          ? this.props.link.postedBy.name
          : ""Unknown""}{"" ""}
        {timeDifferenceForDate(this.props.link.createdAt)}{"" ""}
      &lt;/div&gt;{"" ""}
</code></pre>

<p>I've got this working graphql query that pulls up the correct data in graphiql.</p>

<pre><code>{
  links(first: 20) {
    pageInfo {
      hasPreviousPage
      hasNextPage
    }
    edges {
      node {
        id
        url
        description
        votes {
          ...Link_votes
        }
      }
    }
  }
}

fragment Link_votes on VoteConnection {
  edges {
    cursor
    node {
      count
    }
  }
}
</code></pre>

<p>This is the output</p>

<pre><code>{
  ""data"": {
    ""links"": {
      ""pageInfo"": {
        ""hasPreviousPage"": false,
        ""hasNextPage"": false
      },
      ""edges"": [
        {
          ""node"": {
            ""id"": ""TGluazo1OWRiNDc4ODY5YmJkOTViOWY2YzVkMGY="",
            ""url"": ""afasfdasf"",
            ""description"": ""adasdf"",
            ""votes"": {
              ""edges"": [
                {
                  ""cursor"": ""YXJyYXljb25uZWN0aW9uOjA="",
                  ""node"": {
                    ""count"": ""3""
                  }
                }
              ]
            }
          }
        }
      ]
    }
  }
}
</code></pre>

<p>In my Link.js component i've got these fragments that duplicate the above graphql call</p>

<pre><code>createFragmentContainer(


Link,
  graphql`
    fragment Link_votes on VoteConnection {
      edges {
        cursor
        node {
          count
        }
      }
    }
  `
);

export default createFragmentContainer(Link, {
  link: graphql`
    fragment Link_link on Link {
      id
      description
      url
      createdAt
      postedBy {
        id
        name
      }
      votes {
        ...Link_votes
      }
    }
  `
});
</code></pre>

<p>The full Link.js file is in this <a href=""https://gist.github.com/idkjs/7d2004b57fc2d60d9f6357514c1f5b39"" rel=""nofollow noreferrer"">gist</a>.</p>

<p>So the idea would be, given the structure of the 'link' node, this should work:</p>

<pre><code>{this.props.link.votes.edges[0].node.count}
</code></pre>

<p>'link' gets you the link you are on in the graphql response. 'votes' gets you the votes key which has an array of edges which always returns just one object in the array containing the count result for votes. So you want index 0 in that array which would be</p>

<pre><code>`{ ""cursor"": ""YXJyYXljb25uZWN0aW9uOjA="",
   ""node"": { 
      ""count"": ""3""
   }
 }`
</code></pre>

<p>If we want the node propery on index 0, we use dot notation, then same for the count property key on the object. This is not working. </p>
","2336356","","2336356","","2017-10-09 18:28:52","2017-10-10 11:27:48","Rendering Relay Modern Fragments in React","<graphql><relayjs><react-relay><graphiql>","1","0","","",""
"45464756","1","45480495","","2017-08-02 15:16:01","","0","64","<p>I'm having this component. I want to load the freight values via ajax into a state property of this class.</p>

<pre><code>import React, { Component } from 'react';
import Freight from './Freight';
import CreateFreightEntryModal from './CreateFreightEntryModal';
import createFragment from 'react-addons-create-fragment'; // ES6

class FreightList extends Component {

    constructor(props) {
        super(props);
        this.state = {
            search: """",
            freights: [],
            parent: props.parent,
            updateZonesTable: props.updateZonesTable
        };
        this.loadFreights();
    }

    componentWillReceiveProps(nextProps) {
        this.setState({
          freights: nextProps.freights
        });
    }


    loadFreights() {
        $.ajax({
          type: ""POST"",
          context:this,
          dataType: ""json"",
          async: true,
          url: ""../data/get/json/freight"",
          data: ({ 
              _token : window.Laravel.csrfToken,
          }),
          success: function (data) {

              var arr = $.map(data, function(el) { 
                  return el; 
                }
                return returnArray;
              });

              this.setState({
                freights: arr
              });

          }
      });
    }
...
render() {
        let filteredList = this.state.freights.filter((freight) =&gt; {
            let search = this.state.search.toLowerCase();
            //var values = Object.values(freight);
            var values = Object.keys(freight).map(function(itm) { return freight[itm]; });
            var flag = false
            values.forEach((val) =&gt; {
                if(val != undefined &amp;&amp; val.toString().toLowerCase().indexOf(search) &gt; -1) {
                    flag = true;
                    return;
                }   
            });
            if(flag) 
                return freight;
        });
        return (
            &lt;div className=""panel-group""&gt;
                &lt;div className=""panel panel-default""&gt;
                    &lt;div className=""panel-heading""&gt;
                        &lt;a className=""accordion-toggle"" data-toggle=""collapse"" href=""#freightListPanelBody""&gt;&lt;i className=""glyphicon glyphicon-menu-down"" aria-hidden=""true""&gt;&lt;/i&gt; Freights&lt;/a&gt;
                    &lt;/div&gt;
                    &lt;div className=""panel-body"" id=""freightListPanelBody"" className=""collapse in""&gt;
                        &lt;div className=""row padding10px""&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-9 col-lg-9""&gt;
                                &lt;div className=""form-group""&gt;
                                    &lt;button className=""btn btn-default"" onClick={this.openCreateModal.bind(this)}&gt;Create new entry&lt;/button&gt;
                                    &lt;CreateFreightEntryModal onClose={this.onClose.bind(this)} onClick={this.onClick.bind(this)} /&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;

                        &lt;div className=""row padding10px""&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-12 col-lg-12""&gt;
                                Search
                            &lt;/div&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-9 col-lg-9""&gt;
                                &lt;div className=""form-group""&gt;
                                    &lt;input className=""form-control"" type=""text"" value={this.state.search} placeholder=""Search"" onChange={this.updateSearch.bind(this)} /&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div className=""row padding10px""&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-12 col-lg-12""&gt;
                                &lt;div className=""table-responsive list""&gt;
                                    &lt;table className=""table table-hover table-striped"" id=""freightListTable""&gt;
                                        &lt;thead&gt;
                                            &lt;tr&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;ID&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Company&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Zone Logic&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Freight Type&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Transport Mode&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Haulier&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Haulier 2&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Warehouse&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;by quantity&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Quantity type&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;&amp;#8960;-Freight&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone"" colSpan=""2""&gt;Price break&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Place of departure&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Customer&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Product&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Product group&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone"" colSpan=""2""&gt;Valid&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Min. quantity&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Supplier&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Currency&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;No. zip code places&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Haulier is supplier&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;from country&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Anzahl_pauschalstaffeln&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Palgewlogik&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Volumengewichtfracht&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Volgewfaktor&lt;/th&gt;
                                            &lt;/tr&gt;
                                            &lt;tr&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;from&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;until&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;from&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;until&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                            &lt;/tr&gt;
                                        &lt;/thead&gt;
                                        &lt;tbody&gt;
                                        {
                                            filteredList.map((freight)=&gt; {
                                              return (
                                                &lt;Freight freight={freight} onClick={this.handleFreightClick.bind(this)} key={freight.id} /&gt;
                                              );
                                            })
                                        }
                                        &lt;/tbody&gt;
                                    &lt;/table&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        );
    }
}

export default FreightList
</code></pre>

<p>My ajax result looks like this:</p>

<p><a href=""https://i.stack.imgur.com/TpN95.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TpN95.png"" alt=""enter image description here""></a></p>

<p>React throws this error:</p>

<blockquote>
  <p>Error: Objects are not valid as a React child (found: object with keys
  {Nummer, Bezeichnung, id}). If you meant to render a collection of
  children, use an array instead or wrap the object using
  createFragment(object) from the React add-ons. Check the render method
  of <code>Freight</code>.</p>
</blockquote>

<p>How can I convert the AJAX JSON result in an acceptable format for react?</p>

<p><strong>UPDATE</strong></p>

<p>Freight component:</p>

<pre><code>import React, { Component } from 'react';

class Freight extends Component {

    constructor(props) {
        super(props);
        this.state = {
            freight: props.freight,
            onClick: props.onClick,
            isChecked: false
        };
    }

    onClick(event) {
        $('#freightListTable').find(""input"").removeAttr(""checked"");
        this.setState({isChecked: !this.state.isChecked})
        this.props.onClick(this.state.freight, !this.state.isChecked);
    }

    render() {
        return (

                &lt;tr className=""cursorPointer"" onClick={this.onClick.bind(this)}&gt;
                    &lt;td&gt;
                        &lt;div className=""checkbox""&gt;
                          &lt;label&gt;
                            &lt;input type=""checkbox"" value="""" checked={this.state.isChecked} /&gt;
                          &lt;/label&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.ID }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.firma }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap verticalAlignBottom""&gt;
                        { (this.state.freight.Zonenlogik == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.frachtart }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.transportart }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{this.state.freight.spedit_nr}&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.spediteur }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.spedit2_nr }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{this.state.freight.lager_nr}&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.lager }&lt;br /&gt;
                         &lt;span className=""label label-danger ""&gt;{ this.state.freight.lagerSperr }&lt;/span&gt;
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.per_menge }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.mengeneinheit }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.durchschnittsfracht == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.ab_staffelmenge == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.bis_staffelmenge == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.art_zuordnungs_nr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.abgangsort }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.kdnr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.kunde }&lt;br /&gt;
                        &lt;span className=""label label-danger""&gt;{ this.state.freight.kundeSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.artikel_nr } &lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.artikel }&lt;br /&gt;
                         &lt;span className=""label label-danger""&gt;{ this.state.freight.artikelSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.wog_nr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.wog }&lt;br /&gt;
                         &lt;span className=""label label-danger""&gt;{ this.state.freight.wogSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.gueltig_von }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.gueltig_bis }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.mindestmenge }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.lieferanten_nr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.lieferant }&lt;br /&gt;
                         &lt;span className=""label label-danger""&gt;{ this.state.freight.lieferantSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.waehrungName }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.suchart_nr }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.spedit_ist_lieferant == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.land }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.anzahl_pauschalstaffeln }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.palgewlogik }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.volumengewichtfracht }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.volgewfaktor }
                    &lt;/td&gt;
                &lt;/tr&gt;

        );
    }
}

export default Freight
</code></pre>
","3725142","","3725142","","2017-08-02 15:20:54","2017-08-03 09:42:27","AJAX JSON result to react state property","<javascript><json><ajax><reactjs>","2","4","","",""
"46169882","1","","","2017-09-12 06:57:49","","0","25","<p>I am using scalajs-react-interface and have a <code>PostList</code> extending from <code>RelayFragmentComponentP</code> and I want to navigate to Post screen when user clicks on any of the Post item on the list screen but there is no navigate object in <code>RelayFragmentComponent</code> so I'm not sure what is the best way to navigate from <code>PostList</code> to <code>Post</code> screen.</p>

<p>Can someone help me please?</p>
","3839735","","","","","2017-09-12 06:57:49","Relay-modern - How to navigate in RelayFragmentComponent?","<scala><react-native><scala.js><relaymodern>","0","0","","",""
"47114932","1","","","2017-11-04 19:49:49","","1","43","<p>I'm building a simple news aggregator with React/Relay and I'm having issues with Relay Modern. Whenever I run the compiler it generates a FeatureRootQuery.graphql.js file. However, it doesn't generate a FeatureRow_viewer.graphql.js file for the corresponding fragment despite that fragment being included in the FeatureRootQuery.graphql.js file. The react app fails to compile because it cannot find the file. Anyone know what might be causing this? </p>

<p>FeatureRoot.js</p>

<pre><code>import React, { Component } from 'react';
import { connect } from 'react-redux';
import {
  QueryRenderer,
  graphql
} from 'react-relay';
import environment from '../Environment.js';
import FeatureRow from './FeatureRow';


class FeatureRoot extends Component {
  render() {
    const level = this.props.active;

    return (
      &lt;QueryRenderer
        environment={environment}
        query={graphql`
          query FeatureRootQuery {
            ...FeatureRow_viewer
          }
        `}
        render={({error, props}) =&gt; {
          if (error) {
            return (&lt;div&gt;{error.message}&lt;/div&gt;);
          } else if (props) {
            return (&lt;FeatureRow viewer={props} level={level}/&gt;)
          }
          return (&lt;div&gt;Loading&lt;/div&gt;);
        }}
      /&gt;
    )
  }
}

function mapStateToProps(state) {
  return { active: state.level.active }
}

export default connect(mapStateToProps, null)(FeatureRoot);
</code></pre>

<p>FeatureRow.js</p>

<pre><code>import React, { Component } from 'react';
import FeatureCarousel from './FeatureCarousel';
import FeatureList from './FeatureList';
import ReactDOM from 'react-dom';
import {
  createFragmentContainer,
  graphql
} from 'react-relay';
import '../styles/FeatureRow.css';


class FeatureRow extends Component {
  constructor() {
    super();

    this.state = {
      carouselImgHeight: 0,
      carouselTextHeight: 175,
      carouselHeight: 0
    };
    this.updateHeight = this.updateHeight.bind(this);
  }

  componentDidMount() {
    this.updateHeight();
  }

  updateHeight() {
    ...
  }

  componentWillMount() {
    window.addEventListener(""resize"", this.updateHeight);
  }

  componentWillUnmount() {
    window.removeEventListener(""resize"", this.updateHeight);
  }

  render() {
    let carouselArticles = this.props.viewer.sources[0].articles;
    let { level } = this.props;
    let { carouselHeight } = this.state;

    return (
      &lt;div id=""feature-row""&gt;
        &lt;div className=""row""&gt;
          &lt;div className=""col-sm-6 col-carousel""&gt;
            &lt;FeatureCarousel
              level={level}
              articles={carouselArticles}
            /&gt;
          &lt;/div&gt;
          &lt;div className=""col-sm-6 col-list""&gt;
            &lt;FeatureList
              articles={carouselArticles}
              carouselHeight={carouselHeight}
            /&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    )
  }
}


export default createFragmentContainer(
  FeatureRow,
  graphql`
    fragment FeatureRow_viewer on Query {
      sources(
        filter: {
          names: [""The New York Times"", ""The Washington Post"", ""The Wall Street Journal"", ""USA Today"", ""Associated Press"", ""Reuters""]
        }
      ) {
        id
        name
        articles {
          id
          author
          title
          description
          url
          urlToImage
          publishedAt
        }
      }
    }
  `,
);
</code></pre>
","6090736","","","","","2017-11-04 19:49:49","Relay Modern Compiler Skips Generating File for Query Fragment","<javascript><reactjs><relayjs><relaymodern>","0","1","","",""
"38698542","1","","","2016-08-01 12:10:55","","1","733","<p>I have webpack configuration for site development using ES6, react and react-router. It uses developer server with hot-reload and routes.</p>

<p><strong>/config/webpack.dev:</strong></p>

<pre><code>var webpack = require('webpack');
var path = require('path');
var APP_DIR = path.join(__dirname, '..', 'app');

module.exports = {
  debug: true,
  devtool: 'eval',
  entry: ['webpack-hot-middleware/client', './app/index.js'],
  module: {
    preLoaders: [{
      test: /\.js?$/,
      loaders: [""babel-loader"", ""eslint-loader""],
      exclude: /node_modules/,
      include: APP_DIR
    }],
    loaders: [
      {test: /\.js?$/, loaders: ['react-hot', 'babel'], include: APP_DIR},
      {
        test: /\.scss$/, include: APP_DIR,
        loader: 'style!css?modules&amp;importLoaders=2&amp;sourceMap&amp;localIdentName=[local]___[hash:base64:5]!autoprefixer?browsers=last 2 version!sass?outputStyle=expanded&amp;sourceMap'
      },
      {
        test: /\.css$/, include: APP_DIR,
        loader: ""style!css!autoprefixer?browsers=last 2 version!""
      },
      {test: /\.(jpe?g|png|gif|svg)$/i, loaders: ['url?limit=8192', 'img']},
      {test: /\.woff(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=application/font-woff""},
      {test: /\.woff2(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=application/font-woff""},
      {test: /\.ttf(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=application/octet-stream""},
      {test: /\.eot(\?v=\d+\.\d+\.\d+)?$/, loader: ""file""}
    ]
  },
  output: {
    filename: 'app.js',
    path: path.join(__dirname, '..', 'build'),
    publicPath: '/static/'
  },
  plugins: [
    new webpack.HotModuleReplacementPlugin(),
    new webpack.NoErrorsPlugin()
  ],
  resolve: {
    root: [path.resolve('../app')],
    extensions: ['', '.jsx', '.js']
  },
  sassLoader: {
    includePaths: [path.resolve(__dirname, ""./app"")]
  }
};
</code></pre>

<p>I run build by <strong><em>npm start</em></strong>. Fragment of my <strong>package.json</strong>:</p>

<pre><code>...
scripts"": {
    ""build:webpack"": ""NODE_ENV=production webpack --config config/webpack.prod.js"",
    ""clean"": ""rimraf build"",
    ""start"": ""node dev_server.js""
}
...
</code></pre>

<p><strong>dev_server.js:</strong></p>

<pre><code>var path = require('path');
var express = require('express');
var webpack = require('webpack');
var config = require('./config/webpack.dev');

var app = express();
var compiler = webpack(config);
var port = process.env.PORT || 3000;

app.use(require('webpack-dev-middleware')(compiler, {
  noInfo: true,
  publicPath: config.output.publicPath
}));

app.use(require('webpack-hot-middleware')(compiler));
app.use(express.static(path.join(__dirname, '..', 'static')));

app.get('*', (req, res) =&gt; {
  res.sendFile(path.join(__dirname, 'index.html'));
});

app.listen(port, 'localhost', err =&gt; {
  if (err) {
    console.log(err);
    return;
  }

  console.log(`Listening at http://localhost:${port}`);
});
</code></pre>

<p>I also have <strong>/config/webpack.prod:</strong></p>

<pre><code>var path = require('path');
var webpack = require('webpack');
var ExtractTextPlugin = require('extract-text-webpack-plugin');
var CleanPlugin = require('clean-webpack-plugin');

var APP_DIR = path.join(__dirname, '..', 'app');

var projectRootPath = path.resolve(__dirname, '../');
var assetsPath = path.resolve(projectRootPath, './build');

module.exports = {
  devtool: 'source-map',
  context: path.resolve(__dirname, '..'),
  entry: './app/index.js',
  module: {
    loaders: [
      {
        test: /\.js?$/,
        loaders: ['babel'],
        include: APP_DIR
      },
      {
        test: /\.scss$/, include: APP_DIR,
        loader: 'style!css?modules&amp;importLoaders=2&amp;sourceMap&amp;localIdentName=[local]___[hash:base64:5]!autoprefixer?browsers=last 2 version!sass?outputStyle=expanded&amp;sourceMap'
      },
      {
        test: /\.css$/, include: APP_DIR,
        loader: ""style!css!autoprefixer?browsers=last 2 version!""
      },
      {test: /\.(jpe?g|png|gif|svg)$/i, loaders: ['url?limit=8192', 'img']},
      {test: /\.woff(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=application/font-woff""},
      {test: /\.woff2(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=application/font-woff""},
      {test: /\.ttf(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=application/octet-stream""},
      {test: /\.eot(\?v=\d+\.\d+\.\d+)?$/, loader: ""file""},
      {test: /\.svg(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=image/svg+xml""}]
  },
  output: {
    path: assetsPath,
    filename: 'app.js',
    publicPath: '/build/'
  },
  plugins: [
    new CleanPlugin([assetsPath], { root: projectRootPath }),
    new ExtractTextPlugin('[name]-[chunkhash].css', {allChunks: true}),
    new webpack.optimize.OccurrenceOrderPlugin(),
    new webpack.optimize.DedupePlugin(),
    new webpack.DefinePlugin({
      'process.env': {
        'NODE_ENV': JSON.stringify('production')
      }
    }),
    new webpack.optimize.UglifyJsPlugin({
      compressor: {
        warnings: false
      }
    })
  ],
  progress: true,
  resolve: {
    root: [path.resolve('../app')],
    extensions: ['', '.jsx', '.js']
  },
  sassLoader: {
    includePaths: [path.resolve(__dirname, ""./app"")]
  }
};
</code></pre>

<p>I run it by <strong><em>npm run build</em></strong>. It generate file in app directory. But when i open index.html in browser, page is empty. In firefox inspector i have comment: <strong><em>react-empty: 1</em></strong></p>

<p>How can I use webpack to build my project to use it in browser without server?</p>
","6133470","","","","","2016-08-04 06:51:54","webpack production config (react, es6)","<node.js><reactjs><webpack><react-router><webpack-dev-server>","1","0","","",""
"39505284","1","","","2016-09-15 07:26:58","","0","558","<p>I am having a really hard time trying to get my head around Relay routes, react-router params and building the queries and containers in general! </p>

<p>I want to edit a Feature when the user clicks on a specific Feature in a FeatureList. It passes a param called ""id"" which is the id of the Feature in Route.js </p>

<pre><code>  &lt;Route path='/' component={AppComponent} queries={ViewerQuery}&gt;
    &lt;IndexRoute component={FeaturesContainer} queries={ViewerQuery} /&gt;
    &lt;Route path='/feature' component={FeatureComponent} queries={ViewerQuery} /&gt;
    &lt;Route path=""/feature/edit/:id"" component={FeatureEditComponent} queries={FeatureQuery}/&gt;
    &lt;Redirect from='*' to='/' /&gt;
  &lt;/Route&gt;
</code></pre>

<p>In my FeatureQuery file I have the following query:</p>

<pre><code>export default {
  viewer: (Component) =&gt; Relay.QL`
    query {
      viewer {
        ${Component.getFragment('viewer')}
      }
    }
  `
};
</code></pre>

<p>At this point I am completely stuck. How do I expand this to include the ""id"" and query the features using the ""id""?
And what would the relating relay container fragment be shaped like? I only see examples going one level deep. </p>

<p>I tried this but I know it isn't right:</p>

<pre><code>export default {
    feature: (Component) =&gt; Relay.QL`
        query {
            viewer {
                features(id:$id) {
                  ${Component.getFragment('feature')}
                }
            }
        }
    `
};
</code></pre>

<p>This is the current relay container that gets a list of the Features, how would this be modified to just return the 1 feature by id? :</p>

<pre><code>export default Relay.createContainer(CreativeEditComponent, {
  fragments: {
    viewer: () =&gt; Relay.QL`
        fragment on User {
        id,
        features(first: 20) {
          edges {
            node {
              id
              name
              description

            }
          }
        }
      }`
  }
});
</code></pre>

<p>I have tested a query in GraphiQL and it works as expected:</p>

<pre><code>query {
  viewer {
    features(id:""1"") {
      edges {
        node {
          id
          name
          description
        } 
      }
    } 
  }
}
</code></pre>

<p>Result:</p>

<pre><code>{
  ""data"": {
    ""viewer"": {
      ""features"": {
        ""edges"": [
          {
            ""node"": {
              ""id"": ""Q3JlYXRpdmU6MQ=="",
              ""name"": ""React"",
              ""description"": ""A JavaScript library for building user interfaces.""
            }
          }
        ]
      }
    }
  }
}
</code></pre>

<p>schema.js:</p>

<pre><code>const userType = new GraphQLObjectType({
  name: 'User',
  description: 'A person who uses our app',
  fields: () =&gt; ({
    id: globalIdField('User'),

    features: {
      type: featureConnection,
      description: 'Features that I have',
      //args: connectionArgs,

      args: {
        id: {
          type: GraphQLString,
        },
        after: {
          type: GraphQLString,
        },
        first: {
          type: GraphQLInt,
        },
        before: {
          type: GraphQLString,
        },
        last: {
          type: GraphQLInt,
        },
      },

      resolve: (_, args) =&gt; {
        return resolveGetFeatures(args)
      },
    },


  }),
  interfaces: [nodeInterface]
});



const featureType = new GraphQLObjectType({
  name: 'Feature',
  description: 'Feature integrated in our starter kit',
  fields: () =&gt; ({
    id: globalIdField('Feature'),
    name: {
      type: GraphQLString,
      description: 'Name of the feature'
    },
    description: {
      type: GraphQLString,
      description: 'Description of the feature'
    }
  }),
  interfaces: [nodeInterface]
});
</code></pre>
","2970221","","2030321","","2017-10-09 15:04:23","2017-10-09 15:04:23","How to fetch and display item by id using Relay container, react-router and GraphQL","<javascript><react-router><graphql><relayjs><react-router-relay>","1","0","2","",""
"47552648","1","","","2017-11-29 12:15:04","","0","71","<p>I'm migrating some Relay classis code to Relay modern. And now I'm having a hard time migrating a pagination implementation. I'm using a page and offset approach. Here's what I have now:</p>

<p>Game.jsx:</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import {QueryRenderer, createFragmentContainer, createRefetchContainer, graphql} from 'react-relay';
import Player from './Player';

class Game extends React.Component {
    _loadPage(e) {
      e.preventDefault();
      this.props.relay.refetch({page: parseInt(e.target.dataset.page)}, null);
    }

    render() {
        return (
            &lt;div&gt;
                &lt;h1&gt;{this.props.game.name}&lt;/h1&gt;
                &lt;ul className=""pagination""&gt;
                    {this.props.game.pages.map((page) =&gt; {
                        &lt;li key={page.page}&gt;
                            &lt;a href=""#"" data-page={page.page} onClick={this._loadPage}&gt;{page.page}&lt;/a&gt;
                        &lt;/li&gt;
                    })
                &lt;/ul&gt;
                {this.props.game.players.map(player =&gt;
                    &lt;Player key={player.id} /&gt;
                )}
            &lt;/div&gt;
        );
    }   
}

Game = createRefetchContainer(
  Game,
  {
      players: graphql`
        fragment Game_players on Game
        @argumentDefinitions(
          page: {type: ""Int"", defaultValue: 1},
          first: {type: ""Int"", defaultValue: 15}
        )
        {
          players(page: $page, first: $first) {
            id
            ...Player_player
          }
        }
    `
  },
  graphql`
    query GamePlayersRefetch_Query($page: Int!, $first: Int!) {
      game(id: $id) {
        ...Game_players @arguments(page: $page, first: $first)
      }
    }
  `
);


Game = createFragmentContainer(
    Game,
    graphql`
        fragment Game_game on Game
          @argumentDefinitions(
            page: {type: ""Int"", defaultValue: 1},
            first: {type: ""Int"", defaultValue: 15}
          ) {
          id
          name
          pages {
            page
          }
          ...game_players @arguments(page: $page, first: $first)
        }
    `
)


$(document).on(""load turbolinks:load DOMContentLoaded"", e =&gt; {
    let element = document.getElementById('game');
    ReactDOM.render(
          &lt;QueryRenderer
            environment={environment}
            query={
              graphql`
                query gameQuery(
                    $id: ID!
                    $page: Int!
                    $first: Int!
                ) {
                      game(id: $id) {
                        ...Game_game @arguments(page: $page, first: $first)
                      }
                   }
            `
            }
            variables={{
              id: element.dataset.id,
              page: 1,
              first: 15
            }}
            render={({error, props}) =&gt; {
              if (props) {
                return &lt;Game /&gt;
              } else {
                return &lt;div&gt;Loading.../div&gt;
              }
            }}
          /&gt;,
          element
        );
    }

});
</code></pre>

<p>Player.jsx:</p>

<pre><code>import React from 'react';
import {createFragmentContainer, graphql} from 'react-relay';

class Player extends React.Component {
    render() {
        &lt;div className=""player""&gt;
            &lt;div class=""player-name""&gt;{this.props.player.name}&lt;/div&gt;
        &lt;/div&gt;
    }
}


export default createFragmentContainer(
  Player,
  graphql`
    fragment Player_player on Player {
      id
    }
    `
);
</code></pre>

<p>I must be doing something wrong with the FragmentContainer and the RefetchContainer they should be combined or something but I don't have a clue how to achieve what I want. Can someone enlighten me?</p>
","1412141","","1412141","","2017-11-29 12:22:52","2017-11-29 13:26:32","How to combine FragmentContainer with RefetchContainer in Relay modern","<reactjs><relaymodern>","1","0","","",""
"47761894","1","47762117","","2017-12-11 21:41:32","","75","10303","<p>In React 16.2, improved support for <code>Fragments</code> has been added. More information can be found on React's blog post <a href=""https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html"" rel=""noreferrer"">here.</a></p>

<p>We are all familiar with the following code:</p>

<pre><code>render() {
  return (
    // Extraneous div element :(
    &lt;div&gt;
      Some text.
      &lt;h2&gt;A heading&lt;/h2&gt;
      More text.
      &lt;h2&gt;Another heading&lt;/h2&gt;
      Even more text.
    &lt;/div&gt;
  );
}
</code></pre>

<p>Yes, we need a container div, but it's not that big of a deal.</p>

<p>In React 16.2, we can do this to avoid the surrounding container div:</p>

<pre><code>render() {
  return (
    &lt;Fragment&gt;
      Some text.
      &lt;h2&gt;A heading&lt;/h2&gt;
      More text.
      &lt;h2&gt;Another heading&lt;/h2&gt;
      Even more text.
    &lt;/Fragment&gt;
  );
}
</code></pre>

<p>In either case, we still need need a container element surround the inner elements. </p>

<p>My question is, why is using a <code>Fragment</code> preferable? Does it help with performance? If so, why? Would love some insight.</p>
","7168582","","","","","2017-12-14 07:00:07","Why are Fragments in React 16 better than container divs?","<reactjs>","3","2","12","",""
"49094455","1","","","2018-03-04 10:37:13","","0","59","<p>So, I learn React in Depth and now I'm studing on React Fragments. As it described in official docs <a href=""https://reactjs.org/docs/fragments.html"" rel=""nofollow noreferrer"">https://reactjs.org/docs/fragments.html</a> , Fragments are very interesting way to return multiple elements. But I cannot figure out than it is better than the usual component and the transfer of the child through it?</p>
","9433929","","9433929","","2018-03-04 10:47:39","2018-03-04 10:50:55","Why Fragments in React 16 is better than containers?","<javascript><reactjs>","2","0","","",""
"41889309","1","","","2017-01-27 08:04:12","","0","33","<p>Having trouble in passing data in this reactjs, I am new to react js, the error shows </p>

<p>Uncaught Error: Objects are not valid as a React child (found: object with keys {sku, inventoryCount}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of <code>Batches</code>.</p>

<pre><code>export default class Batches extends React.Component {

  constructor() {
    super();

    this.state = {
      data: []
    };
  }

  componentDidMount() {
    // Example AJAX call
    ajax('/mft/api/reports/view', {
      success: data =&gt; {
        console.log(data);
        console.log(data[1]);
        this.setState({data: data.data});
      }
    });
  }


 render() {
    return &lt;div className=""content""&gt;
      &lt;Heading&gt;Batches&lt;/Heading&gt;
      &lt;div&gt;{this.state.data}&lt;/div&gt;
    &lt;/div&gt;;
  }
}
</code></pre>
","6480128","","6480128","","2017-01-27 18:47:17","2017-01-27 18:47:17","have issue passing data in reactJS","<reactjs>","0","4","","2017-01-27 22:28:21",""
"46592727","1","","","2017-10-05 18:44:46","","0","56","<p>I’m trying to mock the service as in the docs example <code>http://dev.apollodata.com/tools/graphql-tools/mocking.html#Default-mock-example</code></p>

<p>I’m exporting my schema with the standard introspection query, building a schema object and using this when trying to run a query as mentioned in the docs.</p>

<pre><code>import * as introspectionResult from ""../../graphql/schema.json""
const GRAPHQL_QUERY = `
query eventsFeatured(
  $type: String!,
  $entity_type: String,
  $market__role: String,
  $outcome__odds_rank_unique: Int,
  $limit: Int
) {
  featured(
    type: $type,
    entity_type: $entity_type,
    market__role: $market__role,
    outcome__odds_rank_unique: $outcome__odds_rank_unique,
    limit: $limit
  ) {
    ...FeaturedFragment
    media {
      description
      extralarge
      large
      medium
      preview
      __typename
    }
    event {
      ...EventFragment
      market {
        ...MarketFragment
        outcome {
          ...OutcomeFragment
          media_logo {
            preview
            small
            __typename
          }
          bookie {
            ...BookieFragment
            __typename
          }
          __typename
        }
        __typename
      }
      article {
        ...ArticleFragment
        __typename
      }
      category3 {
        ...AllCategoriesFragment
        __typename
      }
      __typename
    }
    offer {
      id
      name
      conditions
      deeplink
      domain {
        ...EventFragment
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment EventFragment on Event {
  id
  name
  canonicalised_name
  display_name
  date
  date_human
  date_short
  type
  __typename
}

fragment MarketFragment on Market {
  id
  name
  display_name
  canonicalised_name
  type
  role {
    name
    __typename
  }
  __typename
}

fragment OutcomeFragment on Outcome {
  id
  name
  display_name
  canonicalised_name
  odds
  odds_decimal
  odds_rank
  deeplink
  home_or_away
  type
  __typename
}

fragment BookieFragment on Bookie {
  name
  __typename
}

fragment ArticleFragment on BaseArticle {
  title
  body
  excerpt
  author
  date_no_time
  date_stamp
  date_human
  date_short
  date
  __typename
}

fragment AllCategoriesFragment on Category3 {
  ...Category3Fragment
  category2 {
    ...Category2Fragment
    category1 {
      ...Category1Fragment
      __typename
    }
    __typename
  }
  __typename
}

fragment Category1Fragment on Category1 {
  name
  canonicalised_name
  __typename
}

fragment Category2Fragment on Category2 {
  name
  canonicalised_name
  __typename
}

fragment Category3Fragment on Category3 {
  name
  canonicalised_name
  __typename
}

fragment FeaturedFragment on Featured {
  id
  type
  display_order
  __typename
}
`

// this builds our mock apollo schema
const schema = buildClientSchema(introspectionResult) 
addMockFunctionsToSchema({ schema })

// execute the supplied apollo query
    graphql(schema, GRAPHQL_QUERY, {
      options: (props) =&gt; ({
        variables: {
          type: ""IMAGEGRIDHOMEPAGE""
        },
      })})
      .then(graphqlResult =&gt; {
.... etc
```

However, I am seeing the following error:

```
{ errors:
       [ GraphQLError {
           message: 'Variable ""$type"" of required type ""String!"" was not provided.',
           locations: [Object],
           path: undefined } ] }
</code></pre>

<p>It seems that the <code>graphql</code> function does not recognise the standard options object, at least not the <code>variables</code> definitions when used in this context of having a schema object as first arg.  I have tried digging into the source here but my typescript ain’t the best - <a href=""https://github.com/apollographql/react-apollo/blob/master/src/graphql.tsx"" rel=""nofollow noreferrer"">https://github.com/apollographql/react-apollo/blob/master/src/graphql.tsx</a></p>
","2968327","","","","","2017-10-09 10:56:24","mocking service and running parameterised query in react apollo graphql","<apollo><react-apollo><apollo-client>","1","1","","",""
"47787067","1","47787130","","2017-12-13 06:45:02","","1","308","<p>I am new to React and trying to code some basic concepts. But there are few things, I am not able to understand. Why there is no entry in browser network tab (for component js files) when using separate files for different components.
How react loads the components js files or the file content and served it to the browser.(Like when using ""script"" tag there will be a request entry for that particular file.) </p>

<p>I am using npm start to run</p>

<p>Index.js</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import './css/output.css';
import App from './App.js';
import registerServiceWorker from './registerServiceWorker';

ReactDOM.render(&lt;App /&gt;, document.getElementById('root'));
registerServiceWorker();
</code></pre>

<p>App.js</p>

<pre><code>import React, { Component } from 'react';
import { Fragment } from 'react';
import logo from './logo.svg';
import Header from './Header';

class App extends Component {
  render() {
    return (
        &lt;div&gt;
            &lt;Fragment&gt;
                &lt;Header/&gt;
            &lt;/Fragment&gt;
        &lt;/div&gt;
    );
  }
}

export default App;
</code></pre>

<p>Home.js</p>

<pre><code>import React, { Component } from 'react';
import { Fragment } from 'react';

class Home extends Component {
  render() {
    return (
      &lt;h1&gt;
        Inside Home
      &lt;/h1&gt;
    );
  }
}

export default Home;
</code></pre>
","2467136","","5006588","","2017-12-13 06:52:09","2017-12-13 06:52:09","How react loads component js files","<javascript><reactjs><ecmascript-6><create-react-app><es6-modules>","1","2","","",""
"31156310","1","","","2015-07-01 08:32:09","","3","1711","<p>We recently did an upgrade of React to 0.13, and this little warning starts popping up: </p>

<p>Warning: Any use of a keyed object should be wrapped in React.addons.createFragment(object) before being passed as a child.</p>

<p>Here is my code, tried to figure out how to use the createFragment, but couldnt really find any good examples on how to do it when wrapping elements from this.props.children.</p>

<p>This.props.children will in my case be other React components that should be wrapped in an li. Have any of you seen or solved this issue before?</p>

<pre><code>import React from 'react';

module.exports = React.createClass({
  displayName: ""public/src/scripts/components/info-block/infoItem.js"",
  propTypes: {
    label: React.PropTypes.string,
    children: React.PropTypes.any
  },
  renderChildren: function(){
    var elementsToRender = [].concat(this.props.children);

    return elementsToRender.map(function(elem, i){
      return &lt;li key={i}&gt;{elem}&lt;/li&gt;
    });
  },
  render : function(){
    return (
      &lt;li&gt;
        &lt;span className=""ll""&gt;{this.props.label}&lt;/span&gt;
        &lt;span className=""lr""&gt;
          &lt;ul&gt;
            {this.renderChildren()}
          &lt;/ul&gt;
        &lt;/span&gt;
      &lt;/li&gt;
    );
  }
});
</code></pre>

<p>I tried switching the renderChildren method to this:</p>

<pre><code>renderChildren: function(){
  return React.Children.map(this.props.children, function(elem){
    return React.addons.createFragment({value: &lt;li&gt;{elem}&lt;/li&gt;});
  });
}
</code></pre>

<p>It will render then, but i still get the warning</p>
","3530970","","3530970","","2015-07-01 08:50:40","2015-07-01 08:50:40","React.Addons.CreateFragment issues","<javascript><reactjs>","0","2","1","",""
"47919544","1","","","2017-12-21 06:57:47","","1","271","<p>I have an activity which has a Fragment and React Native is added in a <code>ReactRootView</code> inside the fragment. I've added the <code>ReactInstanceManager</code> as a singleton in the app and attaching it to the rootview and starting the app using the <code>startApplication()</code> method of <code>ReactRootView</code> class. It all works well when only one instance of the Activity is present. </p>

<p>I have a flow where I need to start a new instance of the same activity. This time the React Native app does load and I can see the render function being called for the second Activity, but instead of updating the view of the second one it updates the view of the first activity which is attached. </p>

<p>I'm calling all the lifecycle methods for the <code>ReactInstanceManager</code> in the attached fragment and the <code>onPause()</code> and <code>onResume()</code> callbacks are being called. I'm really stuck here and don't know what to do. I've tried creating a new instance of the ReactInstanceManager but it's not helping either. </p>

<p>This is the flow I'm trying to achieve:
<strong><em>ReactFragment -> OtherActivity -> ReactFragment</em></strong></p>

<p>I need the Activity with the ReactFragment to have different instances  and load the react app again in the second one, which it does, but the <code>render()</code> function updates the first instance instead of the second one.</p>

<p>Instantiating <code>ReactInstanceManager</code>:</p>

<pre><code>    public synchronized ReactInstanceManager getReactInstanceManager(Activity activity) {
    if (reactInstanceManager == null) {
        reactInstanceManager = ReactInstanceManager.builder()
                .setApplication(activity.getApplication())
                .setJSMainModulePath(""index"")
                .setJSBundleFile(""index.android.bundle"")
                .addPackages(Arrays.&lt;ReactPackage&gt;asList(
                        new FabricPackage(),
                        new MainReactPackage(),
                        new MSREventBridgePackage(),
                        new Interactable()
                ))
                .setUseDeveloperSupport(BuildConfig.DEBUG)
                .setInitialLifecycleState(LifecycleState.RESUMED)
                .build();
    }
    return reactInstanceManager;
}
</code></pre>

<p>Adding the <code>ReactInstanceManager</code> to the <code>ReactRootView</code> class and starting the application:</p>

<pre><code>     mReactInstanceManager = ReactApplicationManager.getInstance().getReactInstanceManager(getActivity());
     mReactRootView.startReactApplication(
            mReactInstanceManager,
            REACT_MODULE,
            null);
</code></pre>

<p>Calling all the lifecycle methods for <code>ReactInstanceManager</code>:</p>

<pre><code>@Override
public void onResume() {
    super.onResume();
    if (mReactInstanceManager != null) {
        mReactInstanceManager.onHostResume(getActivity(), (DefaultHardwareBackBtnHandler)getActivity());
    }
}

@Override
public void onPause() {
    super.onPause();
    if (mReactInstanceManager != null) {
        mReactInstanceManager.onHostPause(getActivity());
    }
}

@Override
public void onDestroy() {
    super.onDestroy();
    if (mReactInstanceManager != null) {
        mReactInstanceManager.onHostDestroy(getActivity());
    }
}
</code></pre>
","1833774","","1833774","","2017-12-21 07:04:11","2017-12-21 07:04:11","Creating multiple instances of react native app in the same android app (without redux)","<android><react-native><react-native-android>","0","2","","",""
"47923044","1","","","2017-12-21 10:35:52","","2","545","<p>I just upgraded React to 16.2.0 on my React-Native project to use the new Fragment syntax.</p>

<p>I have a component which returns something like this now:</p>

<pre><code>return (
  &lt;&gt;
    &lt;View&gt;...&lt;/View&gt;
    &lt;View&gt;...&lt;/View&gt;
  &lt;/&gt;
);
</code></pre>

<p>TypeScript doesn't complain about the syntax which is great, however I get an error when I try to run this code:</p>

<pre><code>Bundling `index.js`  [development, non-minified]  45.8% (1078/1593), failed.
error: bundling failed: SyntaxError in /Users/alexmngn/Workspace/MyProject/MyComponent.tsx: /Users/alexmngn/Workspace/MyProject/MyComponent.tsx: Unexpected token (68:17)
&gt; 68 |         return (&lt;&gt;
     |                  ^
</code></pre>

<p>It doesn't seem to compile the fragment syntax back to ES5.</p>

<p>And when I try to use <code>React.Fragment</code> instead I get a TypeScript error:</p>

<pre><code>/Users/alexmngn/Workspace/MyProject/MyComponent.tsx(1,28): error TS2305: 
Module '""/Users/alexmngn/Workspace/MyProject/node_modules/@types/react/index""' 
has no exported member 'Fragment'.
</code></pre>

<p>And the app doesn't run and throw an error as well <code>Invariant Violation</code></p>

<p>I use the latest stable versions of all packages:</p>

<ul>
<li>React: 16.2.0</li>
<li>React-Native: 0.51.0</li>
<li>TypeScript: 2.6.2</li>
<li>@types/react: 16.0.31</li>
<li>@types/react-native: 0.51.4</li>
</ul>

<p>Is there anything specific I need to do to make it working with React-Native? To compile to ES5? Or even to be able to use React.Fragment without Typescript complaining? Seems like there is a type <code>ReactFragment</code> in the definition of the types but still get this error.</p>

<p>Thanks</p>
","1096161","","","","","2017-12-21 10:35:52","Use React Fragment with TypeScript on a React-Native project","<reactjs><typescript><react-native>","0","1","1","",""
"48070197","1","","","2018-01-03 01:56:02","","1","58","<p>I have a scenario where I have a fragment inside an activity (extending AppCompatActivity). Now from this fragment I need to post an event that I can listen to in my react-native code</p>

<blockquote>
  <p>Fragment.class</p>
</blockquote>

<pre><code>public class MyFragment extends Fragment {
    ......

    public void onBookingCompleted(boolean success) {
       if (success) {
           sendEventToReact(); // &lt;--- function i used to send event to my react native code
       }
    }

   private void sendEventToReact() {
    ReactApplicationContext context = (ReactApplicationContext) getContext();
    context.getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
            .emit(""YouCustomEventName"", null);
   }

}
</code></pre>

<p>Now the problem is, I cannot convert my <strong><code>context</code></strong> to <strong><code>ReactApplicationContext</code></strong></p>

<p>I already had a look at this <a href=""https://stackoverflow.com/a/40932026/5575410"">answer</a>, but I want to know if there is any way I can post this event from a fragment inside an activity which is <strong><code>NOT</code></strong> extending <strong><code>ReactActivity</code></strong></p>

<blockquote>
  <p>Also is there a way where I can pass an event from my fragment to my
  native module which can further pass this to react-native?</p>
</blockquote>
","5575410","","5575410","","2018-01-03 02:02:18","2018-01-03 02:02:18","Post event from native android to react native","<android><android-fragments><react-native>","0","2","","",""
"48715166","1","48715230","","2018-02-09 22:41:26","","2","416","<p>I am trying to map over the children of a fragment that is in turn a child of a component. For example:</p>

<pre><code>const Frag = () =&gt; (
  &lt;React.Fragment key=""test-key""&gt;
    &lt;div&gt;test1&lt;/div&gt;
    &lt;div&gt;test2&lt;/div&gt;
  &lt;/React.Fragment&gt;
);

const Outer = ({ children }) =&gt; (
  &lt;div&gt;
    {
      React.Children.map(children, (child) =&gt; (
        &lt;a&gt;
          {child}
        &lt;/a&gt;
      ))
    }
  &lt;/div&gt;
);

// Usage
&lt;Outer&gt;
  &lt;Frag /&gt;
&lt;/Outer&gt;
</code></pre>

<p>This will result in a single <code>a</code> tag even though the fragment has multiple divs inside of it. The docs (<a href=""https://reactjs.org/docs/react-api.html#reactchildrenmap"" rel=""nofollow noreferrer"">https://reactjs.org/docs/react-api.html#reactchildrenmap</a>) seem to indicate that this should work with a keyed fragment and I think I am creating a keyed fragment correctly (<a href=""https://reactjs.org/docs/fragments.html#keyed-fragments"" rel=""nofollow noreferrer"">https://reactjs.org/docs/fragments.html#keyed-fragments</a>). Any help would be appreciated!</p>
","6838755","","","","","2018-02-09 23:14:35","Map over Fragment in React 16","<reactjs><react-16>","1","0","","",""
"48236588","1","48236653","","2018-01-13 03:09:03","","3","199","<p>I used to compile and insert JSX components via</p>

<pre><code>&lt;div key={ ID } dangerouslySetInnerHTML={ { __html: HTML } } /&gt;
</code></pre>

<p>which wrapped my HTML into a <code>&lt;div&gt;</code>:</p>

<pre><code>&lt;div&gt;my html from the HTML object&lt;/div&gt;
</code></pre>

<p>Now <a href=""https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html"" rel=""nofollow noreferrer"">react > 16.2.0 has support for Fragments</a> and I wonder if I can use that somehow to avoid wrapping my HTML in a <code>&lt;div&gt;</code> each time I get data from the back end.</p>

<p>Running </p>

<pre><code>&lt;Fragment key={ ID } dangerouslySetInnerHTML={ { __html: HTML } } /&gt;
</code></pre>

<p>will throw a warning</p>

<pre><code>Warning: Invalid prop `dangerouslySetInnerHTML` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.
in React.Fragment
</code></pre>

<p>Is this supported yet at all? Is there another way to solve this?</p>

<h1>Update</h1>

<p>Created an <a href=""https://github.com/facebook/react/issues/12014"" rel=""nofollow noreferrer"">issue in the react repo</a> for it if you want to upvote it.</p>
","1043231","","1043231","","2018-05-29 01:53:00","2018-05-29 01:53:00","Using Fragment to insert HTML rendered on the back end via dangerouslySetInnerHTML","<node.js><reactjs><serverside-rendering>","1","0","1","",""
"29663125","1","29664067","","2015-04-16 00:08:44","","1","797","<p>I'm reading the <a href=""https://facebook.github.io/react/docs/create-fragment.html"" rel=""nofollow"">https://facebook.github.io/react/docs/create-fragment.html</a> article and spotted that FB engineers rely on the object memory layout (the order of properties):</p>

<pre><code>if (this.props.swapped) {
  children = React.addons.createFragment({
    right: this.props.rightChildren,
    left: this.props.leftChildren
  });
} else {
  children = React.addons.createFragment({
    left: this.props.leftChildren,
    right: this.props.rightChildren
  });
}
</code></pre>

<p>Am I missing something or they rely on unreliable and provide the fragile code?</p>

<p>PS: The question is asked (and I expect it to be answered) from the ES specification point of view, not some JS engine implementation perspective (which is subject to change within spec).</p>
","251311","","251311","","2015-04-16 00:26:49","2015-04-27 03:31:36","Order of elements in React.addons.createFragment object","<javascript><facebook><reactjs>","1","1","","",""
"39516184","1","","","2016-09-15 16:36:09","","1","202","<p>I am using react-router and react-router-relay to handle routing on my app. I am having a problem trying to access the id param that is passed in the url path. What is the correct way to do this?</p>

<p>routes.js</p>

<pre><code>import CreativeQuery from './CreativeQuery';

&lt;Route path='/creative' component={CreativeComponent} queries={ViewerQuery}&gt;
&lt;Route path=""/creative/edit/:id"" component={CreativeEditComponent} queries={CreativeQuery}/&gt;
</code></pre>

<p>CreativeQuery.js</p>

<pre><code>import Relay from 'react-relay';

export default {
  creative: (Component) =&gt; Relay.QL`
    query {
      creative(id:$id) { #&lt;--- id from the url param
        ${Component.getFragment('creative')}
      }
    }
  `
};
</code></pre>
","2970221","","","","","2016-09-16 08:30:49","Accessing a url parameter to use in a query using react-router-relay","<reactjs><react-router><relayjs><relay><react-router-relay>","1","0","","",""
"39322801","1","","","2016-09-05 01:10:52","","0","1853","<p>""objects are not valid as a react child (found: object with keys {date, events}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of View.""</p>

<p>So I have kind of a cascade of method calls. I'm retrieving dates with events inside of those. It feels like I'm doing this correctly, but am getting the above error. I've tried setting createFragment on places, but still getting the error. Here's the code:</p>

<pre><code>  import React, { Component } from 'react';
  import {
    AppRegistry,
    Text,
    View,
    ScrollView,
    RefreshControl,
    StyleSheet,
    Dimensions,
    TextInput,
    Linking,
    TouchableNativeFeedback
   } from 'react-native';

  var _ = require('lodash');
  var {width, height} = Dimensions.get('window');
  var renderif = require('render-if');
  var createFragment = require('react-addons-create-fragment');

  var IMAGES_PER_ROW = 1

  class FunInATL extends Component {
    constructor(props) {
      super(props);
      this.state = {
        currentScreenWidth: width,
        currentScreenHeight: height,
        dates: [],
        boxIndex: 0,
        showBox: false,
        refreshing: false
      };
    }

        handleRotation(event) {
          if (!this.state) {
            return;
          }

          var layout = event.nativeEvent.layout
          this.state({currentScreenWidth: layout.width, currentScreenHeight: layout.height })
        }

        calculatedSize() {
          var size = this.state.currentScreenWidth / IMAGES_PER_ROW
          return {width: size}
        }

        renderRow(events) {
          return events.map((events, i) =&gt; {
            return (
              &lt;Image key={i} style={[this.getImageStyles(), styles.image, this.calculatedSize() ]} source={{uri: event.image}} /&gt;
            )
          })
        }

        openUrl(url) {
          Linking.canOpenURL(url).then(supported =&gt; {
              if (supported) {
                Linking.openURL(url);
              } else {
                console.log('nope :: ' + url);
              }
          }).catch(err =&gt; console.error('An error occurred', err));
        }

        getImageStyles(featured, category) {
            let options = {
              borderColor: 'gold',
              borderWidth: featured ? 1 : 0
            }

            if (!category) {
                options.height = featured ? 250 : 125
            }

            return options;
        }

        _clickImage(event, index) {
          if (event.title) {
            let new_val = !this.state.showBox
            this.setState({
                dates: this.state.dates,
                showBox: new_val,
                boxIndex: new_val ? index : 0
            });
          }

        }

        componentDidMount() {
          this.state = {
              dates: [],
              boxIndex: 0,
              showBox: false,
              refreshing: false
          };
          this.getApiData();

          Linking.addEventListener('url', this.handleUrl);
        }

        componentWillUnmount() {
            Linking.removeEventListener('url', this.handleUrl);
        }

        getApiData() {
          var _this = this;
          return fetch('https://www.funinatl.com/mobile2.php?v1')
            .then(function(response) {
              return response.json()
            })
            .then((responseJson) =&gt; {
              var dates = createFragment(responseJson.events)
              return;

              let _this = this;

              date.events.map((event, i) =&gt; (
                date.events[i] = event
              ))

              var datesData = [];
              dates.map((date, i) =&gt; (
                datesData.push({
                  date: i,
                  events: createFragment(date.events)
                })
              ))

              _this.setState({
                dates: createFragment(datesData),
                boxIndex: 0,
                showBox: false
              })

              console.error(this.state);
            })
            .catch((error) =&gt; {
              console.error(error);
            })
            .done();
        }

        renderDates() {
          return this.state.dates.map((date) =&gt;
                (
                  &lt;View&gt;
                    &lt;Text style={styles.dateHeader}&gt;{ date.date }&lt;/Text&gt;

                    &lt;View&gt;
                    {this.renderEvents(date.events)}
                    &lt;/View&gt;
                  &lt;/View&gt;

            ))
        }

        renderImage(event, index) {
            if (this.state.showBox &amp;&amp; this.state.boxIndex == index) {
              return (
                &lt;View&gt;
                  &lt;TouchableNativeFeedback onPress={()=&gt;this._clickImage(event, index)}&gt;
                      &lt;Image source={{ uri: event.image }} style={[styles.image, this.calculatedSize(), this.getImageStyles(event.featured), { height: 100 }]} /&gt;
                  &lt;/TouchableNativeFeedback&gt;
                  &lt;View style={{ flexDirection:'row', padding: 15 }}&gt;
                      &lt;Text style={styles.price}&gt;{event.price}&lt;/Text&gt;
                      &lt;Text style={styles.time}&gt;{event.time}&lt;/Text&gt;
                      &lt;TouchableNativeFeedback onPress={()=&gt;this.openUrl(event.website)}&gt;
                          &lt;Text style={styles.btn}&gt;Website&lt;/Text&gt;
                      &lt;/TouchableNativeFeedback&gt;
                  &lt;/View&gt;

                      {renderif(event.venue)(
                          &lt;TouchableNativeFeedback onPress={()=&gt;this.openUrl(event.venue)}&gt;
                              &lt;Text style={styles.btn}&gt;Venue&lt;/Text&gt;
                          &lt;/TouchableNativeFeedback&gt;
                      )}

                &lt;/View&gt;
              )
            } else {
              return (
                &lt;View&gt;
                    &lt;TouchableNativeFeedback onPress={()=&gt;this._clickImage(event, index)}&gt;
                        &lt;Image source={{ uri: event.image }} style={[styles.image, this.calculatedSize(), this.getImageStyles(event.featured)]} /&gt;
                    &lt;/TouchableNativeFeedback&gt;
                &lt;/View&gt;
              )
            }
        }

        renderEvents(events) {
          return events.map((event, i) =&gt;
            (
              &lt;View&gt;
                &lt;Text style={[styles.eventCategory, this.getImageStyles(event.featured, true)]}&gt;{event.category}&lt;/Text&gt;
                &lt;View&gt;
                  {this.renderImage(event, i)}
                &lt;/View&gt;
                &lt;Text style={[styles.eventTitle, this.getImageStyles(event.featured, true)]}&gt;{event.title}&lt;/Text&gt;
              &lt;/View&gt;
          ));
        }

        _onRefresh() {
          this.setState({refreshing: true});
          fetchData().then(() =&gt; {
            this.setState({refreshing: false});
          });
        }

        render() {
          return (
            &lt;ScrollView onLayout={this.handleRotation} contentContainerStyle={styles.scrollView} refreshControl={
                &lt;RefreshControl
                  refreshing={this.state.refreshing}
                  onRefresh={this._onRefresh.bind(this)}
                  tintColor=""#ff0000""
                  title=""Loading...""
                  titleColor=""#00ff00""
                  colors={['#ff0000', '#00ff00', '#0000ff']}
                  progressBackgroundColor=""#ffff00""
                /&gt;
              }&gt;
              &lt;Text style={styles.header}&gt;FunInATL&lt;/Text&gt;
                  {this.renderDates()}
            &lt;/ScrollView&gt;
          )
        }
      }

  var styles = StyleSheet.create({

    row: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'flex-start',
      textAlign: 'center',
      padding: 10
    },

    header: {
      fontSize: 30,
      fontWeight: 'bold',
      padding: 20,
      textAlign: 'center',
      backgroundColor: '#000',
      color: '#fff'
    },

    dateHeader: {
      fontSize: 20,
      fontWeight: 'bold',
      padding: 20,
      textAlign: 'left',
      color: '#fff',
      backgroundColor: '#283593'
    },

    eventCategory: {
        backgroundColor: '#03a9f4',
        textAlign: 'center',
        color: '#ffffff',
        padding: 3
    },

    eventTitle: {
        borderTopWidth: 0,
        textAlign: 'center',
        fontWeight: 'bold',
        padding: 3,
        fontSize: 18,
    },

    image: {
    },

    btn: {
        backgroundColor: 'green',
        padding: 10,
        color: '#fff',
        textAlign: 'center',
        flex: 1
    },

    price: {
        marginLeft: 10,
        fontSize: 16,
        flex: 1
    },

    time: {
      marginRight: 10,
      fontSize: 16,
      flex: 1,
      width: 35
    }

  });

  AppRegistry.registerComponent('FunInATL', () =&gt; FunInATL);
</code></pre>

<p>Thanks!</p>

<p><strong>EDIT</strong>: Updated code per the map suggestion, still not working. complaining about {events} only now.</p>

<p><strong>EDIT 2</strong>: Updated with FULL code.</p>
","1370090","","1370090","","2016-09-07 22:43:01","2016-09-08 09:43:58","error ""objects are not valid as a react child"" in react native","<react-native>","1","0","","",""
"40821885","1","","","2016-11-26 18:51:42","","1","868","<p>I need to know how to update the array of users inside the state to accept a new user object.</p>

<p>The state users array contains id and name only.</p>

<p>When i try to use update addon to push an item in the users array.</p>

<pre><code>var newUser = {id:1, name:'Foo'};
let newState = update(this.state, {users: {$push: [newUser]}});
</code></pre>

<p>""react-dom.js:17858 Uncaught Error: Objects are not valid as a React child (found: object with keys {id, name}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of <code>UsersTable</code>.(…)""</p>
","3985913","","3985913","","2016-11-26 19:10:24","2016-11-26 19:48:44","How to update react state object array","<reactjs><reactive-programming>","1","2","","",""
"49320552","1","50006584","","2018-03-16 12:15:57","","4","1045","<p>I am using <code>react</code> <strong>v16.3.0</strong> and <code>flow-bin</code> <strong>v0.69.0</strong></p>

<p>Using react <a href=""https://reactjs.org/docs/fragments.html"" rel=""nofollow noreferrer"">Fragments</a> with either <code>&lt;React.Fragment&gt;</code> or the shorthand <code>&lt;&gt;&lt;/&gt;</code> syntax like so</p>

<pre><code>import React from 'react'

const ComponentA = () =&gt; (
  &lt;React.Fragment&gt;
    &lt;div&gt;Component&lt;/div&gt;
    &lt;div&gt;A&lt;/div&gt;
  &lt;/React.Fragment&gt;
)

const ComponentB = () =&gt; (
  &lt;&gt;
    &lt;div&gt;Component&lt;/div&gt;
    &lt;div&gt;B&lt;/div&gt;
  &lt;/&gt;
)
</code></pre>

<p>Flow complains with the following error (it's an indentical error for both, just showing output for <code>ComponentA</code> here)</p>

<pre><code>Cannot get React.Fragment because property Fragment is missing in object type [1].

  24│ const ComponentA = () =&gt; (
  25│   &lt;React.Fragment&gt;
  26│     &lt;div&gt;Component&lt;/div&gt;
  27│     &lt;div&gt;A&lt;/div&gt;
  28│   &lt;/React.Fragment&gt;

 /private/tmp/flow/flowlib_2349df3a/react.js
 251│   declare export default {|
 252│     +DOM: typeof DOM,
 253│     +PropTypes: typeof PropTypes,
 254│     +version: typeof version,
 255│     +initializeTouchEvents: typeof initializeTouchEvents,
 256│     +checkPropTypes: typeof checkPropTypes,
 257│     +createClass: typeof createClass,
 258│     +createElement: typeof createElement,
 259│     +cloneElement: typeof cloneElement,
 260│     +createFactory: typeof createFactory,
 261│     +isValidElement: typeof isValidElement,
 262│     +Component: typeof Component,
 263│     +PureComponent: typeof PureComponent,
 264│     +Children: typeof Children,
 265│   |};
</code></pre>

<p>With an explicit import of <code>Fragment</code>, however, flow does not complain.</p>

<pre><code>import { Fragment, default as React } from 'react'

const ComponentC = () =&gt; (
  &lt;Fragment&gt;
    &lt;div&gt;Component&lt;/div&gt;
    &lt;div&gt;C&lt;/div&gt;
  &lt;/Fragment&gt;
)
</code></pre>

<p>What is going on here? I would like to use the <code>&lt;&gt;&lt;/&gt;</code> Fragment shorthand syntax, and this issue is stopping me from doing that for now.</p>

<p>When I dig into the <code>react.js</code> lib def referenced in the error it does appear that the error is factually correct - the export of <code>Fragment</code> <em>is</em> defined and Fragment <em>is not</em> defined as a property on the default export.</p>

<p>But the flow docs <a href=""https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html#flow"" rel=""nofollow noreferrer"">state that flow has support for react Fragments</a>  from <strong>v0.59</strong> onwards.</p>

<p>So is this actually a gap in support that still exists? Or am I doing something wrong? Perhaps I somehow have an outdated lib def or have things configured wrong? I can't find anything googling for the error message, which leads me to suspect it's an issue with my setup. Also I can't quite believe that this wouldn't work out the box.</p>
","1082449","","1082449","","2018-04-16 10:55:30","2018-04-24 16:23:39","Flow errors on <React.Fragment> or <></>, but not <Fragment>","<reactjs><flowtype><react-fragment>","3","2","0","",""
"47714780","1","47714934","","2017-12-08 12:49:18","","14","1827","<p>I just updated to react 16.2 and I want to use the cool Fragment feature. However I get strange error as soon as just use it in a simple way:</p>

<pre><code>&lt;React.Fragment&gt;asd&lt;/React.Fragment&gt;
</code></pre>

<p>The error states: Uncaught Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: symbol.</p>

<p>When I log the above code and just a random component I have defined I get this information: </p>

<pre><code>$$typeof: Symbol(react.element)
key: null
props: {children: ""asd""}
ref: null
type: Symbol(react.fragment)
...
</code></pre>

<p>When I log my element I get the almost same information:</p>

<pre><code>$$typeof: Symbol(react.element)
key: null
props: {children: ""sfdghs""}
ref: null
type:ƒ Column(_ref)
</code></pre>

<p>My question is: why does the app expect string or function.</p>

<p>All related dependancies from my package.json are as such:</p>

<ul>
<li><code>""devDependencies"": {... ""@types/react"": ""^16.0.0"" ...}</code></li>
<li><code>""dependencies"" : {... ""react"": ""^16.2.0"", ""typescript"": ""2.6.2"" ...}</code></li>
</ul>

<p>If anyone can give me any information on how to debug this, I will be very grateful!</p>
","2299417","","","","","2018-05-12 12:38:36","React 16.2 <Fragment> gives Uncaught error: Element type is invalid","<reactjs><typescript>","1","1","1","",""
"49770972","1","","","2018-04-11 09:08:00","","0","65","<p>I'm getting this error when trying to host my web app. The problem seems to be with the React.Fragment call.</p>

<pre><code>×
React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in.

Check your code at search-input.js:8.
SearchInput
src/components/search-input.js:8
   5 | 
   6 | //This is the Presentation component
   7 | const SearchInput = ({searchInput}) =&gt;
&gt;  8 |   &lt;React.Fragment&gt;
   9 |     &lt;div&gt;{searchInput}&lt;/div&gt;
  10 |   &lt;/React.Fragment&gt;
  11 | 
View compiled
Search
src/containers/search.js:47
  44 |     &lt;input onChange={(input) =&gt; this.searchInput(input)}&gt;&lt;/input&gt;
  45 |   &lt;/div&gt;
  46 |   &lt;div className='row'&gt;
&gt; 47 |     &lt;SearchInput searchInput = {this.state.searchInput}/&gt;
  48 |     &lt;button onClick={this.buttonClick} className='btn btn-danger btn-xs'&gt;SEARCH&lt;/button&gt;
  49 |   &lt;/div&gt;
  50 | &lt;/div&gt;
View compiled
Search
src/containers/search.js:41
  38 | 
  39 | render(){
  40 |   return(
&gt; 41 |     &lt;div className='search'&gt;
  42 |       &lt;div className='row'&gt;
  43 |         &lt;h1&gt;Sentiment&lt;/h1&gt;
  44 |         &lt;input onChange={(input) =&gt; this.searchInput(input)}&gt;&lt;/input&gt;
View compiled
Welcome
src/welcome.js:12
   9 | const Welcome = ({}) =&gt;
  10 |   &lt;div className='row'&gt;
  11 |     &lt;div className='col-xs-5'&gt;
&gt; 12 |       &lt;Search/&gt;
  13 |       &lt;Link to=""/search""&gt;
  14 |           &lt;button className='btn btn-xs'&gt;Go to Map&lt;/button&gt;
  15 |       &lt;/Link&gt;
View compiled
App
src/App.js:23
  20 | &lt;h1 className=""App-title""&gt;{this.state.title}&lt;/h1&gt;
  21 | 
  22 | {/* We rended diffrent component based on the path */}
&gt; 23 | &lt;Route exact path=""/"" component={Welcome}/&gt;
  24 | &lt;Route path=""/search"" component={Discover}/&gt;
  25 | 
  26 | 
View compiled
App
src/App.js:19
  16 | render() {
  17 |   return (
  18 |     &lt;div className=""App""&gt;
&gt; 19 |       &lt;header className=""App-header""&gt;
  20 |         &lt;h1 className=""App-title""&gt;{this.state.title}&lt;/h1&gt;
  21 | 
  22 |         {/* We rended diffrent component based on the path */}
View compiled
(anonymous function)
src/index.js:10
   7 | 
   8 | ReactDOM.render((
   9 |     &lt;BrowserRouter&gt;
&gt; 10 |         &lt;App /&gt;
  11 |     &lt;/BrowserRouter&gt;
  12 | ), document.getElementById('root'));
  13 | 
View compiled
This screen is visible only in development. It will not appear if the app crashes in production.
Open your browser’s developer console to further inspect this error.
</code></pre>

<p>I don't know what's causing this error. I'm assuming <code>React.Fragment</code> is exported correctly, so I'm guessing there is something wrong with my react installation. How can I fix this?</p>
","3128156","","3128156","","2018-04-11 11:21:19","2018-04-11 11:21:19","React won't let me use React.Fragment","<javascript><reactjs>","1","2","","",""
"49405425","1","","","2018-03-21 11:41:14","","1","64","<p>Hello everybody i'm working on reactjs i'm about migrating my js code to reactjs  here i have an issue if you want to help me thanks for advance 
   i puted this code edited by a good man</p>

<pre><code>       {props
        .data
        .releases
        .map((release, i) =&gt; &lt;Fragment key={i}&gt;
          &lt;tr&gt;
            &lt;td colspan={acts.length}&gt;{release.id}&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            {Object
              .keys(release.storiesByTasks)
              .map((storyByTasksKeys, i) =&gt; &lt;td key={i}&gt;
                &lt;ul&gt;
                  {release
                    .storiesByTasks[storyByTasksKeys]
                    .map((taskss, j) =&gt; &lt;li key={j}&gt;{taskss.id}&lt;/li&gt;)
}
                &lt;/ul&gt;
              &lt;/td&gt;)
}
          &lt;/tr&gt;
        &lt;/Fragment&gt;)
}
</code></pre>

<p>this is the data </p>

<pre><code>this.state = {
      data: {
    activities: [
      {
        id: 'A1',
        tasks: [
          {
            id: 'A1.T1'
          },
          {
            id: 'A1.T2'
          }
        ]
      },
      {
        id: 'A2',
        tasks: [
          {
            id: 'A2.T1'
          }
        ]
      },
      {
        id: 'A3',
        tasks: []
      }
    ],
    releases: [
      {
        id: 'R1',
        storiesByTasks: {
          'A1.T1': [
            {
              id: 'A1.T1.S1'
            },
            {
              id: 'A1.T1.S2'
            }
          ],
          'A1.T2': [
            {
              id: 'A1.T2.S1'
            },
            {
              id: 'A1.T2.S2'
            },
            {
              id: 'A1.T2.S3'
            }
          ],
        }
      },
      {
        id: 'R2',
        storiesByTasks: {
          'A1.T2': [
            {
              id: 'A1.T2.S4'
            },
            {
              id: 'A1.T2.S5'
            }
          ],
          'A2.T1': [
            {
              id: 'A2.T1.S1'
            }
          ]
        }
      }
    ]
  };
</code></pre>

<p>in the old js code i created a table named taskss yellow one  var taskss = []; where i pushed all the tasks from the data and i pushed emty object into it so i can display things like this <a href=""https://i.stack.imgur.com/3TzZX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3TzZX.png"" alt=""enter image description here""></a></p>

<p>i want the same in react it gives me this <a href=""https://i.stack.imgur.com/B5ifA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/B5ifA.png"" alt=""enter image description here""></a></p>
","9135239","","9135239","","2018-03-21 15:19:33","2018-03-21 19:03:45","how can i migrate my old js code to react?","<javascript><reactjs>","1","3","","",""
"39799739","1","39799894","","2016-09-30 20:39:09","","0","553","<p>I have a file data.js:</p>

<pre><code>   const sdc = [
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226752,
    ""Amount"": 55.95995977,
    ""Total"": 0.12689032
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226752,
    ""Amount"": 146.1,
    ""Total"": 0.33128467
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226684,
    ""Amount"": 150,
    ""Total"": 0.340026
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226684,
    ""Amount"": 26.79415765,
    ""Total"": 0.06073806
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226684,
    ""Amount"": 4.25269162,
    ""Total"": 0.00964017
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226659,
    ""Amount"": 25.79415765,
    ""Total"": 0.05846477
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00225784,
    ""Amount"": 4.48789501,
    ""Total"": 0.01013294
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226659,
    ""Amount"": 1,
    ""Total"": 0.00226659
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226663,
    ""Amount"": 225,
    ""Total"": 0.50999175
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226662,
    ""Amount"": 113.4736507,
    ""Total"": 0.25720164
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226659,
    ""Amount"": 26.79415765,
    ""Total"": 0.06073136
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226651,
    ""Amount"": 57.98798342,
    ""Total"": 0.13143034
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226649,
    ""Amount"": 40.19123647,
    ""Total"": 0.09109303
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00224958,
    ""Amount"": 11.83690383,
    ""Total"": 0.02662806
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00241238,
    ""Amount"": 838,
    ""Total"": 2.02157444
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00231078,
    ""Amount"": 9.95795791,
    ""Total"": 0.02301064
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.0025,
    ""Amount"": 4.1999832,
    ""Total"": 0.01049995
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.0025,
    ""Amount"": 4.99998,
    ""Total"": 0.01249995
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226702,
    ""Amount"": 3.63623022,
    ""Total"": 0.0082434
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226702,
    ""Amount"": 2.14933238,
    ""Total"": 0.00487257
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226702,
    ""Amount"": 15,
    ""Total"": 0.0340053
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226702,
    ""Amount"": 56.80528353,
    ""Total"": 0.12877871
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00227634,
    ""Amount"": 76.88367619,
    ""Total"": 0.17501338
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.0000141,
    ""Amount"": 12444,
    ""Total"": 0.17546011
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.0000141,
    ""Amount"": 12131.09257,
    ""Total"": 0.1710484
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00001409,
    ""Amount"": 344.0847392,
    ""Total"": 0.00484815
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00249461,
    ""Amount"": 154.2853438,
    ""Total"": 0.38488176
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00249461,
    ""Amount"": 33.72938801,
    ""Total"": 0.08414166
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00246953,
    ""Amount"": 340.8737595,
    ""Total"": 0.84179797
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00246953,
    ""Amount"": 90.36231511,
    ""Total"": 0.22315244
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00246952,
    ""Amount"": 55.17093479,
    ""Total"": 0.13624572
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00246764,
    ""Amount"": 5.75660177,
    ""Total"": 0.01420522
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00245929,
    ""Amount"": 4.1587629,
    ""Total"": 0.0102276
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00252904,
    ""Amount"": 37.42985716,
    ""Total"": 0.0946616
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00252904,
    ""Amount"": 0.59310808,
    ""Total"": 0.00149999
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00252904,
    ""Amount"": 1.97703476,
    ""Total"": 0.00499999
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00252902,
    ""Amount"": 446.0229574,
    ""Total"": 1.12800097
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00252903,
    ""Amount"": 1.97704258,
    ""Total"": 0.00499999
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259459,
    ""Amount"": 38.54173491,
    ""Total"": 0.09999999
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259483,
    ""Amount"": 105.9381622,
    ""Total"": 0.27489152
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259484,
    ""Amount"": 0.03853803,
    ""Total"": 0.0001
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259484,
    ""Amount"": 0.03853803,
    ""Total"": 0.0001
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259485,
    ""Amount"": 1.91102375,
    ""Total"": 0.00495881
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259459,
    ""Amount"": 2,
    ""Total"": 0.00518918
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259464,
    ""Amount"": 1.90549392,
    ""Total"": 0.00494407
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259465,
    ""Amount"": 28.65568722,
    ""Total"": 0.07435147
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.01740491,
    ""Amount"": 0.20683711,
    ""Total"": 0.00359998
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00238916,
    ""Amount"": 79.70696671,
    ""Total"": 0.19043269
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00237524,
    ""Amount"": 37.90636505,
    ""Total"": 0.09003671
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00237524,
    ""Amount"": 2.00494017,
    ""Total"": 0.00476221
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00237524,
    ""Amount"": 18.57724489,
    ""Total"": 0.04412541
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00585,
    ""Amount"": 56.99961222,
    ""Total"": 0.33344773
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00585,
    ""Amount"": 0.00007739,
    ""Total"": 4.5e-7
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00585,
    ""Amount"": 0.00031039,
    ""Total"": 0.00000181
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 8.6e-7,
    ""Amount"": 2070,
    ""Total"": 0.0017802
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00187861,
    ""Amount"": 65.81153335,
    ""Total"": 0.1236342
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00187858,
    ""Amount"": 15.66747734,
    ""Total"": 0.0294326
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00187857,
    ""Amount"": 7.94470487,
    ""Total"": 0.01492468
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00187853,
    ""Amount"": 0.78814015,
    ""Total"": 0.00148054
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00187852,
    ""Amount"": 0.78814429,
    ""Total"": 0.00148054
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00054142,
    ""Amount"": 0.9975,
    ""Total"": 0.00054006
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 8.6e-7,
    ""Amount"": 811.9167491,
    ""Total"": 0.00069824
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 8.6e-7,
    ""Amount"": 338.0832509,
    ""Total"": 0.00029075
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00238719,
    ""Amount"": 72,
    ""Total"": 0.17187768
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00236363,
    ""Amount"": 4,
    ""Total"": 0.00945452
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00023501,
    ""Amount"": 41.1642077,
    ""Total"": 0.009674
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00023501,
    ""Amount"": 2.7697923,
    ""Total"": 0.00065092
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00000105,
    ""Amount"": 1270,
    ""Total"": 0.0013335
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00281001,
    ""Amount"": 360,
    ""Total"": 1.0116036
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00280001,
    ""Amount"": 3.33990832,
    ""Total"": 0.00935177
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.0038,
    ""Amount"": 208,
    ""Total"": 0.7904
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00356245,
    ""Amount"": 1,
    ""Total"": 0.00356245
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00370002,
    ""Amount"": 0.02702689,
    ""Total"": 0.0001
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00370002,
    ""Amount"": 15.4008193,
    ""Total"": 0.05698333
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00370002,
    ""Amount"": 3.09119995,
    ""Total"": 0.0114375
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.02315202,
    ""Amount"": 6.98549994,
    ""Total"": 0.16172843
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.02315202,
    ""Amount"": 6e-8,
    ""Total"": 0
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00023492,
    ""Amount"": 40,
    ""Total"": 0.0093968
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00004456,
    ""Amount"": 40.3006157,
    ""Total"": 0.00179579
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00004461,
    ""Amount"": 112.0824927,
    ""Total"": 0.00499999
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00004462,
    ""Amount"": 33.61721201,
    ""Total"": 0.00149999
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00004463,
    ""Amount"": 33.60967959,
    ""Total"": 0.0015
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.0002817,
    ""Amount"": 4,
    ""Total"": 0.0011268
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00003965,
    ""Amount"": 55.13060038,
    ""Total"": 0.00218592
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00003965,
    ""Amount"": 104.8693996,
    ""Total"": 0.00415807
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00004129,
    ""Amount"": 149.625,
    ""Total"": 0.00617801
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.02215591,
    ""Amount"": 3,
    ""Total"": 0.06646773
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00004073,
    ""Amount"": 113.3174137,
    ""Total"": 0.00461541
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00004072,
    ""Amount"": 36.68258634,
    ""Total"": 0.00149371
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.0000525,
    ""Amount"": 60,
    ""Total"": 0.00315
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.01877317,
    ""Amount"": 4,
    ""Total"": 0.07509268
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00199501,
    ""Amount"": 43.10755334,
    ""Total"": 0.08599999
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00350201,
    ""Amount"": 53.48162609,
    ""Total"": 0.18729318
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00350201,
    ""Amount"": 132.1260678,
    ""Total"": 0.46270681
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.02304826,
    ""Amount"": 17.03647964,
    ""Total"": 0.39266121
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.02312381,
    ""Amount"": 3.52,
    ""Total"": 0.08139581
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.02324002,
    ""Amount"": 3.39252036,
    ""Total"": 0.07884224
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.02459958,
    ""Amount"": 7,
    ""Total"": 0.17219706
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.01378499,
    ""Amount"": 9,
    ""Total"": 0.12406491
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00581178,
    ""Amount"": 1,
    ""Total"": 0.00581178
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.01498881,
    ""Amount"": 7,
    ""Total"": 0.10492167
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00001717,
    ""Amount"": 176.6891735,
    ""Total"": 0.00303375
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00001718,
    ""Amount"": 87.31082654,
    ""Total"": 0.00149999
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00001464,
    ""Amount"": 182.8870467,
    ""Total"": 0.00267746
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00001464,
    ""Amount"": 32.11295335,
    ""Total"": 0.00047013
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00596086,
    ""Amount"": 26,
    ""Total"": 0.15498236
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.000017,
    ""Amount"": 50,
    ""Total"": 0.00085
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.0005388,
    ""Amount"": 1,
    ""Total"": 0.0005388
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00935588,
    ""Amount"": 0.00060288,
    ""Total"": 0.00000564
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00935588,
    ""Amount"": 0.99939712,
    ""Total"": 0.00935023
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.01475001,
    ""Amount"": 1,
    ""Total"": 0.01475001
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00555,
    ""Amount"": 21.28693846,
    ""Total"": 0.1181425
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00553,
    ""Amount"": 9.26025155,
    ""Total"": 0.05120919
  }
]
</code></pre>

<p>I'm trying to load it with:</p>

<pre><code>import React, {Component} from 'react';
import Header from './header/header';
import Body from './body/body';
import sdc from './data';



export default class App extends Component {
  constructor(props) {
    super();
    // Set the initial grid in
    this.state = {
      title: ""Singularity is nigh!!!"",
      sdc: sdc
    };
  }

  render() {


    return (
      // Add your component markup and other subcomponent references here.
      &lt;div&gt;
        &lt;Header title={this.state.title} /&gt;
        &lt;p&gt;{this.state.sdc}&lt;/p&gt;
        &lt;Body /&gt;
      &lt;/div&gt;

    );
  }
}
</code></pre>

<p>I have got an error saying that:</p>

<blockquote>
  <p>Uncaught Invariant Violation: Objects are not valid as a React child
  (found: object with keys {}). If you meant to render a collection of
  children, use an array instead or wrap the object using
  createFragment(object) from the React add-ons. Check the render method
  of <code>App</code>.</p>
</blockquote>

<p>Please advise. I'm trying to do some calculations on the values but first I need to load it and be able to extract values from the object.</p>

<p>Thanks</p>

<p>Edit:</p>

<p>Error:</p>

<pre><code>/scripts/App.js
Module build failed: SyntaxError: Unexpected token (32:30)

  30 | 
  31 |   render() {
&gt; 32 |     const renderedData = {this._renderData()}
     |                               ^
  33 | 
  34 | 
  35 |     return (

BabelLoaderError: SyntaxError: Unexpected token (32:30)

  30 | 
  31 |   render() {
&gt; 32 |     const renderedData = {this._renderData()}
     |                               ^
  33 | 
  34 | 
  35 |     return (
</code></pre>

<p>EDIT 2:</p>

<pre><code>import React, {Component} from 'react';
import Header from './header/header';
import Body from './body/body';
import sdc from './data';



export default class App extends Component {
  constructor(props) {
    super();
    // Set the initial grid in
    this.state = {
      title: ""Singularity is nigh!!!"",
      sdc: sdc
    };

  }

  _renderData(){
     const data = this.state.sdc
     return Object.keys(data).map(function(key,index){
       return ( &lt;div key={datum.id}&gt;
          &lt;p&gt;{datum.Type}&lt;/p&gt;
          &lt;p&gt;{datum.Price}&lt;/p&gt;
          //other properties
        &lt;/div&gt; )
     })

  }

  render() {
    const renderedData = this._renderData()


    return (
      // Add your component markup and other subcomponent references here.
      &lt;div&gt;
        &lt;p&gt;{renderedData}&lt;/p&gt;

      &lt;/div&gt;

    );
  }
}
</code></pre>
","1945363","","1945363","","2016-09-30 21:20:53","2016-09-30 21:22:52","reactjs - load json object","<json><reactjs>","3","0","","",""
"49778171","1","","","2018-04-11 14:47:34","","0","330","<p>I've been trying to run an existing React project that I found on Github. I've had some issues. First, I needed to update React to v 16.2.0 to get <code>React.Fragment</code> working. Now, having done the update, I'm getting this second issue:</p>

<pre><code>./node_modules/react-dom/lib/ReactCompositeComponent.js
Module not found: Can't resolve 'react/lib/React' in '/Users/sahandzarrinkoub/Documents/Programming/DH2642/Sentify/repo/Sentify/node_modules/react-dom/lib'
</code></pre>

<p>from the console:</p>

<pre><code>index.js:2178 ./node_modules/react-dom/lib/instantiateReactComponent.js
Module not found: Can't resolve 'react/lib/getNextDebugID' in '/Users/sahandzarrinkoub/Documents/Programming/DH2642/Sentify/repo/Sentify/node_modules/react-dom/lib'
__stack_frame_overlay_proxy_console__   @   index.js:2178
handleErrors    @   webpackHotDevClient.js:178
./node_modules/react-dev-utils/webpackHotDevClient.js.connection.onmessage  @   webpackHotDevClient.js:211
./node_modules/sockjs-client/lib/event/eventtarget.js.EventTarget.dispatchEvent @   eventtarget.js:51
(anonymous) @   main.js:274
./node_modules/sockjs-client/lib/main.js.SockJS._transportMessage   @   main.js:272
./node_modules/sockjs-client/lib/event/emitter.js.EventEmitter.emit @   emitter.js:50
WebSocketTransport.ws.onmessage @   websocket.js:35
</code></pre>

<ol>
<li>What is the reason for this bug?</li>
<li>How to fix it?</li>
</ol>

<p>ADDITIONAL INFO:</p>

<p><a href=""https://i.stack.imgur.com/DE5vS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/DE5vS.png"" alt=""enter image description here""></a></p>

<p>Here is the project home folder. Here is the package.json file:</p>

<pre><code>{
  ""name"": ""Sentify"",
  ""version"": ""0.1.0"",
  ""private"": true,
  ""dependencies"": {
    ""ajv"": ""^5.5.2"",
    ""cors"": ""^2.8.4"",
    ""dom"": ""0.0.3"",
    ""jquery"": ""^3.3.1"",
    ""jsdom"": ""^11.7.0"",
    ""mapbox-gl"": ""^0.44.1"",
    ""material-ui"": ""^0.20.0"",
    ""react"": ""^16.2.0"",
    ""react-d3-basic"": ""^1.6.11"",
    ""react-d3-core"": ""^1.3.9"",
    ""react-d3-shape"": ""^0.3.25"",
    ""react-dom"": ""^15.6.2"",
    ""react-router-dom"": ""^4.3.0-rc.2"",
    ""react-scripts"": ""1.1.1"",
    ""react-simple-pie-chart"": ""^0.5.0"",
    ""webpack"": ""^3.11.0""
  },
  ""scripts"": {
    ""start"": ""react-scripts start"",
    ""build"": ""react-scripts build"",
    ""test"": ""react-scripts test --env=jsdom"",
    ""eject"": ""react-scripts eject""
  },
  ""devDependencies"": {}
}
</code></pre>

<p>I'm creating the node_modules folder by typing <code>npm install</code> and hosting with <code>npm start</code>.</p>

<p>I removed node_modules and ran <code>npm install; npm start</code> again, and the error changed slightly to:</p>

<pre><code>./node_modules/react-dom/lib/ReactMount.js
Module not found: Can't resolve 'react/lib/React' in '/Users/sahandzarrinkoub/Documents/Programming/DH2642/Sentify/repo/Sentify/node_modules/react-dom/lib'
</code></pre>

<p>in console:</p>

<pre><code>index.js:2178 ./node_modules/react-dom/lib/instantiateReactComponent.js
Module not found: Can't resolve 'react/lib/getNextDebugID' in '/Users/sahandzarrinkoub/Documents/Programming/DH2642/Sentify/repo/Sentify/node_modules/react-dom/lib'
__stack_frame_overlay_proxy_console__   @   index.js:2178
handleErrors    @   webpackHotDevClient.js:178
./node_modules/react-dev-utils/webpackHotDevClient.js.connection.onmessage  @   webpackHotDevClient.js:211
./node_modules/sockjs-client/lib/event/eventtarget.js.EventTarget.dispatchEvent @   eventtarget.js:51
(anonymous) @   main.js:274
./node_modules/sockjs-client/lib/main.js.SockJS._transportMessage   @   main.js:272
./node_modules/sockjs-client/lib/event/emitter.js.EventEmitter.emit @   emitter.js:50
WebSocketTransport.ws.onmessage @   websocket.js:35
</code></pre>

<p>Additional stack trace from console:</p>

<pre><code>ReactDebugTool.js:14 Uncaught Error: Cannot find module ""react/lib/ReactComponentTreeHook""
    at webpackMissingModule (ReactDebugTool.js:14)
    at Object../node_modules/react-dom/lib/ReactDebugTool.js (ReactDebugTool.js:14)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ReactInstrumentation.js (ReactInstrumentation.js:17)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ReactReconciler.js (ReactReconciler.js:12)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ReactUpdates.js (ReactUpdates.js:17)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ChangeEventPlugin.js (ChangeEventPlugin.js:15)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ReactDefaultInjection.js (ReactDefaultInjection.js:13)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ReactDOM.js (ReactDOM.js:14)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/index.js (index.js:3)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../src/index.js (discover.js:19)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object.0 (welcome.js:22)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at ./node_modules/ansi-regex/index.js.module.exports (bootstrap f031d93a2683340d518f:724)
    at bootstrap f031d93a2683340d518f:724
</code></pre>
","3128156","","3128156","","2018-04-11 14:57:50","2018-04-11 16:40:28","Module not found: Can't resolve 'react/lib/React'","<reactjs>","1","2","","",""
"49802526","1","","","2018-04-12 17:19:27","","1","34","<p>I try to understand what is the correct way to collect the <code>history</code> in surfing around the SPA website in React with <code>react-router-dom</code>. </p>

<p>I need to make many redirections inside my app, and it's work good with <code>&lt;Redirect/&gt;</code> component of <code>react-router-dom</code>. But it does not collect the <code>history</code> info propely, because I have an opportunity to click back button on my arrows in browser, but they redirect me on some other pages of website, insted of previous... Why?</p>

<p>Also I saw from this post <a href=""https://stackoverflow.com/questions/45890453/redirect-in-react-router-dom"">Redirect in react-router-dom?</a> that the correct way is to use the <code>this.props.history.push('/path1')</code> - but I cannot understand how to implement it in the my app. Help someone me, please...</p>

<p><strong>So I have the next App.js:</strong></p>

<pre><code>import React, { Component } from 'react';
import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';

import Auth from './Auth/Auth';
import RegistrationPage from './Auth/RegistrationPage';
import LogoutPage from './Auth/LogoutPage'
import EmployersBox from './Employers/EmployersBox';
import NotFoundPage from './NotFoundPage'

class App extends Component {
    render() {
        return (
            &lt;Router&gt;
                &lt;div className=""App""&gt;
                    &lt;Switch&gt;
                        &lt;Route path=""/auth/login"" component={Auth} /&gt;
                        &lt;Route path=""/auth/registration"" component={RegistrationPage} /&gt;
                        &lt;Route path=""/auth/logout"" component={LogoutPage} /&gt;
                        &lt;Route path=""/employers"" render={(props) =&gt; &lt;EmployersBox {...props} /&gt;
                        &lt;Route path="""" component={NotFoundPage} /&gt;
                    &lt;/Switch&gt;
                &lt;/div&gt;
            &lt;/Router&gt;
        )
    }
}

export default App;
</code></pre>

<p><strong>and or example Logout.js component:</strong></p>

<pre><code> //....Container:
        render() {
            if (this.state.navigateEmployers) {
                return &lt;Redirect to=""/employers"" /&gt;
            } else if (this.state.navigateAuth) {
                return &lt;Redirect to=""/auth/login"" /&gt;
            }
            return (
                &lt;Fragment&gt;
                    &lt;Header/&gt;
                    &lt;div className=""employers-logout col-lg-9 mx-auto d-flex flex-column justify-content-center text-center align-items-center""&gt;
                        &lt;div className=""employers-logout-text""&gt;
                            &lt;h1&gt;You succeessfully logouted!&lt;/h1&gt;
                            &lt;p&gt;You will be redirected to the main page shortly&lt;/p&gt;
                        &lt;/div&gt;
                        &lt;div className=""employers-logout-buttons d-flex row align-items-center align-middle justify-content-between""&gt;
                            &lt;p&gt;Manual redirection&lt;/p&gt;
                            &lt;button className=""btn btn-success mr-2"" onClick={this.handleClick}&gt;Go now&lt;/button&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                    &lt;Footer/&gt;
                &lt;/Fragment&gt;
            )
        }
    }

    export default LogoutPage;
</code></pre>
","9433929","","","","","2018-04-12 17:19:27","React-Router. How to collect the history by Redirect in react-router-dom?","<javascript><reactjs><react-router-v4><react-router-dom>","0","0","","",""
"50479973","1","50480068","","2018-05-23 04:44:54","","0","76","<p>This problem caused me a headache. <code>this</code> keyword when you set a state is not accessible inside the <code>ajax call</code>.</p>

<p>I think i miss-understand something in how react components work. </p>

<p>How should i use <code>this</code> keyword in this specific situation as provided below? and in general if <code>this</code> is not accessible.</p>

<pre><code>class PollsList extends Component {
    constructor() {
        super();

        this.state = {
            polls: []
        }
    }
    componentDidMount() {
        $.ajax({
            url: ""/mypolls"",
            type: 'get',
            dataType: 'json',
            contentType: 'application/json',
            success: function (polls_list) {
                console.log(polls_list);

                for (let i = 0; i &lt; polls_list.length; i++) {
                    let data = polls_list[i].poll[0];
                     this.setState(()=&gt;{polls:data});
                }
            },
            error: function (err, status, xhr) {
                console.log(err);
            }
        });
    }
    render() {
        return (
            &lt;Fragment&gt;
                &lt;div class='container'&gt;
                    &lt;ul id='polls_list'&gt;{this.state.polls}&lt;/ul&gt;
                &lt;/div&gt;
            &lt;/Fragment&gt;
        )
    }
}
</code></pre>

<p><strong>EDIT: PROBLEM SOLVED!</strong></p>

<p>Thanks for everyone contributed.</p>

<pre><code>class PollsList extends Component {
    constructor() {
        super();
        this.state = {
            polls: []
        }

        this.fetchPolls = this.fetchPolls.bind(this);
    }
    componentDidMount() {
        $.ajax({
            url: ""/mypolls"",
            type: 'get',
            dataType: 'json',
            contentType: 'application/json',
            success: (polls_list)=&gt;this.fetchPolls(polls_list), // this must look like that.
            error: (err, status, xhr) =&gt;{
                console.log(err);
            }
        });
    }

    fetchPolls(polls_list){
        for (let i = 0; i &lt; polls_list.length; i++) {
            let data = polls_list[i].poll[0];
            this.setState({polls:data});
        }
    }
    render() {
        console.log(this.state.polls);
        return (
            &lt;Fragment&gt;
                &lt;div className='container'&gt;
                    &lt;ul id='polls_list'&gt;{this.state.polls.option1} {this.state.polls.option2}&lt;/ul&gt;
                &lt;/div&gt;
            &lt;/Fragment&gt;
        )
    }
}
</code></pre>
","8584021","","8584021","","2018-05-23 05:10:58","2018-05-23 06:03:38","What does ""this"" stands for in a react component? (this.state..)","<javascript><ajax><reactjs>","4","4","","",""
"50526673","1","","","2018-05-25 10:07:02","","0","63","<p>I would like to use <code>BootStrap4</code> with my <code>Reactjs</code>. After install it, css of <code>btn btn-primay</code> works fine. However, I notice that square of the <code>fieldset</code> is gone. I have checked with <a href=""https://reactstrap.github.io/components/form/"" rel=""nofollow noreferrer"">demo</a></p>

<p>To repeat my case here are my snippets.</p>

<p><code>index.js</code></p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import 'bootstrap/dist/css/bootstrap.css';
import App from './App';
import registerServiceWorker from './registerServiceWorker';

ReactDOM.render(&lt;App/&gt;, document.getElementById('root'));
registerServiceWorker();
</code></pre>

<p><code>package.json</code></p>

<pre><code>{
  ""name"": ""f1"",
  ""version"": ""0.1.0"",
  ""private"": true,
  ""dependencies"": {
    ""@amcharts/amcharts3-react"": ""^3.1.0"",
    ""ajv"": ""^6.5.0"",
    ""amcharts3"": ""^3.21.12"",
    ""axios"": ""^0.18.0"",
    ""bootstrap"": ""^4.1.1"",
    ""lodash"": ""^4.17.5"",
    ""react"": ""^16.4.0"",
    ""react-dom"": ""^16.4.0"",
    ""react-redux"": ""^5.0.7"",
    ""react-router-dom"": ""^4.2.2"",
    ""react-scripts"": ""1.1.1"",
    ""reactstrap"": ""^6.0.1"",
    ""recharts"": ""^1.0.0-beta.10"",
    ""redux"": ""^3.7.2"",
    ""redux-form"": ""^7.2.3"",
    ""redux-saga"": ""^0.16.0""
  },
  ""scripts"": {
    ""start"": ""react-scripts start"",
    ""build"": ""react-scripts build"",
    ""test"": ""react-scripts test --env=jsdom"",
    ""eject"": ""react-scripts eject""
  }
}
</code></pre>

<p><code>login.js</code>
render(){
    const {handleSubmit} = this.props;</p>

<pre><code>return(
  &lt;Fragment&gt;
    &lt;a href=""/""&gt;&lt;img src=""tokamak-model.png""/&gt;&lt;/a&gt;
    &lt;form onSubmit={handleSubmit(this.onSubmit.bind(this))}&gt;
    &lt;fieldset&gt;
      &lt;legend&gt;Authentication&lt;/legend&gt;
      &lt;table&gt;
        &lt;tr&gt;
          &lt;td&gt;Username&lt;/td&gt;
          &lt;Field
            name=""userid""
            component={this.renderField}
            placeholder=""User ID""
            autocomplete=""username""
            type=""text""
          /&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Password&lt;/td&gt;
          &lt;Field
            name=""password""
            component={this.renderField}
            placeholder=""Password""
            autocomplete=""current-password""
            type=""password""
          /&gt;
        &lt;/tr&gt;
      &lt;/table&gt;
      &lt;button type=""submit"" className=""btn btn-primary""&gt;Submit&lt;/button&gt;

    &lt;/fieldset&gt;
    &lt;/form&gt;
  &lt;/Fragment&gt;
)
</code></pre>

<p>}</p>

<p><strong>Update:</strong><br>
The original without bootstrap
<a href=""https://i.stack.imgur.com/0wtTz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0wtTz.png"" alt=""without bootstrap""></a></p>

<p>The new one with bootstrap</p>

<p><a href=""https://i.stack.imgur.com/47iNO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/47iNO.png"" alt=""with bootstrap""></a></p>

<p><strong>Update2:</strong><br>
Try make my own class in <code>my-fieldset</code><br>
<code>&lt;fieldset className='my-fieldset'&gt;</code>
And put this to the <code>css</code></p>

<pre><code>.my-fieldset{
  border: 3px solid;
}
</code></pre>

<p>But legend is sticking to the left</p>

<p><strong>Question:</strong><br>
Is it possible to bring square frame of <code>fieldset</code> back and still get benefit of bootstrap?</p>
","1019455","","1019455","","2018-05-25 10:42:40","2018-05-25 10:53:49","reactstrap fieldset legend not square show","<reactjs><bootstrap-4><reactstrap>","1","2","","",""
"49251167","1","49252605","","2018-03-13 08:11:24","","1","460","<p>I'm using <code>""react-router-dom"": ""^4.2.2""</code>. </p>

<p>If I test on <code>localhost:3000/second</code> it works perfectly. </p>

<p>When I upload this on ubuntu server with nginx and I try <code>www.website.com</code>, it works . When I try to use <code>www.website.com/second</code> it gives me <code>404 not found</code>. I'm using <code>create-react-app</code>. </p>

<p><strong>app.js</strong></p>

<pre><code>class TestRoutes extends React.Component{
    constructor(props){
        super(props);
    }
    render(){
        return(&lt;React.Fragment&gt;
            &lt;BrowserRouter&gt;
                &lt;Switch&gt;
                    &lt;Route exact path='/' component={MainPage}/&gt;
                    &lt;Route path='/second' component={SecondPage}/&gt;
                    &lt;Route path='/third' component={ThirdPage}/&gt;
                &lt;/Switch&gt;
            &lt;/BrowserRouter&gt;
                &lt;/React.Fragment&gt;);
    }
}

ReactDOM.render(&lt;TestRoutes/&gt;, document.getElementById(""root""));
</code></pre>

<p><strong>/etc/nginx/sites-available/default</strong>
Here's the configuration file from the server</p>

<pre><code>server {
        listen 443 ssl;

    root /var/www/reactcamera/build;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;
    server_name website.com www.website.com;
    ssl_certificate /etc/letsencrypt/live/website.com/fullchain.pem; # 
    managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/website.com/privkey.pem; # 
    managed by Certbot


    location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
    }
</code></pre>
","8608962","","8608962","","2018-03-13 08:52:15","2018-03-13 09:32:54","React Router routes not working on nginx create-react-app","<reactjs><nginx><react-router><create-react-app>","2","7","1","",""
"50916113","1","50918763","","2018-06-18 19:16:42","","0","95","<p>I have a problem with active link using <strong>react-router-bootstrap</strong> (<a href=""https://www.npmjs.com/package/react-router-bootstrap"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/react-router-bootstrap</a>) components. When I navigate to <em>About</em>, <strong>active</strong> class appears not only on <em>About</em> but in <em>Home</em> too.</p>

<p><a href=""https://i.stack.imgur.com/8CXWu.png"" rel=""nofollow noreferrer"">Active Link react-router's issue</a></p>

<p>This my <strong>Nav</strong> component from <strong>react-bootstrap</strong> (<a href=""https://react-bootstrap.github.io/"" rel=""nofollow noreferrer"">https://react-bootstrap.github.io/</a>):</p>

<p><strong><em>NavLinks.jsx</em></strong></p>

<pre><code>import React, { Component } from 'react';
import { Nav, NavItem } from 'react-bootstrap';

import HashNavItem from '../../Navigation/HashNavItem';

// import Flags from './Flags/Flags'
import ""./NavLinks.css"";

const routes = [{
  name: 'Home',
  path: '/',
  external: false
},{
  name: 'About',
  path: '/about',
  external: false
}, {
  name: 'Stores',
  path: '/#stores',
  external: false
}, {
  name: 'My Account',
  path: 'http://my-react.appicar.com/',
  external: true
}, {
  name: 'Services',
  path: '/#services',
  external: false
}, {
  name: 'Reviews',
  path: '/#reviews',
  external: false
}, {
  name: 'Contact',
  path: '/#contact',
  external: false
}];

export default class MainNav extends Component {

  handleClick(e) {
    e.preventDefault();
    alert('hola');
  }
  render() {
    let template;

    return (
      &lt;Nav&gt;
        {
          routes.map((route, key) =&gt; {
            if (route.external) {
              template = (
                &lt;NavItem eventKey={ 'nav-' + key } href={ route.path } key={ key }&gt;
                  {route.name}
                &lt;/NavItem&gt;
              );
            } else {
              template = &lt;HashNavItem eventKey={ 'nav-' + key } name={ route.name } to={ route.path } key={ key } /&gt;;
            }
            return template;
          })
        }
      &lt;/Nav&gt;
    );
  }
}
</code></pre>

<p><strong><em>HashNavItem.jsx</em></strong></p>

<pre><code>import React, { Component } from ""react"";
import { NavItem } from 'react-bootstrap';
import { LinkContainer } from ""react-router-bootstrap"";

export default class HashNavItem extends Component {

  constructor(props) {
    super(props);
    // Atributes.
    this.hashFragment = '';
    this.observer = null;
    this.asyncTimerId = null;
    this.scrollFunction = null;
    // States.
    this.state = {
      key: props.eventKey,
      name: props.name,
      to: props.to
    }
    // Methods.
    this.reset = this.reset.bind(this);
    this.getElAndScroll = this.getElAndScroll.bind(this);
    this.hashLinkScroll = this.hashLinkScroll.bind(this);
    this.handleClick = this.handleClick.bind(this);
  }

  reset() {
    this.hashFragment = '';
    if (this.observer !== null) this.observer.disconnect();
    if (this.asyncTimerId !== null) {
      window.clearTimeout(this.asyncTimerId);
      this.asyncTimerId = null;
    }
  }

  getElAndScroll() {
    const element = document.getElementById(this.hashFragment);
    if (element !== null) {
      this.scrollFunction(element);
      this.reset();
      return true;
    }
    return false;
  }

  hashLinkScroll() {
    // Push onto callback queue so it runs after the DOM is updated
    window.setTimeout(() =&gt; {
      if (this.getElAndScroll() === false) {
        if (this.observer === null) {
          this.observer = new MutationObserver(this.getElAndScroll);
        }
        this.observer.observe(document, {
          attributes: true,
          childList: true,
          subtree: true,
        });
        // if the element doesn't show up in 10 seconds, stop checking
        this.asyncTimerId = window.setTimeout(() =&gt; {
          this.reset();
        }, 10000);
      }
    }, 0);
  }

  handleClick(e) {
    this.reset();
    if (this.props.onClick) this.props.onClick(e);
    if (typeof this.props.to === 'string') {
      this.hashFragment = this.props.to
        .split('#')
        .slice(1)
        .join('#');
    } else if (
      typeof this.props.to === 'object' &amp;&amp;
      typeof this.props.to.hash === 'string'
    ) {
      this.hashFragment = this.props.to.hash.replace('#', '');
    }
    if (this.hashFragment !== '') {
      this.scrollFunction =
        this.props.scroll || (el =&gt;
          el.scrollIntoView(this.props.smooth ? { behavior: 'smooth' } : undefined)
        );
      this.hashLinkScroll();
    }
  }

  render() {
    return (
      &lt;LinkContainer to={ this.state.to }&gt;
        &lt;NavItem eventKey={ this.state.key } key={ this.state.key } onClick={ this.handleClick }&gt;{ this.state.name } &lt;/NavItem&gt;
      &lt;/LinkContainer&gt;
    );
  }
}
</code></pre>

<p><strong><em>App.jsx</em></strong></p>

<pre><code>import React, { Component } from ""react"";
import { Router, Switch, Route } from 'react-router-dom';
import { createBrowserHistory } from 'history';

import MainNav from './MainNav/MainNav';
import Logo from './Logo/Logo';
import Footer from './Footer/Footer';
import Copyright from './Copyright/Copyright';
import HomePage from './HomePage/HomePage';
import AboutPage from './AboutPage/AboutPage';
import Error404 from './Error404/Error404';

import './App.css';

class App extends Component {
  render() {
    return (
      &lt;Router history={ createBrowserHistory() }&gt;
        &lt;div&gt;
          &lt;MainNav /&gt;
          &lt;Logo /&gt;
          &lt;Switch&gt;
            &lt;Route exact path=""/"" component={ HomePage } /&gt;
            &lt;Route exact path=""/about"" component={ AboutPage } /&gt;
            &lt;Route exact path=""/404"" component={ Error404 } /&gt;
          &lt;/Switch&gt;
          &lt;Footer /&gt;
          &lt;Copyright /&gt;
        &lt;/div&gt;
      &lt;/Router&gt;
    );
  }
}

export default App;
</code></pre>

<p>Does anyone knows why <strong><em>Home</em></strong> is always marked as <strong>active</strong>?</p>
","2312335","","2312335","","2018-06-19 23:45:17","2018-06-19 23:45:17","SO react-router-bootstrap active link not working properly","<reactjs><navigation><react-router><react-bootstrap><react-router-bootstrap>","2","0","","",""
"50708181","1","50713155","","2018-06-05 20:09:29","","0","28","<h2>So I have a reactjs app using <strong>GraphQl</strong> and I'm trying to cut down the repetition through the use of <strong>fragments</strong>, however, its failing.</h2>

<p><strong>Fragment</strong> (companyQueries.js)</p>

<pre><code>export const CompanyFragment = gql`
  fragment company on WithApiKeys {
    company {
      id
      apiKeys {
        id
        token
        insertedAt
      }
    }
  }
`
</code></pre>

<p><strong>Beginning of usage</strong> (withCreateApiKeyMutation.js)</p>

<pre><code>import { graphql } from 'react-apollo'
import gql from 'graphql-tag'
import CompanyFragment from '../../../utils/QueryFragments/companyQueries'

console.log(CompanyFragment)
const QUERY = gql`
  query {
    viewer {
      id
      ...company
    }
  }
  ${CompanyFragment}
</code></pre>

<hr>

<h2>Given this kind of export I would expect it to at least be able to compile, but it errors.</h2>

<p><strong>Error given by compiler</strong></p>

<p>Error on line 3 of <strong>companyQueries.js</strong> </p>

<blockquote>
  <p>TypeError: Object(...) is not a function</p>
  
  <p>export const CompanyFragment = gql &lt;--line 3</p>
</blockquote>

<p><a href=""https://i.stack.imgur.com/iaUkN.png"" rel=""nofollow noreferrer"">picture of error</a></p>

<p>If anyone could provide an insight on this it would be greatly appreciated! </p>
","9367870","","","","","2018-06-06 06:00:56","GraphQL Fragments error on export to query","<reactjs><graphql><apollo><react-apollo><recompose>","1","0","","",""
"48235692","1","","","2018-01-13 00:07:42","","2","331","<p>I try to use JSX Fragment syntax with Typescript but I have the following error : </p>

<blockquote>
  <p>Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: symbol</p>
</blockquote>

<p>I am using : </p>

<ul>
<li>React 16.2.0</li>
<li>React-dom 16.2.0</li>
<li>Typescript 2.6.2</li>
</ul>

<p>Even if I use reacts code example, it fails :</p>

<pre><code>public render() {
        return (
            &lt;&gt;
            Some text.
            &lt;h2&gt;A heading&lt;/h2&gt;
            More text.
            &lt;h2&gt;Another heading&lt;/h2&gt;
            Even more text.
          &lt;/&gt;
        );
    }
</code></pre>

<p>tsconfig.json :</p>

<pre><code>{
  ""compilerOptions"": {
    ""baseUrl"": ""."",
    ""module"": ""es2015"",
    ""moduleResolution"": ""node"",
    ""target"": ""es5"",
    ""jsx"": ""react"",
    ""experimentalDecorators"": true,
    ""sourceMap"": true,
    ""skipDefaultLibCheck"": true,
    ""strict"": true,
    ""lib"": [""es6"", ""dom""],
    ""types"": [""webpack-env""]
  },
  ""exclude"": [
      ""bin"",
      ""node_modules"",
      ""app/__tests__""
  ]
}
</code></pre>
","1035802","","1035802","","2018-01-13 09:36:46","2018-01-13 09:36:46","JSX Fragment syntax generates ""Element type is invalid""","<reactjs><typescript>","0","8","","",""
"51054144","1","","","2018-06-27 03:30:01","","0","54","<p><strong>strong text</strong>I have a carousel component that I created in a <code>jsx</code> file. When I go to a different page and navigate back to that page the carousel doesn't re-render. I have tried updating my routes as well as looking into all possible <code>css</code> causes. I see that the carousel container is there but none of the content is showing. </p>

<p><strong>Below is my jsx file:</strong> </p>

<pre><code>import React, { Component, Fragment } from 'react';
import { Link } from 'react-router-dom'
import { Button, Icon } from 'react-materialize'
import ReactDOM from 'react-dom'
import './Carousel.css';

class Carousel extends Component {

    render() {
        return (
            &lt;Fragment&gt;
                &lt;div&gt;
                    &lt;div class=""row""&gt;
                        &lt;div class=""col s12""&gt;
                            {/*  &lt;!--Images and carousel items below --&gt; */}
                            &lt;div width=""100%"" id=""carousel-div"" class=""carousel userInput""&gt;
                                &lt;div class=""left""&gt;
                                    &lt;a href=""Previo"" class=""movePrevCarousel middle-indicator-text waves-effect waves-light""&gt;
                                        &lt;i class=""material-icons left  middle-indicator-text""&gt;chevron_left&lt;/i&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""letters"" data-search='Sports' href=""#letters""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://toddlermasterclass.com/wp-content/uploads/2015/07/Fun-Games-For-Preschoolers.png""
                                        alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""numbers"" data-search='Music' href=""#numbers""&gt;
                                    &lt;img height=""190"" width=""400"" src=""http://imgsdown.1mobile.com/group1/M00/A5/58/S36rZlagE-mAOxmfAAQhEBsG6mg860.png"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""colors"" data-search='Technology' href=""#colors""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://i.ytimg.com/vi/e1dHmEJcMG0/maxresdefault.jpg"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""memory-match"" data-search='Food' href=""#memory-match""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://images-na.ssl-images-amazon.com/images/I/713UI4Vy1-L.png"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""shapes"" data-search='Arts' href=""#shapes!""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://i.ytimg.com/vi/AQbnbrTHgtA/maxresdefault.jpg"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""submitBTN btn waves-effect waves-light"" type=""submit"" name=""action""&gt;Submit
                                    &lt;i class=""material-icons right""&gt;send&lt;/i&gt;
                                &lt;/a&gt;
                                &lt;div class=""right""&gt;
                                    &lt;a href=""Siguiente"" class=""moveNextCarousel middle-indicator-text waves-effect waves-light""&gt;
                                        &lt;i class=""material-icons right middle-indicator-text""&gt;chevron_right&lt;/i&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                ); 
        &lt;/Fragment&gt;
        )
    }
}

export default Carousel;
</code></pre>

<p><strong>Below is my router file:</strong> </p>

<pre><code>import React from 'react';
import { BrowserRouter as Router, Route } from 'react-router-dom';
import Navbar from './components/Navbar';
import Parents from './components/Parents';
import Login from './components/Login';
import Home from './components/Home';
import About from './components/About'
import Cards from './components/cardGame';
import Carousel from './components/Carousel';
/* import ReactCarousel from './components/ReactCarousel'; */
import ColorGame from './components/colorGame/colorGame';
import NumberGame from './components/NumberGame/numberGame';


const AppRouter = () =&gt; {
// class AppRouter extends Component {
//     render() {
        return (
            &lt;Router&gt;
                &lt;div&gt;
                    {/* edit username */}
                    &lt;Navbar username='User' message='welcome back!'/&gt;

                    &lt;Route path='/Login' component={Login} /&gt;
                    &lt;Route path='/Home' component={Home} /&gt;
                    &lt;Route path='/About' component={About} /&gt;
                    &lt;Route path='/Parents' component={Parents} /&gt;
                    &lt;Route path='/colorGame' component={ColorGame} /&gt;
                    &lt;Route path='/cardGame' component={Cards} /&gt;
                    &lt;Route path='/numberGame' component={NumberGame} /&gt;
                &lt;/div&gt;
            &lt;/Router&gt;
        )
    }
// }

export default AppRouter;
</code></pre>

<p><strong>Below is the Home.js file that I'm rendering my carousel in:</strong></p>

<pre><code>import React, { Component, Fragment } from 'react';
import { Link } from 'react-router-dom';
import { Button, Icon } from 'react-materialize'
import './Home.css';
import ReactDOM from 'react-dom';
import Carousel from '../Carousel';
/* import ReactCarousel from '../ReactCarousel'; */

class Home extends Component {
    render() {
        return (

        &lt;Fragment&gt;
                &lt;Carousel /&gt;
                {/* &lt;ReactCarousel /&gt; */}
            &lt;/Fragment&gt;
        )
    }
}

export default Home;
</code></pre>

<p><strong>Here is the Navbar component</strong></p>

<pre><code>import React, { Fragment } from 'react';
import { Link } from 'react-router-dom'
import './Navbar.css'



const Navbar = props =&gt; {
  return (

     &lt;Fragment&gt;
      &lt;nav className=""navigation_container""&gt;

      &lt;div className=""l-triangle-top""&gt;&lt;/div&gt;
   &lt;div className=""l-triangle-bottom""&gt;&lt;/div&gt;

   &lt;div className=""rectangle""&gt;
        &lt;div className=""navigation""&gt;
          &lt;Link className='nav-item nav-link' to='/Parents'&gt;Parents Place&lt;/Link&gt;
          &lt;ul className=""right hide-on-med-and-down""&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/Home'&gt;Home&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/Login'&gt;Logout&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/About'&gt;About&lt;/Link&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
         &lt;/div&gt;
         &lt;div className=""r-triangle-top""&gt;&lt;/div&gt;
         &lt;div className=""r-triangle-bottom""&gt;&lt;/div&gt;
      &lt;/nav&gt;
    &lt;/Fragment&gt;
  )
} 


export default Navbar;
</code></pre>

<p>Would someone help me see why the carousel is not rendering when I navigate back to my home page?</p>
","9997571","","9997571","","2018-06-27 19:32:16","2018-06-27 19:32:16","React component does'nt re-render with react router on url change","<javascript><reactjs><react-router><render><materialize>","1","6","","",""