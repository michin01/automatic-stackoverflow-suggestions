Id,PostTypeId,AcceptedAnswerId,ParentId,CreationDate,DeletionDate,Score,ViewCount,Body,OwnerUserId,OwnerDisplayName,LastEditorUserId,LastEditorDisplayName,LastEditDate,LastActivityDate,Title,Tags,AnswerCount,CommentCount,FavoriteCount,ClosedDate,CommunityOwnedDate
"40600996","1","","","2016-11-15 02:18:58","","1","1270","<p>I am trying to use the chart.js bar chart with react and es6. </p>

<p>As I am using <code>import</code> instead of <code>require</code> my project looks a bit different than the <a href=""https://github.com/reactjs/react-chartjs#example-usage"" rel=""nofollow noreferrer"">documentation on GitHub</a>.</p>

<p>Here is an example of my project:</p>

<pre><code>import React from 'react';
import { BarChart } from 'react-chartjs';

class HelloChart extends React.Component {
  constructor() {
    super();
    let data = {
      labels: [""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July""],
      datasets: [{
        label: ""My First dataset"",
        backgroundColor: [
          'rgba(255, 99, 132, 0.2)',
          'rgba(54, 162, 235, 0.2)',
          'rgba(255, 206, 86, 0.2)',
          'rgba(75, 192, 192, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(255, 159, 64, 0.2)'
        ],
        borderColor: [
          'rgba(255,99,132,1)',
          'rgba(54, 162, 235, 1)',
          'rgba(255, 206, 86, 1)',
          'rgba(75, 192, 192, 1)',
          'rgba(153, 102, 255, 1)',
          'rgba(255, 159, 64, 1)'
        ],
        borderWidth: 1,
        data: [65, 59, 80, 81, 56, 55, 40],
      }]
    };
    let options = {
      scales: {
        xAxes: [{
          stacked: true
        }],
        yAxes: [{
          stacked: true
        }]
      }
    };
    this.state = {
      chartData: data,
      chartOptions: options,
    };
  }
  render() {
    let chartData = this.state.chartData;
    let chartOptions = this.state.chartOptions;
    return (
      &lt;div&gt;
        &lt;BarChart data={chartData} options={chartOptions} width=""600"" height=""250"" /&gt;
      &lt;/div&gt;
    )
  }
}

export default HelloChart
</code></pre>

<p>These are the two errors in am getting in my console:</p>

<p><code>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of</code>HelloChart<code>.</code></p>

<p>And ...</p>

<p><code>Uncaught Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. Check the render method of</code>HelloChart<code>.</code></p>
","1322427","","","","","2016-11-15 02:30:07","Render bar chart with chart.js and react and es6","<reactjs><charts><ecmascript-6><react-chartjs>","1","0","","",""
"40624802","1","","","2016-11-16 05:39:33","","1","265","<p>I'm using <a href=""http://nativebase.io/"" rel=""nofollow noreferrer"">nativebase</a> as a base for the UI side of a React Native app that I'm developing and I'm running into an error with something that should be very simple.</p>

<p>I want to create a component for the tab footer of the app to include in different views as follows:</p>

<p>./Components/Footer.js</p>

<pre><code>import React, { Component } from 'react';
import {
  Footer,
  FooterTab,
  Button,
  Icon,
  Text
} from 'native-base';

class TabFooter extends Component {
  render() {
    return (
      &lt;Footer &gt;
        &lt;FooterTab&gt;
          &lt;Button&gt;
            &lt;Badge&gt;2&lt;/Badge&gt;
            Apps
            &lt;Icon name='ios-apps-outline' /&gt;
          &lt;/Button&gt;
          &lt;Button&gt;
            Camera
            &lt;Icon name='ios-camera-outline' /&gt;
          &lt;/Button&gt;
          &lt;Button active&gt;
            Navigate
            &lt;Icon name='ios-compass' /&gt;
          &lt;/Button&gt;
          &lt;Button&gt;
            Contact
            &lt;Icon name='ios-contact-outline' /&gt;
          &lt;/Button&gt;
        &lt;/FooterTab&gt;
      &lt;/Footer&gt;
    );
  }
}

export default TabFooter;
</code></pre>

<p>And an example view would be:</p>

<pre><code>import React, { Component } from 'react';
import { Container, Header, Title, Content, Footer, FooterTab, Button, Icon,
  Text, List, ListItem, Input, InputGroup } from 'native-base';
import { TabFooter } from '../Components/Footer';

class EditGuest extends Component {
  render() {

    return (
      &lt;Container&gt;
        &lt;Header&gt;
          &lt;Title&gt;Whatever title&lt;/Title&gt;
        &lt;/Header&gt;

        &lt;Content&gt;
        &lt;/Content&gt;
        &lt;TabFooter /&gt;
      &lt;/Container&gt;
    );
  }
}

export default EditGuest;
</code></pre>

<p>But when this view renders I'm getting the error:</p>

<pre><code>ExceptionsManager.js:82 Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of `EditGuest`.
</code></pre>

<p>Is there something really basic that I'm missing because I would of thought that I could just simply include this component within any view without any problems...</p>
","2987737","","","","","2016-12-07 05:47:57","React Native error - React: createElement: type should not be null","<javascript><react-native><react-jsx><native-base>","3","2","","",""
"26771987","1","26799431","","2014-11-06 04:55:14","","1","118","<p>I posted this to the Meteor-Talk Google Group, but I figure that this is such an obscure question, it needs a signal boost.</p>

<p>I'm trying to create a plugin that let's you add XML-style elements to an HTML document, as is possible with HTML5, for use with <a href=""https://github.com/xml3d/xml3d.js"" rel=""nofollow"">XML3D</a>. I think it'd be really awesome to render 3D content reactively with Blaze templates and XML3D.</p>

<p>I need to use the document.createElementNS method to add elements to the DOM in order to add them under an alternative namespace than SVG's, in order to experiment with the alternative specification.</p>

<p>Unfortunately, Meteor only supports that method for the SVG namespace, as per this code:
<a href=""https://github.com/meteor/meteor/blob/a81fbf483efa4f40ea2d382f0c7275d408536e96/packages/blaze/materializer.js#L41"" rel=""nofollow"">https://github.com/meteor/meteor/blob/a81fbf483efa4f40ea2d382f0c7275d408536e96/packages/blaze/materializer.js#L41</a></p>

<p>I've considered two different approaches to doing this. I could either create a Template block helper, one that looks like this:</p>

<p>In Spacebars:</p>

<pre><code>{{#xml ns=""http://www.xml3d.org/2009/xml3d""}}
  &lt;xml3d&gt;...&lt;/xml3d&gt;
</code></pre>

<p>In Jade:</p>

<pre><code>+xml(ns='http://www.xml3d.org/2009/xml3d')
  xml3d ...
</code></pre>

<p>That piece is simple enough, but how could I deliver to Blaze-- and ultimately, the DOM-- the rendered contents, reactively, using the correct namespace?</p>

<p>Or, I could attempt to extend Blaze to support alternative namespaces somehow, perhaps by using a package. I'm not sure how to do this exactly either, since I don't think a package could extend Blaze. I did see BlazeTools, and maybe that could help? The documentation on what that did was rather sparse, and what the code actually did was not immediately obvious.</p>

<p>Or perhaps some combination of both approaches, say, using the block helper to signal to Blaze the XML namespace to render the contents of the block helper under.</p>

<p>Thoughts?</p>
","351531","","440252","","2015-03-09 12:18:30","2015-06-20 11:14:49","XML3D, document.createElementNS, and Meteor","<javascript><node.js><meteor><3d><xml3d>","1","0","","",""
"31634924","1","","","2015-07-26 08:10:05","","1","140","<p>I'm trying to get started with React and CSSTransitionGroup. If I add my <code>&lt;MyTransitionGroup ../&gt;</code> I get the warning ""Something is calling a React component directly"", and the error ""Uncaught TypeError: Cannot read property '__reactAutoBindMap' of undefined""</p>

<p>If I remove <code>&lt;MyTransitionGroup ../&gt;</code> - all is fine again. I checked the compiled js and <code>&lt;MyTransitionGroup ../&gt;</code> is compiled to <code>React.createElement(MyTransitionGroup...</code> - so it doesn't seem that the jsx compiler is out of date..</p>

<pre><code>'use strict';
var React = require('react');
var Addons = require('react-addons');
var MyTransitionGroup = Addons.CSSTransitionGroup;
var style = require('./Screen.scss');

var Screen = React.createClass({
  render: function () {
    var style = {
        backgroundColor: this.props.data.bgcolor
    };
    return (
        &lt;MyTransitionGroup transitionName=""example"" transitionAppear={true}&gt; **// remove this and it works**
            &lt;div style={style} className=""Screen""&gt;
                {this.props.data.stitle}
            &lt;/div&gt;
        &lt;/MyTransitionGroup&gt;
    );
  }
});

module.exports = Screen;
</code></pre>
","1089772","","","","","2015-07-26 08:10:05","CSSTransitionGroup __reactAutoBindMap error","<reactjs>","0","0","1","",""
"32934252","1","32936824","","2015-10-04 13:57:22","","5","1160","<p>I wanted to use <a href=""https://github.com/chenglou/react-motion"">https://github.com/chenglou/react-motion</a> but when I look at the very first example:</p>

<pre><code>import {Motion, spring} from 'react-motion';
// In your render...
&lt;Motion defaultStyle={{x: 0}} style={{x: spring(10)}}&gt;
  {value =&gt; &lt;div&gt;{value.x}&lt;/div&gt;}
&lt;/Motion&gt;
</code></pre>

<p>I got overwhelmed with the ES6 syntax and the JSX syntax. I tried translating it on the <a href=""https://babeljs.io/repl/"">babel REPL</a> but it strips out the JSX syntax:</p>

<pre><code>""use strict"";

React.createElement(
  Motion,
  { defaultStyle: { x: 0 }, style: { x: spring(10) } },
  function (value) {
    return React.createElement(
      ""div"",
      null,
      value.x
    );
  }
);
</code></pre>

<p>What does this translate to in pre-ES6 JSX syntax?</p>
","1099531","","1099531","","2015-10-04 15:41:51","2016-02-04 04:26:47","Overwhelming syntax on react-motion","<javascript><syntax><reactjs><ecmascript-6><react-jsx>","1","5","","",""
"48160085","1","","","2018-01-09 00:53:34","","0","41","<p>I read all the threads about dynamic ui within the Shiny framework, but I did not find anything that work. I want to display a twitter timeline. This chunk of code works really well :</p>

<pre><code>library(shiny)
library(shinydashboard)

runApp(list(ui = fluidPage(
  tags$head(tags$script('!function(d,s,id){var js,fjs=d.getElementsByTagName(s)    [0],p=/^http:/.test(d.location)?\'http\':\'https\';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+""://platform.twitter.com/widgets.js"";fjs.parentNode.insertBefore(js,fjs);}}(document,""script"",""twitter-wjs"");')),
  titlePanel(""""),
  sidebarLayout(
    sidebarPanel()
    , mainPanel(
      a(""Tweets by Andrew Ng"",
        class=""twitter-timeline"",
        href = ""https://twitter.com/AndrewYNg""
      )
    )
  )
)
, server = function(input, output, session){

}
)
)
</code></pre>

<p>But when, I try to make it reactive, I only got a link to the twitter timeline:</p>

<pre><code>library(shiny)
library(shinydashboard)
runApp(list(ui = fluidPage(
  tags$head(tags$script('!function(d,s,id){var js,fjs=d.getElementsByTagName(s)    [0],p=/^http:/.test(d.location)?\'http\':\'https\';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+""://platform.twitter.com/widgets.js"";fjs.parentNode.insertBefore(js,fjs);}}(document,""script"",""twitter-wjs"");')),
  titlePanel(""""),
  sidebarLayout(
    sidebarPanel()
    , mainPanel(
      uiOutput(""mytimeline"")
    )
  )
)
, server = function(input, output, session){

  output$mytimeline &lt;- renderUI({
    a(""Tweets by Andrew Ng"",
      class=""twitter-timeline"",
      href = ""https://twitter.com/AndrewYNg""
    )
  })



}
)
)
</code></pre>
","4383566","","","","","2018-01-09 03:12:35","Specific twitter timeline uiOutput to be reactive in r Shiny","<r><twitter><shiny><uioutput>","1","0","","",""
"47011793","1","","","2017-10-30 09:28:25","","1","494","<p>I've created a new app using <code>create-react-app React</code> and a few apps can reuse the same Components.<br>
So I've create a structure like this</p>

<pre><code>- App1
- App2
- App3
- Utils
  - Components
</code></pre>

<p>When I'm trying to load Utils/Components from within an app, it first gave me the <code>You may need an appropriate loader to handle this file type.</code>-error.
I've changed the filetypes from <code>.js</code> to <code>.jsx</code> and now it's giving me the following error</p>

<pre><code>Uncaught DOMException: Failed to execute 'createElement' on 'Document': 
The tag name provided ('/static/media/TeamSidebar.2e3fe8e5.jsx') is not 
a valid name.
</code></pre>

<p>package.json:</p>

<pre><code>{
    ""dependencies"": {
        ""bootstrap"": ""^4.0.0-beta"",
        ""react"": ""^16.0.0"",
        ""react-dom"": ""^16.0.0"",
        ""react-moment"": ""^0.6.5"",
        ""react-scripts"": ""1.0.14"",
        ""reactstrap"": ""^5.0.0-alpha.3"",
        ""utils"": ""file:../utils""
 },
</code></pre>

<p>App.js</p>

<pre><code>import React, {Component} from 'react';
import {Components} from 'utils';

class App extends Component {
    render() {
        const {TeamSidebar} = Components;

        return (
            &lt;TeamSidebar teams={teamsList}/&gt;
        );
    }
}
</code></pre>
","4644434","","4644434","","2017-10-30 13:36:18","2017-10-30 21:48:51","create-react-app Component in different folder than project errors","<reactjs><npm><package.json>","1","0","","",""
"50118878","1","","","2018-05-01 15:05:21","","0","19","<p>I'm trying to create an image slider with reactJS. (no webpack, no jsx). I started with different elements, one to take any number of images in, then radio buttons that when clicked on, display the other image. (I'm basically trying to replicate this: <a href=""https://codepen.io/alehl/pen/wjJLJz"" rel=""nofollow noreferrer"">https://codepen.io/alehl/pen/wjJLJz</a>, but with reactJS).</p>

<p>These are the elements and how I'm looping to pass in the images &amp; render them + the a radio button for each image.</p>

<pre><code>   const sliders = image_urls.map((current_image =&gt;
    React.createElement(""z"", { type: ""radio"", name: ""slider"", id: ""slide"" })
  ));

  const sliders2 = image_urls.map((current_image =&gt;
    React.createElement(""label"", { ""for"": ""slide"", className: ""radio_button"" })
  ));

  const final_images = image_urls.map((current_image =&gt;
      React.createElement(
        ""img"",
        { src: current_image }
      )
  ));
</code></pre>

<p>The problem is... that the ids in the CSS are unique for each slide:</p>

<pre><code>#slide1:checked ~ #slides article:nth-child(1) .info,
#slide2:checked ~ #slides article:nth-child(2) .info,
#slide3:checked ~ #slides article:nth-child(3) .info,
#slide4:checked ~ #slides article:nth-child(4) .info,
#slide5:checked ~ #slides article:nth-child(5) .info {
    opacity: 1;
    transition: all 1s ease-out 0.6s;
}
</code></pre>

<p>My question is: Is there a way to loop through the id &amp; increment by 1 to form the needed unique id for each slide? Or is there a better way of doing this?</p>
","7647476","","","","","2018-05-01 15:05:21","Create Unique ID for CSS with reactJS","<reactjs>","0","2","","",""
"42465233","1","","","2017-02-26 05:52:29","","1","261","<p>I have a Rails 5 app with react installed with <code>gem 'react-rails', '1.10.0'</code></p>

<p>I also want to use <code>react-router</code> so I manually have the react-router JS loading as their was no gem available. I can submit <code>ReactRouter</code> in the console a to confirm <code>ReactRouter</code> loads.</p>

<p>I'm trying to get react-router to work but it is erring. Here is my basic setup:</p>

<p><strong>welcome.html.erb</strong></p>

<pre><code>&lt;div id=""root""&gt;&lt;/div&gt;
&lt;%= react_component 'RouterTest' %&gt;
</code></pre>

<p><strong>_router_test.jsx</strong></p>

<pre><code>var Route = ReactRouter.Route;
var Router = ReactRouter;
var browserHistory = ReactRouter.browserHistory;

var RouterTest = React.createClass({
  render() {
    return ( &lt;div&gt; &lt;h1&gt;RouterTest!&lt;/h1&gt; &lt;/div&gt; )
  }
});

var routes = (
    &lt;Router history={browserHistory}&gt;
        &lt;Route path=""/"" component={RouterTest}/&gt;
    &lt;/Router&gt;
);

ReactDOM.render(routes , document.getElementById('root'));
</code></pre>

<p>This is error in the console with:</p>

<pre><code>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components).
printWarning @ react.self-fd40d62….js?body=1:1275
warning @ react.self-fd40d62….js?body=1:1299
createElement @ react.self-fd40d62….js?body=1:3085
(anonymous) @ _router_test.self-b3b194f….js?body=1:23
react.self-fd40d62….js?body=1:841 Uncaught Error: _registerComponent(...): Target container is not a DOM element.
    at invariant (react.self-fd40d62….js?body=1:841)
    at Object._renderNewRootComponent (react.self-fd40d62….js?body=1:20670)
    at Object._renderSubtreeIntoContainer (react.self-fd40d62….js?body=1:20760)
    at Object.render (react.self-fd40d62….js?body=1:20781)
    at _router_test.self-b3b194f….js?body=1:29
</code></pre>

<p>Any suggestions on what I'm doing wrong getting React Router working? Thank you</p>
","149080","","","","","2017-02-26 05:52:29","Getting react-router to work with Rails 5 & gem 'react-rails', '1.10.0'","<javascript><ruby><reactjs><react-router><ruby-on-rails-5>","0","3","","",""
"50218489","1","50218560","","2018-05-07 16:16:39","","0","60","<p>I'm using React as a display tool for my data, coupled with the <a href=""https://www.npmjs.com/package/react-table"" rel=""nofollow noreferrer"">framework react-table</a> to list my data.</p>

<p>I have a field to create a new object in my data base but I can't reload the table without leaving my view.</p>

<p>My question, how to reuse the function to load the data? (<a href=""https://www.npmjs.com/package/react-table#server-side-data"" rel=""nofollow noreferrer"">source code</a>)</p>

<pre><code>class ElementCRDN extends React.Component {
    constructor(props) {
        super(props);
        this.handleCreation = this.handleCreation.bind(this);
        this.handleInput = this.handleInput.bind(this);
        this.state = {
            data: [], // the data retrieved from the server
            pages: -1,
       };
   }

   handleCreation(event) {
        Axios.post('/createElement', {
            // data
        }).then(() =&gt; {
            // Ask for reload
       });
       event.preventDefault();
   }

   render() {
       &lt;form onSubmit={this.handleCreation}&gt;
           // input to create object
       &lt;/form&gt;
       &lt;ReactTable
          data={this.state.data}
          pages={this.state.pages}
          loading={this.state.loading}
          manual
          columns={columns}
          onFetchData={(state) =&gt; { // function to retrieve the data
              this.setState({ loading: true });
              Axios.post('/listElements', {
                  page: state.page,
                  pageSize: state.pageSize,
                  sorted: state.sorted,
                  filtered: state.filtered,
              }).then((res) =&gt; {
                  this.setState({
                  data: res.data,
                  loading: false,
                  });
              });
          }}
       /&gt;
   }
</code></pre>

<p>Thank you for reading</p>
","9631596","","","","","2018-05-07 16:21:16","Reload react-table on event","<node.js><reactjs><react-table>","1","1","","",""
"42584571","1","","","2017-03-03 16:59:40","","3","3640","<p>I am trying to copy <a href=""https://jsfiddle.net/f6mbnb8z/1/"" rel=""nofollow noreferrer"">this example</a> using react data grid into my Typescript project. I created the following class to match the one provided....</p>

<pre><code>import * as React from ""react"";
import ReactDataGrid from ""react-data-grid"";
interface PxGridProps {}
interface PxGridState {}
export default class PxGrid extends React.Component&lt;PxGridProps, PxGridState&gt;{
    private _columns;
    private _rows;
    constructor(props) {
        super(props);
        this.props = props;
        this.createRows();
        this._columns = [
            { key: 'id', name: 'ID' },
            { key: 'title', name: 'Title' },
            { key: 'count', name: 'Count' } ];
        return null;
    }

    createRows() {
        let rows = [];
        for (let i = 1; i &lt; 1000; i++) {
            rows.push({
                id: i,
                title: 'Title ' + i,
                count: i * 1000
            });
        }

        this._rows = rows;
    }

    rowGetter(i) {
        return this._rows[i];
    }

    render() {
        return  (
            &lt;ReactDataGrid
                minHeight={500}
                columns={this._columns}
                rowGetter={this.rowGetter.bind(this)}
                rowsCount={this._rows.length}
                 /&gt;
        );
    }
}
</code></pre>

<p>But when I try to run it I get</p>

<blockquote>
  <p>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in. Check the render method of <code>PxGrid</code>.</p>
</blockquote>

<p>If I replace out the render to something like this....</p>

<pre><code>render() {
        return  (
            &lt;h1&gt; Thing &lt;/h1&gt;
        );
}
</code></pre>

<p>It works fine. What am I getting wrong? The error message is not helping at all.</p>
","125212","","","","","2017-03-03 18:48:50","Gettting React.createElement: type is invalid -- expected a string ... but got: undefined","<reactjs><react-data-grid>","2","2","","",""
"42587215","1","","","2017-03-03 19:44:30","","1","414","<p>I'm trying to test a highchart I built using enzyme mount method. It works fine when trying to test it with shallow rendering but I want to render the whole component. Here is a repo with the problem: <a href=""https://github.com/hyalkaf/react-highCharts-enzyme-issue"" rel=""nofollow noreferrer"">https://github.com/hyalkaf/react-highCharts-enzyme-issue</a>, to run the broken test do: <code>npm run test-mocha</code> after of course forking and running <code>npm i</code>. Here are snippets of code to reproduce the problem:</p>

<p>App.js</p>

<pre><code>import React, { Component } from 'react';
global.HighCharts = require('highcharts');
require('highcharts/modules/exporting')(global.HighCharts);
require('highcharts-offline-exporting')(global.HighCharts);
const ReactHighCharts = require('react-highcharts');

const config = {
  chart: {
    plotBackgroundColor: null,
    plotBorderWidth: null,
    plotShadow: false,
    type: 'pie'
  },
  title: {
      text: 'Browser market shares January, 2015 to May, 2015'
  },
  tooltip: {
      pointFormat: '{series.name}: &lt;b&gt;{point.percentage:.1f}%&lt;/b&gt;'
  },
  plotOptions: {
    pie: {
      allowPointSelect: true,
      cursor: 'pointer',
      dataLabels: {
        enabled: true,
        format: '&lt;b&gt;{point.name}&lt;/b&gt;: {point.percentage:.1f} %'
      }
    }
  },
  series: [{
    name: 'Brands',
    colorByPoint: true,
    data: [{
        name: 'Microsoft Internet Explorer',
        y: 56.33
    }, {
        name: 'Chrome',
        y: 24.03,
        sliced: true,
        selected: true
    }, {
        name: 'Firefox',
        y: 10.38
    }, {
        name: 'Safari',
        y: 4.77
    }, {
        name: 'Opera',
        y: 0.91
    }, {
        name: 'Proprietary or Undetectable',
        y: 0.2
    }]
  }]
};

class App extends Component {
  render() {
    return (
      &lt;div className=""App""&gt;
        &lt;p className=""App-intro""&gt;
          To get started, edit &lt;code&gt;src/App.js&lt;/code&gt; and save to reload.
        &lt;/p&gt;
        &lt;div&gt;
          &lt;ReactHighCharts config={config} /&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    );
  }
}

export default App;
</code></pre>

<p>App.test.js:</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';
import { mount, shallow } from 'enzyme';

it('fails when trying to mount react highcharts', () =&gt; {
  const wrapper = mount(&lt;App /&gt;);
});
</code></pre>

<p>setup.js:</p>

<pre><code>var jsdom = require('jsdom').jsdom;

global.document = jsdom('&lt;!doctype html&gt;&lt;html&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;');
global.window = document.defaultView;
global.navigator = global.window.navigator;
window.sessionStorage = {
  getItem(key) {
    return this[key];
  },
  setItem(key, value) {
    this[key] = value;
  },
  removeItem(key) {
    this[key] = undefined;
  },
};
window.localStorage = window.sessionStorage;
</code></pre>

<p>and finally here is the stack trace:</p>

<pre><code>InvalidCharacterError
  at exports.name (node_modules\jsdom\lib\jsdom\living\helpers\validate-names.js:10:11)
  at DocumentImpl.createElement (node_modules\jsdom\lib\jsdom\living\nodes\Document-impl.js:685:5)
  at Document.createElement (node_modules\jsdom\lib\jsdom\living\generated\Document.js:92:59)
  at a.createElement (node_modules\highcharts\highcharts.js:17:221)
  at Object.init (node_modules\highcharts\highcharts.js:91:494)
  at Object.createElement (node_modules\highcharts\highcharts.js:62:286)
  at Object.createElement (node_modules\highcharts\highcharts.js:107:323)
  at Object.init (node_modules\highcharts\highcharts.js:100:377)
  at Object.B (node_modules\highcharts\highcharts.js:109:141)
  at Object.getContainer (node_modules\highcharts\highcharts.js:249:378)
  at Object.firstRender (node_modules\highcharts\highcharts.js:263:422)
  at Object.init (node_modules\highcharts\highcharts.js:240:174)
  at Object.getArgs (node_modules\highcharts\highcharts.js:239:189)
  at Object.a.Chart (node_modules\highcharts\highcharts.js:238:501)
  at renderChart (node_modules\react-highcharts\dist\ReactHighcharts.js:1:1283)
  at componentDidMount (node_modules\react-highcharts\dist\ReactHighcharts.js:1:1804)
  at node_modules\react-dom\lib\ReactCompositeComponent.js:265:25
  at measureLifeCyclePerf (node_modules\react-dom\lib\ReactCompositeComponent.js:75:12)
  at node_modules\react-dom\lib\ReactCompositeComponent.js:264:11
  at CallbackQueue.notifyAll (node_modules\react-dom\lib\CallbackQueue.js:76:22)
  at ReactReconcileTransaction.close (node_modules\react-dom\lib\ReactReconcileTransaction.js:80:26)
  at ReactReconcileTransaction.closeAll (node_modules\react-dom\lib\Transaction.js:206:25)
  at ReactReconcileTransaction.perform (node_modules\react-dom\lib\Transaction.js:153:16)
  at batchedMountComponentIntoNode (node_modules\react-dom\lib\ReactMount.js:126:15)
  at ReactDefaultBatchingStrategyTransaction.perform (node_modules\react-dom\lib\Transaction.js:140:20)
  at Object.batchedUpdates (node_modules\react-dom\lib\ReactDefaultBatchingStrategy.js:62:26)
  at Object.batchedUpdates (node_modules\react-dom\lib\ReactUpdates.js:97:27)
  at Object._renderNewRootComponent (node_modules\react-dom\lib\ReactMount.js:320:18)
  at Object._renderSubtreeIntoContainer (node_modules\react-dom\lib\ReactMount.js:401:32)
  at Object.render (node_modules\react-dom\lib\ReactMount.js:422:23)
  at Object.renderIntoDocument (node_modules\react-dom\lib\ReactTestUtils.js:79:21)
  at renderWithOptions (node_modules\enzyme\build\react-compat.js:187:26)
  at new ReactWrapper (node_modules\enzyme\build\ReactWrapper.js:94:59)
  at mount (node_modules\enzyme\build\mount.js:19:10)
  at Context.&lt;anonymous&gt; (C:/Users/phil/Downloads/projects with problems/react-highcharts-enzyme-issue/src/App.test.js:7:19)
</code></pre>

<p>versions of libraries:  </p>

<p>npm: <strong>3.10.7</strong>,<br>
node: <strong>6.9.5</strong>,<br>
react: <strong>15.4.2</strong>,<br>
enzyme: <strong>2.7.1</strong>,<br>
jsdom: <strong>9.11.0</strong>,<br>
mocha: <strong>3.2.0</strong></p>
","6710925","","","","","2017-03-04 01:26:10","rendering react-highcharts with mount enzyme gives an InvalidCharacterError","<reactjs><highcharts><enzyme><jsdom>","1","1","1","",""
"42592381","1","42594178","","2017-03-04 05:13:53","","1","94","<p>I am getting an error that I cannot explain when testing my components in mocha.  The relevant code is:</p>

<pre><code>  console.error('Index', Index, typeof Index);
  let ind = TestUtils.renderIntoDocument(&lt;Index /&gt;);
</code></pre>

<p>which is producing:</p>

<blockquote>
  <p>ERROR: 'Index', function Index() { ... }, 'function'</p>
  
  <p>ERROR: 'Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: object. You likely forgot to export your component from the file it's defined in. Check the render method of <code>Index</code>.'</p>
</blockquote>

<p>So it seems that on the first line <code>Index</code> is a function, and on the very next line, it is now an object.</p>

<p>I have never seen this sort of error before and cannot for the life of me begin to guess what is causing it.  I'm using webpack and react-router, but I'm not sure how those could be relevant to this error (the same setup has never caused this sort of error before).</p>

<p>What could cause the type of my component to change from one line to the next?  Or at least, what could cause React.createElement to think it has changed?</p>

<p>EDIT:</p>

<p>Found the error.  The error was not in <code>Index.jsx</code> the way the error seemed to imply.  The error was in a component that <code>Index</code> imported and rendered in its render method.</p>
","7228409","","7228409","","2017-03-04 22:21:19","2017-03-04 22:21:19","Bizarre React.createElement Error (Invariant Violation)","<reactjs><webpack><mocha><react-router>","1","2","","",""
"33989085","1","33989100","","2015-11-29 22:48:16","","-1","2196","<p>//main.jsx</p>

<pre><code>var React = require('react/addons');
var ReactDOM = require('react-dom');


var GroceryItemList = require('./components/GroceryItemList.jsx');

ReactDOM.render('&lt;GroceryItemList/&gt;', app);
</code></pre>

<p>//GroceryItemList.jsx</p>

<pre><code>var React = require('react/addons');

module.exports = React.createClass({
  render: function () {
    return (
      &lt;div&gt;
        &lt;h1&gt;Grocery Listify&lt;/h1&gt;
      &lt;/div&gt;
    )
  }
})
</code></pre>

<p>//index.html</p>

<pre><code>&lt;html lang=""en""&gt;
&lt;head&gt;
  &lt;meta charset=""UTF-8""&gt;
  &lt;title&gt;Title&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
Hello world
  &lt;div id=""app""&gt;&lt;/div&gt;
&lt;script src=""app.js""&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Errors:</p>

<pre><code>warning.js:45 Warning: require('react/addons') is deprecated. Access using require('react-addons-{addon}') instead.

Uncaught Error: Invariant Violation: ReactDOM.render(): Invalid component element. Instead of passing an element string, make sure to instantiate it by passing it to React.createElement.
</code></pre>

<p>Not sure how to proceed at this point ?</p>
","2117019","","","","","2016-06-08 01:30:18","Basic React issues .. equire('react/addons') is deprecated. Access using require('react-addons-{addon}') instead","<reactjs>","3","1","","",""
"38645808","1","38777419","","2016-07-28 20:07:34","","3","199","<p>I'm trying to update react-router to v2.6 and react-router-relay to v0.7 in my app but I'm struggling to follow the changelogs to address all breaking changes. I think I addressed all changes but I still can't make it work. </p>

<blockquote>
  <p>Warning: [react-router] Location ""/"" did not match any routes</p>
</blockquote>

<p>Here is a step by step guide on what I did to address the changes. First I updated the npm modules. </p>

<p>My previous package.json where everything worked:</p>

<pre><code>""dependencies"": {
    ""babel-polyfill"": ""^6.9.1"",
    ""babel-runtime"": ""^6.9.2"",
    ""graphiql"": ""0.7.3"",
    ""graphql"": ""^0.6.2"",
    ""history"": ""1.13.1"",
    ""isomorphic-fetch"": ""^2.1.1"",
    ""react"": ""^15.2.1"",
    ""react-addons-shallow-compare"": ""^15.2.1"",
    ""react-dom"": ""^15.2.1"",
    ""react-loader"": ""^2.0.0"",
    ""react-relay"": ""^0.9.2"",
    ""react-router"": ""1.0.0-rc3"",
    ""react-router-relay"": ""^0.7.0"",
    ""superagent"": ""^1.2.0""
  },
  ""devDependencies"": {
    ""babel-core"": ""^6.11.4"",
    ""babel-eslint"": ""^6.1.2"",
    ""babel-jest"": ""^13.2.2"",
    ""babel-loader"": ""^6.2.4"",
    ""babel-plugin-add-module-exports"": ""^0.2.1"",
    ""babel-plugin-transform-runtime"": ""^6.9.0"",
    ""babel-preset-es2015"": ""^6.9.0"",
    ""babel-preset-react"": ""^6.11.1"",
    ""babel-preset-stage-0"": ""^6.5.0"",
    ""babel-preset-stage-1"": ""^6.5.0"",
    ""babel-preset-stage-2"": ""^6.11.0"",
    ""babel-relay-plugin"": ""^0.9.2"",
    ""jest-cli"": ""^12.1.1"",
    ""react-addons-test-utils"": ""^15.2.1"",
    ""webpack"": ""^1.13.1""
  },
</code></pre>

<p>My new package.json, where I'm getting errors:</p>

<pre><code>""dependencies"": {
    ""babel-polyfill"": ""^6.9.1"",
    ""babel-runtime"": ""^6.9.2"",
    ""graphiql"": ""0.7.3"",
    ""graphql"": ""^0.6.2"",
    ""isomorphic-fetch"": ""^2.1.1"",
    ""react"": ""^15.2.1"",
    ""react-addons-shallow-compare"": ""^15.2.1"",
    ""react-dom"": ""^15.2.1"",
    ""react-loader"": ""^2.0.0"",
    ""react-relay"": ""^0.9.2"",
    ""react-router"": ""^2.6.0"",
    ""react-router-relay"": ""^0.13.3"",
    ""superagent"": ""^1.2.0""
  },
  ""devDependencies"": {
    ""babel-core"": ""^6.11.4"",
    ""babel-eslint"": ""^6.1.2"",
    ""babel-jest"": ""^14.0.0"",
    ""babel-loader"": ""^6.2.4"",
    ""babel-plugin-add-module-exports"": ""^0.2.1"",
    ""babel-plugin-transform-runtime"": ""^6.9.0"",
    ""babel-preset-es2015"": ""^6.9.0"",
    ""babel-preset-react"": ""^6.11.1"",
    ""babel-preset-stage-0"": ""^6.5.0"",
    ""babel-preset-stage-1"": ""^6.5.0"",
    ""babel-preset-stage-2"": ""^6.11.0"",
    ""babel-relay-plugin"": ""^0.9.2"",
    ""jest-cli"": ""^12.1.1"",
    ""react-addons-test-utils"": ""^15.2.1"",
    ""webpack"": ""^1.13.1""
  },
</code></pre>

<p>I removed the history module because it is now a direct dependency of react-router. Once I installed the latest modules, I reloaded my page and got the following errors:</p>

<p><strong>Error 1:</strong></p>

<blockquote>
  <p>Warning: [react-router] It appears you have provided a deprecated history object to <code>&lt;Router/&gt;</code>, please use a history provided by React Router with <code>import { browserHistory } from 'react-router'</code> or <code>import { hashHistory } from 'react-router'</code>. If you are using a custom history please create it with <code>useRouterHistory</code>, see <a href=""https://github.com/reactjs/react-router/blob/master/upgrade-guides/v2.0.0.md#using-history-with-router"" rel=""nofollow noreferrer"">https://github.com/reactjs/react-router/blob/master/upgrade-guides/v2.0.0.md#using-history-with-router</a> for details.</p>
</blockquote>

<p><strong>Error 2:</strong> </p>

<blockquote>
  <p>Warning: Failed context type: Invalid prop/context <code>relay</code> supplied to <code>Relay(App)</code>, expected <code>undefined</code> to be an object conforming to the <code>RelayEnvironment</code> interface.</p>

<pre><code>in Relay(App) (created by RouterContext)
in RouterContext (created by Router)
in Router
</code></pre>
</blockquote>

<p><strong>Error 3:</strong></p>

<blockquote>
  <p>Warning: Failed context type: Required context <code>route</code> was not specified in <code>Relay(App)</code>.</p>

<pre><code>in Relay(App) (created by RouterContext)
in RouterContext (created by Router)
in Router
</code></pre>
</blockquote>

<p><strong>Error 4:</strong> </p>

<blockquote>
  <p>Uncaught Invariant Violation: RelayContainer: <code>Relay(App)</code> was rendered with invalid Relay context <code>undefined</code>. Make sure the <code>relay</code> property on the React context conforms to the <code>RelayEnvironment</code> interface.</p>
</blockquote>

<p>The first error gives a handy link to the upgrade-guides for react-router, so I followed it and updated my app.js file accordingly. </p>

<p>Before my changes it looked this:</p>

<pre><code>import babelPolyfill from 'babel-polyfill';
import React from 'react';
import ReactDOM from 'react-dom';
import ReactRouterRelay from 'react-router-relay';
import Loader from 'react-loader';
import { Router, Route } from 'react-router';
import createBrowserHistory from 'history/lib/createBrowserHistory';

import WelcomeQueries from './queries/WelcomeQueries';
import AppQueries from './queries/AppQueries';
import LandingQueries from './queries/LandingQueries';

import App from './components/app';
import Landing from './components/landing';

import './relay';

const renderProps = {
  renderLoading: () =&gt; &lt;Loader /&gt;,
};

ReactDOM.render((
  &lt;Router history={createBrowserHistory()} createElement={ReactRouterRelay.createElement}&gt;
    &lt;Route component={App} queries={AppQueries} {...renderProps}&gt;
      &lt;Route path=""/myapp"" component={Landing} queries={LandingQueries} {...renderProps} /&gt;
    &lt;/Route&gt;
    &lt;Route path=""/myapp/tracks"" component={Welcome} queries={WelcomeQueries} {...renderProps}/&gt;
  &lt;/Router&gt;
), document.getElementById('myapp-body'));
</code></pre>

<p><strong>Attempt 1</strong></p>

<p>Using the update guide to 2.x I've changed my app.js file to use a <strong>custom history</strong> like this:</p>

<pre><code>import babelPolyfill from 'babel-polyfill';
import React from 'react';
import ReactDOM from 'react-dom';
import ReactRouterRelay from 'react-router-relay';
import Loader from 'react-loader';

import { Router, Route, useRouterHistory } from 'react-router'
import { createHashHistory } from 'history'

import WelcomeQueries from './queries/WelcomeQueries';
import AppQueries from './queries/AppQueries';
import LandingQueries from './queries/LandingQueries';

import App from './components/app';
import Landing from './components/landing';

import './relay';

const renderProps = {
  renderLoading: () =&gt; &lt;Loader /&gt;,
};

const appHistory = useRouterHistory(createHashHistory)({ queryKey: false })

ReactDOM.render((
  &lt;Router history={appHistory} createElement={ReactRouterRelay.createElement}&gt;
    &lt;Route component={App} queries={AppQueries} {...renderProps}&gt;
      &lt;Route path=""/myapp"" component={Landing} queries={LandingQueries} {...renderProps} /&gt;
    &lt;/Route&gt;
    &lt;Route path=""/myapp/tracks"" component={Welcome} queries={WelcomeQueries} {...renderProps}/&gt;
  &lt;/Router&gt;
), document.getElementById('myapp-body'));
</code></pre>

<p>This then gives me the following error in the browser:</p>

<p><strong>Error 5</strong></p>

<blockquote>
  <p>Warning: [react-router] Location ""/"" did not match any routes</p>
</blockquote>

<p>I believe that is the solution I want.. However I wasn't sure, so I also tried going the <strong>Browser (HTML5 pushState) History</strong> way and tried the following change: </p>

<p><strong>Attempt 2</strong></p>

<pre><code>import babelPolyfill from 'babel-polyfill';
import React from 'react';
import ReactDOM from 'react-dom';
import ReactRouterRelay from 'react-router-relay';
import Loader from 'react-loader';

import { Router, Route, browserHistory } from 'react-router'

import WelcomeQueries from './queries/WelcomeQueries';
import AppQueries from './queries/AppQueries';
import LandingQueries from './queries/LandingQueries';

import App from './components/app';
import Landing from './components/landing';

import './relay';

const renderProps = {
  renderLoading: () =&gt; &lt;Loader /&gt;,
};

const appHistory = useRouterHistory(createHashHistory)({ queryKey: false })

ReactDOM.render((
  &lt;Router history={browserHistory} createElement={ReactRouterRelay.createElement}&gt;
    &lt;Route component={App} queries={AppQueries} {...renderProps}&gt;
      &lt;Route path=""/myapp"" component={Landing} queries={LandingQueries} {...renderProps} /&gt;
    &lt;/Route&gt;
    &lt;Route path=""/myapp/tracks"" component={Welcome} queries={WelcomeQueries} {...renderProps}/&gt;
  &lt;/Router&gt;
), document.getElementById('myapp-body'));
</code></pre>

<p>When loading this, I get back errors 2, 3 and 4. I think Attempt 1 is the correct approach but I don't know what this error means and googling it, gave me tons of answers (<a href=""https://stackoverflow.com/questions/34837138/react-router-location-did-not-match-any-routes"">1</a>, <a href=""https://github.com/reactjs/react-router/issues/2117"" rel=""nofollow noreferrer"">2</a>, which linked me to <a href=""https://github.com/reactjs/react-router/blob/master/upgrade-guides/v1.0.0.md#links"" rel=""nofollow noreferrer"">3</a> and even <a href=""https://github.com/reactjs/react-router/issues/3541"" rel=""nofollow noreferrer"">4</a> with IndexRoute), which I tried but none of the answers worked.</p>

<p>My App.js file looks like this, just for reference:</p>

<pre><code>import React from 'react';
import Relay from 'react-relay';
import Top from './top';

export class App extends React.Component {
  render() {
    return (
      &lt;div&gt;
        &lt;Top viewer={this.props.viewer}/&gt;
        {this.props.children}
      &lt;/div&gt;
    );
  }
}

export default Relay.createContainer(App, {
  fragments: {
    viewer: () =&gt; Relay.QL`
      fragment on Viewer {
        ${Top.getFragment('viewer')}
      }
    `,
  },
});
</code></pre>

<p>I'm not 100% sure if this might be the reason but I know that <a href=""https://github.com/reactjs/react-router/blob/master/CHANGES.md#v200-rc6"" rel=""nofollow noreferrer"">react-router v2.0.0-rc6</a> had a breaking change with the top level Router export being removed but I don't really know what that means for me? Does that I can't use Router anymore? If so, what am I supposed to instead?</p>

<p>After days of research and trial and error, I'm giving up and hope that someone here can help. Any pointers in the right direction would be greatly appreciated.</p>
","1229014","","-1","","2017-05-23 11:44:25","2016-08-04 21:07:17","Update react-router and react-router-relay to v2.x from v1.x (Location ""/"" did not match any routes)","<react-router><react-router-relay>","1","0","2","",""
"35414696","1","","","2016-02-15 16:47:02","","0","920","<p>Hopefully this is a slam-dunk for someone out there...my essential problem is this: I've built up a very nice set of react components which i can render in my asp.net 4.5 mvc 6 application using react.js, flux, gulp, and browserify. </p>

<p>as long as i have it structured so that the react components have all the data they need everything is perfect. My issue now is that I would like to have an MVC view include the react stuff, and inject run-time properties into the top-level component as it is created. Since I'm brpowserify-ing all of my react code into a bundle, i just include the one script tag in my view:</p>

<p><code>&lt;script src=""/js/modules/AuthContainer.jsx""&gt;&lt;/script&gt;</code></p>

<p>But whereas I would normally use JSX syntax to instantiate my component with props like this:</p>

<p></p>

<p>...the view in ASP.NET never gets translated to pure JS, so that fails. </p>

<p>I've also tried:</p>

<pre><code>  ReactDOM.render
  (
     React.createElement(AuthContainer, { successPath: '/home' }),
     document.getElementById('reactRoot')
  );
</code></pre>

<p>...from inside a script block in my view but i get:</p>

<p><code>Uncaught ReferenceError: AuthContainer is not defined</code></p>

<p>But i'm sure i'm exposing 'AuthContainer' via the browserify-ed bundle, so i don't understand why it's unable to resolve that component.</p>

<p>I know there's a React.NET way to do this, but i can't get that server-side rendering to work with my components because I'm using jQuery to fetch data in componentDidMount and the server-side rendering is choking looking for <code>$()</code> jQuery stuff.</p>

<p>I'd love to get the server side rendering going but right now i just need it to do work, one way of the other. Can someone provide a simple code snippet or gist of how to instantiate a React component from inside a cshtml file with run-time props? </p>
","2403744","","","","","2016-02-23 05:31:05","Initializing react component from asp.net","<asp.net><reactjs><browserify>","2","0","","",""
"44249430","1","44249480","","2017-05-29 19:37:24","","3","365","<p>Right now, I'm working on a React component library, which I want to deliver via npm to as many people as possible. I use <code>webpack</code> and <code>babel</code> for packaging and processing of my code. However, being fairly new to <code>webpack</code>, I don't know what the best way would be to go about packaging my library. </p>

<p>I'm planning to have a list of files in the <code>src</code> folder that will be individual components. How do I go about packaging them for people to grab from npm? My guess is to output them individually, so that people can import whatever they need. However, I want them to work with ES5 (which I think is what <code>babel</code> does with the <code>es2015</code> preset which I have installed). My files are as follows:</p>

<p><strong>webpack.config.js</strong> (a couple of things were removed for brevity)</p>

<pre><code>var webpack = require('webpack');

module.exports = {
    entry: {
        Component1: __dirname + '/src/Component1.js',
        Component2: __dirname + '/src/Component2.js'
    },
    output: {
            path: __dirname + '/dist',
            filename: '[name].js'
    },
    module: {
        loaders: [{
            test: /\.js$/,
            loader: 'babel-loader',
            query: {
                    presets: ['react', 'es2015']
            }
        }]
    }
};
</code></pre>

<p><strong>Component1.js</strong> (sample component, written to showcase an example)</p>

<pre><code>import React from 'react';


export default class Component1 extends React.Component {
    render() {
    return React.createElement('p',{className : 'Component1'}, 'This is a test component.');
    }
}
</code></pre>

<p>After running through <code>webpack</code>, I get a huge file with lots of overhead code added by it, but, from what I can tell, the code is compiled to ES5, which is my intention. Is this the proper way to do this? Can I avoid the overhead added by webpack? </p>

<p>I tried googling for answers, but the articles I found (<a href=""https://medium.com/@adrianli/the-idiot-s-guide-to-publishing-a-react-component-to-npm-2b66b1ac03e0"" rel=""nofollow noreferrer"">this</a> and <a href=""http://frontendinsights.com/how-create-react-component-publish-npm/"" rel=""nofollow noreferrer"">this</a> mainly) were a bit outdated and/or required me to use some plugin for <code>webpack</code>, which I'm not very comfortable with yet. I'd like to understand what I should be doing and why. Thanks in advance!</p>
","1650200","","","","","2017-05-29 20:01:02","Proper way to package a react component library?","<javascript><reactjs><npm><webpack><babeljs>","2","0","3","",""
"44569402","1","","","2017-06-15 13:55:25","","2","319","<p>The code is a demo SPA with two routes (home and counter). Why does using <code>ConnectedRouter</code> give the following warning when bundling, while using <code>BrowserRouter</code> instead works fine?</p>

<pre><code>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in. Check the render method of `Unknown`.
in Unknown
in AppContainer
</code></pre>

<p><strong>App.jsx</strong></p>

<pre><code>import React from 'react';
import { createStore, combineReducers, applyMiddleware } from 'redux';
import { Provider } from 'react-redux';
import { Route } from 'react-router-dom';
import { ConnectedRouter, routerReducer, routerMiddleware } from 'react-router-redux';
import createHistory from 'history/createBrowserHistory';

import Counter from './containers/Counter';
import countReducer from './reducers';

const history = createHistory();

const store = createStore(
  combineReducers({
    count: countReducer,
    router: routerReducer
  },
  applyMiddleware(
    routerMiddleware(history)
  )
);

export default () =&gt; (
  &lt;Provider store={store}&gt;
    &lt;ConnectedRouter history={history}&gt;
      &lt;div&gt;
        &lt;Route exact path=""/"" render={() =&gt; &lt;h1&gt;Hello, World!&lt;/h1&gt;} /&gt;
        &lt;Route path=""/counter"" component={Counter} /&gt;
      &lt;/div&gt;
    &lt;/ConnectedRouter&gt;
  &lt;/Provider&gt;
);
</code></pre>

<p><strong>index.jsx</strong></p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';

import App from './App';

const render = (Component) =&gt; {
  ReactDOM.render(
    Component,
    document.getElementById('root')
  );
};

if (process.env.NODE_ENV === 'production') {
  render(&lt;App /&gt;);
} else {
  const { AppContainer } = require('react-hot-loader');

  render(
    &lt;AppContainer&gt;
      &lt;App /&gt;
    &lt;/AppContainer&gt;
  );

  if (module.hot) {
    module.hot.accept('./App', () =&gt; {
      const NextApp = require('./App').default;

      render(
        &lt;AppContainer&gt;
          &lt;NextApp /&gt;
        &lt;/AppContainer&gt;
      );
    });
  }
}
</code></pre>
","1804163","","","","","2017-06-26 07:33:19","""React.createElement: type is invalid"" when using ConnectedRouter","<reactjs><react-router><react-router-redux>","0","4","1","",""
"44772325","1","44776102","","2017-06-27 04:33:36","","0","74","<p>Minimum Repo <a href=""https://github.com/kimjuny/rhl-repo/tree/master"" rel=""nofollow noreferrer"">Here</a></p>

<p>I'm trying to work on a <code>react</code> + <code>electron</code> + <code>webpack2</code> demo project. Currently I'm stucked in <code>react-hot-loader3</code>. As shown below, hot update checking seems to work correctly but not updating as expected(the changes I've made to Component not updated). Has this something to do with electron or something? I've never used react-hot-loader before.</p>

<p><a href=""https://i.stack.imgur.com/EPPEM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/EPPEM.png"" alt=""enter image description here""></a></p>

<p><b>webpack.config.js</b></p>

<pre><code>var path = require('path');
var webpack = require('webpack');
var HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = {
  entry: [
    'react-hot-loader/patch',
    path.resolve(__dirname, './src/index.jsx'),
  ],
  output: {
    publicPath: '/',
    path: path.resolve(__dirname, 'dist'),
    filename: 'bundle.js',
  },
  module: {
    rules: [
      {
        test: /\.js*/,
        include: [ path.resolve(__dirname, 'src') ],
        loader: 'babel-loader',
      }, {
        test: /\.less$/,
        use: [
          { loader: 'style-loader' },
          { loader: 'css-loader' },
          { loader: 'less-loader' },
        ],
      },
    ],
  },
  resolve: {
    alias: {
      'COMPONENTS': path.resolve(__dirname, './src/components'),
      'CONTAINERS': path.resolve(__dirname, './src/containers'),
      'MODELS': path.resolve(__dirname, './src/models'),
      'ROUTES': path.resolve(__dirname, './src/routes'),
      'SERVICES': path.resolve(__dirname, './src/services'),
      'THEMES': path.resolve(__dirname, './src/themes'),
    },
    extensions: ['.js', '.jsx', '.less'],
  },
  plugins: [
    new webpack.HotModuleReplacementPlugin(),

    new webpack.NoEmitOnErrorsPlugin(),

    new webpack.NamedModulesPlugin(),

    new HtmlWebpackPlugin({
      template: path.resolve(__dirname, 'src', 'index.html'),
    }),
  ],
  devtool: 'source-map',
  target: 'electron-renderer',
  devServer: {
    port: 8000,
    hot: true,
    historyApiFallback: true,
  },
};
</code></pre>

<p><b>index.jsx</b></p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import { AppContainer } from 'react-hot-loader';
import Routes from './routes';

const main = document.createElement('div');
main.id = 'main';
document.body.appendChild(main);

const doRender = (Component) =&gt; {
  ReactDOM.render(
    &lt;AppContainer&gt;
      &lt;Component /&gt;
    &lt;/AppContainer&gt;
  , main);
}

doRender(Routes);

if(module.hot) {
  module.hot.accept('./routes', () =&gt; {
    doRender(Routes);
  });
}
</code></pre>

<p><b>routes/index.jsx</b></p>

<pre><code>export default class Routes extends React.Component {
  render() {
    return(
      &lt;div&gt;routes&lt;/div&gt; // change text here did not update correctly.
    );
  }
}
</code></pre>
","4683849","","4683849","","2017-06-27 05:55:21","2017-06-27 08:58:43","react-hot-loader checking correctly but not updating","<javascript><reactjs><webpack><react-hot-loader>","1","0","2","",""
"49335781","1","","","2018-03-17 12:04:54","","0","150","<p>I am following the Chapter 5 ""React with JSX"" of ""Learning React"" from O'reilly.</p>

<p>I wrote the Recipes App using create-react-app as the base.</p>

<p>index.js</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import registerServiceWorker from './registerServiceWorker';
import data from './data/recipes';
import Menu from './Menu';

window.React = React


ReactDOM.render(&lt;Menu recipes={data} /&gt;, document.getElementById('root'));

registerServiceWorker();
</code></pre>

<p>Menu.js</p>

<pre><code>import Recipes from './Recipes';

const Menu = ({recipes}) =&gt;
    &lt;article&gt;
        &lt;header&gt;
            &lt;h1&gt;Delicious Recipes&lt;/h1&gt;
        &lt;/header&gt;
        &lt;div className = ""recipes""&gt;
            {recipes.map((recipe, i)=&gt;    
                &lt;Recipes key={i} {...recipe}  /&gt;
            )}
        &lt;/div&gt;
    &lt;/article&gt;

export default Menu
</code></pre>

<p>And error is</p>

<pre><code>Failed to compile
./src/Menu.js
  Line 5:   'React' must be in scope when using JSX  react/react-in-jsx-scope
  Line 6:   'React' must be in scope when using JSX  react/react-in-jsx-scope
  Line 7:   'React' must be in scope when using JSX  react/react-in-jsx-scope
  Line 9:   'React' must be in scope when using JSX  react/react-in-jsx-scope
  Line 11:  'React' must be in scope when using JSX  react/react-in-jsx-scope

Search for the keywords to learn more about each error.
This error occurred during the build time and cannot be dismissed.
</code></pre>

<p>The book says ""setting window.React to React expose the React library globally in the browser. This way all calls to React.createElement are assured to work"". But it seems like I still need to put ""import React from 'react';"" on each file that use JSX. </p>
","7658403","","","","","2018-03-17 12:37:34","'React' must be in scope when using JSX react/react-in-jsx-scope with ""window.React = React"" on index.js","<reactjs><jsx><create-react-app>","1","0","","",""
"50298201","1","","","2018-05-11 18:26:47","","0","62","<p>In React JS tried to implement google translate, and included translate component in my script file. </p>

<p><strong>Googletranslate.js</strong>:</p>

<pre><code>import React, { Component } from 'react';

class GoogleTranslate extends Component {
    googleTranslateElementInit () {
        //alert(""test2"")
        /* eslint-disable no-new */
        new window.google.translate.TranslateElement({pageLanguage: 'pt', layout: window.google.translate.TranslateElement.FloatPosition.TOP_LEFT}, 'google_translate_element')
     }

    componentDidMount() {
        // alert(""test"")

        var addScript = document.createElement('script');
        addScript.setAttribute('src', '//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit');        
        document.body.appendChild(addScript);  
        window.googleTranslateElementInit = this.googleTranslateElementInit;
    }

    render() {
        return (
            // &lt;script type='text/javascript' src='//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit' /&gt;
            &lt;div id=""google_translate_element""&gt;&lt;/div&gt;
          );
     }
}

export default GoogleTranslate;
</code></pre>

<p><strong>Adminlogin.js</strong>:</p>

<pre><code>import GoogleTranslate from '../Applicant/GoogleTranslate'; 
</code></pre>

<p>I'm using this component included in Adminlogin.js file by using <code>&lt;GoogleTranslate /&gt;</code>.</p>

<p>And included the component in my files, when I login to the site and after logout, when I navigate to homepage, there are two language bars.</p>

<p><a href=""https://i.stack.imgur.com/xLupf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/xLupf.png"" alt=""https://i.stack.imgur.com/xLupf.png""></a></p>

<p>Any help is appreciated.</p>
","9664356","","5005177","","2018-05-11 18:49:08","2018-05-11 18:49:08","react js google translate not working","<javascript><reactjs><google-translate>","0","0","","",""
"45015105","1","","","2017-07-10 14:45:57","","0","63","<p>I want to append two variables to a script tag in react.js. I have created the script tag in the head of the document like so:</p>

<pre><code>const script = document.createElement('script');
document.getElementsByTagName('head')[0].appendChild(script);
</code></pre>

<p>However, I wish to append two JS variables inside the <code>&lt;script&gt;&lt;/script&gt;</code> tags, so it is the following:</p>

<pre><code>&lt;script&gt;
    var io_install_flash = false;
    var io_install_stm = false;
&lt;/script&gt;
</code></pre>
","7836655","","","","","2017-07-10 15:00:02","Append variable to <script> react.js","<javascript><reactjs>","1","7","","",""
"35643738","1","","","2016-02-26 04:51:11","","0","1054","<pre><code>window.onerror = function(message, filename, lineno, colno, error) {
    console.log(error.stack);
};
</code></pre>

<p>Without <code>reactjs</code>, everything is fine. I can get the stack.</p>

<p>With <code>reactjs</code> I get the following:</p>

<pre><code>Uncaught TypeError: Cannot read property 'stack' of null
window.onerror                              @ index.html:9
ReactErrorUtils.invokeGuardedCallback       @ ReactErrorUtils.js:71
executeDispatch                             @ EventPluginUtils.js:79
executeDispatchesInOrder                    @ EventPluginUtils.js:102
executeDispatchesAndRelease                 @ EventPluginHub.js:43
executeDispatchesAndReleaseTopLevel         @ EventPluginHub.js:54
forEachAccumulated                          @ forEachAccumulated.js:23
EventPluginHub.processEventQueue            @ EventPluginHub.js:259
runEventQueueInBatch                        @ ReactEventEmitterMixin.js:18
ReactEventEmitterMixin.handleTopLevel       @ ReactEventEmitterMixin.js:34
handleTopLevelWithoutPath                   @ ReactEventListener.js:93
handleTopLevelImpl                          @ ReactEventListener.js:73
Mixin.perform                               @ Transaction.js:136
ReactDefaultBatchingStrategy.batchedUpdates @ ReactDefaultBatchingStrategy.js:62
batchedUpdates                              @ ReactUpdates.js:94
ReactEventListener.dispatchEvent            @ ReactEventListener.js:204
</code></pre>

<p>In file <code>ReactErrorUtils.js</code>:</p>

<pre><code>if (process.env.NODE_ENV !== 'production') {
  /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
  if (typeof window !== 'undefined' &amp;&amp; typeof window.dispatchEvent === 'function' &amp;&amp; typeof document !== 'undefined' &amp;&amp; typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
      var boundFunc = func.bind(null, a, b);
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      evt.initEvent(evtType, false, false);
      // Line 71
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}
</code></pre>

<p>It seems that <code>reactjs</code> hijack the events, and dispatch new event which lacks the error argument.</p>

<p>How can I get stack from error?</p>
","757616","","","","","2017-10-21 18:00:54","Cannot get error object from window.onerror while using react","<javascript><reactjs>","2","0","","",""
"43495522","1","","","2017-04-19 12:17:37","","0","185","<p>i have a file <code>javascripts/jsx/dashboard_card/DashboardCard.js</code> in my <code>rails app</code> (<a href=""https://github.com/instructure/canvas-lms"" rel=""nofollow noreferrer"">canvas-lms</a>), and the <code>code</code> is present below.</p>

<p><code>code</code> :</p>

<pre><code>      //React.createElement(
       // 'button',
        //{
          //'aria-expanded': this.state.editing,
          //'aria-controls': this.colorPickerID(),
         // className: 'Button Button--icon-action-rev ic-DashboardCard__header-button ddddddd',
         // onClick: this.settingsClick,
          //ref: 'settingsToggle' },
        //React.createElement('i', { className: 'icon-compose icon-Line ccccccc xxxxxxxx', 'aria-hidden': 'true','visibility': 'hidden' }),
        //React.createElement(
          //'span',
          //{ className: 'screenreader-only' },
         // I18n.t(""Choose a color or course nickname for %{course}"", { course: this.state.nicknameInfo.nickname })
        //)
      //)
</code></pre>

<p>i changed this <code>code</code> and even <code>commented</code>. but the <code>changes</code> which i made in this <code>file</code> are not getting <code>reflected</code> in my rails application. how to <code>restart</code> the <code>react.js</code> in rails application? I <code>restarted</code> rails server also. but nothing is changing.</p>
","4929150","","4929150","","2017-04-19 12:41:26","2017-04-19 12:41:26","changes made to the react file are not getting reflected in rails?","<javascript><ruby-on-rails><reactjs><restart><canvas-lms>","0","2","","",""
"40621433","1","","","2016-11-15 23:17:00","","1","101","<p>If you build your project with <code>NODE_ENV=production</code>, react automatically includes the minified production verison of the lib in the bundle. Conversely, a non production build will include the dev unminified version of react.</p>

<p>How is this being achieved?</p>

<p>If we install react:</p>

<pre><code>npm install --save react
</code></pre>

<p>Then look at its <code>package.json</code> for the <code>main</code> key, it points to: </p>

<pre><code>""main"": ""react.js"",
</code></pre>

<p>Looking at <code>react.js</code> the contents of the file are simply:</p>

<pre><code>module.exports = require('./lib/React');
</code></pre>

<p>Looking in <code>./lib/React</code> I was expecting to see a conditional that loaded the minified build or not, but the conditionals seem to do other stuff:</p>

<pre><code>if (process.env.NODE_ENV !== 'production') {
  var ReactElementValidator = require('./ReactElementValidator');
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;

if (process.env.NODE_ENV !== 'production') {
  var warned = false;
  __spread = function () {
    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See fb.me/react-spread-deprecation for more details.') : void 0;
    warned = true;
    return _assign.apply(null, arguments);
  };
}
</code></pre>

<p>What is react doing exactly between prod and dev builds? It doesn't seem like it interacts with the minified and unminified builds in <code>/dist</code> as I thought. </p>
","1062794","","","","","2016-11-15 23:17:00","How does react conditionally give the minified production bundle when NODE_ENV=production?","<reactjs><build><npm>","0","0","","",""
"42619444","1","42619987","","2017-03-06 07:04:17","","0","58","<p>I made a sample application using create-react-app and on doing <code>npm start</code>, it showed me the default react js page. I then edited app.js inside src to </p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';

ReactDOM.render(
  &lt;h1&gt;Hello, world!&lt;/h1&gt;,
  document.getElementById('root')
);
</code></pre>

<p>but this shows a blank page on doing <code>npm start</code>. I checked and there was a <code>&lt;div id=""root""&gt;</code> in index.html already. So why is this showing a blank page?</p>

<p>I have checked the console and it shows 2 errors:</p>

<pre><code>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: object. You likely forgot to export your component from the file it's defined in.

Uncaught Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: object. You likely forgot to export your component from the file it's defined in.
</code></pre>
","7205620","","","","","2017-03-06 07:37:19","Nothing shown on doing npm start for react-app","<reactjs>","1","0","","",""
"43875307","1","","","2017-05-09 16:32:41","","0","225","<p>I've had this code working for months without an issue, but after running npm install and thereby re-installing my node_modules, it has stopped working.</p>

<pre><code>import { Footer } from 'components/common';

....

  public render() {
    return (
      &lt;Provider {...this.stores}&gt;
        &lt;div className=""app""&gt;
          {this.props.children}
          &lt;Footer /&gt;
          &lt;DevTools /&gt;
        &lt;/div&gt;
      &lt;/Provider&gt;
    );
  }
</code></pre>

<p>becomes ...</p>

<pre><code>_createClass(App, [{
    key: ""render"",
    value: function render() {
        return React.createElement(
            mobx_react_1.Provider,
            this.stores,
            React.createElement(
                ""div"",
                { className: ""app"" },
                this.props.children,
                React.createElement(common_1.Footer, null),
                React.createElement(mobx_react_devtools_1.default, null)
            )
        );
    }
}]);
</code></pre>

<p>common_1 is for some reason undefined and I can't figure out why. </p>

<p>mobx_react_1.Provider is not, so it seems like only nested components are affected. If I add ""let myVariable = &lt; Footer />"" before return, then it's working as intended (even if I never reference myVariable in the return statement!)</p>

<p>I've tried different components but always get the same error. I'm not getting any compilation errors (beside ""DeprecationWarning: loaderUtils.parseQuery() .."") and I've not changed my webpack.config. These are the dependencies in my package.json:</p>

<pre><code>  ""dependencies"": {
    ""@types/lodash"": ""4.14.55"",
    ""bootstrap"": ""4.0.0-alpha.6"",
    ""mobx"": ""3.1.2"",
    ""mobx-react"": ""4.1.1"",
    ""moment"": ""2.17.1"",
    ""react"": ""15.4.2"",
    ""react-bootstrap"": ""0.30.7"",
    ""react-breadcrumbs"": ""1.5.2"",
    ""react-datetime"": ""2.8.6"",
    ""react-dnd"": ""2.1.4"",
    ""react-dnd-html5-backend"": ""2.1.2"",
    ""react-dom"": ""15.4.1"",
    ""react-router"": ""3.0.0"",
    ""react-router-bootstrap"": ""0.23.1"",
    ""whatwg-fetch"": ""2.0.2""
  },
  ""devDependencies"": {
    ""@types/react"": ""0.14.57"",
    ""@types/react-dom"": ""0.14.23"",
    ""@types/react-router"": ""2.0.48"",
    ""awesome-typescript-loader"": ""3.1.3"",
    ""babel-core"": ""6.21.0"",
    ""babel-loader"": ""6.2.10"",
    ""babel-plugin-transform-decorators-legacy"": ""1.3.4"",
    ""babel-preset-es2015"": ""6.18.0"",
    ""babel-preset-react"": ""6.16.0"",
    ""babel-preset-stage-1"": ""6.22.0"",
    ""bootstrap-sass"": ""3.3.7"",
    ""css-loader"": ""0.26.1"",
    ""file-loader"": ""0.9.0"",
    ""html-webpack-plugin"": ""2.26.0"",
    ""image-webpack-loader"": ""3.3.0"",
    ""mobx-react-devtools"": ""4.2.11"",
    ""node-sass"": ""4.2.0"",
    ""react-hot-loader"": ""3.0.0-beta.2"",
    ""sass-loader"": ""4.1.1"",
    ""style-loader"": ""0.13.1"",
    ""typescript"": ""2.3.2"",
    ""url-loader"": ""0.5.7"",
    ""webpack"": ""2.5.1"",
    ""webpack-dev-server"": ""2.4.4""
  }
</code></pre>

<p>Any idea what I'm missing here?</p>
","2349662","","","","","2017-05-09 16:32:41","Component reference is undefined in nested React.createElement(...) call","<reactjs><typescript><npm-install><package.json>","0","5","","",""
"42924014","1","","","2017-03-21 10:10:57","","0","3381","<p>I'm new in React. I have made a small app with a button and a list of image urls. When button is clicked, an image url is added to the list. I render the list of image urls with standard <code>.map</code> function. </p>

<p>I would like to make a fast ui animation effect when the image is displayed: a combination of fade-in and slide-in from left. I tried Velocity.js and found the <code>velocity-react</code> wrapper. But I can not understand how to use it. The same goes for the 'standard' <code>velocity-animate</code> library.</p>

<p>What is best? <code>velocity-react</code>, <code>velocity-animate</code> or something else? 
And how do I do it?</p>

<p><em>JSX</em></p>

<pre><code>&lt;div className=""row""&gt;
  {
    this.state.images.map( (image, index) =&gt; { return this.renderThumb(image, index); } )
  }
&lt;/div&gt;
</code></pre>

<p><em>renderThumb function</em></p>

<pre><code>renderThumb(image, index) {
  return (
    &lt;div ref=""tweetImage"" key={`image-${index}`} className=""col-xs-3 tweetImage""&gt;
      &lt;img className=""img-thumbnail"" src={image} alt=""my pic""/&gt;
    &lt;/div&gt;
  );
}
</code></pre>

<p><em>velocity-react</em></p>

<p>I tried  to wrap <code>&lt;img&gt;</code> animation opacity from 0 to 1 like this (copied from docs):</p>

<pre><code>&lt;VelocityComponent animation={{ opacity: 1 }} duration={ 500 }&gt;
  &lt;img className=""img-thumbnail"" src={image} alt=""my pic""/&gt;
&lt;/VelocityComponent
</code></pre>

<p>I keep getting this error:</p>

<p><em>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: object</em></p>

<hr>

<p>No luck with <code>ReactCSSTransitionGroup</code> either (like suggestions below). Images are shown but without animation:</p>

<pre><code>renderThumb(image, index) {
  return (
    &lt;div ref=""tweetImage"" key={`image-${index}`} className=""col-xs-3""&gt;
      &lt;ReactCSSTransitionGroup
        transitionName=""example""&gt;
          &lt;img className=""img-thumbnail"" src={image} alt=""Ole Frank Jensen""/&gt;
      &lt;/ReactCSSTransitionGroup&gt;
    &lt;/div&gt;
  );
}
</code></pre>

<hr>

<p><strong>SOLVED:</strong></p>

<p>I moved <code>&lt;ReactCSSTransitionGroup transitionName=""example""&gt;</code> outside of the fading component and voilá :-)</p>

<p><em>render()</em></p>

<pre><code>&lt;div className=""row""&gt;
  &lt;ReactCSSTransitionGroup transitionName=""example""&gt;
    {
      this.state.images.map( (image, index) =&gt; { return this.renderThumb(image, index); } )
    }
  &lt;/ReactCSSTransitionGroup&gt;
&lt;/div&gt;
</code></pre>

<p><em>renderThumb()</em></p>

<pre><code>renderThumb(image, index) {
  return (
    &lt;div key={`image-${index}`} className=""col-xs-3""&gt;
      &lt;img className=""img-thumbnail"" src={image} alt=""Ole Frank Jensen""/&gt;
    &lt;/div&gt;
  );
}
</code></pre>
","1736012","","1736012","","2017-03-21 11:52:46","2017-03-21 11:52:46","react: fade-in/slide-in animation when render component","<reactjs><animation><css-animations><velocity.js><reactcsstransitiongroup>","2","1","","",""
"42854518","1","","","2017-03-17 10:04:17","","1","214","<p>I started learning React and React Router by making basic application but I am getting warnings that I am not able to resolve</p>

<pre><code>Warning 1: React.createElement: type is invalid -- expected a string 
(for built-in components) or a class/function (for composite components)
but got: undefined.

Warning 2: Failed prop type: The prop `history` is marked as required
in `Router`, but its value is `undefined`.
</code></pre>

<p>My code :</p>

<pre><code>index.js

import React from 'react'
import ReactDOM from 'react-dom'
import routes from './routes'

ReactDOM.render(routes, document.getElementById('app'));
</code></pre>

<p>.</p>

<pre><code>routes.js

import React from 'react'
import { Route } from 'react-router'
import Home from './components/home';
import Login from './components/login'
const routes = (
  &lt;Route path=""/"" component={Home}&gt;
     &lt;Route path=""/login"" component={Login} /&gt;

  &lt;/Route&gt;
);

export default routes;
</code></pre>

<p>.
    home.js</p>

<pre><code>import React from 'react'

export default React.createClass({
  render(){
      return (
          &lt;div&gt;
              &lt;h1&gt;Hello From Home&lt;/h1&gt;
          &lt;/div&gt;);
  }
});
</code></pre>

<p>login.js</p>

<pre><code>import React from 'react'


export default React.createClass({
  render(){
    return (&lt;h1&gt;Hello From Login Page&lt;/h1&gt;);
  }
});
</code></pre>

<p>this is my </p>

<p>package.json</p>

<pre><code>{
  ""name"": ""basicapp"",
  ""version"": ""1.0.0"",
  ""description"": """",
  ""main"": ""index.js"",
  ""scripts"": {

    ""production"": ""webpack -p"",
    ""start"": ""webpack-dev-server""
  },
  ""author"": ""aviaTorX"",
  ""license"": ""ISC"",
  ""dependencies"": {
   ""react"": ""^15.4.2"",
   ""react-dom"": ""^15.4.2"",
   ""react-router"": ""^4.0.0""
 },
 ""devDependencies"": {
    ""babel-core"": ""^6.24.0"",
    ""babel-loader"": ""^6.4.0"",
     ""babel-preset-react"": ""^6.23.0"",
    ""html-webpack-plugin"": ""^2.28.0"",
    ""webpack"": ""^2.2.1"",
    ""webpack-dev-server"": ""^2.4.2""
 }
}
</code></pre>

<p>It is giving Blank screen with warnings above mentioned.</p>
","7726291","","","","","2017-08-31 10:03:29","Why am I not able to route my app using react router?","<javascript><reactjs><react-router>","3","0","1","",""
"27907357","1","","","2015-01-12 17:17:37","","3","3962","<p>I'm currently starting my first React app with server-side rendering. The problem is that I want to choose the most solid strategy. </p>

<p>What I'm currently trying to do:</p>

<ul>
<li><p>using Swig as template engine for Express app and inserting stringified React component like template variable:</p>

<pre><code>&lt;!doctype html&gt;
&lt;html lang=""en""&gt;
  &lt;head&gt;
     &lt;meta charset=""utf-8""&gt;
     &lt;title&gt;Title&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
     &lt;div id=""react-mount""&gt;{{reactHTML|safe}}&lt;/div&gt;
     &lt;script src=""/build/bundle.js""&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre></li>
<li><p>here is the problem of passing props into components on both server-side and client-side:</p></li>
</ul>

<p><strong>server</strong></p>

<pre><code>var Box = require('./src/components/Box.jsx');
function renderify (component, props) {
   var reactHTML = React.renderToString(React.createElement(component, props));
   return {reactHTML: reactHTML};
}

app.get('/', function (req, res) {
   res.render('layout', renderify(Box, {name: 'My Box'}));
});
</code></pre>

<p>This renders on server perfectly, but client doesn't know that I have <code>name</code> prop..</p>

<p><strong>client</strong></p>

<pre><code>var React = require('react');
var Box = require('./components/Box.jsx');

React.render(&lt;Box /&gt;, document.getElementById('react-mount'));
</code></pre>

<p>Which throws me a warning from React and rerenders the page without <code>name</code>.</p>

<hr>

<p>Another question here is routing..  I assume that it's better to render app on server when some route is requested but then I will prefer to have client-side location change when user goes through application..</p>

<p>Does this mean that routes should be duplicated on both client and server?</p>

<hr>

<h3>So what is the best strategy from your experience to render React components on the server?</h3>
","2117550","","","","","2015-08-12 23:08:21","react.js - Server-side rendering and routes strategies","<javascript><node.js><express><render><reactjs>","1","0","","",""
"36573175","1","38190987","","2016-04-12 12:23:30","","1","457","<p>I want to test login component in react using mocha</p>

<pre><code>const loginView = require('./index');
const React = require('react');
const ReactDOM = require('react-dom');
const ReactTestUtils = require('react-addons-test-utils');
const chai = require('chai');
const jsdom = require('mocha-jsdom');
const injectTapEventPlugin = require('react-tap-event-plugin');
const nock = require('nock');
const api = require('../../configuration').api;

injectTapEventPlugin();
chai.should();

describe('login', () =&gt; {

  beforeEach(() =&gt; {
    jsdom();
  });

  it('show error dialog when username or password is invalid', (done) =&gt; {
    const login = ReactTestUtils.renderIntoDocument(React.createElement(loginView));

    nock(api).post('user/access-token').reply(200);

    login.setState({
      email: 'test@email.tld',
      password: 'wrong-password'
    });

    ReactTestUtils.Simulate.touchTap(ReactDOM.findDOMNode(login.refs.signin).firstChild);

    setTimeout(() =&gt; {
      login.state.showErrorDialog.should.equal(true);
      login.setState({
        showErrorDialog: false
      });
      done();
    }, 1500);
  });
});
</code></pre>

<p>When sign in button is click, the ajax request check username and password (using superagent).</p>

<p>The problem is I don't want to use <strong>setTimeout</strong> function, I like to use a callback or promise when ajax request is complete. Is it possible ?</p>
","847841","","","","","2016-08-26 13:00:10","What is the best way for testing asynchronous react component","<testing><reactjs><mocha><webpack>","1","0","2","",""
"34507605","1","","","2015-12-29 08:50:32","","1","70","<p>This below code is to create svg shapes via React components.
Explanation of the code : I am doing composition in the react components first I have a parent <strong>g</strong> node and after that I have a child <strong>g</strong> node and in each child <strong>g</strong> node i have svg <strong>path</strong>.
what i am doing is : i am creating the shape and after that i am transforming that shape.</p>

<p>i have to transform the each shape individual the problem is that if we do this using the state of the parent it will work fine for the last element but what about is we want to change the transformation of the first element i.e we want to resize the shape</p>

<pre class=""lang-js prettyprint-override""><code>      var ParentGroupThread = React.createClass({
        getInitialState: function() {
          return {
            path: {}
          };
        },
        render: function() {
          Interfaces.DrawingThreads.ParentGroupThread = this;
          var totalDrawing = Object.keys(this.state.path).length;
          var drawings = [];
          var pathState = this.state.path;
          for (var i = 0; i &lt; totalDrawing; i++) {
            Interfaces.DrawingThreads.ParentThreadRef = pathState[i].ParentThreadId;
            Interfaces.DrawingThreads.ThreadRef = pathState[i].threadIdPath;
            drawings.push(React.createElement(ParentThread, {
              ParentThreadId: pathState[i].ParentThreadId,
              threadIdPath: pathState[i].threadIdPath,
              d: pathState[i].d,
              fillPath: pathState[i].fillPath,
              strokePath: pathState[i].strokePath,
              storkeWidthPath: pathState[i].storkeWidthPath,
              classNamePath: pathState[i].classNamePath,
              dataActionPath: pathState[i].dataActionPath,
              dash: pathState[i].dash
            }));
          }
          return React.createElement('g', {
            id: 'ParentGroupThread',
            key: 'ParentGroupThread_Key'
          }, drawings);
        }
      });

      var ParentThread = React.createClass({
        getInitialState: function() {
          return {
            transformation: ''
          };
        },
        render: function() {
          Interfaces.DrawingThreads.ParentThread[Interfaces.DrawingThreads.ParentThreadRef] = this;
          return React.createElement('g', {
              id: this.props.ParentThreadId,
              key: this.props.ParentThreadId + '_Key',
              ref: this.props.ParentThreadId
            },
            React.createElement(Thread, {
              threadIdPath: this.props.threadIdPath,
              key: this.props.threadIdPath + '_Key',
              d: this.props.d,
              fillPath: this.props.fillPath,
              strokePath: this.props.strokePath,
              storkeWidthPath: this.props.storkeWidthPath,
              transformPath: this.props.transformPath,
              classNamePath: this.props.classNamePath,
              dataActionPath: this.props.dataActionPath,
              transformation: this.state.transformation,
              dash: this.props.dash

            })
          );
        }
      });
      var Thread = React.createClass({
        getInitialState: function() {
          return {
            transformation: ''
          };
        },
        render: function() {
          Interfaces.DrawingThreads.Thread[Interfaces.DrawingThreads.ThreadRef] = this;
          return React.createElement('path', {
            id: this.props.threadIdPath,
            d: this.props.d,
            fill: this.props.fillPath,
            stroke: this.props.strokePath,
            strokeWidth: this.props.storkeWidthPath,
            className: this.props.classNamePath,
            'data-action': 'pathhover',
            strokeDasharray: this.props.dash,
            vectorEffect: 'non-scaling-stroke',
            transformation: this.state.transformation,
            ref: this.props.threadIdPath
          });
        }
      });

      ReactDOM.render(React.createElement(ParentGroupThread), document.getElementById('threads'));
</code></pre>


","4002866","","","","","2015-12-29 08:50:32","How to mannage refs in react","<javascript><svg><reactjs>","0","4","","",""
"43227454","1","","","2017-04-05 09:41:11","","0","53","<p>I have a question, after searching &amp; reading through all possible duplicates I could not clear this issue..</p>

<p>So here is what I do in main.js</p>

<pre><code>import Menu from './components/Menu' //which is Menu.js
import Item from './components/Item' //which is Item.js

&lt;Menu&gt;
    &lt;Menu.Item&gt;
        Meldungen
    &lt;/Menu.Item&gt;
    &lt;Menu.Item to=""/test""&gt;
        Aufträge
    &lt;/Menu.Item&gt;
&lt;/Menu&gt;
</code></pre>

<p>and here my Menu.js:</p>

<pre><code>import React, { Component } from 'react'
export default class Menu extends Component { ... }
</code></pre>

<p>and my Item.js</p>

<pre><code>import React, { Component } from 'react'
export default class Item extends Component { ... }
</code></pre>

<p>I also tried doing:</p>

<pre><code>import { Menu } from './components/Menu'
import { Item } from './components/Item'
</code></pre>

<p>but still getting this error</p>

<pre><code>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in.
</code></pre>

<ul>
<li><p>How could this be fixed, there are no spelling errors.</p></li>
<li><p>How can I change my code so I don't have to import ""Item"" again in my main.js?</p></li>
</ul>
","4647839","","4647839","","2017-04-05 09:50:33","2017-04-05 10:09:59","Got No Spelling Error but keep getting React.createElement: type is invalid -- expected a string","<javascript><reactjs><ecmascript-6>","3","1","","",""
"43247129","1","","","2017-04-06 06:15:38","","1","216","<p>I'm trying to build an isomorphic ReactJS app boilerplate using <a href=""https://github.com/erikras/react-redux-universal-hot-example"" rel=""nofollow noreferrer"">rect-redux-universal-hot-example</a> .</p>

<p>I'm using <a href=""https://github.com/gaearon/react-hot-loader"" rel=""nofollow noreferrer"">react-hot-loader</a> for hot module reloading (hmr).</p>

<p>My page in browser is not being reloaded automatically once I change some App component data. I'm getting the following error in the browser:</p>

<pre><code>    [HMR] connected
main-32cd5038bd66f14eeceb.js:12141 [HMR] bundle rebuilding
main-32cd5038bd66f14eeceb.js:12149 [HMR] bundle rebuilt in 530ms
main-32cd5038bd66f14eeceb.js:30888 [HMR] Checking for updates on the server...
main-32cd5038bd66f14eeceb.js:1000 Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in.
printWarning @ main-32cd5038bd66f14eeceb.js:1000
main-32cd5038bd66f14eeceb.js:30976 [HMR] Cannot check for update (Full reload needed)
handleError @ main-32cd5038bd66f14eeceb.js:30976
main-32cd5038bd66f14eeceb.js:30977 [HMR] Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in.
    at invariant (http://localhost:3001/dist/main-32cd5038bd66f14eeceb.js:946:15)
    at ReactCompositeComponentWrapper.instantiateReactComponent [as _instantiateReactComponent] (http://localhost:3001/dist/main-32cd5038bd66f14eeceb.js:11215:55)
    at ReactCompositeComponentWrapper._updateRenderedComponent (http://localhost:3001/dist/main-32cd5038bd66f14eeceb.js:19852:24)
    at ReactCompositeComponentWrapper._performComponentUpdate (http://localhost:3001/dist/main-32cd5038bd66f14eeceb.js:19815:10)
    at ReactCompositeComponentWrapper.updateComponent (http://localhost:3001/dist/main-32cd5038bd66f14eeceb.js:19736:12)
    at ReactCompositeComponentWrapper.receiveComponent (http://localhost:3001/dist/main-32cd5038bd66f14eeceb.js:19638:10)
    at Object.receiveComponent (http://localhost:3001/dist/main-32cd5038bd66f14eeceb.js:3479:22)
    at ReactCompositeComponentWrapper._updateRenderedComponent (http://localhost:3001/dist/main-32cd5038bd66f14eeceb.js:19845:23)
    at ReactCompositeComponentWrapper._performComponentUpdate (http://localhost:3001/dist/main-32cd5038bd66f14eeceb.js:19815:10)
    at ReactCompositeComponentWrapper.updateComponent (http://localhost:3001/dist/main-32cd5038bd66f14eeceb.js:19736:12)
handleError @ main-32cd5038bd66f14eeceb.js:30977
main-32cd5038bd66f14eeceb.js:946 Uncaught (in promise) Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in.
    at invariant (main-32cd5038bd66f14eeceb.js:946)
    at ReactCompositeComponentWrapper.instantiateReactComponent [as _instantiateReactComponent] (main-32cd5038bd66f14eeceb.js:11215)
    at ReactCompositeComponentWrapper._updateRenderedComponent (main-32cd5038bd66f14eeceb.js:19852)
    at ReactCompositeComponentWrapper._performComponentUpdate (main-32cd5038bd66f14eeceb.js:19815)
    at ReactCompositeComponentWrapper.updateComponent (main-32cd5038bd66f14eeceb.js:19736)
    at ReactCompositeComponentWrapper.receiveComponent (main-32cd5038bd66f14eeceb.js:19638)
    at Object.receiveComponent (main-32cd5038bd66f14eeceb.js:3479)
    at ReactCompositeComponentWrapper._updateRenderedComponent (main-32cd5038bd66f14eeceb.js:19845)
    at ReactCompositeComponentWrapper._performComponentUpdate (main-32cd5038bd66f14eeceb.js:19815)
    at ReactCompositeComponentWrapper.updateComponent (main-32cd5038bd66f14eeceb.js:19736)
</code></pre>

<p>Here is my setup:</p>

<p><strong>.babelrc</strong></p>

<pre><code>{
  ""presets"": [""react"", ""es2015"", ""stage-0""],

  ""plugins"": [
    ""transform-runtime"",
    ""add-module-exports"",
    ""transform-react-display-name"",
    ""flow-runtime"",
    ""react-hot-loader/babel""
  ]
}
</code></pre>

<p><strong>client.js</strong></p>

<pre><code>import ReactDOM from 'react-dom';
import React from 'react';
import { AppContainer } from 'react-hot-loader';
import App from './component/App/app';

const NextApp = require('./component/App/app').default;

const dest = document.getElementById('content');

const render = (Component) =&gt; {
  ReactDOM.render(
    &lt;AppContainer&gt;
      &lt;Component /&gt;
    &lt;/AppContainer&gt;,
    dest
  );
};

render(App);

console.log('MODULE HOT:');
console.log(module.hot);

if (module.hot) {
    module.hot.accept('./component/App/app', () =&gt; {
        render(NextApp);
    });
}
</code></pre>

<p>** App **</p>

<pre><code>    import React from 'react';

const App = () =&gt; (

        &lt;div className=""wrapper""&gt;
            &lt;h1&gt;This is my App!!!!&lt;/h1&gt;
        &lt;/div&gt;

);

export default App;
</code></pre>

<p><strong>dev.config</strong></p>

<pre><code>require('babel-polyfill');

// Webpack config for development
var fs = require('fs');
var path = require('path');
var webpack = require('webpack');
var assetsPath = path.resolve(__dirname, '../static/dist');
var host = (process.env.HOST || 'localhost');
var port = (+process.env.PORT + 1) || 3001;

// https://github.com/halt-hammerzeit/webpack-isomorphic-tools
var WebpackIsomorphicToolsPlugin = require('webpack-isomorphic-tools/plugin');
var webpackIsomorphicToolsPlugin = new WebpackIsomorphicToolsPlugin(require('./webpack-isomorphic-tools'));

module.exports = {
  devtool: 'inline-source-map',
  context: path.resolve(__dirname, '..'),
  entry: {
    'main': [
      'react-hot-loader/patch',
      'webpack-hot-middleware/client?path=http://' + host + ':' + port + '/__webpack_hmr',
      './src/client.js'
    ]
  },
  output: {
    path: assetsPath,
    filename: '[name]-[hash].js',
    chunkFilename: '[name]-[chunkhash].js',
    publicPath: 'http://' + host + ':' + port + '/dist/'
  },
  module: {
    loaders: [
      { test: /\.jsx?$/, exclude: /node_modules/, loaders: ['babel-loader', 'eslint-loader']},
      { test: /\.json$/, loader: 'json-loader' },
      { test: /\.less$/, loader: 'style-loader!css?modules&amp;importLoaders=2&amp;sourceMap&amp;localIdentName=[local]___[hash:base64:5]!autoprefixer?browsers=last 2 version!less?outputStyle=expanded&amp;sourceMap' },
      { test: /\.scss$/, loader: 'style-loader!css?modules&amp;importLoaders=2&amp;sourceMap&amp;localIdentName=[local]___[hash:base64:5]!autoprefixer?browsers=last 2 version!sass?outputStyle=expanded&amp;sourceMap' },
      { test: /\.woff(\?v=\d+\.\d+\.\d+)?$/, loader: ""url-loader?limit=10000&amp;mimetype=application/font-woff"" },
      { test: /\.woff2(\?v=\d+\.\d+\.\d+)?$/, loader: ""url-loader?limit=10000&amp;mimetype=application/font-woff"" },
      { test: /\.ttf(\?v=\d+\.\d+\.\d+)?$/, loader: ""url-loader?limit=10000&amp;mimetype=application/octet-stream"" },
      { test: /\.eot(\?v=\d+\.\d+\.\d+)?$/, loader: ""file-loader"" },
      { test: /\.svg(\?v=\d+\.\d+\.\d+)?$/, loader: ""url-loader?limit=10000&amp;mimetype=image/svg+xml"" },
      { test: webpackIsomorphicToolsPlugin.regular_expression('images'), loader: 'url-loader?limit=10240' }
    ]
  },
  resolve: {
    modules: [
      'src',
      'node_modules'
    ],
    extensions: ['*', '.json', '.js', '.jsx']
  },
  plugins: [
    // hot reload
    new webpack.HotModuleReplacementPlugin(),
    new webpack.IgnorePlugin(/webpack-stats\.json$/),
    new webpack.DefinePlugin({
      __CLIENT__: true,
      __SERVER__: false,
      __DEVELOPMENT__: true,
      __DEVTOOLS__: true  // &lt;-------- DISABLE redux-devtools HERE
    }),
    webpackIsomorphicToolsPlugin.development()
  ]
};
</code></pre>

<p>I'm lost in where to find the error, as I'm not very used to work with HMR. Help appreciated.</p>
","2697571","","","","","2017-04-06 06:24:15","react-hot-loader: React.createElement: type is invalid -- expected a string error updating the screen","<javascript><reactjs><react-hot-loader>","1","0","","",""
"34701549","1","34701685","","2016-01-10 02:57:21","","0","1340","<p>I've got a .jsx file and I'm writing in es6. I have a component and I want it to return a good ole link! I copied the exact link from the <a href=""https://facebook.github.io/react/docs/displaying-data.html"" rel=""nofollow"">React Documentation</a>. Here is my code...</p>

<pre><code>class PanelContent extends React.Component { 
  render() {
    return (
      React.createElement('a', {href: 'https://facebook.github.io/react/'}, 'Hello!')
    )
  }
}
</code></pre>

<p>And the error I'm receiving is, <code>SyntaxError: unknown: Unexpected token (4:35)</code>. The error is pointing at the <code>:</code> in <code>href</code>. So please anyone help.</p>
","2869337","","1434116","","2016-01-30 11:33:46","2016-01-30 11:33:46","reactjs unknown: unexpected token on React.createElement","<javascript><facebook><reactjs><react-jsx>","1","1","1","",""
"43193933","1","","","2017-04-03 20:45:30","","0","42","<p>I am trying to mock a component that has the following structure:</p>

<pre><code>//A_Form.js
import React from ""react"";

export default React.createClass({
    displayname: ""A_Form"",

    updateState: function() {
        // I want to mock this function as it opens a web connection
    }    
    render: function() {
        return ( 
            &lt;form&gt;
                &lt;div className='class1'&gt;
                    &lt;label htmlFor=""name""&gt; name &lt;/label&gt;
                &lt;/div&gt;
            &lt;/form&gt;
    }
</code></pre>

<p>I'm trying to test this with jest using the following:</p>

<pre><code>//A_Form.spec.js
import React
import {A_Form} from './A_Form';

function mock_A_Form() {
    var A_Form = React.createElement(require.requireActual(""./A_Form"");
    return {
        ... A_Form,
        updateState: jest.fn( () =&gt; { return; } )
    }
jest.mock(""./A_Form"",() =&gt; { return mock_A_Form(); } );

describe(""A_Form test"",function() {
    var ReactTestUtils = require('react-addons-test-utils');
    var a_form = React.createElement(require.requireMock(""./A_Form"");

    it(""checking"",function() {
        var n = ""name"";
        var rendered_a_form = ReactTestUtils.renderIntoDocument(a_form);
        var my_name = ReactTestUtils.findRenderedDOMComponentWithTag(rendered_a_form,""label"");
        expect(my_name.textContent).toBe(n);
    });
});
</code></pre>

<p>I think I have included all of the relevant code.  I am stuck with I call renderIntoDocument as it returns ""Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: object."".</p>

<p>As I am rather new to Jest and React any push in reasonable direction would be appreciated. </p>
","5107245","","","","","2017-04-03 21:22:38","Probably a simple jest/react error on my part","<javascript><reactjs><jest>","1","0","","",""
"34493926","1","","","2015-12-28 12:55:16","","1","583","<p>I am updating my code from the now deprecated react/addons package to the react-addon-test-utils package. I use jsdom and inject a document and window element, as shown below.</p>

<pre><code>import jsdom from 'jsdom';
import chai from 'chai';
import chaiImmutable from 'chai-immutable';

const doc = jsdom.jsdom('&lt;!doctype html&gt;&lt;html&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;');
const win = doc.defaultView;

global.document = doc;
global.window = win;

Object.keys(window).forEach((key) =&gt; {
  if (!(key in global)) {
    global[key] = window[key];
  }
});

chai.use(chaiImmutable);
</code></pre>

<h3>And here is my unit test.</h3>

<pre><code>import {expect} from 'chai';
import ErrorBlock from '../src/Controls/ErrorBlock';
import React from 'react-addons-test-utils';

const {renderIntoDocument, scryRenderedDOMComponentsWithClass, Simulate}
  = React;

describe('ErrorBlock', () =&gt; {

  it('renders properly', () =&gt; {
    const id = 'test';
    const message = 'my message';
    const alertStyle = ""alert-danger"";
    const component = renderIntoDocument(
      &lt;ErrorBlock id={id} message={message} alertStyle={alertStyle} /&gt;
    );
    const spanEntry = scryRenderedDOMComponentsWithClass(component, id + 'AlertMessage');
    expect (spanEntry.length).to.equal(1);
  });
});
</code></pre>

<p>I am in the process of getting unit testing setup for a React UI module for use on some projects. However, when I switch over to the new react-addons-test-utils package, I get the following error:</p>

<pre><code>TypeError: _reactAddonsTestUtils2.default.createElement is not a function
</code></pre>

<p>This error occurs on the line where I define my component. </p>

<p>Why am I getting this error ONLY when using the new package?</p>
","3191037","","1755598","","2015-12-28 12:55:58","2017-06-16 02:56:22","Issue with react-addon-test-utils createElement","<javascript><unit-testing><reactjs><jsdom>","1","7","1","",""
"40161334","1","","","2016-10-20 17:56:06","","0","2000","<p>I might be making a silly mistake but I have this REST API output that i am consuming in UI through React and I am partially getting the output. When i console log, i get the output for ( testRows is data in AJAX -  this.setState({testRows: data});) : </p>

<pre><code>this.state.testRows.Type as 'Application Performance'     
</code></pre>

<p>but when i do this.state.testRows.Names[0] to print first value i.e. desc2, i face an error. What is the correct way to display or print array values of JSON in react? </p>

<pre><code>{

""Names"": [
""desc2"",
""desc3""
],
""Result"": 0,
""Type"": ""Application Performance"",
""dateTime"": [
""2016-07-26 20:35:55"",
""2016-07-26 20:35:55""
 ]

}
</code></pre>

<p>ReactJS :</p>

<pre><code>var App = React.createClass({

    getInitialState: function () {
        return {

            testRows: []

        };
    },

    componentWillMount: function (event) {

        $.ajax({
            type: ""GET"",
            crossDomain: true,
            url: /details/3,
            success: function(data) {
                this.setState({testRows: data});
            }.bind(this),
            error:function(data) {
                alert(""Data sending failed"");
            }
        });
    },

    render: function() {

        console.log(this.state.testRows.Type); ~~ I get the output 
        console.log(this.state.testRows.Names[0]); ~~ Error

        return (

        );
    }
});

var element = document.getElementById('content');
ReactDOM.render(React.createElement(App), element);
</code></pre>
","4122764","","4122764","","2016-10-20 18:04:10","2016-10-20 18:37:41","Display JSON array data in reactjs","<reactjs>","1","16","1","",""
"34759735","1","34985289","","2016-01-13 06:22:59","","3","5526","<p>I have a problem loading external script within react JSX</p>

<pre><code>&lt;script&gt;
    (function(d) {
        var config = {
                kitId: 1234567,
                scriptTimeout: 3000,
                async: true
            },
            h=d.documentElement,t=setTimeout(function(){h.className=h.className.replace(/\bwf-loading\b/g,"""")+"" wf-inactive"";},config.scriptTimeout),tk=d.createElement(""script""),f=false,s=d.getElementsByTagName(""script"")[0],a;h.className+="" wf-loading"";tk.src='https://use.typekit.net/'+config.kitId+'.js';tk.async=true;tk.onload=tk.onreadystatechange=function(){a=this.readyState;if(f||a&amp;&amp;a!=""complete""&amp;&amp;a!=""loaded"")return;f=true;clearTimeout(t);try{Typekit.load(config)}catch(e){}};s.parentNode.insertBefore(tk,s)
    })(document);
&lt;/script&gt;
</code></pre>

<p>and here is my render function where i would like to have the javascipt load asyn, it's super easy in a html file, however i am stunned within a react component on how to do acheive. (If i can avoid install another external module would be best). Many thanks</p>

<pre><code>render() {
    return (
        &lt;head&gt;
            //Script to load asyn
        &lt;/head&gt;
    )
}
</code></pre>
","409275","","","","","2018-06-13 18:52:18","Async loading script within react component","<reactjs>","2","3","1","",""
"34571970","1","","","2016-01-02 23:55:40","","0","127","<p>Im using gulp with browserify and the reactify transform to convert a react jsx into something that the browser can run, but browserify is only turning my main.jsx file into a js file. It doesnt seem to be including the dependencies. </p>

<p>My directory structure is:</p>

<pre><code>src
--js
----main.jsx
----components
------app.jsx
------hello.jsx
--index.html
</code></pre>

<p>In the directory structure above, I've labeled the jsx files with .jsx. Technically, they are currently labeled .js. Hence the use of .js instead of .jsx in the gulpfile. I have changed it to .jsx for the purpose of clarifying that they are .jsx files. </p>

<p>My gulpfile.js is: </p>

<pre><code>var gulp = require('gulp');
var source = require('vinyl-source-stream');
var browserify = require('browserify');
var watchify = require('watchify');
var reactify = require('reactify');

var path = {
  HTML: 'src/index.html',
  OUT: 'build.js',
  DEST: 'dist',
  DEST_SRC: 'dist/src',
  ENTRY_POINT: './src/js/main.js'
};

gulp.task('copy', function(){
  gulp.src(path.HTML)
    .pipe(gulp.dest(path.DEST));
});

gulp.task('watch', function() {
  gulp.watch(path.HTML, ['copy']);

  var watcher  = watchify(browserify({
    entries: [path.ENTRY_POINT],
    transform: [reactify],
    debug: true,
    cache: {}, packageCache: {}, fullPaths: true
  }));

  return watcher.on('update', function () {
    watcher.bundle()
      .pipe(source(path.OUT))
      .pipe(gulp.dest(path.DEST_SRC))
      console.log('Updated');
  })
    .bundle()
    .pipe(source(path.OUT))
    .pipe(gulp.dest(path.DEST_SRC));
});

gulp.task('default', ['watch']);
</code></pre>

<p>However, in my dist folder I only have one index.html and one main.js file with the main.js file being: </p>

<pre><code>/** @jsx React.DOM */
var React = require('react');

var App = require('./components/app.js');

React.render(
  React.createElement(App, null),
  document.getElementById('main')
);
</code></pre>

<p>Which looks like a JSX->JS transformed file without the browserify dependency resolution. </p>

<p>I'm new to node, browserify, and react so this might be a problem of not understanding how it all pieces together in the browser or what each component does. </p>
","5173765","","","","","2016-01-02 23:55:40","Browserify not traversing dependencies in react app (in Gulp)","<javascript><node.js><reactjs><gulp><browserify>","0","2","","",""
"43229649","1","","","2017-04-05 11:18:17","","0","413","<p>I have a parent Component as <strong>app.js</strong></p>

<pre><code>import React, { Component } from 'react'
import { Route, Link, BrowserRouter, HashRouter} from 'react-router-dom'
//import BrowserHistory from 'react-router/lib/BrowserHistory'
import {Scholarships} from './scholarships'

class App extends Component {
        render() {
                return (
                        &lt;div&gt;
                        &lt;HashRouter&gt;
                            &lt;div&gt;
                                &lt;Route exact path='/' component={Home} /&gt;
                                &lt;Route path='/hello' component={Hello} /&gt;
                                &lt;Route path='/scholarship' component={Scholarships} /&gt;

                            &lt;/div&gt;
                        &lt;Scholarships /&gt; 
                        &lt;/HashRouter&gt;
                        &lt;/div&gt;

                )

        }
}

const Home = () =&gt; &lt;h1&gt; Hello from home! &lt;/h1&gt;
const Hello = () =&gt; &lt;h2&gt; Hello React &lt;/h2&gt;

export default App
</code></pre>

<p>and there is a child component as <strong>scholarships.js</strong></p>

<pre><code>import React, {Component} from 'react'
import Request from 'react-http-request' //`https://www.npmjs.com/package/react-http-request`

class Scholarships extends Component {
        constructor(props) {
                super(props);
        }
        render() {
                return (
                        &lt;Request
                                url = 'https://api.github.com/users/mbasso'
                                method = 'get'
                                accept = 'application/json'
                                verbose = {true}
                        &gt;
                                {
                                        ({error, result, loading}) =&gt; {
                                                        if(loading) {
                                                                return &lt;div id=""scholarships""&gt; loading... &lt;/div&gt;;
                                                        }
                                                        else {
                                                                return &lt;div id=""scholarships""&gt; { JSON.stringify(result) }&lt;/div&gt; ;
                                                        }

                                                }
                                }
                        &lt;/Request&gt;
                )
        }
}

export default Scholarships
</code></pre>

<p>It is throwing an error <strong>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in. Check the render method of <code>App</code>.  bundle.js:357:9</strong> and
<strong>Error: A  may have only one child element</strong> 
I'm just starting with react so it might be a noob question but I am struck up here, If I pass <code>&lt;Scholarships /&gt;</code> directly into <strong>main.js</strong> it is working as expected why I am not able to nest it here  </p>

<p>Additionally I've also tried </p>

<ul>
<li><code>const scholarship = () =&gt; &lt;Scholarships /&gt;</code></li>
<li><code>const scholarship = &lt;Scholarships /&gt;</code></li>
<li><code>const scholarship = () =&gt; (&lt;Scholarships /&gt;)</code></li>
<li><code>const scholarship = () =&gt; {Scholarships}</code></li>
</ul>

<p>I would also like to know that my <strong>Scholarship</strong> component is return plain JSON.Stringify text so why is it still a Object in reference of the error given by <code>const scholarship = () =&gt; &lt;Scholarship /&gt;</code></p>

<p>My <strong>main.js</strong> file </p>

<pre><code>import React from 'react'
import ReactDOM from 'react-dom'
import App from './app'
import Scholarships from './scholarships'
ReactDOM.render(&lt;App /&gt;, document.getElementById('root'))
</code></pre>
","3599500","","5185595","","2018-04-02 03:22:21","2018-04-02 03:22:21","React.createElement: type is invalid -- expected a string (for built-in components) or a class/function but got: undefined","<javascript><reactjs><react-router><react-router-dom>","1","4","","2017-04-05 11:19:29",""
"43251819","1","43252000","","2017-04-06 09:59:35","","0","162","<p>I have the following component:</p>

<pre><code>import React from ""react"";
import { Grid, Form } from ""semantic-ui-react"";

const BasicDetail = ({DetailData}) =&gt; {
    return(
        &lt;div&gt;
            &lt;Grid.Row&gt;
                &lt;h3&gt;Basic Details&lt;/h3&gt;
                {DetailData.map((form) =&gt; {
                     return (
                         &lt;Form.input
                             label={form.label}
                             readOnly={true}
                             defaultValue={form.default}
                            type=""text""
                         /&gt;
                     )
                 })}
            &lt;/Grid.Row&gt;
        &lt;/div&gt;
    )
}

BasicDetail.propTypes = {
    DetailData: React.PropTypes.array.isRequired
};

export default BasicDetail;
</code></pre>

<p>I am passing it an array of objects in props, but I am getting the following error:</p>

<blockquote>
  <p>warning.js:36 Warning: React.createElement: type is invalid --
  expected a string (for built-in components) or a class/function (for
  composite components) but got: undefined. You likely forgot to export
  your component from the file it's defined in. Check the render method
  of <code>BasicDetail</code>.</p>
</blockquote>

<p>If I remove the .map function from the component it renders correctly.</p>

<p>What could be the cause of this error?</p>
","4341439","","","","","2017-04-06 10:15:12","React.createElement: type is invalid when using array.map inside a stateless component","<javascript><reactjs><ecmascript-6>","1","0","","",""
"43448317","1","43449617","","2017-04-17 08:59:58","","0","173","<p>So I'm trying to build an application. Where I have a Java API that provides the data from the database as a json object. This I want to pass through an html website using javascript and react to visualize. I got this piece of code to start with as my javascript code</p>

<pre><code>const url = 'localhost:8080/getcomments?testcaseid=1';
fetch(url)
    .then(response =&gt; response.json())
    .then(data =&gt; {
      var rootElement =
        React.createElement('div', {},
          React.createElement('h1', {}, ""test""),
          React.createElement('ul', {},
            React.createElement('li', {},
              React.createElement('h2', {}, data.comment)
            )
          )
        )
     ReactDOM.render(rootElement, document.getElementById('react-app'))
    });
</code></pre>

<p>The url returns when run in a browser</p>

<pre><code>[{""id"":50,""testcaseId"":1,""userId"":1,""comment"":""dit is voor de eerste testcase""}]
</code></pre>

<p>But when I run this with the html page I just get a blank page. Then I thought it was maybe the react code and change the data.comment intoo ""hello"", but also got no return. When I copied the react piece outside the fetch I get some return. Also when I run the html page I don't get any response on my Java API. but when I run the url I get a lot of response.
What am I doing wrong?</p>
","1295089","","","","","2017-04-17 10:23:31","Processing json object through javascript with react","<javascript><java><html><json><reactjs>","1","3","1","",""
"44111859","1","44549800","","2017-05-22 11:35:04","","1","274","<p>I just wanted to enable server-side rendering with react and create-react-app.</p>

<p>I've written a server/index.js file which should return a simple react component as a string.</p>

<pre><code>//require('import-export');
//require('babel-register')({ ignore: /\/(build|node_modules)\//, presets: ['react-app', 'es2015', 'react'] });
const express = require('express');
const morgan = require('morgan');
const path = require('path');
const fs = require('fs');
const index = require('./index.js');
const react = require('react');
const reactServerDom = require('react-dom/server');
const renderToString = reactServerDom.renderToString;
const ourComponent = require('../src/App.js');
const app = express();

// Setup logger
app.use(morgan(':remote-addr - :remote-user [:date[clf]] "":method :url HTTP/:http-version"" :status :res[content-length] :response-time ms'));

// Serve static assets - NEEDS TO BE ACTIVATED LATER WHEN RENDERTOSTRING WORKS!
//app.use(express.static(path.resolve(__dirname, '..', 'build')));

app.get('/', (req, res) =&gt; {
  const filePath = path.resolve(__dirname, '..', 'build', 'index.html');
  let result = '';
  fs.readFile(filePath, 'utf8', function (err, data) {
    if (err) {
      return console.log(err);
    }
    const ReactApp = renderToString(react.createElement(ourComponent));
    result = data.replace('{{SSR}}', ReactApp);
    res.send(result);
  });
});

const port = 9007;

app.listen(port, () =&gt; {
  console.log(`App listening on port ${ port }`);
});

module.exports = app;
</code></pre>

<p>The component that should be rendered is just the sample component which everyone gets from create-react-app:</p>

<pre><code>import React, { Component } from 'react';
import logo from './logo.svg';
import './App.css';

class App extends Component {
  render() {
    return (
      &lt;div className=""App""&gt;
        &lt;div className=""App-header""&gt;
          &lt;img src={logo} className=""App-logo"" alt=""logo"" /&gt;
          &lt;h2&gt;Welcome to React&lt;/h2&gt;
        &lt;/div&gt;
        &lt;p className=""App-intro""&gt;
          To get started, edit &lt;code&gt;src/App.js&lt;/code&gt; and save to reload.
        &lt;/p&gt;
      &lt;/div&gt;
    );
  }
}

export default App;
</code></pre>

<p>Inside my package.json I have following command to start the server with babel-node using the command <strong>yarn server</strong> or <strong>npm run server</strong>:</p>

<pre><code>...
  ""scripts"": {
    ""start"": ""react-scripts start"",
    ""server"": ""NODE_ENV=development babel-node --presets=es2015,react server/index.js"",
    ""build"": ""react-scripts build"",
    ""test"": ""react-scripts test --env=jsdom"",
    ""eject"": ""react-scripts eject""
  }
...
</code></pre>

<p>But I still get following error: </p>

<pre><code>$ NODE_ENV=development babel-node --presets=es2015,react server/index.js
/home/sonnenfeld/ssr-render/src/logo.svg:4
React.createElement(
^

ReferenceError: React is not defined
</code></pre>

<p>And if I remove the svg from the component I get another error:</p>

<pre><code>SyntaxError: /home/sonnenfeld/ssr-render/src/App.css: Unexpected token (1:0)
&gt; 1 | .App {
    | ^
  2 |   text-align: center;
  3 | }
  4 |
</code></pre>

<p>I have already tried the babel hook with babel-register, but also no success.</p>

<p>What would be a good approach to transpile my server.js and all dependencies to vanilla javascript, when using create-react-app with express?</p>
","6790960","","6790960","","2017-05-22 12:17:59","2017-06-14 16:11:28","I get ""React not defined"" when using express, create-react-app and babel-node","<reactjs><express><create-react-app><babel-node><babel-register>","1","4","0","",""
"34990674","1","","","2016-01-25 10:46:08","","0","2623","<p>I am learning react and found redux. I am using redux to login with facebook.</p>

<p>I have action in my actions folder like <code>actions/facebook.js</code></p>

<pre><code> import * as types from '../constants/ActionTypes'

export function loginSuccess(response){
    return dispatch =&gt; {
    dispatch({ response, type: types.FB_LOGIN });
  };
}


export function login(){

    window.fbAsyncInit = function() {
        FB.init({
            appId      : '172141521144545437894',
            cookie     : true, 
            xfbml      : true, 
            version    : 'v2.1'
        });


        FB.getLoginStatus(function(response) {
            this.statusChangeCallback(response);
            }.bind(this));
        }.bind(this);

        (function(d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s); js.id = id;
            js.src = ""//connect.facebook.net/en_US/sdk.js"";
            fjs.parentNode.insertBefore(js, fjs);
            }(document, 'script', 'facebook-jssdk'));

    function fetchUser() {
        console.log('Welcome!  Fetching your information.... ');
        FB.api('/me', function(response) {
        console.log('Successful login for: ' + response.name);
        });
    };

    function statusChangeCallback(response) {
        console.log('statusChangeCallback');
        console.log(response);

        if (response.status === 'connected') {
            console.log(response.authResponse.accessToken);
            this.fetchUser();
        } else if (response.status === 'not_authorized') {
            console.log(""Not authorised"");
        } else {
            console.log(""Please log in to facebook"");
        }
    };

    function checkLoginState() {
        FB.getLoginStatus(function(response) {
        this.statusChangeCallback(response);
        }.bind(this));
        dispatch(loginSuccess(response))
    };

    function handleLogin() {
        FB.login(this.checkLoginState());
    };

    function handleLogout(){
        FB.logout(function(response) {});

    };
}
</code></pre>

<p>and I have reducers like <code>reducers/Login.js</code></p>

<pre><code>    import { FB_LOGIN } from '../constants/ActionTypes'

const initialState = [
  {
    accessToken = null,
    isLoggedIn: false,
    isLoggedOut: true,
    userData: []
  }
]

export default function pvlogin(state = initialState, action) {
    if action.type === FB_LOGIN
  switch (action.type) {
    case FB_LOGIN:
        return 
        {
          accessToken: action.authResponse.accessToken,
          isLoggedIn: true,
          isLoggedOut: false,
        },
    default:
      return state
  }
}
</code></pre>

<p>and my <code>reducers/index.js</code></p>

<pre><code>    import * as ActionTypes from '../actions'
    import { routerStateReducer as router } from 'redux-router'
    import { combineReducers } from 'redux'

    const rootReducer = combineReducers({
      pvlogin,
    })

    export default rootReducer

and  my container to handle this.. `containers/Login.js`

    import { bindActionCreators } from 'redux'
import { connect } from 'react-redux'
import Login from '../components/Login'
import * as FbActions from '../actions/facebook'

function mapStateToProps(state) {
  return {
    login: state.pvlogin
  }
}

function mapDispatchToProps(dispatch) {
  return bindActionCreators(FbActions, dispatch)
}

export default connect(mapStateToProps, mapDispatchToProps)(Login)
</code></pre>

<p>and my store looks like </p>

<pre><code>    import { createStore, applyMiddleware } from 'redux'
import thunk from 'redux-thunk'
import rootReducer from '../reducers'

const createStoreWithMiddleware = applyMiddleware(
  thunk
)(createStore)

export default function configureStore(initialState) {
  const store = createStoreWithMiddleware(reducer, initialState)

  if (module.hot) {
    // Enable Webpack hot module replacement for reducers
    module.hot.accept('../reducers', () =&gt; {
      const nextReducer = require('../reducers')
      store.replaceReducer(nextReducer)
    })
  }

  return store
}
</code></pre>

<p>and my component for login </p>

<pre><code>    import React, { Component, PropTypes } from 'react'

class Login extends Component{
    console.log(""inside login"")

    render() {
    const { login } = this.props
    return (
      &lt;div&gt;
        &lt;a href=""#"" onClick={login.handleLogin}&gt;Login with Facebook&lt;/a&gt;
      &lt;/div&gt;
    )
  }
}

Login.propTypes = {
  login: PropTypes.func.isRequired
}

export default Login
</code></pre>

<p>and finally my <code>index.js</code></p>

<pre><code>import React from 'react'
import { render } from 'react-dom'
import { Provider } from 'react-redux'
import Login from './containers/Login'
import configureStore from './store/configureStore'

const store = configureStore()

    render(
      &lt;Provider store={store}&gt;
        &lt;Login /&gt;
      &lt;/Provider&gt;,
      document.getElementById('root')
    )
</code></pre>

<p>I am very new to react and redux.. I am messing with this from few hours and not got any head out.. </p>

<p>Can anyone suggest me how to handle facebook login ..</p>
","3858177","","3858177","","2016-01-25 12:03:31","2016-02-22 05:26:34","react redux login with facebook","<facebook><reactjs><redux>","1","0","2","",""
"42945737","1","","","2017-03-22 07:56:11","","0","1630","<p>can i implements react.js in codeigniter
i have try but if i load file.js there is a 403, i'm new in react.js
can someone help me </p>

<p>this is my structure file if i load header.js i see error 403 access denied:</p>

<p><a href=""https://i.stack.imgur.com/0cYjg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0cYjg.png"" alt=""enter image description here""></a></p>

<p>this my header.php file</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class = ""tes""&gt;
&lt;/div&gt;
&lt;script src='https://cdnjs.cloudflare.com/ajax/libs/react/15.3.1/react.min.js'&gt;&lt;/script&gt;
&lt;script src='https://cdnjs.cloudflare.com/ajax/libs/react/15.3.1/react-dom.min.js'&gt;&lt;/script&gt;
&lt;script src=""&lt;?php echo base_url('application/views/template/header.js');?&gt;""&gt;&lt;/script&gt;</code></pre>
</div>
</div>
</p>

<p>and this my header.js file</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>'use strict';

function formatName(user) {
  return user.firstName + ' ' + user.lastName;
}

var user = {
  firstName: 'Harper',
  lastName: 'Perez'
};

var element = React.createElement(
  'div',
  { 'class': 'navbar-container ace-save-state', id: 'navbar-container' },
  React.createElement(
    'button',
    { type: 'button', 'class': 'navbar-toggle menu-toggler pull-left', id: 'menu-toggler', 'data-target': '#sidebar' },
    React.createElement(
      'span',
      { 'class': 'sr-only' },
      'Toggle sidebar'
    ),
    React.createElement('span', { 'class': 'icon-bar' }),
    React.createElement('span', { 'class': 'icon-bar' }),
    React.createElement('span', { 'class': 'icon-bar' })
  ),
  React.createElement(
    'div',
    { 'class': 'navbar-header pull-left' },
    React.createElement(
      'a',
      { href: '&lt;?php echo site_url(\'dashboard\');?&gt;', 'class': 'navbar-brand' },
      React.createElement(
        'small',
        null,
        React.createElement('i', { 'class': 'fa fa-briefcase' })
      )
    )
  ),
  React.createElement(
    'div',
    { 'class': 'navbar-buttons navbar-header pull-right', role: 'navigation' },
    React.createElement(
      'ul',
      { 'class': 'nav ace-nav' },
      React.createElement(
        'li',
        { 'class': 'light-blue dropdown-modal' },
        React.createElement(
          'a',
          { 'data-toggle': 'dropdown', href: '#', 'class': 'dropdown-toggle' },
          React.createElement('img', { 'class': 'nav-user-photo', src: '' }),
          React.createElement(
            'span',
            { 'class': 'user-info' },
            React.createElement(
              'small',
              null,
              'Welcome,'
            )
          ),
          React.createElement('i', { 'class': 'ace-icon fa fa-caret-down' })
        ),
        React.createElement(
          'ul',
          { 'class': 'user-menu dropdown-menu-right dropdown-menu dropdown-yellow dropdown-caret dropdown-close' },
          React.createElement(
            'li',
            null,
            React.createElement(
              'a',
              { href: '#' },
              React.createElement('i', { 'class': 'ace-icon fa fa-cog' }),
              'Settings'
            )
          ),
          React.createElement(
            'li',
            null,
            React.createElement(
              'a',
              { href: 'profile.html' },
              React.createElement('i', { 'class': 'ace-icon fa fa-user' }),
              'Profile'
            )
          ),
          React.createElement('li', { 'class': 'divider' }),
          React.createElement(
            'li',
            null,
            React.createElement(
              'a',
              { href: '&lt;?php echo site_url(\'login/logout\');?&gt;' },
              React.createElement('i', { 'class': 'ace-icon fa fa-power-off' }),
              'Logout'
            )
          )
        )
      )
    )
  )
);

ReactDOM.render(element, document.getElementById('tes'));</code></pre>
</div>
</div>
</p>

<p>and sorry for my bad english  </p>
","6733210","","6903997","","2017-03-22 14:31:39","2018-01-25 12:05:50","how to implement react js in codeigniter","<reactjs><codeigniter-2>","0","2","1","",""
"43421570","1","43421988","","2017-04-15 02:31:50","","5","2635","<p>I am trying to publish a basic React component to my npm registry and trying to reuse it. I think I am not following proper way to distribute my react component. Here's what I have:</p>

<p>This is the directory structure:</p>

<pre><code>MyReactPOC
    -&gt; main.jsx
    -&gt; .npmrc
    -&gt; package.json
    -&gt; webpack.config.js
</code></pre>

<p><strong>main.jsx</strong></p>

<pre><code>import React from 'react';

class MyComponent extends React.Component {
    render() {
        return (
            &lt;div&gt;
                &lt;p&gt;Hello from MyComponent!!&lt;/p&gt;
            &lt;/div&gt;
        );
    }
}

export default MyComponent
</code></pre>

<p><strong>package.json</strong></p>

<pre><code>{
  ""name"": ""@pankaj/my-component"",
  ""version"": ""1.0.7"",
  ""description"": ""POC for importing a component"",
  ""main"": ""./dist/bundle.js"",
  ""scripts"": {
    ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1"",
    ""prepublish"": ""webpack --config webpack.config.js""
  },
  ""repository"": {
    ""type"": ""git"",
    ""url"": ""my git repo""
  },
  ""author"": ""Pankaj"",
  ""license"": ""ISC"",
  ""dependencies"": {
    ""react"": ""~15.5.4"",
    ""react-dom"": ""~15.5.4""
  },
  ""devDependencies"": {
    ""babel-cli"": ""~6.24.1"",
    ""babel-core"": ""~6.24.1"",
    ""babel-loader"": ""~6.4.1"",
    ""babel-preset-es2015"": ""~6.24.1"",
    ""babel-preset-react"": ""~6.24.1"",
    ""webpack"": ""~2.4.1""
  }
}
</code></pre>

<p><strong>webpack.config.js</strong></p>

<pre><code>var path = require('path');
var webpack = require('webpack');

module.exports = {
    entry: './main.jsx',
    output: { path: path.join(__dirname, 'dist'), filename: 'bundle.js' },
    module: {
        loaders: [
            {
                test: /.jsx?$/,
                loader: 'babel-loader',
                exclude: /node_modules/,
                query: {
                    presets: ['es2015', 'react']
                }
            }
        ]
    },
};
</code></pre>

<p>I import the module in another project using <code>import MyComponent from '@pankaj/my-component'</code>.</p>

<p>When I use this component like </p>

<p>I get the following error:</p>

<blockquote>
  <p>React.createElement: type is invalid -- expected a string (for
  built-in components) or a class/function (for composite components)
  but got: object. You likely forgot to export your component from the
  file it's defined in.</p>
</blockquote>

<p>Please help me understand the right way to distribute the react components so that they can be used by other projects within my org.</p>

<p>Here is how I use this component:</p>

<p><strong>ComponentUse.js</strong></p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import MyComponent from '@pankaj/my-component';

ReactDOM.render(
  &lt;MyComponent/&gt;,
  document.getElementById('root')
);
</code></pre>

<p>I have an index.html that has the 'root' div.</p>
","1787967","","1787967","","2017-04-15 04:17:16","2017-06-07 16:24:54","Publish a react component to npm and reuse it","<reactjs><npm><webpack><react-jsx>","3","4","5","",""
"43646893","1","","","2017-04-27 00:57:54","","2","845","<p>index.js</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import { createStore, applyMiddleware } from 'redux';
import { Provider } from 'react-redux';
import thunk from 'redux-thunk';
import createHistory from 'history/createBrowserHistory';
import { Route } from 'react-router';
import reducer from './reducers';
import App from './components/App';

import { ConnectedRouter, routerMiddleware } from 'react-router-redux';

const history = createHistory();

const store = createStore(
  reducer,
  applyMiddleware(thunk),
  applyMiddleware(routerMiddleware(history))
)

ReactDOM.render(
  &lt;Provider store={store}&gt;
    &lt;ConnectedRouter history={history}&gt;
      &lt;div&gt;
        &lt;Route exact path=""/"" component={App}/&gt;
      &lt;/div&gt;
    &lt;/ConnectedRouter&gt;
  &lt;/Provider&gt;,
  document.getElementById('root')
);
</code></pre>

<p>App.js</p>

<pre><code>import React from 'react';
import Header from './Header';
import MainSection from '../containers/MainSection';

class App extends React.Component {
  render() {
    return (
      &lt;div className=""container-fluid""&gt;
        &lt;Header /&gt;
        &lt;MainSection /&gt;
      &lt;/div&gt;
    );
  }
}

export default App;
</code></pre>

<p>Header.js</p>

<pre><code>import React, { Component } from 'react';
import { IndexLink } from 'react-router';

export default class Header extends Component {
  render() {
    return (
      &lt;nav&gt;
        &lt;IndexLink to=""/"" activeClassName=""active""&gt;Home&lt;/IndexLink&gt;
      &lt;/nav&gt;
    )
  }
};
</code></pre>

<p>Output of Console:</p>

<pre><code>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in. Check your code at Header.js:8.
    in Header (at App.js:9)
    in div (at App.js:8)
    in App (created by Route)
    in Route (at index.js:23)
    in div (at index.js:22)
    in Router (created by ConnectedRouter)
    in ConnectedRouter (at index.js:21)
    in Provider (at index.js:20)  bundle.js:11913:10
Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in. Check the render method of `Header`.  bundle.js:11472:16
</code></pre>

<p>Any idea? Thanks</p>

<p><strong>UPDATE</strong></p>

<pre><code>import React from 'react';
import { Link } from 'react-router-dom';

export default class Header extends React.Component {
  render() {
    return (
      &lt;nav&gt;
        &lt;Link to=""/"" activeClassName=""active""&gt;Home&lt;/Link&gt;
      &lt;/nav&gt;
    )
  }
};
</code></pre>
","3837778","","3837778","","2017-04-27 01:35:01","2017-04-27 01:35:01","react-route-redux: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components)","<javascript><reactjs><redux><react-redux><react-router-redux>","0","9","","",""
"43746450","1","","","2017-05-02 20:12:23","","2","85","<p>I have a custom element and inside of it I want to use react and attach to parent instance, in order to whole stuff works as one.</p>

<pre><code>// main.js 
function App () {
  return (
    &lt;div&gt;
     &lt;h1&gt;Hello World&lt;/h1&gt;
     &lt;x-message&gt;Hello World&lt;/x-message&gt;
    &lt;/div&gt;
  )
}

// x-message.js
class XMessage extends HTMLElement {
   connectedCallback(){
      this.__reactInternalInstance.moundChild(React.createElement('a',{}, ...))
   }
}
</code></pre>

<p>I want to render another element and attach it to parent react context inside of the <code>x-message</code> element.</p>

<p>Here is an <a href=""https://codesandbox.io/s/nr65r00Zp"" rel=""nofollow noreferrer"">example</a>.</p>

<p>This example works in chrome and the browsers which supports custom elements. as you can see it does not know anything about parent and parent context when renders child element.</p>
","704466","","704466","","2017-05-11 14:34:52","2017-05-11 14:34:52","How to attach react component to existing react instance from outside of react","<javascript><reactjs><custom-element>","0","5","1","",""
"43572874","1","43573212","","2017-04-23 15:15:24","","1","355","<p>I am rather new to reactjs and was testing basic server side rendering with react-router <strong>v4</strong> but I cannot get past this error, been trying since hours. I have tried every solution that I found on google but none of them seems to be working.</p>

<p>Here is the server.js code :</p>

<pre><code>import Express from 'express';
import React from 'react';
import { renderToString } from 'react-dom/server';
import { StaticRouter } from 'react-router'
import MyRoutes from './routes/routes.js';

...

app.get('*', (req, res) =&gt; {

  let markup = `&lt;!DOCTYPE html&gt;
    &lt;html lang=""en""&gt;        
    &lt;body&gt;
        ${renderToString(&lt;StaticRouter location={req.url} context={{}}&gt;&lt;MyRoutes/&gt;&lt;/StaticRouter&gt;)}
    &lt;/body&gt;
    &lt;/html&gt;`;
  res.write(markup);
  res.end();
});
</code></pre>

<p>Problem seems to be with the following code :</p>

<p><strong>./routes/routes.js code:</strong></p>

<pre><code>import React from 'react';
import { Match, Miss } from 'react-router';    

const componentTest = () =&gt;
(       
    &lt;div&gt;
     Testing a component
    &lt;/div&gt;
);

export default () =&gt; (
        &lt;div&gt;
        &lt;Match exactly={true} pattern=""/"" component={componentTest} /&gt;
        &lt;/div&gt;
);
</code></pre>

<p>Now <strong>if I remove the Match tag line I get blank page with no error.</strong>
But if that Match tag line is there I get the following error:</p>

<pre><code>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in.
    in Unknown
    in Router (created by StaticRouter)
    in StaticRouter
Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in. Check the render method of `StatelessComponent`.
    at invariant (/home/ubuntu/workspace/node_modules/react-dom/node_modules/fbjs/lib/invariant.js:44:15)
    at instantiateReactComponent (/home/ubuntu/workspace/node_modules/react-dom/lib/instantiateReactComponent.js:74:56)
    at instantiateChild (/home/ubuntu/workspace/node_modules/react-dom/lib/ReactChildReconciler.js:44:28)
    at /home/ubuntu/workspace/node_modules/react-dom/lib/ReactChildReconciler.js:71:16
    at traverseAllChildrenImpl (/home/ubuntu/workspace/node_modules/react-dom/lib/traverseAllChildren.js:77:5)
    at traverseAllChildren (/home/ubuntu/workspace/node_modules/react-dom/lib/traverseAllChildren.js:172:10)
    at Object.ReactChildReconciler.instantiateChildren (/home/ubuntu/workspace/node_modules/react-dom/lib/ReactChildReconciler.js:70:7)
    at ReactDOMComponent.ReactMultiChild.Mixin._reconcilerInstantiateChildren (/home/ubuntu/workspace/node_modules/react-dom/lib/ReactMultiChild.js:187:41)
    at ReactDOMComponent.ReactMultiChild.Mixin.mountChildren (/home/ubuntu/workspace/node_modules/react-dom/lib/ReactMultiChild.js:226:27)
    at ReactDOMComponent.Mixin._createContentMarkup (/home/ubuntu/workspace/node_modules/react-dom/lib/ReactDOMComponent.js:653:32)
</code></pre>

<p>Any help would be much appreciated.</p>
","4332349","","","","","2017-04-23 15:45:54","Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function. react router v4","<node.js><reactjs><react-router>","1","2","","",""
"34360721","1","","","2015-12-18 17:16:39","","0","422","<p>I'm using react-scroll. It was working ok before I upgraded react to version 0.14.3. After upgrading the react version I had to update a few other libraries to the latest version namely:
react-router-component
react-bootstrap
react-addons-pure-render-mixin
I also had to add react-dom</p>

<p>I had to replace any react.render statements with reactdom.render and remove a React.initializeTouchEvents(true) statement.</p>

<p>I now get a warning and error when the render method in a jsx file tries to render a react-scroll component as follows:</p>

<p>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of <code>Page</code>.</p>

<p>Uncaught Error: Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: object. Check the render method of <code>Page</code></p>

<pre><code>var React = require('react');
var IScroll = require('iscroll/build/iscroll-probe');
var ReactIScroll = require('react-iscroll');
var AppStore = require('../../stores/app-store');
var Timeline = require('../timeline/timeline.jsx');
var Vehicles = require('../vehicles/vehicles.jsx');
var SlotsDepartment = require('./slots-department.jsx');
var AppConstants = require('../../constants/app-constants');
var AppWatchMixin = require('../../mixins/AppWatchMixin');
var AppActions = require('../../actions/app-actions');
var PureRenderMixin = require('react-addons-pure-render-mixin');
var Immutable = require('immutable');
var Moment = require('moment');

function getDepartments(){
    return {departments: AppStore.getDepartments()}
}
function getVehicleCount() {
    return AppStore.getVehicles().size;
}

var scrollOptions = {
    scrollX: true,
    scrollY: true,
    probeType: 3,
    bounce: true,
    scrollbars: true,
    mouseWheel: true
};

var Page = React.createClass({
    mixins: [AppWatchMixin(getDepartments), PureRenderMixin],
    onScroll: function (scroller) {
        AppActions.scroll(AppConstants.Scroll.PAGE, scroller.x, scroller.y);
    },
    onScrollStart: function() {
        AppActions.scrollStart();
    },
    onScrollEnd: function (scroller) {
        AppActions.scrollEnd(AppConstants.Scroll.PAGE, scroller.x, scroller.y);
    },
    componentDidMount: function() {
        AppStore.setPageScroll(this.refs.pageScroll.getIScrollInstance());
    },
    handleClick: function (e) {
        if (!AppStore.isScrolling()) {
            var x = e.nativeEvent.changedTouches != null ? e.nativeEvent.changedTouches[0].clientX : e.clientX;
            var y = e.nativeEvent.changedTouches != null ? e.nativeEvent.changedTouches[0].clientY : e.clientY;

            var vehicleIndex = Math.floor((y - AppStore.getCoords().get('y') - (AppConstants.SetupValues.SLOT_HEIGHT * 2)) / AppConstants.SetupValues.SLOT_HEIGHT);
            var timeIndex = Math.floor((x - AppStore.getCoords().get('x') - (AppConstants.SetupValues.SLOT_WIDTH * 3)) / AppConstants.SetupValues.SLOT_WIDTH);
            var vehicle = AppStore.getVehicles().slice(vehicleIndex, vehicleIndex + 1).first();
            var time = AppStore.getTimeline().slice(timeIndex, timeIndex + 1).first().first();

            AppActions.clickPage(x, y, vehicle, time); 
        }
        AppStore.setScrolling(false);
    },
    render: function () {
        var before = AppConstants.SetupValues.SLOTS_BEFORE;
        var after = AppConstants.SetupValues.SLOTS_AFTER;
        var totalWidth = (before + after + 1) * AppConstants.SetupValues.SLOT_WIDTH;
        var totalHeight = (getVehicleCount() * AppConstants.SetupValues.SLOT_HEIGHT);
        var departments = this.state.departments.map(function (department, index) {
            return &lt;SlotsDepartment key={index} department={department} /&gt;
        });
        var style = {
            paddingTop: AppConstants.SetupValues.SLOT_HEIGHT * 2,
            paddingLeft: AppConstants.SetupValues.SLOT_WIDTH * 3
        }
        var innerStyle = {
            height: totalHeight,
            width: totalWidth
        }
        return (

          &lt;ReactIScroll ref=""pageScroll"" iscroll={IScroll} options={scrollOptions} onScroll={this.onScroll} onScrollStart={this.onScrollStart} onScrollEnd={this.onScrollEnd} className=""page-container"" style={style} &gt;
              &lt;div className=""page-inner"" style={innerStyle} onTouchEnd={this.handleClick} onClick={this.handleClick}&gt;
                {departments}
              &lt;/div&gt;
          &lt;/ReactIScroll&gt;
        );
    }

});

module.exports = Page;
</code></pre>

<p>If I remove the ReactIScroll element from the render method and replace with anything else, an empty div or another react component for example, I don't get an error or warning.</p>

<p>Has anybody else had a similar problem or can suggest anything to try?</p>

<h2>thanks in advance</h2>

<p>Here's my package.json for the project:</p>

<pre><code>{
  ""name"": ""diary"",
  ""version"": ""1.0.0"",
  ""description"": ""DCM 2.0"",
  ""main"": ""gulpfile.js"",
  ""dependencies"": {
    ""autoprefixer"": ""^6.0.3"",
    ""bootbox"": ""^4.4.0"",
    ""bootstrap"": ""^3.3.5"",
    ""browserify"": ""^10.2.4"",
    ""event-stream"": ""^3.3.1"",
    ""flux"": ""^2.0.3"",
    ""gulp"": ""^3.9.0"",
    ""gulp-clean"": ""^0.3.1"",
    ""gulp-concat"": ""^2.6.0"",
    ""gulp-csso"": ""^1.0.0"",
    ""gulp-postcss"": ""^6.0.0"",
    ""gulp-replace"": ""^0.5.4"",
    ""gulp-rev"": ""^5.1.0"",
    ""gulp-rev-replace"": ""^0.4.2"",
    ""gulp-sass"": ""^2.0.4"",
    ""gulp-uglify"": ""^1.2.0"",
    ""gulp-util"": ""^3.0.6"",
    ""immutable"": ""^3.7.4"",
    ""immutable-json"": ""^2.0.0"",
    ""iscroll"": ""^5.1.3"",
    ""jquery"": ""^2.1.4"",
    ""js-cookie"": ""^2.0.3"",
    ""moment"": ""^2.10.3"",
    ""react"": ""^0.14.3"",
    ""react-dom"": ""^0.14.3"",
    ""react-async"": ""^2.1.0"",
    ""react-bootstrap"": ""^0.28.1"",
    ""react-addons-pure-render-mixin"": ""^0.14.3"",
    ""react-iscroll"": ""^0.1.7"",
    ""react-loader"": ""^1.4.0"",
    ""react-router-component"": ""^0.28.0"",
    ""react-tap-event-plugin"": ""^0.1.7"",
    ""reactify"": ""^1.1.1"",
    ""vinyl-buffer"": ""^1.0.0"",
    ""vinyl-source-stream"": ""^1.1.0""
  },
  ""jest"": {
    ""collectCoverage"": true,
    ""rootDir"": ""./"",
    ""scriptPreprocessor"": ""./preprocessor.js"",
    ""unmockedModulePathPatterns"": [
      ""react""
    ]
  },
  ""scripts"": {
    ""test"": ""jest""
  },
  ""author"": ""Chris Child"",
  ""license"": ""ISC"",
  ""devDependencies"": {
    ""gulp-jest-iojs"": ""^1.0.1"",
    ""jest-cli"": ""^0.5.0""
  }
}
</code></pre>

<p>Here is my app.jsx file with routing:</p>

<pre><code>var React = require('react');
var Template = require('./app-template.jsx');
var Router = require('react-router-component');
var Locations = Router.Locations;
var Location = Router.Location;
var NotFound = Router.NotFound;
var AppStore = require('../stores/app-store');
var Diary = require('./diary/diary.jsx');
var Login = require('./login/login.jsx');
var Helpdesk = require('./helpdesk/helpdesk.jsx');

var App = React.createClass({
    componentDidMount: function() {
        AppStore.setRouterLocations(this.refs.routerLocations);
    },
    render: function(){
    return (
        &lt;Template className=""react-container""&gt;
            &lt;Locations className=""react-container"" ref=""routerLocations""&gt;
                &lt;Location path=""*/diary/:zoom"" handler={Diary} /&gt;
                &lt;Location path=""*/helpdesk"" handler={Helpdesk} /&gt;
                &lt;Location path=""*/login"" handler={Login} /&gt;
                &lt;Location path=""*/login/:error"" handler={Login} /&gt;
                &lt;NotFound handler={Diary} /&gt;
            &lt;/Locations&gt;
        &lt;/Template&gt;
    );
    }
});

module.exports = App;
</code></pre>

<p>and its template:</p>

<pre><code>var React = require('react');
var Loading = require('./loading.jsx');

var Template = React.createClass({

  render: function() {
      return (
        &lt;div&gt;
            &lt;div className=""react-container""&gt;
                {this.props.children}
            &lt;/div&gt;
             &lt;Loading /&gt;
        &lt;/div&gt;
    );
  }

});

module.exports = Template;
</code></pre>
","1614265","","1614265","","2015-12-21 13:19:37","2015-12-21 13:19:37","react-iscroll generates warning and error since upgrading to react 0.14.3","<javascript><reactjs>","1","0","","",""
"35105328","1","35105569","","2016-01-30 18:18:26","","0","670","<p>I get some data from server and i need to fit this data in the table inside react element.</p>

<p>Now i'm parsing JSON array i got from the server with <a href=""https://www.npmjs.com/package/html-tableify"" rel=""nofollow"">tableify</a> and getting a pure string with xml table. Then i'm parsing string like:</p>

<pre><code>    componentDidMount: function(){
        var wrapper = document.createElement('div');
        wrapper.innerHTML = tableify(this.props.data);
        var div = wrapper.firstChild;
        this.setState({
            data: div   
        });
    }
</code></pre>

<p>and getting pure XML object inside this.props.data. </p>

<p>How to parse this xml data into render of the react element? Am I doing this completely wrong?</p>
","2649408","","","","","2016-01-30 18:40:48","Passing pure XML in react render","<xml><node.js><reactjs>","1","0","","",""
"35024459","1","35065192","","2016-01-26 21:36:32","","1","1495","<p>I managed to get the following twitter account button working with react with this code:</p>

<pre><code>class TwitterShareButton extends React.Component {
  render() {
    return &lt;a href=""https://twitter.com/share"" className=""twitter-share-button""&gt;Tweet&lt;/a&gt;
  }

  componentDidMount() {
    var scriptNode = document.getElementById('twitter-wjs')
    if (scriptNode) {
      scriptNode.parentNode.removeChild(scriptNode)
    }

    !function(d,s,id){
      var js,
          fjs=d.getElementsByTagName(s)[0],
          p=/^http:/.test(d.location)?'http':'https';
      if(!d.getElementById(id)){
        js=d.createElement(s);
        js.id=id;
        js.src=p+'://platform.twitter.com/widgets.js';
        fjs.parentNode.insertBefore(js,fjs);
      }
    }(document, 'script', 'twitter-wjs');
  }
}
</code></pre>

<p>from <a href=""http://qiita.com/h_demon/items/95e638666f6bd479b47b"" rel=""nofollow"">http://qiita.com/h_demon/items/95e638666f6bd479b47b</a></p>

<p>How can I bind the events? <a href=""https://dev.twitter.com/web/javascript/events"" rel=""nofollow"">https://dev.twitter.com/web/javascript/events</a></p>

<p>I added     </p>

<pre><code>var twttr = document.getElementById('twitter-wjs')

twttr.ready(function (twttr) {
  // Now bind our custom intent events
  twttr.events.bind('click', clickEventToAnalytics);
  twttr.events.bind('tweet', tweetIntentToAnalytics);
  twttr.events.bind('retweet', retweetIntentToAnalytics);
  twttr.events.bind('like', likeIntentToAnalytics);
  twttr.events.bind('follow', followIntentToAnalytics);
});
</code></pre>

<p>to <code>componentDidMount</code>. It didn't work.</p>
","3918985","","347414","","2016-01-28 16:08:09","2016-01-28 16:08:09","Twitter API with react JS","<javascript><twitter><reactjs>","1","2","","",""
"35177157","1","35177594","","2016-02-03 12:29:45","","1","223","<p>Hello guys I am having problem with solving this task in Reactjs not familiar with JSX and there is not many JS tutorials. Could anyone help me solving this issue i want to make a loop inside users with nested users list nesting deep is max 3. </p>

<p>here is my code example:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var testData = [{
  ""username"": ""test1"",
  ""users"": [{
    ""username"": ""test2"",
    ""users"": null
  }, {
    ""username"": ""test3"",
    ""users"": null
  }, {
    ""username"": ""test4"",
    ""users"": [{
      ""username"": ""test2"",
      ""users"": null
    }, {
      ""username"": ""test3"",
      ""users"": null
    }, {
      ""username"": ""test4"",
      ""users"": null
    }]
  }]
},{
  ""username"": ""test2"",
  ""users"": [{
    ""username"": ""test2"",
    ""users"": null
  }, {
    ""username"": ""test3"",
    ""users"": null
  }, {
    ""username"": ""test4"",
    ""users"": [{
      ""username"": ""test2"",
      ""users"": null
    }, {
      ""username"": ""test3"",
      ""users"": null
    }, {
      ""username"": ""test4"",
      ""users"": null
    }]
  }]
}];


function handleClick(item) {
    console.log(item);
};

var Tester = React.createClass({
  displayName: 'Tester',
  render: function render() {
    return React.createElement(
      'ol', {
        id: ""user-list"",
        'className': ''
      },
      this.props.users.map(function(item, i) {
        return React.createElement(
          'li',
          {
            'className': '',
            id: ""user-li-"" + i,
            onClick: handleClick.bind(this, item),
            key: i
          },
          item.username
          //here should be next nest?
        )
      })
    );
  }
});
React.render(React.createElement(Tester, {
  users: testData
}), document.getElementById('example'));</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;

  &lt;head&gt;
    &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/0.14.7/react.js"" data-semver=""0.14.7"" data-require=""react@*""&gt;&lt;/script&gt;
    &lt;script src=""http://code.jquery.com/jquery-2.1.4.min.js""&gt;&lt;/script&gt;
    &lt;link href=""style.css"" rel=""stylesheet"" /&gt;
  &lt;/head&gt;

  &lt;body&gt;
    &lt;div id=""example""&gt;&lt;/div&gt;
  &lt;/body&gt;

&lt;/html&gt;</code></pre>
</div>
</div>
</p>
","5877822","","","","","2016-02-03 12:50:46","if inside loop of reactjs element in map function","<javascript><reactjs>","1","0","","",""
"35111553","1","","","2016-01-31 07:50:48","","1","105","<p>js.coffee for my views and quite not sure how to use if else in it tried some stuff but couldn't get it! new to react.</p>

<pre><code>        #Payment Form
    React.DOM.div
      className: ""row""
      React.DOM.div
        className: ""sixteen wide column""
        React.DOM.div
          id: ""dropin""
    React.DOM.div
      # Payment method Selection
      React.createElement Jobs.PaymentMethodSelect,
        payments: @props.payments
        paymet_method: @props.job.transaction_token
        saveJobValues: @props.saveJobValues
</code></pre>

<p>this is my code for a drop down! passing payments props everythin is working fine!</p>

<p>but i want to hide is the @props.payment.count > 0. when user dont have payment method it hides the form!</p>

<p>i tried adding "" if @props.payment.count > 0 "" but the dropdown hides for ever even if the user have payment method!</p>
","4826930","","","","","2016-06-11 03:51:00","How to use if else in react.js.coffee","<ruby-on-rails><reactjs><coffeescript>","0","2","","",""
"34710953","1","","","2016-01-10 21:24:52","","0","248","<p>Code:</p>

<pre><code>import React from 'react'
import { render } from 'react-dom'
import { Router} from 'react-router'
 render((
  &lt;Router&gt;
  &lt;/Router&gt;
 ), document.getElementById('app'))
</code></pre>

<p>Gives error:</p>

<pre><code>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass 

Uncaught Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined.
</code></pre>

<p>I am using Browserify with Babel6 - here's the babelrc:</p>

<pre><code>{
  ""presets"": [""es2015"", ""react""],
  ""env"": {
    ""development"": {
      ""plugins"": [
        [""react-transform"", {
          ""transforms"": [{
            ""transform"": ""livereactload/babel-transform"",
            ""imports"": [""react""]
          }]
        }]
      ]
    }
  }
}
</code></pre>

<p>And package.json deps:</p>

<pre><code>""axios"": ""^0.8.1"",
""babel-core"": ""^6.3.26"",
""babel-loader"": ""^6.2.0"",
""babel-plugin-react-transform"": ""^2.0.0-beta1"",
""babel-plugin-transform-es2015-arrow-functions"": ""^6.3.13"",
""babel-plugin-transform-react-jsx"": ""^6.3.13"",
""babel-plugin-transform-runtime"": ""^6.3.13"",
""babel-polyfill"": ""^6.3.14"",
""babel-preset-es2015"": ""^6.3.13"",
""babel-preset-react"": ""^6.3.13"",
""babel-preset-stage-0"": ""^6.3.13"",
""babel-preset-stage-2"": ""^6.3.13"",
""babel-runtime"": ""^6.3.19"",
""babelify"": ""^7.2.0"",
""browserify"": ""^12.0.1"",
""livereactload"": ""^2.1.0"",
""react"": ""^0.14.5"",
""react-addons-linked-state-mixin"": ""^0.14.5"",
""react-dom"": ""^0.14.3"",
""react-hot-loader"": ""^1.3.0"",
""react-mixin"": ""^1.1.0"",
""react-proxy"": ""^1.1.2"",
""react-redux"": ""^4.0.6"",
""react-router"": ""^1.0.3"",
""react-simple-router"": ""^0.1.6"",
""reactify"": ""^1.1.1"",
""redux"": ""^3.0.5"",
""redux-devtools"": ""^3.0.1"",
""redux-devtools-dock-monitor"": ""^1.0.1"",
""redux-devtools-log-monitor"": ""^1.0.1"",
""redux-form"": ""^4.0.7"",
""redux-simple-router"": ""^1.0.2"",
</code></pre>

<p>Browserify config:</p>

<pre><code>var props = {
entries: [script],
cache: {},
packageCache: {},
plugin: isProd ? [] : (watch ? [watchify, livereactload] : [livereactload]),
transform: [
  ['babelify', {
    presets: ['es2015', 'react'],
    plugins: [
      ['react-transform', {
        'transforms': [{
          'transform': 'livereactload/babel-transform',
          'imports': ['react']
        }]
      }]

    ]
  }],
  [envify, {}]
],
extensions: ['.jsx', '.js'],
debug: !isProd,
fullPaths: !isProd // for watchify
}
</code></pre>

<p>Suggestion? I am finding lots of issues on GH with this but no clear solution.  This is taken right off the examples on React Router site so not sure why I cannot get it working. The only diff is they use webpack.</p>
","856498","","","","","2016-01-10 23:30:57","React.createElement error with React Router","<javascript><reactjs><react-router>","1","7","","",""
"43044696","1","","","2017-03-27 11:07:23","","8","2300","<p>I would like to have 100% coverage on my project.</p>

<p><img src=""https://i.stack.imgur.com/k1cOu.png"" alt=""img""></p>

<p>In order to do so, I need to test my index.js file which is very basic :</p>

<p><code>index.js</code></p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';

ReactDOM.render(&lt;App/&gt;, document.getElementById('root'));
</code></pre>

<p>I can't find how to test this.
When creating a function such as :</p>

<p><code>index.js</code></p>

<pre><code>const index = (div) =&gt; {
  ReactDOM.render(&lt;App /&gt;, div || document.getElementById('root'));
};
</code></pre>

<p>and then testing it :</p>

<p><code>index.test.js</code></p>

<pre><code>it('renders without crashing', () =&gt; {
  const div = document.createElement('div');
  index(div);
});
</code></pre>

<p>I get an error when importing <code>index</code>:
Invariant Violation: _registerComponent(...): Target container is not a DOM element.</p>

<p>PS:</p>

<p>Note that I already have the following test, working perfectly :</p>

<p><code>App.test.jsx</code></p>

<pre><code>it('renders without crashing', () =&gt; {
  const div = document.createElement('div');
  ReactDOM.render(&lt;App/&gt;, div);
});
</code></pre>
","7046455","","184883","","2017-03-27 11:35:37","2018-03-16 15:21:36","Test a create-react-app index.js file","<reactjs><react-jsx><jestjs>","3","0","2","",""
"35184601","1","","","2016-02-03 18:15:55","","0","582","<p>I'm using webpack and babel to pre-process my jsx files to javascript. My configuration looks like this:</p>

<p><strong>Webpack.config.js</strong></p>

<pre><code>module.exports = {
    entry: ""./react/main.jsx"",
    output: {
        path: __dirname,
        filename: ""./public/javascripts/app.js""
    },
    module: {
        loaders: [
            {
                test: /\.jsx?$/,
                exclude: /(node_modules|bower_components)/,
                loader: 'babel',
                query: {
                    presets: ['react', 'es2015']
                }
            }
        ]
    }
};
</code></pre>

<p><strong>./react.main.jsx</strong></p>

<pre><code>import { render } from 'react-dom'
import HelloWorld from './components/helloworld.jsx'
render(&lt;HelloWorld /&gt;,document.body);
</code></pre>

<p><strong>./react/components/helloworld.jsx</strong></p>

<pre><code>import React from 'react'

class HelloWorld extends React.Component {
    static render() {
        return (
            &lt;div&gt;
                &lt;h1&gt;Hello World!&lt;/h1&gt;
                &lt;p&gt;This is some text&lt;/p&gt;
            &lt;/div&gt;
        );
    }
}

export default HelloWorld;
</code></pre>

<p>When I run webpack I keep getting the error <code>React is not defined</code> at this line in app.js</p>

<pre><code>(0, _reactDom.render)(React.createElement(_helloworld2.default, null), document.body);
</code></pre>

<p>If I specifically include react in my main.jsx file that error goes away and then the error is</p>

<p><code>Uncaught Invariant Violation: _registerComponent(...): Target container is not a DOM element.</code> pointing to the <code>null</code> value as the second parameter of <code>React.create element</code> in app.js</p>

<p>I'm sure it's something I'm missing or doing wrong, but I don't know what it is.</p>
","2115971","","","","","2016-02-03 21:59:04","problems with babel react preset and react-dom","<javascript><reactjs><ecmascript-6><webpack><babeljs>","2","3","","",""
"51257881","1","","","2018-07-10 05:38:09","","2","32","<p>When I loading Three.js dynamically, the variable THREE is still not found.
I have create a React project using <code>create-react-app</code> and copied the three js file in the public folder. the structure looks like this:</p>

<pre><code>src
public
├── js
│   └── threejs
│       ├── Detector.js
│       ├── OrbitControls.js
│       ├── postprocessing
│       │   ├── BloomPass.js
│       │   ├── ShaderPass.js
│       │   └── ...
│       ├── shaders
│       │   ├── BasicShader.js
│       │   ├── BleachBypassShader.js
│       │   ├── ....
│       ├── three.js
│       └── three.min.js
</code></pre>

<p>I have created the following class that loads three.js and any file that is part of the examples/js folder dynamically and triggers the onLoaded callback:</p>

<pre><code>// Dependencies
import React from 'react';

export default class ThreeJsLoader extends React.Component {

    constructor(props) {
        super(props);   
        this.unloaded = [
            '/js/threejs/three.js',
            '/js/threejs/OrbitControls.js'
        ];
        this.loaded = [];
    }

    loadScript(address) {
        let script = document.createElement('script');
        script.setAttribute('type', 'text/javascript');  // optional
        script.setAttribute('src', address);
        script.onload = () =&gt; {
            this.loaded.push(address);
            this.checkLoaded();
        };
        document.getElementsByTagName('head')[0].appendChild(script);
    }

    checkLoaded() {
        if(this.loaded.length &gt;= this.unloaded.length) {
            if(this.props.onLoaded) {
                this.props.onLoaded();
            }
        }
    }

    componentDidMount() {
        while(true) {
            let script = this.unloaded.shift();
            let script_path = `${process.env.PUBLIC_URL}${script}`;
            if(script) {
                this.loadScript(script_path);
            }
            else {
                break;
            }
        }
    }

    render() {
        return null;
    }
}
</code></pre>

<p>this is how the script is used:</p>

<pre><code>import React from 'react';
import ThreeJsLoader from './threejs_loader';

export default class PageBackground extends React.Component {

    constructor(props) {
        super(props);
        this.background_ref = React.createRef();
    }

    loadScene() {
        let scene = new THREE.Scene();
        scene.background = new THREE.Color( 0xcccccc );

        let renderer = new THREE.WebGLRenderer( { antialias: true } );
        renderer.setPixelRatio( window.devicePixelRatio );
        renderer.setSize( window.innerWidth, window.innerHeight );
        this.background_ref.current.appendChild( renderer.domElement );

        let camera = new THREE.PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 1, 1000 );
        camera.position.set( 400, 200, 0 );

        // controls
        let controls = new THREE.OrbitControls( camera, renderer.domElement );
    }

    render() {
        return (
            &lt;div&gt;
                &lt;ThreeJsLoader onLoaded={ () =&gt; this.loadScene() } /&gt;
                &lt;div ref={this.background_ref} &gt; &lt;/div&gt;
            &lt;/div&gt;
        );
    }
}
</code></pre>

<p>I have tested the code and it correctly loads the scripts. However, I get the following error:</p>

<pre><code>./src/page_background.jsx
  Line 36:  'THREE' is not defined  no-undef
  Line 37:  'THREE' is not defined  no-undef
</code></pre>
","960475","","960475","","2018-07-11 07:29:59","2018-07-11 08:35:16","dynamically loading threejs into create react app","<javascript><reactjs><three.js><create-react-app>","1","2","","",""
"26666554","1","26719810","","2014-10-31 02:16:54","","6","1713","<h1>JSX Transformer Causes Errors</h1>

<p>When I convert my react files using the converter from <strong>react-tools</strong></p>

<pre><code>      $ jsx public/dev/jsx public/prod/js --no-cache-dir
</code></pre>

<p>Or when I convert with <strong>grunt-react</strong></p>

<pre><code>      $ grunt react
</code></pre>

<p>My production file breaks because the conversion uses <code>React.createElement</code> and the error says that this function is undefined.</p>

<pre><code>      &lt;h1&gt;{this.state.title}&lt;/h1&gt;
</code></pre>

<p>converts to:</p>

<pre><code>      React.createElement(""div"", null, 
      React.createElement(""h1"", null, this.state.title)
</code></pre>

<p>instead of:</p>

<pre><code>      React.DOM.h1(null, this.state.title)
</code></pre>

<p>The live converter works fine because it uses <code>React.DOM.h1(null, this.state.title)</code>.  This line of code works well with react, but the <code>React.createElement()</code> function does not work and is not found.</p>

<p>How can I force my auto converter, either JSX or grunt, to convert to <code>React.DOM.h1(null)</code> instead of <code>React.createElement(h1, null)</code>. Why does the converter use this function?</p>
","3050450","","1434116","","2016-01-31 04:29:07","2016-01-31 04:29:07","JSX Converter using React.createElement(""h1"", null) instead of React.DOM.h1(null)","<reactjs><gruntjs><react-jsx>","2","0","","",""
"51273966","1","","","2018-07-10 21:13:44","","0","18","<p>I found a lot of questions relative to this issue on Google</p>

<p>but none of them could help me to fix my problem. </p>

<p>My JS CODE:</p>

<pre><code>import React from 'react';

class Send extends React.Component{
state = {
    input: ''
}
handleChange=(e)=&gt;{
    this.setState({
        input:e.target.value
    });
}
handleSubmit=(e)=&gt;{
    e.preventDefault();
}
render(){
    return(
        &lt;form onSubmit={this.handleSubmit}&gt;
            &lt;input value={this.state.input} onChange={this.handleChange}/&gt;
            &lt;button type=""submit""&gt;Submit&lt;/button&gt;
        &lt;/form&gt;
    )
}
}

export default Send;
</code></pre>

<p>I get this error:</p>

<blockquote>
  <p>Module build failed (from ./node_modules/babel-loader/lib/index.js):
      SyntaxError: C:/xampp/htdocs/ReactStudy/contextAPI/public/src/send.js: Unexpected token (4:10)</p>
</blockquote>

<pre><code> 2 | 
 3 | class Send extends React.Component{
 &gt; 4 |     state = {
   |           ^
 5 |         input: ''
 6 |     }
 7 |     handleChange=(e)=&gt;{
</code></pre>

<p>.babelrc code:</p>

<pre><code>{
 ""presets"": [
  ""env"",
  ""react"",
  ""stage-3""
]
}
</code></pre>

<p>webpack.config.js</p>

<pre><code>const webpack = require('webpack');

 module.exports = {
 entry: [
'react-hot-loader/patch',
'./public/src/app.js'
 ],
 module: {
  rules: [
  {
    test: /\.(js|jsx)$/,
    exclude: /node_modules/,
    use: ['babel-loader']
  }
]
},
 resolve: {
extensions: ['*', '.js', '.jsx']
},
 output: {
path: __dirname + '/public',
publicPath: '/',
filename: 'bundle.js'
},
 plugins: [
 new webpack.HotModuleReplacementPlugin()
],
devServer: {
  contentBase: './public',
 hot: true
}
};
</code></pre>

<p>my package.json:</p>

<pre><code>{
""name"": ""react-study"",
""version"": ""1.0.0"",
""description"": ""folder-with-react-examples"",
""main"": ""index.js"",
""scripts"": {
""start"": ""webpack-dev-server --config ./webpack.config.js --mode 
  development"",
 ""test"": ""test if working""
 },
 ""author"": ""reactDeveloper"",
 ""license"": ""ISC"",
 ""babel"": {
   ""presets"": [
    ""env"",
    ""react"",
    ""stage-3""
    ]
  },
 ""devDependencies"": {
   ""babel-core"": ""^6.26.3"",
   ""babel-loader"": ""^7.1.5"",
   ""babel-plugin-transform-class-properties"": ""^6.24.1"",
   ""babel-preset-env"": ""^1.7.0"",
   ""babel-preset-es2017"": ""^6.24.1"",
   ""babel-preset-react"": ""^6.24.1"",
   ""babel-preset-stage-3"": ""^6.24.1"",
   ""react-hot-loader"": ""^4.3.3"",
   ""webpack"": ""^4.15.1"",
   ""webpack-cli"": ""^3.0.8"",
   ""webpack-dev-server"": ""^3.1.4""
 },
 ""dependencies"": {
   ""react"": ""^16.4.1"",
   ""react-dom"": ""^16.4.1""
  }
}
</code></pre>

<p>I tried something to fix my problem.</p>

<p>For example:</p>

<p>I tried edit module in webpack.config.js file</p>

<pre><code>  module: {
rules: [
  {
    test: /\.(js|jsx)$/,
    exclude: /node_modules/,
    use: ['babel-loader']
  }
]
},
</code></pre>

<p>to</p>

<pre><code>module:{  
  loaders: [{
   test: /\.js?$/,
   loader: 'babel-loader',
   query  :{
     presets:['react','es2017']//installed es2017 instead of es2015
   },
   exclude: /node_modules/
  }
]},
</code></pre>

<p>with this webpack.config.js, cmd shows such errors when I do npm start</p>

<blockquote>
  <p>Invalid configuration object. Webpack has been initialised using a configuration object that does not match the API schema. - configuration has an unknown property 'postcss'. These properties are valid: object { amd?, bail?, cache?, context?, dependencies?, devServer?, devtool?, entry, externals?, loader?, module?, name?, node?, output?, performance?, plugins?, profile?, recordsInputPath?, recordsO utputPath?, recordsPath?, resolve?, resolveLoader?, stats?, target?, watch?, watchOptions? } For typos: please correct them.
  For loader options: webpack 2 no longer allows custom properties in configuration. Loaders should be updated to allow passing options via loader options in module.rules. Until loaders are updated one can use the LoaderOptionsPlugin to pass these options to the loader: plugins: [ new webpack.LoaderOptionsPlugin({ // test: /.xxx$/, // may apply this only for some modules options: { postcss: ... } }) ] - configuration.resolve has an unknown property 'root'. These properties are valid: object { alias?, aliasFields?, cachePredicate?, descriptionFiles?, enforceExtension?, enforceModuleExtension?, extensions?, fileSystem?, mainFields?, mainFiles?, moduleExtensions?, modules?, plugins ?, resolver?, symlinks?, unsafeCache?, useSyncFileSystemCalls? } - configuration.resolve.extensions[0] should not be empty.</p>
</blockquote>

<p>Tried to edit .babelrc file like <a href=""https://stackoverflow.com/questions/48801984/unexpected-token-in-react-component?noredirect=1&amp;lq=1"">Unexpected token &#39;=&#39; in React Component</a> 
says</p>

<pre><code>{
""presets"": [""env"", ""react"",""stage-3""],
""plugins"": [""transform-object-rest-spread"", ""transform-class-properties""]
}   
</code></pre>

<p>but it shows plenty errors in my browser console.
React.createElement is invalid type , Element type is invalid:expected a string ..
Last year, I gave up learning React because setup was so difficult and I couldn't understand and do nothing. Now this stupid react drives me crazy again ...</p>

<p>What is causing my problems? How can I fix that? should I uninstall es2017 and use es2015?  </p>
","10038783","","","","","2018-07-10 21:13:44","reactJS Module build failed","<reactjs><webpack><module><package.json>","0","0","","",""
"51316781","1","51316846","","2018-07-13 02:13:26","","0","13","<p>I have a <code>LoginForm.js</code> component </p>

<pre><code>import { React, Component } from 'react';
import { Button, Card, CardSection } from './common';

class LoginForm extends Component {
    render() {
        return (
            &lt;Card&gt;
                &lt;CardSection /&gt;

                &lt;CardSection /&gt;

                &lt;CardSection&gt;
                    &lt;Button&gt;
                        Login
                    &lt;/Button&gt;
                &lt;/CardSection&gt;


            &lt;/Card&gt;
        );
    }

}

export default LoginForm;
</code></pre>

<p>I tried to integrate it into my App.js like this </p>

<pre><code>import React, { Component } from 'react';
import { View } from 'react-native';
import firebase from 'firebase';

import { Header } from './components/common';
import LoginForm from './components/LoginForm';


class App extends Component {


    componentWillMount() {
        firebase.initializeApp({
            apiKey: '*********',
            authDomain: 'rn-auth-a3fb5.firebaseapp.com',
            databaseURL: 'https://rn-auth-a3fb5.firebaseio.com',
            projectId: 'rn-auth-a3fb5',
            storageBucket: 'rn-auth-a3fb5.appspot.com',
            messagingSenderId: '34567890'
        });
    }
    render() {
        return (
            &lt;View&gt;
                &lt;Header headerText='Authentication' /&gt;
                &lt;LoginForm /&gt;

            &lt;/View&gt;

        );
    }
}
export default App;
</code></pre>

<p>I kept getting an error </p>

<p><a href=""https://i.stack.imgur.com/txQbm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/txQbm.png"" alt=""enter image description here""></a></p>

<p>TypeError: Cannot read property 'createElement' of undefined</p>

<blockquote>
  <p>This error is located at:
      in LoginForm (at App.js:26)
      in RCTView (at View.js:43)
      in App (at renderApplication.js:32)
      in RCTView (at View.js:43)
      in RCTView (at View.js:43)
      in AppContainer (at renderApplication.js:31)</p>
</blockquote>

<p><a href=""https://i.stack.imgur.com/7agb8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7agb8.png"" alt=""enter image description here""></a></p>

<p>Which I expect to get something like this </p>

<p><a href=""https://i.stack.imgur.com/4Bfvx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4Bfvx.png"" alt=""enter image description here""></a></p>

<hr>

<h1>Questions</h1>

<p><strong>How would one go about and debug this further ?</strong> </p>

<hr>

<p>I'm open to any suggestions at this moment. </p>

<p>Any hints/suggestions / helps on this be will be much appreciated! </p>
","4480164","","","","","2018-07-13 02:24:57","TypeError: undefined is not an object 'createElement' of undefined - React Native","<javascript><reactjs><react-native>","1","0","","",""
"42980457","1","","","2017-03-23 15:28:40","","0","333","<p>I am getting errors like below</p>

<blockquote>
  <p>React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: object.</p>
</blockquote>

<p>And </p>

<blockquote>
  <p>Uncaught TypeError: Cannot read property 'unmountComponent' of null</p>
</blockquote>

<p>Trying to use <code>react-hot-loader</code> with my basic setup. </p>

<p><strong><code>webpack.config.js</code></strong></p>

<pre><code>const path = require(""path"")
const HtmlWebpackPlugin = require(""html-webpack-plugin"")
const ExtractTextPlugin = require(""extract-text-webpack-plugin"")

const context = path.resolve(__dirname, ""src"")

module.exports = {
  context,
  entry: [
    ""react-hot-loader/patch"",
    ""./js/index.js""
  ],
  output: {
    path: path.resolve(__dirname, ""build/js""),
    filename: ""index.js""
  },
  module: {
    rules: [
      {
        test: /\.(js|jsx)$/,
        loader: ""babel-loader"",
        options: {
          plugins: [
            [
              ""react-css-modules"",
              {
                context
              }
            ]
          ]
        }
      },
      {
        test: /\.css$/,
        use: ExtractTextPlugin.extract({
          fallback: ""style-loader"",
          use: [
            {
              loader: ""css-loader"",
              options: {
                modules: true,
                importLoaders: 1,
                localIdentName: ""[path]___[name]__[local]___[hash:base64:5]"",
                sourceMap: true
              }
            },
            'postcss-loader'
          ]
        })
      }
    ]
  },
  plugins: [
    new HtmlWebpackPlugin({
      template: ""./index.html"",
      filename: ""index.html"",
      inject: ""body""
    }),
    new ExtractTextPlugin(""css/app.css"")
  ],
  devServer: {
    contentBase: path.resolve(__dirname, ""src""),
    historyApiFallback: true
  },
  devtool: ""eval""
}
</code></pre>

<p><strong><code>index.js</code></strong></p>

<pre><code>import ReactDOM from ""react-dom""
import React from ""react""
import {AppContainer} from ""react-hot-loader""
import App from ""./App.jsx""
import ""../css/global.css""

const render = Component =&gt; {
  ReactDOM.render(
    &lt;AppContainer&gt;
      &lt;Component /&gt;
    &lt;/AppContainer&gt;,
    document.getElementById(""app"")
  )
}

render(&lt;App /&gt;)

if (module.hot) {
  module.hot.accept(""./App.jsx"", () =&gt; render(&lt;App /&gt;))
}
</code></pre>

<p><strong><code>App.jsx</code></strong></p>

<p>Even when I just do </p>

<pre><code>export default () =&gt; &lt;h1&gt;Hello&lt;/h1&gt;
</code></pre>

<p>I get error</p>

<p>I am doing a more complete class tho </p>

<pre><code>import React from 'react'
import {createStore, applyMiddleware} from ""redux""
import {Provider} from ""react-redux""
import createHistory from ""history/createBrowserHistory""
import {Route, Switch} from ""react-router""
import {NavLink} from ""react-router-dom""
import {ConnectedRouter, routerMiddleware} from ""react-router-redux""
import {
  Layout,
  Panel,
  AppBar,
} from ""react-toolbox""
import Navigation from ""react-toolbox/lib/navigation""

import financeApp from ""./reducers""
import SbpInvestmentsIndex from ""./sbpInvestments/SbpInvestmentsIndex.jsx""
import Http404 from ""./Http404.jsx""
import ""./app.css""

const history = createHistory()
const historyMiddleware = routerMiddleware(history)
const store = createStore(
  financeApp,
  applyMiddleware(historyMiddleware)
)

export default class App extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      drawerActive: false
    }

    this.toggleDrawerActive = this.toggleDrawerActive.bind(this)
  }

  toggleDrawerActive() {
    this.setState({
      drawerActive: !this.state.drawerActive
    })
  }

  render() {
    return (
      &lt;Provider store={store}&gt;
        &lt;ConnectedRouter history={history}&gt;
          &lt;Layout&gt;
            &lt;Panel&gt;
              &lt;AppBar title=""Personal Finance""&gt;
                &lt;Navigation type=""horizontal""&gt;
                  &lt;NavLink to=""/"" styleName=""app-link""&gt;
                    SBP Investments
                  &lt;/NavLink&gt;
                &lt;/Navigation&gt;
              &lt;/AppBar&gt;

              &lt;Switch&gt;
                &lt;Route exact path=""/"" component={SbpInvestmentsIndex} /&gt;
                &lt;Route component={Http404} /&gt;
              &lt;/Switch&gt;
            &lt;/Panel&gt;
          &lt;/Layout&gt;
        &lt;/ConnectedRouter&gt;
      &lt;/Provider&gt;
    )
  }
}
</code></pre>

<p>Whats wrong here? Code on <strong><a href=""https://github.com/jiewmeng/finances-frontend/tree/80264f4d24ffc19faa01ee04aedbe2a8cebefcc8"" rel=""nofollow noreferrer"">Github</a></strong></p>
","292291","","","","","2017-03-23 15:39:09","React warnings using react-hot-loader:","<javascript><reactjs><webpack><react-hot-loader>","1","0","","",""
"51202888","1","","","2018-07-06 04:07:03","","0","28","<p>I'm in the process of working on a project using create-react-app on Electron and have react-router-dom. I'm authorizing my user login and hoping to redirect them to the home page immediately after, but the usual syntax for redirecting doesn't seem to be working. Please take a look at my code and advise.</p>

<p><strong>Index.js</strong></p>

<pre><code>import React from 'react';
import { render } from 'react-dom';
import App from './components/App';
import {
  BrowserRouter as Router,
  Route,
  Switch,
  Link,
  Redirect,
  withRouter
} from ""react-router-dom"";


let root = document.createElement('div');
root.id = ""root"";
document.body.appendChild( root );

render( &lt;Router&gt;&lt;App /&gt;&lt;/Router&gt;, document.getElementById('root') );
</code></pre>

<p><strong>App.js</strong></p>

<pre><code>import '../assets/css/App.css';
import React, {Component} from 'react';
import VideoContainer from './VideoContainer';
import Clock from './Clock';
import News from './News';
import Spotify from './Spotify';
import Login from './Login';
import {
  BrowserRouter as Router,
  Route,
  Switch,
  Link,
  Redirect,
  withRouter
} from ""react-router-dom"";


class App extends Component {
  render() {
    return (
      &lt;Router&gt;
        &lt;Switch&gt;
          &lt;Route path=""/"" component={Login} /&gt;
          &lt;Route path=""/home"" component={Clock} /&gt;
        &lt;Route path=""/news"" component={News} /&gt;
      &lt;/Switch&gt;
    &lt;/Router&gt;
);
  }
}

export default withRouter(App);
</code></pre>

<p><strong>Login.js</strong></p>

<pre><code>import '../assets/css/Login.css';
import React from 'react'
import PropTypes from 'prop-types'
const URL = 'http://localhost:3000/api/v1/sessions'
import {
  BrowserRouter as Router,
  Route,
  Switch,
  Link,
  Redirect,
  withRouter
} from ""react-router-dom"";

class Login extends React.Component {
  constructor(props) {
    super(props);
    this.logUser = this.logUser.bind(this);
  }
  addTokenToBrowser(token) {
    localStorage.setItem(""id"", token.id)
    localStorage.setItem(""token"", token.token)
  }

  logUser (e) {
    e.preventDefault()
    const data = {
      username: e.target.children[0].value,
      password: e.target.children[2].value
    }
    fetch(URL, {
      method: 'POST',
      body: JSON.stringify(data),
      headers:{
        'Content-Type': 'application/json'
      }
    }).then(res =&gt; res.json())
      .then(json =&gt; {
        if (json.status===""accepted""){
          localStorage.setItem(""id"", json.id)
          localStorage.setItem(""token"", json.token)
          this.props.history.push('/home')
        } else {
          alert('Please enter a valid email and password')
        }
      })
   }


  render () {
    console.log(""My history"", this.props);
  return (
    &lt;div className=""myInput""&gt;
      &lt;form onSubmit={this.logUser} &gt;
    &lt;input placeholder=""Username""&gt;&lt;/input&gt;
    &lt;br&gt;&lt;/br&gt;
  &lt;input placeholder=""Password""&gt;&lt;/input&gt;
    &lt;br&gt;&lt;/br&gt;
  &lt;button type=""submit""&gt;Login&lt;/button&gt;
&lt;/form&gt;
    &lt;/div&gt;
  )
  }
}

export default Login;
</code></pre>
","8000369","","","","","2018-07-06 04:29:00","Using react router with electron","<reactjs><react-router><electron>","1","0","","",""
"51341027","1","51341273","","2018-07-14 15:53:17","","0","26","<p>I try to adapt this <a href=""https://www.w3schools.com/howto/howto_js_tabs.asp"" rel=""nofollow noreferrer"">tabs</a> to react.
The idea is to add active class for the key clicked with handleclick function</p>

<pre><code>class Tabs extends React.Component {
  constructor(props) {
    super(props);
    this.state = { selected: 0 };
    this.handleClick = this.handleClick.bind(this);
  }

  handleClick(key, event) {
    event.preventDefault();
    this.setState({
      selected: key
    });
  }
  render() {
    var activeClass = this.state.selected === this.props.key ? ""active"" : """";
    return (
      &lt;React.Fragment&gt;
        &lt;div class=""tab""&gt;
          &lt;button
            key=""1""
            className={""tablinks"" + activeClass}
            onClick={this.handleClick}
          &gt;
            London
          &lt;/button&gt;
          &lt;button
            key=""2""
            className={""tablinks"" + activeClass}
            onClick={this.handleClick}
          &gt;
            Paris
          &lt;/button&gt;
          &lt;button
            key=""3""
            className={""tablinks"" + activeClass}
            onClick={this.handleClick}
          &gt;
            Tokyo
          &lt;/button&gt;
        &lt;/div&gt;
        &lt;div key=""1"" className={""tabcontent"" + activeClass}&gt;
          &lt;h3&gt;London&lt;/h3&gt;
          &lt;p&gt;London is the capital city of England.&lt;/p&gt;
        &lt;/div&gt;

        &lt;div key=""2"" className={""tabcontent"" + activeClass}&gt;
          &lt;h3&gt;Paris&lt;/h3&gt;
          &lt;p&gt;Paris is the capital of France.&lt;/p&gt;
        &lt;/div&gt;

        &lt;div key=""3"" className={""tabcontent"" + activeClass}&gt;
          &lt;h3&gt;Tokyo&lt;/h3&gt;
          &lt;p&gt;Tokyo is the capital of Japan.&lt;/p&gt;
        &lt;/div&gt;
      &lt;/React.Fragment&gt;
    );
  }
}

ReactDOM.render(&lt;Tabs /&gt;, document.querySelector("".container""));
</code></pre>

<p>but I get two errors:</p>

<p>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of <code>Tabs</code>.</p>

<p>and</p>

<p>Uncaught Error: Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. Check the render method of <code>Tabs</code>.</p>

<p>here is the <a href=""https://jsfiddle.net/7ebzkv53/6/"" rel=""nofollow noreferrer"">jsfiddle link</a> </p>
","10081393","","3617886","","2018-07-14 15:56:19","2018-07-14 16:41:36","react createElement and invariant errors","<javascript><reactjs>","2","0","","",""
"51410196","1","51413251","","2018-07-18 20:06:47","","1","19","<p>I've seen the question asked before, and I've done everything that has been suggested:</p>

<ul>
<li>remove the curly brackets from the import statement of the component</li>
<li>imported React without the curly brackets</li>
<li>I've tried it with the curly brackets</li>
</ul>

<p>index.hmtl</p>

<pre><code>&lt;head&gt;
    &lt;title&gt;My ChatApp&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;div id=""app""&gt;&lt;/div&gt;
&lt;/body&gt;
</code></pre>

<p>index.js</p>

<pre><code>import { Meteor } from ""meteor/meteor"";
import React from ""react"";
import { render } from ""react-dom"";

import ChatComponent from ""../../ui/App"";

Meteor.startup(() =&gt; {
  render(&lt;ChatComponent /&gt;, document.getElementById(""app""));
});
</code></pre>

<p>App.js</p>

<pre><code>import { React, Component } from ""react"";

class ChatComponent extends Component {
  constructor(props) {
    super(props);
    this.state = {};
  }
  render() {
    return &lt;h1&gt;Try Chatting&lt;/h1&gt;;
  }
}

export default ChatComponent;
</code></pre>

<p>I'm still getting the error ""Uncaught TypeError: Cannot read property 'createElement' of undefined"" from the App.js file at line 9 which is the ""return"" line.  It will work if I change the ChatComponent to a function rather than a class, but react says in the documentation that it doesn't differentiate.  I've also tried commenting-out/removing-all-together the constructor part of the class with no effect. I'm kind of at a loss why this is not working. Why won't it work as a class?</p>
","10101743","","","","","2018-07-19 01:53:57","React and Meteor ""Uncaught TypeError: Cannot read property 'createElement' of undefined""","<meteor>","1","0","","",""
"46396145","1","46673645","","2017-09-25 00:36:46","","1","504","<p>I have an application that has this top level component:</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import { BrowserRouter as Router } from 'react-router-dom';
import { Provider } from 'react-redux';
import { createStore } from '../lib/Store.js';

import Application from '../components/application';

document.addEventListener('DOMContentLoaded', () =&gt; {
  ReactDOM.render(
    &lt;Provider store={createStore()}&gt;
      &lt;Router&gt;
        &lt;Application /&gt;
      &lt;/Router&gt;
    &lt;/Provider&gt;,
    document.body.appendChild(document.createElement('div'))
  );
});
</code></pre>

<p>When I click on a <code>&lt;Link&gt;</code>, the page renders properly, but if I go back with the browser (Chrome 60.0.3112.113 on MacOS), the page is blank. </p>

<p>There is a very weird but repeatable scenario:</p>

<ul>
<li>Navigate to any page -> page renders properly</li>
<li>Click <code>&lt;Link&gt;</code> -> page renders properly</li>
<li>Click back button -> blank page</li>
<li>Click forward button -> blank page</li>
<li>Click back button -> page from step 1 renders!!</li>
<li>Click forward -> No render change, the page from step 1 stays rendered</li>
<li>Click back -> blank page renders again</li>
<li>Click forward -> still a blank page</li>
<li>Click back -> page from step 1 renders again...</li>
</ul>

<p>It seems that every other time I click it, the back button works. The thing is, the original <code>&lt;Link&gt;</code> no longer works when I get the original page to render every other back click. It takes me to the right url, but the page is blank.</p>

<p>I'm sure this has to do with lifecycle callbacks or something of the like, but I can't figure out how to force an update in the correct place to fix the situation.</p>

<p>For clarity, this is what the <code>Application</code> component consists of:</p>

<pre><code>import React from 'react';
import { Route, Switch } from 'react-router-dom';
import PropTypes from 'prop-types';

import TopNav from './TopNav';
import BoardsDashboard from './BoardsDashboard';
import BoardContainer from './BoardContainer';
import CardContainer from './CardContainer';

import { fetchBoards } from '../actions/BoardActions';

class Application extends React.Component {
  static contextTypes = {
    store: PropTypes.object
  }

  render() {
    return (
      &lt;div&gt;
        &lt;TopNav /&gt;

        &lt;Route path='/cards/:cardId' exact component={BoardContainer} /&gt;
        &lt;Route path='/cards/:cardId' exact component={CardContainer} /&gt;
        &lt;Route path='/boards/:boardId' exact component={BoardContainer} /&gt;

        &lt;Route path='/' exact component={BoardsDashboard} /&gt;
      &lt;/div&gt;
    );
  }
}

export default Application;
</code></pre>

<p>Using redux-devtools I can see all of the correct actions being dispatched each time I click the back and forward button. I <em>think</em> that my components are not updating because there is no change to the store when these actions complete, but I need them to render even with no change.</p>

<p>I do have some <code>React.Component</code> classes as container components when I need to access the store manually. Whenever I don't need to access the store manually, I use <code>connect</code> from <code>react-redux</code>.  <code>TopNav</code> is a presentational component though, so at the very least it should render since it doesn't rely on the store (at least I think it should).</p>
","617243","","","","","2017-10-10 18:35:17","page is not rendering when I click back button with react-router","<reactjs><react-router><react-redux>","1","0","","",""
"51293124","1","","","2018-07-11 19:41:20","","0","30","<p><strong>TL;DR: How can I tell react build script to leave parts of code untouched?</strong></p>

<p>I made an app with ""create-react-app"". I am using the standard ""npm run build"" command to make my production build. </p>

<p>In the index.html file I included a Google Tag Manager and Google Optimize snippet. </p>

<p>On build, the script minifies those in a way that prevents them from working. </p>

<p>So right now, every time I ""build"", I have to overwrite the minified parts with the original snippets manually. That is - of course - super unhandy. </p>

<p><strong>How can I tell the build script to leave these parts alone?</strong> I browsed the docu without success...</p>

<p>Thanks for any help!</p>

<p><strong>NORMAL (UNMINIFIED) CODE:</strong></p>

<pre><code>  &lt;!-- Google Optimize async hide --&gt;
  &lt;style&gt;.async-hide { opacity: 0 !important} &lt;/style&gt;
  &lt;script&gt;
  (function(a,s,y,n,c,h,i,d,e){
   s.className+=' '+y;
   h.end=i=function(){
     s.className=s.className.replace(RegExp(' ?'+y),'')};
     (a[n]=a[n]||[]).hide=h;setTimeout(function(){
       i();h.end=null
     },c);
  })
  (window,document.documentElement,'async-hide','dataLayer',4000,{'GTM-ABCDEF12':true});
  &lt;/script&gt;


  &lt;!-- Google Tag Manager --&gt;
  &lt;script&gt;
  (function(w,d,s,l,i){
    w[l]=w[l]||[];w[l].push({
      'gtm.start': new Date().getTime(),
      event:'gtm.js'});
    var 
     f=d.getElementsByTagName(s)[0],
     j=d.createElement(s),
     dl=l!='dataLayer'?'&amp;l='+l:'';
     j.async=true;
     j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;
     f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-ABCDEF12');&lt;/script&gt;
  &lt;!-- End Google Tag Manager --&gt;
</code></pre>

<p><strong>MINIFIED CODE:</strong></p>

<pre><code>  &lt;style&gt;.async-hide{opacity:0!important}&lt;/style&gt;
  &lt;script&gt;!function(e,n,a,c,t,d,s,i,l){
     n.className+="" ""+a,d.end=s=function(){
       n.className=n.className.replace(RegExp("" ?""+a),"""")
     },
     (e[c]=e[c]||[]).hide=d,setTimeout(function(){
       s(),d.end=null
     },4e3)
   }(window,document.documentElement,""async-hide"",""dataLayer"",0,{""GTM-ABCDEF12"":!0})
    &lt;/script&gt;
    &lt;script&gt;
    !function(e,t,a,n,g){
      e[n]=e[n]||[],e[n].push({
        ""gtm.start"":(new Date).getTime(),
        event:""gtm.js""
      });
      var m=t.getElementsByTagName(a)[0],
        r=t.createElement(a);
      r.async=!0,
      r.src=""https://www.googletagmanager.com/gtm.js?id=GTM-ABCDEF12"",
      m.parentNode.insertBefore(r,m)
      }(window,document,""script"",""dataLayer"")
    &lt;/script&gt;
</code></pre>
","7740356","","7740356","","2018-07-11 20:30:34","2018-07-11 20:33:43","How to tell react-create-app build script to not minimize parts of file?","<reactjs><build><google-tag-manager><minify><create-react-app>","1","3","","",""
"33622665","1","33633440","","2015-11-10 04:03:18","","0","3852","<p>Been trying to get into react and was looking at react-grid-layout when I came across a bit of a roadblock. I've pasted in the example from <a href=""https://github.com/STRML/react-grid-layout/blob/master/test/examples/6-dynamic-add-remove.jsx"" rel=""nofollow"">here</a> essentially as is, but for some reason, when I drag an element it's not sticking.  The error I'm getting in the console is:</p>

<pre><code>Uncaught TypeError: this.props.onLayoutChange is not a function
</code></pre>

<p>I'm sure it's a simple thing that I'm missing, but this is my first React project and I would appreciate some guidance.</p>

<p>My code is included below:</p>

<pre><code>    'use strict';
    var React = require('react');
    var _ = require('lodash');
    var ResponsiveReactGridLayout = require('react-grid-layout').Responsive;

    /**
     * This layout demonstrates how to use a grid with a dynamic number of     elements.
     */
    var AddRemoveLayout = React.createClass({
    getDefaultProps() {
      return {
        className: ""layout"",
        cols: {lg: 12, md: 10, sm: 6, xs: 4, xxs: 2},
        rowHeight: 100
      };
    },

    getInitialState() {
      return {
        items: [0, 1, 2, 3, 4].map(function(i, key, list) {
          return {i: i, x: i * 2, y: 0, w: 2, h: 2, add: i === list.length -    1};
       }),
      newCounter: 0
      };
    },

    createElement(el) {
      var removeStyle = {
        position: 'absolute',
        right: '2px',
        top: 0,
        cursor: 'pointer'
      };
      var i = el.add ? '+' : el.i;
      return (
        &lt;div key={i} _grid={el}&gt;
          {el.add ?
            &lt;span className=""add text"" onClick={this.onAddItem} title=""You can add an item by clicking here, too.""&gt;Add +&lt;/span&gt;
          : &lt;span className=""text""&gt;{i}&lt;/span&gt;}
        &lt;span className=""remove"" style={removeStyle} onClick={this.onRemoveItem.bind(this, i)}&gt;x&lt;/span&gt;
      &lt;/div&gt;
    );
    },

    onAddItem() {
      console.log('adding', 'n' + this.state.newCounter);
      this.setState({
      // Add a new item. It must have a unique key!
      items: this.state.items.concat({
        i: 'n' + this.state.newCounter,
        x: this.state.items.length * 2 % (this.state.cols || 12),
        y: Infinity, // puts it at the bottom
        w: 2,
        h: 2
      }),
      // Increment the counter to ensure key is always unique.
      newCounter: this.state.newCounter + 1
    });
  },

  // We're using the cols coming back from this to calculate where to add new items.
  onBreakpointChange(breakpoint, cols) {
    this.setState({
      breakpoint: breakpoint,
      cols: cols
    });
  },

  onLayoutChange(layout) {
    this.props.onLayoutChange(layout);
    this.setState({layout: layout});
  },

  onRemoveItem(i) {
    console.log('removing', i);
    this.setState({items: _.reject(this.state.items, {i: i})});
  },

  render() {
    return (
      &lt;div&gt;
        &lt;button onClick={this.onAddItem}&gt;Add Item&lt;/button&gt;
        &lt;ResponsiveReactGridLayout onLayoutChange={this.onLayoutChange} onBreakpointChange={this.onBreakpointChange}
            {...this.props}&gt;
          {_.map(this.state.items, this.createElement)}
        &lt;/ResponsiveReactGridLayout&gt;
      &lt;/div&gt;
    );
  }
});

module.exports = AddRemoveLayout;


React.render(&lt;AddRemoveLayout/&gt;, document.getElementById('app'))
</code></pre>
","1054935","","","","","2017-02-23 08:08:54","react-grid-layout example not working","<reactjs>","3","2","1","",""
"51392344","1","51412061","","2018-07-18 01:37:18","","0","27","<p>While trying to get react-router working on my Node/Express backend, React frontend I encounter this warning whilst trying to build</p>

<p><strong>React.createElement: type is invalid -- expected a string</strong></p>

<p>In search of answers I have discovered this already asked question</p>

<p><a href=""https://stackoverflow.com/questions/42813342/react-createelement-type-is-invalid-expected-a-string"">React.createElement: type is invalid -- expected a string</a></p>

<p>Of which the solutions involving 
* checking all my export default class Components...
* Importing BrowserRouter from react-router-dom vs react-router</p>

<p>Do not correct my problem.  Furthermore when I open DevTools in Chrome I see that the page is blank, React has not populated my root div and on top of all that There is a error in console <code>client-bundle.js:1 Uncaught SyntaxError: Unexpected token &lt;</code></p>

<p>When I click on this error, it leads me to the source for my client-bundle.js which does not contain javascript but the markup of the boilerplate html</p>

<p>I have been reading through examples, tutorials and documentations but have yet to find the source of my errors.  I am hoping that someone here might see something I don't</p>

<p><strong>umleto.js</strong></p>

<pre><code>import express from 'express';
import router from './routing/router';

// Basic config
const PORT = 3000;
const HOST = 'localhost';
const app = express();

// Setup server side router
router(app);

// Setup EJS template engine
app.set('views', `${__dirname}/views`);
app.set('view engine', 'ejs');

// Start server
const server = app.listen(PORT, () =&gt; console.log(`Listening to ${HOST}:${PORT}`));
</code></pre>

<p><strong>routing/router.js</strong></p>

<pre><code>import React from 'react';
import { renderToString } from 'react-dom/server';
import { StaticRouter } from 'react-router';
import Routes from './Routes';
import NotFoundPage from '../frontend/components/NotFoundPage';

// React Router as middleware
const router = (req, res, next) =&gt; {
    const context = { routes: Routes, location: req.url };
    const markup = renderToString( &lt;StaticRouter context={context} /&gt; );
    res.render('index', { markup });
    next();

}
export default (app) =&gt; app.use(router);
</code></pre>

<p><strong>routing/Routes.jsx</strong></p>

<pre><code>import React from 'react';
import { Route, IndexRoute, Switch } from 'react-router';
import Layout from '../frontend/components/Layout';
import NotFoundPage from '../frontend/components/NotFoundPage';
import IndexPage from '../frontend/components/IndexPage';

// Client Side Routing
const Routes = (
    &lt;Route path=""/"" component={Layout}&gt;
        &lt;IndexRoute component={IndexPage}/&gt;
        &lt;Route path=""*"" component={NotFoundPage}/&gt;
    &lt;/Route&gt;
);

export default Routes;
</code></pre>

<p>I have a git hub repository setup incase anyone wants a better look at my problem code.  <a href=""https://github.com/slipsnip/UMLeto"" rel=""nofollow noreferrer"">https://github.com/slipsnip/UMLeto</a></p>
","1547462","","","","","2018-07-18 22:55:34","React.createElement: type is invalid -- Express/Node.js and React-Router","<reactjs><react-router>","1","2","","",""
"49958890","1","49960220","","2018-04-21 18:20:23","","0","88","<p><strong>SOLVED</strong></p>

<p>I use sweet alert library for custom prompts (swal). The thing is, if you want to render a react component they ask you to render it and provide a node, which creates some problems for me.</p>

<p>I have a list of components rendered. Each component has an edit button. When you edit and press ok, sweet alers pops up, and it should have the checkboxes in it, for the user to specify some options.</p>

<p><strong>The problem is:</strong></p>

<p>First time around, I get the default values true false. But suppose this: User marks all checkboxes when swal pops up, presses enters, edits another thing. Pop up open withs all the checkboxes marked, but the actual data is the default one [true, false].
I understand why this happens, but I can't figure out how to fix it.</p>

<p>Can someone explain how you would do that in react? I woudl like this either to open up each time popup with default values or hold actual data based on the state of that component.</p>

<p><strong>Code:</strong></p>

<pre><code>class TimeAddOptions extends React.Component {
  state = {
    moveTime: true,
    deleteTime: false,
  };

  changeMoveTime = (e: React.FormEvent&lt;HTMLInputElement&gt;) =&gt; {
    this.setState({
      moveTime: e.currentTarget.checked,
    });
    swal.setActionValue({
      confirm: { value: [e.currentTarget.checked, this.state.deleteTime] },
    });
  };

  changeDeleteTime = (e: React.FormEvent&lt;HTMLInputElement&gt;) =&gt; {
    this.setState({
      deleteTime: e.currentTarget.checked,
    });
    swal.setActionValue({
      confirm: { value: [this.state.moveTime, e.currentTarget.checked] },
    });
  };

  render(): JSX.Element {
    return (
      &lt;div&gt;
        &lt;label&gt;
          Add this task`s time to the new project
          &lt;input
            type=""checkbox""
            checked={this.state.moveTime}
            value={this.state.moveTime}
            onChange={this.changeMoveTime}
          /&gt;
        &lt;/label&gt;
        &lt;label&gt;
          Subtract this task`s time from this project
          &lt;input
            type=""checkbox""
            checked={this.state.deleteTime}
            value={this.state.deleteTime}
            onChange={this.changeDeleteTime}
          /&gt;
        &lt;/label&gt;
      &lt;/div&gt;
    );
  }
}

const wrapper = document.createElement('div');
ReactDOM.render(&lt;TimeAddOptions /&gt;, wrapper);

export default wrapper.firstChild;


 // and this is how I call swal
swal({
        text: ""You changing project's task. Read the options"",
        content: TimeAddOptionsNode,
        buttons: {
          confirm: {
            value: { value: [true, false] },
          },
        },
      }).then(value =&gt; {
        this.props.handleRename({
          moveTime: value.value[0],
          deleteTime: value.value[1],
        });

      });
</code></pre>
","4208724","","4208724","","2018-04-21 21:08:49","2018-04-22 20:00:09","Sweet Alert with stateful react component?","<javascript><reactjs>","1","7","","",""
"33579051","1","33580254","","2015-11-07 04:13:02","","3","8423","<p>Here are some ajax calls returns <code>&lt;br /&gt;</code> in their data, while I found it was hard to handle.</p>

<p>Here is what I got for now, but not working at all. The string was split correctly, while react gave me several <code>&lt;span&gt;&lt;/span&gt;</code> tags without proper <code>&lt;br /&gt;</code> line breaks.</p>

<pre class=""lang-js prettyprint-override""><code>const breakLine = text =&gt; {
    const regex = /&lt;br\s*[\/]?&gt;/gi

    return text.split(regex).map(
        line =&gt; line.match(regex) ? React.createElement('br') : line
    )
}

const Text = ({ content }) =&gt; &lt;p&gt;
    { breakLine(content) }
&lt;p&gt;

// Usage
&lt;Text content=""Here are some &lt;br /&gt; Lines &lt;br&gt; to break!"" /&gt;
</code></pre>
","4767594","","","","","2017-01-26 18:29:01","Make <br /> from string works in react","<javascript><reactjs>","2","0","1","",""
"33606118","1","","","2015-11-09 09:35:29","","2","1507","<p>I created tabs in react and and now on click I have to change the class of the tabs the tabs classes may be as follows:</p>

<p>1:active<br>
2:previousActive<br>
3:alreadySelected</p>

<p>On click of a tab class become <code>active</code> and check whether it is selected before or not using <code>alreadySelected</code> class and <code>active</code> class from the last active tab is remove and if it is not <code>alreadySelected</code> then add <code>alreadySelected</code>.</p>

<p>Code of one tab in react:</p>

<pre><code>var TabBody = React.createClass({
    getInitialState: function() {
        return {
            class: 'tabBody tab activeTab'
        }
    },
    render: function() {
        a.tabBody = this;
        return (React.createElement('div', {
            className: this.state.class,
            ref: 'body',
            onClick: handleTabClick
        },
        React.createElement('span', {}, ""Body""))
        );
      }
});
</code></pre>

<p>In order to change the class of the tabs I am doing in two ways and want to know which is effective. Code style one:</p>

<pre><code> var bodyClass = (a.tabBody.state.class).split(' ');
 var sleeveClass = (a.tabSleeve.state.class).split(' ');
 var neckClass = (a.tabNeck.state.class).split(' ');
 if (data === 'tabBody') {
     bodyClass.push('activeTab');
     var str1 = program.arrayToString(bodyClass);
     Interfaces.tabBody.setState({
         class: str1
     });
 }
</code></pre>

<p>Code Style 2</p>

<pre class=""lang-js prettyprint-override""><code>a.tabBody.refs.body.classList.remove('activeTab');
a.tabBody.refs.body.classList.add('tabPreviewComplete');
a.tabSleeve.refs.body.classList.add('activeTab');
</code></pre>

<p>Which style is good for doing this and why?</p>
","5458785","","519413","","2015-11-09 09:37:40","2015-12-29 08:56:58","setState vs refs in react.js","<javascript><jquery><web><reactjs>","2","6","2","",""
"40123135","1","40135114","","2016-10-19 05:45:54","","1","463","<p>I have a vue.js component that consists of a search field that queries the Google Places API (removed for simplicity). The response is a list checkboxes with the places. When the user checks a place, I want to set a flag <code>checked</code> to <code>true</code> on the object which was selected.</p>

<p>However, I also want to make this property reactive, but adding reactive properties at runtime does not work (see <a href=""https://vuejs.org/guide/reactivity.html"" rel=""nofollow"">https://vuejs.org/guide/reactivity.html</a>).</p>

<pre class=""lang-html prettyprint-override""><code>&lt;template&gt;
  &lt;form&gt;
    &lt;input type=""text"" ref=""complete"" v-bind:placeholder=""placeholder""&gt;
    &lt;fieldset v-if=""places"" class=""checklist""&gt;
      &lt;h4&gt;Select your store locations:&lt;/h4&gt;
      &lt;div v-for=""place in places""&gt;
        &lt;input :id=""place.id"" type=""checkbox"" v-model=""place.checked""&gt;
        &lt;label :for=""place.id""&gt;
          {{ place.name }}&lt;br&gt;
          &lt;span class=""subtext""&gt;{{ place.formatted_address }}&lt;/span&gt;
        &lt;/label&gt;
      &lt;/div&gt;
    &lt;/fieldset&gt;
  &lt;/form&gt;
&lt;/template&gt;
&lt;script&gt;
  export default {
    data() {
      return {
        places: [],
        api: {
          domain: 'https://maps.googleapis.com/maps/api/js',
          key: 'API Key',
          libraries: 'places',
        },
      };
    },
    mounted() {
      window.onload = this.loadScript(
        `${this.api.domain}?key=${this.api.key}&amp;libraries=${this.api.libraries}`,
        this.bindAutocomplete
      );
    },
    watch: {
    },
    methods: {
      loadScript(src, callback) {
        const script = document.createElement('script');
        document.body.appendChild(script);
        if (callback) {
          script.onload = callback;
        }
        script.src = src;
      },
      bindAutocomplete() {
        this.autocomplete = new google.maps.places.SearchBox(
          this.$refs.complete
        );
        this.autocomplete.addListener('places_changed', this.pipeAddress);
      },
      pipeAddress() {
        this.places = this.autocomplete.getPlaces();
      },
    },
  };
&lt;/script&gt;
</code></pre>



<p>This component works, but I can not programmatically set any checkboxes to ""checked"", e.g. via <code>this.places.forEach((place) =&gt; { place.checked = true; }</code>. What would be a proper way to achieve this?</p>

<p>Thanks,</p>

<p>Henning</p>
","2092860","","","","","2016-10-19 15:01:56","vue.js: Dynamically add a reactive list of checkboxes based on API response","<javascript><vue.js><vue-component>","1","0","","",""
"43690813","1","","","2017-04-29 01:05:48","","1","427","<p>I am attempting to convert an Angular 1.x app to React/Redux.</p>

<p>I have been successful and have been quite happy with React and learning it, Redux, etc.  (This is via create-react-app and using the usual dev flow of npm start, etc).  My 'test' app works great and now I am ready to integrate into Symfony replacing the existing Angular app.</p>

<p>But, I have hit a snag.  The front-end is part of a Symfony PHP framework app and I am unsure of the best way to inject or pass a run-time variable from Symfony into the final included compiled webpack react app.</p>

<p>In Angular, it was easy (<em>{{var1}} and {{var2}} are symfony php variables</em>) :</p>

<pre><code>  [js in Symfony html file]

  &lt;div ng-controller=""MyController as vm"" 
       ng-init=""vm.init('{{var1}}', '{{var2}}')""&gt;
        &lt;rendered-stuff&gt;
        &lt;/rendered-stuff&gt;
  &lt;/div&gt;
</code></pre>

<p>However, being very new to React and Webpack I am unsure how to do the same.  I have tried various combinations of</p>

<pre><code>[js in Symfony html file]

&lt;script type=""text/javascript""&gt;
    var v1='{{var1}}';
    var v2='{{var2}}';
    ReactDOM.render(
          {React.createElement(App, {parm1: v1, parm2: v2}, null),
          document.getElementById('root')
        );
&lt;/script&gt;
</code></pre>

<p>But ReactDOM and React are not defined since I am 'outside' of the included compiled react app and thus not accessible (or are they?).  </p>

<p>I have been successful with creating a hack by passing via the global window variable but I know there has to be a more appropriate method than this:
(<em>again {{var1}} and {{var2}} are symfony php variables</em>)</p>

<pre><code>[js in Symfony html file]

&lt;script type=""text/javascript""&gt;
        var v1 = '{{ var1 }}';
        var v2 = '{{ var2 }}';
        window.passedv1 = v1;
        window.passedv2 = v2;
&lt;/script&gt;
</code></pre>

<p>then accessing inside my React app by:</p>

<pre><code>[js in react app]

var v1 = window.passedv1;
var v2 = window.passedv2;
ReactDOM.render(
   &lt;App parm1={v1} parm2={v2} /&gt;,
   document.getElementById('root')
);
</code></pre>

<p>Can anyone shed some light on the best way to accomplish this?  I know there has to be a better less-hackish way.  </p>

<p>Thanks in advance,</p>

<p>Mark</p>

<p>P.S. I have also passed the parameters by using the data- attributes like this:</p>

<p><strong>symfony html</strong></p>

<pre><code>&lt;div id=""root"" data-parm1=""val"" data-parm2=""val""&gt;&lt;/div&gt;
</code></pre>

<p>and the accessing inside of my app as:</p>

<p><strong>index.js</strong></p>

<pre><code>var el = document.getElementById('root');
var v1 = el.getAttribute(""data-parm1"");
var v2 = el.getAttribute(""data-parm2"");

ReactDOM.render(
   &lt;App parm1={v1} parm2={v2} /&gt;,
   document.getElementById('root')
);
</code></pre>

<p>This works great but I have read in several places that using data- attributes in React is not recommended and frowned upon.</p>

<p>But, there is SO much misinformation and conflicting information about React that sometimes it is hard to know what to heed and what to ignore.</p>
","978684","","978684","","2017-04-30 20:23:50","2017-04-30 20:23:50","How do I pass a run-time variable into a react/webpack module","<symfony><reactjs><variables><webpack><global-variables>","1","1","","",""
"40144859","1","40145057","","2016-10-20 03:19:52","","0","482","<p>I have the following test file for react:</p>

<pre><code>  1 import React from 'react';
  2 import ReactDOM from 'react-dom';
  3 import { shallow, mount } from 'enzyme';
  4 import { LinkContainer } from 'react-router-bootstrap';
  5 import { App } from './App';
  6
  7 it('renders without crashing', () =&gt; {
  8   const div = document.createElement('div');
  9   ReactDOM.render(&lt;App /&gt;, div);
 10 });
 11
 12 it('renders 4 &lt;LinkContainer /&gt;', () =&gt; {
 13   const appWrapper = mount(&lt;App /&gt;);
 14   expect(appWrapper.find(LinkContainer)).to.have.length(4)
 15 });
</code></pre>

<p>Here is a portion of my <code>App.js</code> file:</p>

<pre><code>import React, { Component } from 'react';
import { Image, Grid, Media, Navbar, NavItem, Nav, Jumbotron } from 'react-bootstrap';
import { Link } from 'react-router';
import { LinkContainer } from 'react-router-bootstrap';

class App extends Component {


render() {
    return (
      &lt;div&gt;
        &lt;Navbar fixedTop inverse&gt;
          &lt;Grid&gt;
            &lt;Navbar.Header&gt;
              &lt;Navbar.Brand&gt;
                &lt;Link to=""/""&gt;Daniel Rubio&lt;/Link&gt;
              &lt;/Navbar.Brand&gt;
            &lt;/Navbar.Header&gt;
            &lt;Nav pullRight&gt;
              &lt;LinkContainer to=""/about""&gt;
                &lt;NavItem&gt;About&lt;/NavItem&gt;
              &lt;/LinkContainer&gt;
              &lt;LinkContainer to=""/education""&gt;
                &lt;NavItem&gt;Education&lt;/NavItem&gt;
              &lt;/LinkContainer&gt;
              &lt;LinkContainer to=""/experience""&gt;
                &lt;NavItem&gt;Experience&lt;/NavItem&gt;
              &lt;/LinkContainer&gt;
              &lt;LinkContainer to=""/skills""&gt;
                &lt;NavItem&gt;Skills&lt;/NavItem&gt;
              &lt;/LinkContainer&gt;
            &lt;/Nav&gt;
          &lt;/Grid&gt;
        &lt;/Navbar&gt;
        &lt;div className=""contents""&gt;
          { this.props.children }
        &lt;/div&gt;
        &lt;Navbar fixedBottom inverse&gt;
          &lt;Navbar.Header&gt;
            &lt;Navbar.Brand&gt;
              &lt;p&gt;Made with React and with EMCAScript6&lt;/p&gt;
            &lt;/Navbar.Brand&gt;
          &lt;/Navbar.Header&gt;
        &lt;/Navbar&gt;
      &lt;/div&gt;
    );
  }
}
</code></pre>

<p>When I run this test, the second test fails with this error:</p>

<pre><code> FAIL  src/App.test.js


 ✓ renders without crashing (24ms)
  ✕ renders 4 &lt;LinkContainer /&gt; (21ms)

  ● renders 4 &lt;LinkContainer /&gt;

    TypeError: Cannot read property 'have' of undefined

      at Object.&lt;anonymous&gt; (src/App.test.js:14:93)
      at process._tickCallback (internal/process/next_tick.js:103:7)

Test Summary
 › Ran all tests related to changed files.
 › 1 test failed, 1 test passed (2 total in 1 test suite, run time 0.476s)
</code></pre>

<p>I am following along the <code>Jest</code> tutorial and <code>Enzyme</code> tutorial found here<a href=""http://airbnb.io/enzyme/"" rel=""nofollow"">Enzyme</a> . What I'm basically doing is pretyt much just copying how enzyme covers testing. However, it looks like react cannot find my <code>&lt;LinkContainer /&gt;</code> component. I've required it from the appropriate package so it should be present right? Help would be appreciated. </p>
","2325598","","","","","2016-10-20 03:40:13","Why does this react component from rendering test fail?","<javascript><reactjs><react-router>","1","0","","",""
"50080848","1","50080926","","2018-04-28 20:38:30","","0","18","<p>I have a reactjs class called MyDictionary that renders data that a python file sends in. This class returns a dictionary structure. I want to access only a couple of elements from MyDictionary via a separate class, and a different set of elements also from MyDictionary, via a separate class. I tried <code>React.createElement(SomeOtherClass, {</code> as shown below, but this doesn't work... what am I missing? </p>

<pre><code>class MyDictionary extends React.Component {
render() {
  return this.props.results.map((result, index) =&gt;
    React.createElement(
      ""div"",
      { className: ""col-sm-12"" },
      React.createElement(SomeOtherClass, {
        key: result.id,
        name: result.name,
        index: result.index,
        activity: this.props.index + 1,
        images: this.props.image_labels
      })
    )
  );
 }
}
return MyDictionary;
</code></pre>
","7647476","","","","","2018-04-28 21:25:15","Access reactjs data through multiple classes","<python><reactjs>","1","0","","",""
"32470637","1","","","2015-09-09 03:54:11","","1","799","<p>I want to embed a script tag provided by a third party ad service into my react app. It is like a Github gist. It should run the script and write a <code>&lt;iframe&gt;</code> inside the HTML to show the ads.</p>

<p>The official scripts are something like this:</p>

<pre><code>&lt;script type=""text/javascript""&gt;
var cpro_id = ""uXXXXXXXX"";
&lt;/script&gt;
&lt;script src=""http://cpro.baidustatic.com/cpro/ui/c.js""&gt;&lt;/script&gt;
</code></pre>

<p>I tried to put the first script tag in the template HTML, and put the second in the component I need it to be, like this:</p>

<pre><code>...
componentDidMount () {
  let g = document.createElement ('script');
  g.setAttribute ('src','http://cpro.baidustatic.com/cpro/ui/c.js');
  React.findDOMNode (this.refs.ad).appendChild (g);
},
render() {
  return &lt;div ref='ad'&gt;&lt;/div&gt;;
}
...
</code></pre>

<p>Unfortunately, it failed and throw this error: <code>It isn't possible to write into a document from an asynchronously-loaded external script unless it is explicitly opened.</code></p>

<p>I tried <a href=""https://github.com/yariv/ReactScriptLoader"" rel=""nofollow"">ReactScriptLoader</a> and it gave me the same error.</p>

<p>I tried <code>dangerouslysetinnerhtml={{__html: '&lt;script src=""http://cpro.baidustatic.com/cpro/ui/c.js""&gt;&lt;/script&gt;'}}</code>, but failed.</p>

<p>I tried to study the code of <code>c.js</code> file and change all <code>document.write</code> to <code>innerHTML=...</code>, but failed.</p>

<p>Can anyone help? Thanks!</p>
","3433962","","","","","2015-09-09 03:54:11","How to embed content generating <script> in reactjs component","<javascript><reactjs>","0","3","","",""
"49074061","1","","","2018-03-02 17:11:21","","0","357","<p>I had previously written a testing script which very much similar to the below given script. It was running fine with following version of libraries </p>

<pre><code>""chai"": ""^3.5.0"",
""chai-jquery"": ""^2.0.0"",
""jquery"": ""^2.2.1"",
""jsdom"": ""^8.1.0"",
""mocha"": ""^2.4.5"",
""react-addons-test-utils"": ""^0.14.7""
</code></pre>

<p>I modified the way to create DOM using <code>jsdom</code> so that, the script runs with following version of libaries.</p>

<pre><code>""chai"": ""^4.1.2"",
""chai-jquery"": ""^2.0.0"",
""jquery"": ""^3.3.1"",
""jsdom"": ""^11.6.2"",
""mocha"": ""^5.0.1"",
""react-addons-test-utils"": ""^15.6.2""
</code></pre>

<p>However I am getting an error as given below:</p>

<pre><code> App
    1) ""before each"" hook for ""renders something""


  0 passing (31ms)
  1 failing

  1) App
       ""before each"" hook for ""renders something"":
     TypeError: document.createElement is not a function
      at Object.renderIntoDocument (node_modules/react-dom/cjs/react-dom-test-utils.development.js:741:24)
      at renderComponent (test/test_helper.js:21:40)
      at Context.&lt;anonymous&gt; (test/components/app_test.js:8:17)
</code></pre>

<p>Here is my app testing file</p>

<pre><code>import { renderComponent , expect } from '../test_helper';
import App from '../../src/components/App';

describe('App' , () =&gt; {
  let component;

  beforeEach(() =&gt; {
    component = renderComponent(App);
  });

  it('renders something', () =&gt; {
    expect(component).to.exist;
  });
});
</code></pre>

<p>Here is my testing helper file</p>

<pre><code>import _$ from 'jquery';
import React from 'react';
import ReactDOM from 'react-dom';
import TestUtils from 'react-dom/test-utils';
import {JSDOM} from 'jsdom';
import chai, { expect } from 'chai';
import chaiJquery from 'chai-jquery';
import { Provider } from 'react-redux';
import { createStore } from 'redux';
import reducers from '../src/reducers';

global.document = new JSDOM('&lt;!doctype html&gt;&lt;html&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;');
global.window = global.document.window;
console.log(global.document);
global.navigator = global.window.navigator;
const $ = _$(window);

chaiJquery(chai, chai.util, $);

function renderComponent(ComponentClass, props = {}, state = {}) {
  const componentInstance =  TestUtils.renderIntoDocument(
    &lt;div&gt;&lt;/div&gt;
  );

  return $(ReactDOM.findDOMNode(componentInstance));
}

$.fn.simulate = function(eventName, value) {
  if (value) {
    this.val(value);
  }
  TestUtils.Simulate[eventName](this[0]);
};

export {renderComponent, expect};
</code></pre>

<p>I had already searched for solution but unable to find any breakthrough. Can anybody of you can tell me why <code>TestUtils.renderIntoDocument</code> is not able to create a simple div.</p>

<p><strong>Note:</strong> I have purposely placed a <code>div</code> inside <code>TestUtils.renderIntoDocument</code> call so that the test always pass for debuging purpose.</p>
","3212574","","","","","2018-07-04 15:25:10","TypeError: document.createElement is not a function- React, Mocha, JSDOM testing","<reactjs><testing><mocha><tdd><jsdom>","1","3","","",""
"42216438","1","42218993","","2017-02-14 01:38:24","","0","149","<p>I am trying to use <a href=""https://github.com/projectstorm/react-diagrams"" rel=""nofollow noreferrer"">StormReact</a> library in angularJs app.</p>

<p>In below code i have created class inside the library which is bundled using webpack as single bundle.js </p>

<pre><code>window.HelloStormReact =  React.createClass({

render: function() {

var Engine = require(""../src/Engine"")();

var model = {links:[],nodes: []};

function generateSet(model,offsetX,offsetY){

                    var node1 = Engine.UID();
    var node2 = Engine.UID();
    var node3 = Engine.UID();
    var node4 = Engine.UID();
    var node5 = Engine.UID();


    model.links = model.links.concat([
        {
            id: Engine.UID(),
            source: node1,
            sourcePort: 'out',
            target: node2,
            targetPort: 'in',
        },
        {
            id: Engine.UID(),
            source: node1,
            sourcePort: 'out',
            target: node3,
            targetPort: 'in'
        },
        {
            id: Engine.UID(),
            source: node2,
            sourcePort: 'out',
            target: node4,
            targetPort: 'in'
        },
        {
            id: Engine.UID(),
            source: node4,
            sourcePort: 'out',
            target: node5,
            targetPort: 'in2'
        },
        {
            id: Engine.UID(),
            source: node2,
            sourcePort: 'out',
            target: node5,
            targetPort: 'in'
        }
    ]);

    model.nodes = model.nodes.concat([
    {
            id:node1,
            type: 'action',
            data: {
                name: ""Create User"",
                outVariables: ['out']
            },
            x:50 + offsetX,
            y:50 + offsetY
        },
        {
            id:node2,
            type: 'action',
            data: {
                name: ""Add Card to User"",
                inVariables: ['in','in 2'],
                outVariables: ['out']
            },
            x:250 +offsetX,
            y:50 + offsetY
        },
        {
            id:node3,
            type: 'action',
            data: {
                color: 'rgb(0,192,255)',
                name: ""Remove User"",
                inVariables: ['in']
            },
            x:250 + offsetX,
            y:150 + offsetY
        },
        {
            id:node4,
            type: 'action',
            data: {
                color: 'rgb(0,192,255)',
                name: ""Remove User"",
                inVariables: ['in'],
                outVariables: ['out']
            },
            x:500 + offsetX,
            y:150 + offsetY
        },
        {
            id:node5,
            type: 'action',
            data: {
                color: 'rgb(192,255,0)',
                name: ""Complex Action 2"",
                inVariables: ['in','in2','in3']
            },
            x:800 + offsetX,
            y:100 + offsetY
        },
    ]);
                }

generateSet(model,0,0);

Engine.registerNodeFactory({
    type:'action',
    generateModel: function(model){
        return React.createElement(BasicNodeWidget,{
            removeAction: function(){
                Engine.removeNode(model);
            },
            color: model.data.color,
            node: model,
            name: model.data.name,
            inPorts: model.data.inVariables,
            outPorts: model.data.outVariables
        });
    }
});

Engine.loadModel(model);

return ReactDOM.render(React.createElement(Canvas,{engine: Engine}), document.getElementById(""howdy""));;
}
});
</code></pre>

<p>In index.html, I used that class created in Storm react library module.</p>

<pre><code> &lt;div class=""content""&gt;
   &lt;react-component name=""HelloStormReact"" /&gt;
   &lt;div class=""storm-flow-canvas"" id=""howdy""&gt;
   &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>I am getting the error </p>

<pre><code>    Constructor.render(): A valid React element (or null) must be returned. 
   You may have returned undefined, an array or some other invalid object.
</code></pre>

<p>Help me to write correct render object to return.</p>
","377996","","377996","","2017-02-14 01:57:05","2017-02-14 06:06:06","How to use react render with AngularJs and ngReact","<angularjs><reactjs><ngreact>","1","0","","",""
"33627097","1","33633093","","2015-11-10 09:49:12","","0","452","<p>Getting the object from the dataBase and after that i am converting it to array to change the state of the rect component and now i want to update the data to my view that i have created in react.</p>

<p>the method i am following is as under:
</p>

<pre><code>var PreviewContainer = React.createClass({
  getInitialState: function() {
    return {
      sourceImg: {
        src0: 'xyz',
        src1: 'xyz',
        src2: 'xyz',
        src3: 'xyz'
      },
      id: '',
      alter: ""myalt""
    };
  },
  render: function() {
    Interfaces.previewContainer = this;
    var imgContainer = [];

    for (var i = 0; i &lt; 4; i++) {
      imgContainer.push(React.createElement(PreviewImgContainer, {
        key: i,
        sourceImg: this.state.sourceImg['src' + i],
        alter: this.state.alter
      }));
    }
    return (
      React.createElement('div', {
          className: 'previewContainer'
        },
        imgContainer,
        React.createElement(ColorCardParent))
    );
  }
});
</code></pre>



<p>and after that i have to set these imagaes in the container as follows way using static methods</p>

<pre class=""lang-js prettyprint-override""><code>Interfaces.previewContainer.setState({sourceImg: {
    src0: templatearray[0].image_path.slice(1),
    src1: templatearray[1].image_path.slice(1),
    src2: templatearray[2].image_path.slice(1),
    src3: templatearray[3].image_path.slice(1)
  }
});
</code></pre>



<p>Is there a way to do this so that i can just do this dynamically.</p>
","5458785","","","","","2015-11-10 15:05:47","Can we add state name dynamically in react","<javascript><reactjs>","1","2","","",""
"50090025","1","","","2018-04-29 18:41:16","","0","50","<p>According to below site, I thought I can use preact and react both in one compilation. But when I'm trying to use these libraries together in one compliation there is a conflict. I think preact and react still has global JSX namespace, so cannot be mixed for now. If my configuration is wrong please let me know.</p>

<p><a href=""https://blogs.msdn.microsoft.com/typescript/2018/03/27/announcing-typescript-2-8/#jsx-namespace-resolution"" rel=""nofollow noreferrer"">https://blogs.msdn.microsoft.com/typescript/2018/03/27/announcing-typescript-2-8/#jsx-namespace-resolution</a></p>

<p>JSX is resolved via the JSX Factory
Currently, when TypeScript uses JSX, it looks up a global JSX namespace to look up certain types (e.g. “what’s the type of a JSX component?”). In TypeScript 2.8, the compiler will try to look up the JSX namespace based on the location of your JSX factory. For example, if your JSX factory is React.createElement, TypeScript will try to first resolve React.JSX, and then resolve JSX from within the current scope.</p>

<p>This can be helpful when mixing and matching different libraries (e.g. React and Preact) or different versions of a specific library (e.g. React 14 and React 16), as placing the JSX namespace in the global scope can cause issues.</p>

<h1>Here is my test project</h1>

<ul>
<li>OS: windows 10 64</li>
<li>node: 6.9.5</li>
<li>npm: 3.10.10</li>
<li>tsc: 2.8.3</li>
<li>webpack: 4.6.0</li>
<li>webpack-cli: 2.0.15</li>
</ul>

<h1>directory structure</h1>

<ul>
<li>dist</li>
<li>src

<ul>
<li>components</li>
<li>PreactUser.tsx</li>
<li>ReactUser.tsx</li>
<li>index.tsx</li>
</ul></li>
<li>index.html</li>
<li>package.json</li>
<li>tsconfig.json</li>
<li>webpack.config.json</li>
</ul>

<h1>src/components/PreactUser.tsx (first line: /** @jsx h */)</h1>

<pre><code>import {h, Component} from 'preact';

export interface HelloWorldProps {
    name: string
}

export default class PreactUserComp extends Component&lt;HelloWorldProps, any&gt; 
{
    render (props: HelloWorldProps) {
        return &lt;h1&gt;Hello {props.name}!&lt;/h1&gt;
    }
}
</code></pre>

<p>Originally the first line is /** @jsx h */. But this editor cannot recognize it as a correct code.</p>

<h1>src/components/ReactUser.tsx (first line: /** @jsx React.createElement */)</h1>

<pre><code>import * as React from ""react"";

export interface HelloProps { firstName: string; lastName: string; }

interface Person {
    firstName: string;
    lastName: string;
}
class User implements Person {
    firstName: string;
    lastName: string;
    constructor(firstName: string, lastName: string) {
        this.firstName = firstName;
        this.lastName = lastName;
    }
}
function formatName(user:User): string {
    return user.firstName + ' ' + user.lastName;
}

export class ReactUserComp extends React.Component&lt;HelloProps, {}&gt; {
    render() {
        return &lt;h1&gt;Hello {this.props.firstName} {this.props.lastName}!&lt;/h1&gt;;
    }
}
</code></pre>

<h1>src/index.tsx (first line: /** @jsx h */)</h1>

<pre><code>import { h, render } from 'preact';
import PreactUserComp from './components/PreactUser';

render(&lt;PreactUserComp name=""Preact"" /&gt;, document.querySelector('#app'));
</code></pre>

<h1>package.json</h1>

<pre><code>{
    ""name"": ""typescript-preact-react"",
    ""version"": ""1.0.0"",
    ""description"": """",
    ""main"": ""index.js"",
    ""scripts"": {
        ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1""
    },
    ""author"": """",
    ""license"": ""ISC"",
    ""dependencies"": {
        ""@types/react"": ""^16.3.13"",
        ""@types/react-dom"": ""^16.0.5"",
        ""react"": ""^16.3.2"",
        ""react-dom"": ""^16.3.2"",
        ""preact"": ""^8.2.7"",
        ""ts-loader"": ""^4.2.0"",
        ""typescript"": ""^2.8.3"",
        ""webpack"": ""^4.6.0""
    },
    ""devDependencies"": {
        ""typescript"": ""^2.8.3"",
        ""webpack"": ""^4.6.0"",
        ""webpack-cli"": ""^2.0.15""
    }
}
</code></pre>

<h1>tsconfig.json</h1>

<pre><code>{
    ""compilerOptions"": {
        ""sourceMap"": true,
        ""module"": ""commonjs"",
        ""jsx"": ""react"",
        ""target"": ""es5""
    },
    ""include"": [
        ""src/*.ts"",
        ""src/*.tsx""
    ]
}
</code></pre>

<h1>webpack.config.js</h1>

<pre><code>var path = require('path');

module.exports = {
    devtool: 'source-map',
    entry: './src/index.tsx',
    output: {
        path: path.resolve(__dirname, 'dist'),
        filename: 'app.js'
    },
    resolve: {
        extensions: ['.ts', '.tsx']
    },
    module: {
        rules: [
        {
            test: /\.tsx?$/,
            exclude: /node_modules/,
            loaders: ['ts-loader']
        }
        ]
    }
}
</code></pre>

<h1>index.html</h1>

<p>&lt;div id=""app""&gt;&lt;/div&gt;
&lt;script src=""dist/app.js""&gt;&lt;/script&gt;</p>

<p>Originally index.html has few more codes, however this editor cannot recognize it as a correct code, so I summarize the code.</p>
","5435177","","5435177","","2018-04-29 18:58:05","2018-04-29 18:58:05","TypeScript 2.8: preact and react in one compilation","<reactjs><preact><typescript2.8>","0","0","","",""
"41366380","1","","","2016-12-28 16:51:53","","5","1219","<p>I tried to create testing file for my existed project which was build by</p>

<p><a href=""https://github.com/facebookincubator/create-react-app"" rel=""noreferrer"">https://github.com/facebookincubator/create-react-app</a></p>

<p>But i got this error when i ran <code>npm test a</code></p>

<pre><code>FAIL  src/__tests__/movie_single/MovieSingle-test.js
  ● Test suite failed to run

    matchMedia not present, legacy browsers require a polyfill

      at Object.MediaQueryDispatch (node_modules/enquire.js/dist/enquire.js:226:19)
      at node_modules/enquire.js/dist/enquire.js:291:9
      at Object.&lt;anonymous&gt;.i (node_modules/enquire.js/dist/enquire.js:11:20)
      at Object.&lt;anonymous&gt; (node_modules/enquire.js/dist/enquire.js:21:2)
      at Object.&lt;anonymous&gt; (node_modules/react-responsive-mixin/index.js:2:28)
      at Object.&lt;anonymous&gt; (node_modules/react-slick/lib/slider.js:19:29)
      at Object.&lt;anonymous&gt; (node_modules/react-slick/lib/index.js:3:18)
      at Object.&lt;anonymous&gt; (src/components/movie_single/MovieDetailsBox.js:4:45)
      at Object.&lt;anonymous&gt; (src/components/movie_single/MovieSingle.js:3:50)
      at Object.&lt;anonymous&gt; (src/__tests__/movie_single/MovieSingle-test.js:3:46)
      at process._tickCallback (internal/process/next_tick.js:103:7)

Test Suites: 1 failed, 1 total
Tests:       0 total
Snapshots:   0 total
Time:        2.642s
Ran all test suites matching ""a"".
</code></pre>

<p>So this is my <code>package.json</code></p>

<pre><code>{
  ""name"": ""xxx"",
  ""version"": ""0.1.0"",
  ""private"": true,
  ""devDependencies"": {
    ""autoprefixer-stylus"": ""0.10.0"",
    ""concurrently"": ""3.0.0"",
    ""react-scripts"": ""0.6.1"",
    ""stylus"": ""0.54.5""
  },
  ""scripts"": {
    ""start"": ""react-scripts start"",
    ""watch"": ""concurrently --names 'webpack, stylus' --prefix name 'npm run start' 'npm run styles:watch'"",
    ""build"": ""react-scripts build"",
    ""test"": ""react-scripts test --env=jsdom"",
    ""eject"": ""react-scripts eject"",
  }
}
</code></pre>

<p>And this is my <code>MovieSingle-test.js</code></p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import MoviesSingle from '../../components/movie_single/MovieSingle';

it('renders without crashing', () =&gt; {
    const div = document.createElement('div');
    ReactDOM.render(&lt;MoviesSingle /&gt;, div);
});
</code></pre>

<p>So how can i fix this and at least make the common react component test passed?</p>

<p>Thanks!</p>
","3403614","","","","","2018-06-29 10:20:27","matchMedia not present when testing create-react-app component which contain react-slick?","<reactjs><jestjs><create-react-app>","3","0","","",""
"34985663","1","","","2016-01-25 05:25:06","","2","158","<p>I want to port my app to react-router 2.0 from 1.0. I am trying to do server side rendering on express. </p>

<h2>server.js code (1.0) (working)</h2>

<pre><code>var routes = require('./public/js/app.node.js');

app.get('*', function(req, res, next) {

  var location = new Location(req.path, req.query);

  try {
    Router.run(routes(), location, function(e, i, t) {
      var str = React.renderToString(
                  React.createElement(Router, i));
    });
  } catch(e) {
    return next();
  }
});
</code></pre>

<h2>server.js code (2.0) (Not working)</h2>

<pre><code>var routes = require('./public/js/app.node.js');

app.get('*', function(req, res, next) {

  var location = new Location(req.path, req.query);

  try {
  match({routes, location: req.url} , function (error, redirectLocation, renderProps) {
      if (error) {
        res.status(500).send(error.message);
      } else if (redirectLocation) {
        res.redirect(302, redirectLocation.pathname + redirectLocation.search);
      } else if (renderProps) {
        var str = renderToString(React.createElement(RoutingContext, renderProps));
        res.status(200).send(str);
      } else {
        res.status(404).send('Not found');
      }
  });
}
</code></pre>

<h2>routes.jsx:</h2>

<pre><code>  export default (withHistory, onUpdate) =&gt; {

  return (
    &lt;Provider store={store}&gt;
      &lt;Router history={history} onUpdate={onUpdate}&gt;
        &lt;Route path='/' component={BarcodeListing} /&gt;
      &lt;/Router&gt;
    &lt;/Provider&gt;
  );
};
</code></pre>

<p>The above code does not match <code>/</code>. Why is that. 
<code>console.log(req.url)</code> gives me <code>/</code>, then <code>/</code> in routes should match <code>/</code> in req.url right !!</p>
","3210476","","3210476","","2016-01-25 05:49:14","2016-01-25 05:49:14","How to setup server side rendering with react-router 2","<javascript><node.js><express><reactjs><react-router>","0","1","","",""
"41224769","1","","","2016-12-19 14:28:54","","0","118","<p>Could someone please help in figuring out why nothing is loading into my HTML page using React? The error that appears is a SyntaxError at line 15 (an unexpected token).</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=""utf-8""&gt;
  &lt;title&gt;Venos&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;div id=""app""&gt;
  &lt;div id=""react-app""&gt;

  &lt;/div&gt;
  &lt;/div&gt;
  &lt;script type=""text/javascript""&gt;
    var venosHeader = {
      React.createElement('div', {class: 'randomBody'},
        React.createElement('h2', {}, 'I love Cole...')
      )
    };
    ReactDOM.render(venosHeader, document.getElementById('react-app'));
  &lt;/script&gt;
  &lt;script src=""https://cdn.jsdelivr.net/react/0.14.0-rc1/react.js""&gt;&lt;/script&gt;
  &lt;script src=""https://cdn.jsdelivr.net/react/0.14.0-rc1/react-dom.js""&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>I'm still very new to React and I can't find a solution.</p>
","4781210","","","","","2016-12-19 14:37:01","React.createElement doesn't work","<reactjs>","1","2","","",""
"41838728","1","41839733","","2017-01-24 20:49:01","","7","3756","<p>I am new in react. I want to start a small hello world example of my own.</p>

<p>Most tutorials offer something like this:</p>

<p>app.js</p>

<pre><code>var React = require('react');
var ReactDOM = require('react-dom');
var reactElement = React.createElement('h1', { className: 'header' },
'This is React');
ReactDOM.render(reactElement, document.getElementById('react-
application'));
</code></pre>

<p>index.html</p>

<pre><code>&lt;!doctype html&gt;
&lt;html lang=""en""&gt;
&lt;head&gt;
    &lt;meta charset=""utf-8"" /&gt;
    &lt;meta http-equiv=""x-ua-compatible"" content=""ie=edge, chrome=1"" /&gt;
    &lt;title&gt;Snapterest&lt;/title&gt;
    &lt;link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/
    bootstrap/3.3.5/css/bootstrap.min.css""&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div id=""react-application""&gt;
        I am about to learn the essentials of React.js.
    &lt;/div&gt;
    &lt;script src=""./app.js""&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>The problem is that <em>that</em> example requires nodeJS (for the requeir() part) and npm install and npm start.. all of that.</p>

<p>I can do it diffrently without nodeJS like this</p>

<p>app.js</p>

<pre><code>var reactElement = React.createElement('h1', { className: 'header' },
'This is React');
ReactDOM.render(reactElement, document.getElementById('react-application'));
</code></pre>

<p>index.html</p>

<pre><code>&lt;!doctype html&gt;
&lt;html lang=""en""&gt;
&lt;head&gt;
    &lt;meta charset=""utf-8"" /&gt;
    &lt;meta http-equiv=""x-ua-compatible"" content=""ie=edge, chrome=1"" /&gt;
    &lt;title&gt;Snapterest&lt;/title&gt;

     &lt;script src="" /react-0.14.8.min.js""&gt;&lt;/script&gt;
 &lt;script src="" /react-dom-0.14.8.min.js""&gt;&lt;/script&gt;


&lt;/head&gt;
&lt;body&gt;
    &lt;div id=""react-application""&gt;
     dsf
    &lt;/div&gt;
    &lt;script src=""./app.js""&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>in this example I am using cdn in order to import the dependencies of react that nodejs should import in the npm install phase. question is - which is better? could I use just cdn and not use nodejs entriely? is it more correct to have nodejs and npm modules (or bower..) to have the react stuff?</p>

<p>Thanks</p>
","1007665","","1007665","","2017-01-24 20:54:19","2017-01-24 22:00:20","does react really need nodeJS on the frontend ENV?","<javascript><node.js><reactjs>","1","0","3","",""
"33741832","1","33746523","","2015-11-16 18:06:48","","15","20053","<p>I am following a tutorial and cannot get the following code to run. 
When I run the following code I get the error <code>Can't add property attachToForm, object is not extensible</code>. Are you no longer to allowed to change child props in this way (ie. with child.props.key = value)? If not can you see a better way of adding a function to nested children only if the element is an input?</p>

<pre><code>React.Children.forEach(children, function (child) {
    if (child.props.name) {

    child.props.attachToForm = this.attachToForm;
        child.props.detachFromForm = this.detachFromForm;
    }
    if (child.props.children) {
        this.registerInputs(child.props.children);
    }
}.bind(this));
</code></pre>

<p>I am using es6 if that changes anything but the tutorial can be found here: <a href=""http://christianalfoni.github.io/javascript/2014/10/22/nailing-that-validation-with-reactjs.html"" rel=""noreferrer"">http://christianalfoni.github.io/javascript/2014/10/22/nailing-that-validation-with-reactjs.html</a></p>

<p>FormComponent:</p>

<pre><code>'use strict';

import React from 'react';
import BaseComponent from '@client/base-component';

export default class Form extends BaseComponent {

    constructor(props) {
        super(props);
        this.state = {};
    }

    render() {
        var classString = this.props.className ? this.props.className : '';
        var classArray = ['_common-form', this.props.type ? 'form--' + this.props.type :  'form--basic' ];

        for(var i = 0; i &lt; classArray.length; i++){
            if(classArray[i]){
                classString = classString + ' ' +classArray[i];
            }
        }

        var props = {
            type: this.props.type,
            className: classString,
            style: this.props.style,
            onSubmit: this.props.onSubmit
        };

        return React.createElement(
            'form', 
            props, 
            this.newChildren
        );
    }

    componentWillMount() {
        this.inputs = {}; 
        this.model = {}; 
        this.newChildren = [];
        this.registerInputs(this.props.children);
    }

    registerInputs(children) {
        React.Children.forEach(children, function (child) {
            if (child.props.name) {
                child.props.attachToForm = this.attachToForm;
                child.props.detachFromForm = this.detachFromForm;
            }
            if (child.props.children) {
                this.registerInputs(child.props.children);
            }
        }.bind(this));
    }


    attachToForm(component) {
        this.inputs[component.props.name] = component;
        this.model[component.props.name] = component.state.value;
    }

    detachFromForm(component) {
        delete this.inputs[component.props.name];
        delete this.model[component.props.name];
    }

}
</code></pre>

<p>ModalComponent:</p>

<pre><code>'use strict';

import React from 'react';
import Modal from '@client/common/modal';
import Button from '@client/common/buttons';
import AddParticipant from './add_participant'; 
import Form from '@client/common/form_elements';
import Input from '@client/common/form_elements/input.js';
import SlideToggle from '@client/common/form_elements/slide_toggle.js';
import FormField from '@client/common/form_elements/form_field.js';
import FormSection from '@client/common/form_elements/section.js';
import BaseComponent from '@client/base-component'; 

export default class EditTeam extends BaseComponent {

    constructor(props) {
        super(props);
        this.state = { 
            values: {
                name: props.team.name,
                mission: props.team.mission,
                globalSearch: props.team.globalSearch,
                public: props.team.public,
                witcryptSecured: props.team.witcryptSecured
            },
            addParticipantModal: false
        };
    }

    render() {
        var participantsList = [];

        this.props.team.participants.forEach(function(participant) {
            participantsList.push(
                &lt;div className=""participant"" key={participant.key}&gt;
                    &lt;span className=""participant-avatar"" style={{backgroundImage:`url(""${participant.avatar}"")`}}&gt;&lt;/span&gt;
                    &lt;span&gt;{participant.name}&lt;/span&gt;
                    &lt;span className={`${participant.roll}-action roll`}&gt;{participant.roll}&lt;a&gt;&lt;/a&gt;&lt;/span&gt;
                &lt;/div&gt;
            );
        }.bind(this));

        return ( 
            &lt;Modal className=""_common-edit-team-settings"" title={`Edit ${this.props.team.name}`} isOpen={this.props.modalIsOpen &amp;&amp; this.props.editTeamModal} onCancel={this.props.toggleEditTeamModal} backdropClosesModal&gt;

                &lt;Form onSubmit={this.saveChanges}&gt;      
                    &lt;FormSection className=""edit-team-details"" sectionHeader=""Team Details""&gt;
                        &lt;FormField label=""Name""&gt;
                            &lt;Input name=""name"" value={this.state.values.name} onChange={this.handleInputChange} type=""text"" placeholder={this.props.team.name}/&gt;
                        &lt;/FormField&gt;
                        &lt;FormField label=""Mission""&gt;
                            &lt;Input name=""mission"" value={this.state.values.mission} onChange={this.handleInputChange} type=""text"" placeholder={this.props.team.kitMission || 'Kit Mission'} multiline /&gt;
                        &lt;/FormField&gt;
                    &lt;/FormSection&gt;

                    &lt;FormSection className=""privacy-settings"" sectionHeader=""Privacy Settings""&gt;
                        &lt;FormField label=""Included in global search results"" &gt;
                            &lt;SlideToggle name=""globalSearch"" defaultChecked={this.state.values.globalSearch} onChange={this.handleCheckedChange} type=""checkbox"" /&gt;
                        &lt;/FormField&gt;
                        &lt;FormField label=""Accessible by anyone"" &gt;
                            &lt;SlideToggle name=""public"" defaultChecked={this.state.values.public} onChange={this.handleCheckedChange} type=""checkbox"" /&gt;
                        &lt;/FormField&gt;
                        &lt;FormField label=""Secured with WitCrypt"" &gt;
                            &lt;SlideToggle name=""witcryptSecured"" defaultChecked={this.state.values.witcryptSecured} onChange={this.handleCheckedChange} type=""checkbox"" /&gt;
                        &lt;/FormField&gt;
                    &lt;/FormSection&gt;
                    &lt;FormSection sectionHeader=""Participants""&gt;
                        {participantsList}
                        &lt;div id=""add-participant"" className=""participant"" onClick={this.toggleAddParticipantModal}&gt;
                            &lt;span className=""participant-avatar"" style={{backgroundImage:'url(/img/blue_add.svg)'}}&gt;&lt;/span&gt;
                            &lt;span&gt;Add a Participant&lt;/span&gt;
                            &lt;span className=""add-action roll""&gt;&lt;a&gt;&lt;/a&gt;&lt;/span&gt;
                        &lt;/div&gt;
                    &lt;/FormSection&gt;
                    &lt;Button type=""hollow-primary"" size=""md"" className=""single-modal-btn"" block submit&gt;Save&lt;/Button&gt;
                &lt;/Form&gt;


                &lt;AddParticipant people={this.props.people} toggleAddParticipantModal={this.props.toggleAddParticipantModal} modalIsOpen={this.props.modalIsOpen} toggleAddParticipantModal={this.toggleAddParticipantModal} addParticipantModal={this.state.addParticipantModal} /&gt;
            &lt;/Modal&gt;
        );
    }

    toggleAddParticipantModal() {
        this.setState({
            addParticipantModal: !this.state.addParticipantModal
        });
    }

    handleCheckedChange(event){
        var newState = this.state;
        newState.values[event.target.name] = !newState.values[event.target.name];
        this.setState(
            newState
        );
    }

    handleInputChange(event){
        var newState = this.state;
        newState.values[event.target.name] = event.target.value;
        this.setState(
            newState
        );
    }

    saveChanges(e){
        e.preventDefault(); 
    }

}
</code></pre>
","3352816","","3352816","","2015-11-16 23:09:20","2016-01-31 15:49:03","React changing props on grandchildren: object is not extensible / tree traversing react children","<javascript><reactjs>","1","0","1","",""
"32466667","1","","","2015-09-08 20:27:59","","3","2969","<p>I would like to render a reactJS component from twig template. Is it possible? </p>

<p>I tried:</p>

<pre><code>&lt;div class=""top-line""&gt;
    &lt;h1&gt;{{ username }}&lt;/h1&gt;

    {% verbatim %}
    &lt;script type=""text/html"" id=""follow-button""&gt;
        &lt;FriendshipButton user={{ app.user }} /&gt;
    &lt;/script&gt;
    {% endverbatim %}
    &lt;div id=""follow-button-mp""&gt;&lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>And in JS side:</p>

<pre><code>React.render(
    React.createElement(document.getElementById('follow-button').innerHTML),
    document.getElementById('follow-button-mp')
);
</code></pre>

<p>Getting an error:</p>

<pre><code> Uncaught Error: Invariant Violation: Invalid tag: 
        &lt;FriendshipButton user={{ app.user }} /&gt;
</code></pre>
","1162217","","","","","2015-12-20 08:57:40","Symfony twig + reactJS","<symfony><reactjs><twig>","1","3","1","",""
"49088432","1","49089423","","2018-03-03 19:39:45","","2","54","<p>I am implementing an upload file dropzone within my react web application using react-dropzone, which I intend to send a post request to my .NET Core Web API to parse the file and save it to a DB. I am using this <a href=""https://medium.com/technoetics/handling-file-upload-in-reactjs-b9b95068f6b"" rel=""nofollow noreferrer"">tutorial</a> as a guide whilst making my own adjustments to suit my project spec, and I keep getting the below error which I am unsure how to fix: </p>

<blockquote>
  <p>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of <code>Upload</code>.</p>
</blockquote>

<p>This error stops the application from rendering the component. 
I have researched the error and found the following answers however I believe they are unrelated to my issues.</p>

<ul>
<li><a href=""https://github.com/ReactTraining/react-router/issues/2220"" rel=""nofollow noreferrer"">https://github.com/ReactTraining/react-router/issues/2220</a></li>
<li><a href=""https://codereviewvideos.com/blog/warning-react-createelement/"" rel=""nofollow noreferrer"">https://codereviewvideos.com/blog/warning-react-createelement/</a></li>
</ul>

<p>Please see my Upload component below:</p>

<pre><code>import React, { PropTypes, Component } from 'react';
import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';
import RaisedButton from 'material-ui/RaisedButton';
import Dropzone from 'react-dropzone';
import FontIcon from 'material-ui/FontIcon';
import { blue500 } from 'material-ui/styles/colors';
import { PageHeader, Panel } from 'react-bootstrap';

const request = require('superagent');

const apiBaseUrl = 'http://localhost:5000/api/';

const style = {
  margin: 15,
};

const title = 'Upload';

class Upload extends Component {
  constructor(props, context) {
    super(props);
    this.state = {
      filesPreview: [],
      filesToBeSent: [],
      printcount: 10,
    };
    context.setTitle(title);
  }

  onDrop(acceptedFiles) {
    console.log('Accepted files: ', acceptedFiles[0].name);
    const filesToBeSent = this.state.filesToBeSent;
    if (filesToBeSent.length &lt; this.state.printcount) {
      filesToBeSent.push(acceptedFiles);
      const filesPreview = [];
      Object.keys(filesToBeSent).forEach((key, i) =&gt; {
        filesPreview.push(&lt;div&gt;
          {filesToBeSent[i][0].name}
          &lt;MuiThemeProvider&gt;
            &lt;a href=""""&gt;&lt;FontIcon
              className=""material-icons customstyle""
              color={blue500}
              styles={{ top: 10 }}
            &gt;clear&lt;/FontIcon&gt;&lt;/a&gt;
          &lt;/MuiThemeProvider&gt;
        &lt;/div&gt;
          );
      });
      this.setState({ filesToBeSent, filesPreview });
    } else {
      alert('You have reached the limit of printing files at a time');
    }
  }

  handleClick(event) {
    console.log('handleClick: ', event);
    const self = this;
    console.log('self: ', self);
    if (this.state.filesToBeSent.length &gt; 0) {
      const filesArray = this.state.filesToBeSent;
      const req = request.post(`${apiBaseUrl}fileupload`);
      Object.keys(filesArray).forEach((key, i) =&gt; {
        console.log('files', filesArray[i][0]);
        req.attach(filesArray[i][0].name, filesArray[i][0]);
        req.end((err, res) =&gt; {
          if (err) {
            console.log('error ocurred');
          }
          console.log('res', res);
          alert('File printing completed');
        });
      });
    } else {
      alert('Please upload some files first');
    }
  }

  render() {
    return (
      &lt;div&gt;
        &lt;div className=""row""&gt;
          &lt;div className=""col-lg-12""&gt;
            &lt;PageHeader&gt;Upload Data&lt;/PageHeader&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div className=""row""&gt;
          &lt;div className=""col-lg-12 col-md-8 col-sm-4""&gt;
            &lt;Panel
              header={&lt;span&gt;
                &lt;i className=""fa fa-location-arrow fa-fw"" /&gt; Drag
                      and drop your file here, or use the file browser:
                    &lt;/span&gt;}
            &gt;
              &lt;div className=""App col-lg-6 col-md-4 col-sm-2""&gt;
                &lt;Dropzone onDrop={(files) =&gt; this.onDrop(files)}&gt;
                  &lt;div&gt;Try dropping some files here, or click to select files to upload.&lt;/div&gt;
                &lt;/Dropzone&gt;
              &lt;/div&gt;
              &lt;div className=""col-lg-6 col-md-4 col-sm-2""&gt;
                 Files to be printed are:
                  {this.state.filesPreview}
              &lt;/div&gt;
              &lt;MuiThemeProvider&gt;
                &lt;RaisedButton
                  label=""Print Files"" style={style}
                  onClick={(event) =&gt; this.handleClick(event)}
                /&gt;
              &lt;/MuiThemeProvider&gt;
            &lt;/Panel&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    );
  }
}

Upload.contextTypes = { setTitle: PropTypes.func.isRequired };
export default Upload;
</code></pre>

<p>Thanking you in advance. Any help is greatly appreciated.</p>
","5946457","","5946457","","2018-03-04 13:27:23","2018-03-04 15:21:28","React.createElement: type should not be null, undefined, boolean, or number Error","<javascript><reactjs><react-dropzone>","1","0","","",""
"32645668","1","32668636","","2015-09-18 06:54:14","","1","1718","<p>I've just started work with reactjs and have not done much hands-on work with it. So far I'm able to create DOM elements through reactjs using JSXTransformer.js. The problem I'm getting is, when I try to create multiple elements within a DOM element, it <em>replaces</em> the old elements with the new ones. </p>

<p>That is, if I want to create <code>div_B</code>, <code>div_C</code> and <code>div_D</code> in <code>mainDiv</code>, it just adds <code>div_D</code> in the <code>mainDiv</code> because it is create last. But I want to append all three divs in the <code>mainDiv</code>.</p>

<p>The code I'm using is following:</p>

<pre class=""lang-js prettyprint-override""><code>var props = [];
function getEle(id) {
    return document.getElementById(id);
}
function setProps(ele, Css, inner, id) {
    props.element = ele;
    props.CssClass = Css;
    props.innerText = inner;
    props.id = id;
    return props;
}
function createElement(properties , element){
    var CreateDiv = React.createClass({
        render : function(){
            return &lt;div className = {this.props.elementProps.CssClass} id={this.props.elementProps.id}&gt;{this.props.innerText}&lt;/div&gt;;
        }
    });
    React.render(&lt;CreateDiv elementProps = {properties} /&gt;, element);
}

setProps(""div"", ""divBClass"", """", ""div_B"");
createElement(props, getEle(""mainDiv""));

setProps(""div"", ""divCClass"", """", ""div_C"");
createElement(props, getEle(""mainDiv""));

setProps(""div"", ""divDClass"", """", ""div_D"");
createElement(props, getEle(""mainDiv""));
</code></pre>

<p>Is there anything wrong with that code?</p>
","1842036","","441757","","2015-09-18 07:36:10","2015-09-19 13:19:35","How to append multiple DOM elements to an element created with reactjs?","<javascript><dom><reactjs>","1","2","1","",""
"41859045","1","41863775","","2017-01-25 18:34:40","","1","1622","<p>I am attempting to implement a simple data table as shown by the author's example here: <a href=""https://github.com/bvaughn/react-virtualized/blob/master/source/Table/Table.example.js"" rel=""nofollow noreferrer"" title=""example"">example</a></p>

<pre><code>...
export default class TableExample extends Component {
static contextTypes = {
list: PropTypes.instanceOf(Immutable.List).isRequired
};
...
</code></pre>

<p>I've tried to pass in an ImmutableJS List as a property to no avail. Is there something else I'm missing here?</p>

<p>How do you get the data array into the component?</p>

<p>My parent component which renders the table example looks like this:</p>

<pre><code>  render() {
  const list = fromJS(this.props.data);
  console.log(typeof(list)); //this outputs ""object""
  console.log(list); // this outputs ImmutableJS list with size of 761
  return (
     &lt;TableExample list={list}/&gt;
     )
  }
</code></pre>

<p>I've also tried to change all declarations of { list } in the TableExample linked from this.context to this.props without much success. Any help would be greatly appreciated.</p>

<p>Console error returned by Chrome at this point:</p>

<pre><code>Warning: React.createElement: type is invalid -- expected a string (for                  
built-in components) or a class/function (for composite components) but     
got: undefined. You likely forgot to export your component from the               
file it's defined in. Check the render method of `TableExample`.
</code></pre>
","1718270","","1718270","","2017-01-25 18:40:38","2017-01-25 23:47:40","react-virtualized Data Table Example","<reactjs><datatable><ecmascript-6><babeljs><react-virtualized>","2","2","","",""
"48924938","1","","","2018-02-22 10:22:12","","0","339","<p>I need your help please.
Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in. Check the render method of <code>App</code>.
    in App (created by Connect(App))
    in Connect(App)
    in Provider</p>

<p>App.js</p>

<pre><code>    import React from 'react';
    import { Router, Route } from 'react-router-dom';
    import { connect } from 'react-redux';
    import { history } from './_helpers/index';
    import { alertActions } from './_actions/index';
    import PrivateRoute from './_components/PrivateRoute.js';
    import Map from './map/Map.js';
    import LoginPage from './LoginPage/LoginPage.js';
    import RegisterPage from './RegisterPage/RegisterPage.js';
    class App extends React.Component {
    constructor(props) {
    super(props);

    const { dispatch } = this.props;
    history.listen((location, action) =&gt; {
        // clear alert on location change
        dispatch(alertActions.clear());
    });
  }
render() {
    const { alert } = this.props;
    return (
        &lt;div className=""jumbotron""&gt;
            &lt;div className=""container""&gt;
                &lt;div className=""col-sm-8 col-sm-offset-2""&gt;
                    {alert.message &amp;&amp;
                    &lt;div className={`alert ${alert.type}`}&gt;{alert.message}   &lt;/div&gt;
                    }
                    &lt;Router history={history}&gt;
                        &lt;div&gt;
                            &lt;PrivateRoute exact path=""/"" component={Map} /&gt;
                            &lt;Route path=""/login"" component={LoginPage} /&gt;
                            &lt;Route path=""/register"" component={RegisterPage} /&gt;
                        &lt;/div&gt;
                    &lt;/Router&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    );
    }
    }

    function mapStateToProps(state) {
      const { alert } = state;
     return {
    alert
      };
      }

      export default connect(mapStateToProps)(App);
</code></pre>

<p>index.js</p>

<pre><code>  import React from 'react';
  import { render} from 'react-dom';
  import { Provider } from 'react-redux';
  import { store } from './_helpers';
  import App from './App.js';
  import './index.css'; // postCSS import of CSS module
  import { configureFakeBackend } from './_helpers';
  configureFakeBackend();
  render(
      &lt;Provider store={store}&gt;
       &lt;App /&gt;
      &lt;/Provider&gt;,
document.getElementById('root') );
</code></pre>
","4901577","","","","","2018-02-22 10:35:47","Warning: React.createElement: type is invalid -- expected a string (for built-in components)","<javascript><reactjs><redux>","1","5","","",""
"48928349","1","","","2018-02-22 13:13:49","","1","196","<p>I have created a page with fullpage.js and in one of the sections I've integrated wow slider. Same thing is working perfectly in html page but not when integrated in react.js. Getting following error.</p>

<blockquote>
  <p>Uncaught TypeError: Cannot read property 'replace' of undefined
      at N</p>
</blockquote>

<p>Script for wow slider</p>

<pre><code>function ws_glass_parallax(d,l,m){var f=jQuery;var i=f(this);var j=d.parallax||0.25;var k=f(""&lt;div&gt;"").css({position:""absolute"",display:""none"",top:0,left:0,width:""100%"",height:""100%"",overflow:""hidden""}).addClass(""ws_effect ws_glass_parallax"").appendTo(m);var h=!d.noCanvas&amp;&amp;!window.opera&amp;&amp;!!document.createElement(""canvas"").getContext;if(h){try{document.createElement(""canvas"").getContext(""2d"").getImageData(0,0,1,1)}catch(q){h=0}}function t(e){return Math.round(e*1000)/1000}var u=f(""&lt;div&gt;"").css({position:""absolute"",left:0,top:0,overflow:""hidden"",width:""100%"",height:""100%"",transform:""translate3d(0,0,0)"",zIndex:1}).appendTo(k);var s=u.clone().appendTo(k);var r=u.clone().css({width:""20%""}).appendTo(k);var c;var p=u.clone().appendTo(k).css({zIndex:0});this.go=function(C,A,x){var e=f(l.get(A));e={position:""absolute"",width:e.width(),height:e.height(),marginTop:e.css(""marginTop""),marginLeft:e.css(""marginLeft"")};x=x?1:-1;var E=f(l.get(A)).clone().css(e).appendTo(u);var z=f(l.get(C)).clone().css(e).appendTo(s);var v=f(l.get(C)).clone().css(e).appendTo(r);if(x==-1){r.css({left:""auto"",right:0});v.css({left:""auto"",right:0})}else{r.css({left:0,right:""auto""});v.css({left:0,right:""auto""})}var D=(m.width()||d.width)*1.3;var B=m.height()||d.height;var y;if(h){if(!c){c=f(""&lt;canvas&gt;"").css({position:""absolute"",left:0,top:0}).attr({width:e.width,height:e.height}).appendTo(p)}c.css(e).attr({width:e.width,height:e.height});y=o(f(l.get(C)),e,10,c.get(0))}if(!h||!y){h=0}wowAnimate(function(G){G=f.easing.swing(G);var L=t(x*G*D),F=t(x*(-D+G*D-(1-G)*D*0.2)),J=t(x*(-D*1.4+G*(D*1.4+D/1.3))),w=t(-x*D*j*G),H=t(x*D*j*(1-G)),I=t(-x*D*(j+0.2)*G),K=t(x*(-D*0.2+G*D*0.4));if(d.support.transform){u.css(""transform"",""translate3d(""+L+""px,0,0)"");E.css(""transform"",""translate3d(""+w+""px,0,0)"");s.css(""transform"",""translate3d(""+F+""px,0,0)"");z.css(""transform"",""translate3d(""+H+""px,0,0)"");r.css(""transform"",""translate3d(""+J+""px,0,0)"");v.css(""transform"",""scale(1.6) translate3d(""+I+""px,0,0)"");p.css(""transform"",""translate3d(""+K+""px,0,0)"")}else{u.css(""left"",L);E.css(""margin-left"",w);s.css(""left"",F);z.css(""margin-left"",H);r.css(""left"",J);v.css(""margin-left"",I);p.css(""left"",K)}},0,1,d.duration,function(){k.hide();E.remove();z.remove();v.remove();i.trigger(""effectEnd"")})};function o(C,A,B,v){var F=(parseInt(C.parent().css(""z-index""))||0)+1;if(h){var I=v.getContext(""2d"");I.drawImage(C.get(0),0,0,A.width,A.height);if(!a(I,0,0,v.width,v.height,B)){return 0}return f(v)}var J=f(""&lt;div&gt;&lt;/div&gt;"").css({position:""absolute"",""z-index"":F,left:0,top:0}).css(A).appendTo(v);var H=(Math.sqrt(5)+1)/2;var w=1-H/2;for(var z=0;w*z&lt;B;z++){var D=Math.PI*H*z;var e=(w*z+1);var G=e*Math.cos(D);var E=e*Math.sin(D);f(document.createElement(""img"")).attr(""src"",C.attr(""src"")).css({opacity:1/(z/1.8+1),position:""absolute"",""z-index"":F,left:Math.round(G)+""px"",top:Math.round(E)+""px"",width:""100%"",height:""100%""}).appendTo(J)}return J}var g=[512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,289,287,285,282,280,278,275,273,271,269,267,265,263,261,259];var n=[9,11,12,13,13,14,14,15,15,15,15,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24];function a(am,U,S,v,w,ad){if(isNaN(ad)||ad&lt;1){return}ad|=0;var ah;try{ah=am.getImageData(U,S,v,w)}catch(al){console.log(""error:unable to access image data: ""+al);return false}var C=ah.data;var ab,aa,aj,ag,J,M,G,A,B,R,H,T,P,X,ac,K,F,L,N,W;var ak=ad+ad+1;var Y=v&lt;&lt;2;var I=v-1;var af=w-1;var E=ad+1;var ae=E*(E+1)/2;var V=new b();var Q=V;for(aj=1;aj&lt;ak;aj++){Q=Q.next=new b();if(aj==E){var D=Q}}Q.next=V;var ai=null;var Z=null;G=M=0;var O=g[ad];var z=n[ad];for(aa=0;aa&lt;w;aa++){X=ac=K=A=B=R=0;H=E*(F=C[M]);T=E*(L=C[M+1]);P=E*(N=C[M+2]);A+=ae*F;B+=ae*L;R+=ae*N;Q=V;for(aj=0;aj&lt;E;aj++){Q.r=F;Q.g=L;Q.b=N;Q=Q.next}for(aj=1;aj&lt;E;aj++){ag=M+((I&lt;aj?I:aj)&lt;&lt;2);A+=(Q.r=(F=C[ag]))*(W=E-aj);B+=(Q.g=(L=C[ag+1]))*W;R+=(Q.b=(N=C[ag+2]))*W;X+=F;ac+=L;K+=N;Q=Q.next}ai=V;Z=D;for(ab=0;ab&lt;v;ab++){C[M]=(A*O)&gt;&gt;z;C[M+1]=(B*O)&gt;&gt;z;C[M+2]=(R*O)&gt;&gt;z;A-=H;B-=T;R-=P;H-=ai.r;T-=ai.g;P-=ai.b;ag=(G+((ag=ab+ad+1)&lt;I?ag:I))&lt;&lt;2;X+=(ai.r=C[ag]);ac+=(ai.g=C[ag+1]);K+=(ai.b=C[ag+2]);A+=X;B+=ac;R+=K;ai=ai.next;H+=(F=Z.r);T+=(L=Z.g);P+=(N=Z.b);X-=F;ac-=L;K-=N;Z=Z.next;M+=4}G+=v}for(ab=0;ab&lt;v;ab++){ac=K=X=B=R=A=0;M=ab&lt;&lt;2;H=E*(F=C[M]);T=E*(L=C[M+1]);P=E*(N=C[M+2]);A+=ae*F;B+=ae*L;R+=ae*N;Q=V;for(aj=0;aj&lt;E;aj++){Q.r=F;Q.g=L;Q.b=N;Q=Q.next}J=v;for(aj=1;aj&lt;=ad;aj++){M=(J+ab)&lt;&lt;2;A+=(Q.r=(F=C[M]))*(W=E-aj);B+=(Q.g=(L=C[M+1]))*W;R+=(Q.b=(N=C[M+2]))*W;X+=F;ac+=L;K+=N;Q=Q.next;if(aj&lt;af){J+=v}}M=ab;ai=V;Z=D;for(aa=0;aa&lt;w;aa++){ag=M&lt;&lt;2;C[ag]=(A*O)&gt;&gt;z;C[ag+1]=(B*O)&gt;&gt;z;C[ag+2]=(R*O)&gt;&gt;z;A-=H;B-=T;R-=P;H-=ai.r;T-=ai.g;P-=ai.b;ag=(ab+(((ag=aa+E)&lt;af?ag:af)*v))&lt;&lt;2;A+=(X+=(ai.r=C[ag]));B+=(ac+=(ai.g=C[ag+1]));R+=(K+=(ai.b=C[ag+2]));ai=ai.next;H+=(F=Z.r);T+=(L=Z.g);P+=(N=Z.b);X-=F;ac-=L;K-=N;Z=Z.next;M+=v}}am.putImageData(ah,U,S);return true}function b(){this.r=0;this.g=0;this.b=0;this.a=0;this.next=null}};

jQuery(""#wowslider-container1"").wowSlider({effect:""glass_parallax"",prev:"""",next:"""",duration:20*100,delay:20*100,width:640,height:360,autoPlay:false,autoPlayVideo:false,playPause:false,stopOnHover:false,loop:false,bullets:1,caption:true,captionEffect:""traces"",controls:false,controlsThumb:false,responsive:2,fullScreen:false,gestures:2,onBeforeStep:0,images:0});
</code></pre>

<p>Created app using create-react-app
App.js code</p>

<pre><code>import React, { Component } from 'react';
import './App.css';

class App extends Component {
  render() {
    return (
      &lt;div className=""App""&gt;

          &lt;ul id=""menu""&gt;
              &lt;li data-menuanchor=""firstPage""&gt;&lt;a href=""#firstPage""&gt;firstPage&lt;/a&gt;&lt;/li&gt;
              &lt;li data-menuanchor=""secondPage""&gt;&lt;a href=""#secondPage""&gt;secondPage&lt;/a&gt;&lt;/li&gt;
              &lt;li data-menuanchor=""3rdPage""&gt;&lt;a href=""#3rdPage""&gt;3rdPage&lt;/a&gt;&lt;/li&gt;
              &lt;li data-menuanchor=""4thpage""&gt;&lt;a href=""#4thpage""&gt;4thpage&lt;/a&gt;&lt;/li&gt;
              &lt;li data-menuanchor=""5thpage""&gt;&lt;a href=""#5thpage""&gt;5thpage&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
          &lt;div id=""fullpage""&gt;
              &lt;div className=""section "" id=""section0""&gt;
                  &lt;div className=""intro""&gt;
                      &lt;p&gt;Your Virtual Assistant&lt;/p&gt;
                      &lt;p&gt;Free your time for the things that matter to you.&lt;/p&gt;


                      &lt;p&gt;be part of the first release, &lt;br/&gt; duw out shortly&lt;/p&gt;

                      &lt;a href=""#""&gt;Sign up today&lt;/a&gt;

                  &lt;/div&gt;
              &lt;/div&gt;
              &lt;div className=""section"" id=""section1""&gt;
                  &lt;div className=""intro""&gt;
                      &lt;h1&gt;No limitations!&lt;/h1&gt;
                      &lt;p&gt;Content is a priority. Even if it is so large :)&lt;/p&gt;
                  &lt;/div&gt;
              &lt;/div&gt;
              &lt;div className=""section"" id=""section2""&gt;

                  &lt;div id=""wowslider-container1""&gt;
                      &lt;div className=""ws_images""&gt;&lt;ul&gt;
                          &lt;li&gt;&lt;img src=""images/background_1.jpg"" alt=""Background_1"" title=""Background_1"" id=""wows1_0""/&gt;&lt;/li&gt;
                          &lt;li&gt;&lt;img src=""images/sample_1.jpg"" alt=""Sample_1"" title=""Sample_1"" id=""wows1_1""/&gt;&lt;/li&gt;
                          &lt;li&gt;&lt;a href=""http://wowslider.net""&gt;&lt;img src=""images/sample_2.jpg"" alt=""javascript carousel"" title=""Sample_2"" id=""wows1_2""/&gt;&lt;/a&gt;&lt;/li&gt;
                          &lt;li&gt;&lt;img src=""images/sample_3.jpg"" alt=""Sample_3"" title=""Sample_3"" id=""wows1_3""/&gt;&lt;/li&gt;
                      &lt;/ul&gt;&lt;/div&gt;
                      &lt;div className=""ws_bullets""&gt;&lt;div&gt;
                          &lt;a href="""" title=""Background_1""&gt;&lt;span&gt;1&lt;/span&gt;&lt;/a&gt;
                          &lt;a href="""" title=""Sample_1""&gt;&lt;span&gt;2&lt;/span&gt;&lt;/a&gt;
                          &lt;a href="""" title=""Sample_2""&gt;&lt;span&gt;3&lt;/span&gt;&lt;/a&gt;
                          &lt;a href="""" title=""Sample_3""&gt;&lt;span&gt;4&lt;/span&gt;&lt;/a&gt;
                      &lt;/div&gt;&lt;/div&gt;&lt;div className=""ws_script"" &gt;&lt;a href=""http://wowslider.net""&gt;css image gallery&lt;/a&gt; by WOWSlider.com v8.8m&lt;/div&gt;
                      &lt;div className=""ws_shadow""&gt;&lt;/div&gt;
                  &lt;/div&gt;
              &lt;/div&gt;
              &lt;div className=""section"" id=""section3""&gt;
                  &lt;div className=""intro""&gt;
                      &lt;h1&gt;No limitations!&lt;/h1&gt;
                      &lt;p&gt;Content is a priority. Even if it is so large :)&lt;/p&gt;
                  &lt;/div&gt;
              &lt;/div&gt;
              &lt;div className=""section"" id=""section4""&gt;
                  &lt;div className=""intro""&gt;
                      &lt;h1&gt;No limitations!&lt;/h1&gt;
                      &lt;p&gt;Content is a priority. Even if it is so large :)&lt;/p&gt;
                  &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;

      &lt;/div&gt;
    );
  }
}

export default App;
</code></pre>

<p>index.html page code</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=""en""&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no""&gt;
    &lt;meta name=""theme-color"" content=""#000000""&gt;
    &lt;!--
      manifest.json provides metadata used when your web app is added to the
      homescreen on Android. See https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/
    --&gt;
    &lt;link rel=""manifest"" href=""%PUBLIC_URL%/manifest.json""&gt;
    &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
    &lt;link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/fullPage.js/2.8.1/jquery.fullPage.min.css""&gt;
    &lt;link rel=""stylesheet"" type=""text/css"" href=""css/examples.css"" /&gt;
    &lt;link rel=""stylesheet"" type=""text/css"" href=""css/style.css"" /&gt;

    &lt;title&gt;React App&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;noscript&gt;
      You need to enable JavaScript to run this app.
    &lt;/noscript&gt;
    &lt;div id=""root""&gt;&lt;/div&gt;


    &lt;script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js""&gt;&lt;/script&gt;
    &lt;script src=""http://ajax.googleapis.com/ajax/libs/jqueryui/1.9.1/jquery-ui.min.js""&gt;&lt;/script&gt;

    &lt;script type=""text/javascript"" src=""js/scrolloverflow.js""&gt;&lt;/script&gt;

    &lt;script type=""text/javascript"" src=""js/jquery.fullPage.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript"" src=""js/examples.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript"" src=""js/wowslider.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript"" src=""js/script.js""&gt;&lt;/script&gt;&lt;script type=""text/javascript""&gt;
        $(document).ready(function() {
            $('#fullpage').fullpage({
                // anchors: ['firstPage', 'secondPage', '3rdPage', '4thpage', '5thpage'],
                sectionsColor: ['#4A6FB1', '#939FAA', '#323539','#4A6FB1','#939FAA'],
                // scrollOverflow: true
                // sectionsColor: ['', '#939FAA', '#fff','#fff','','#fff','',''],
                anchors:
                    ['firstPage', 'secondPage', '3rdPage', '4thpage', '5thpage','6thpage','7thpage','8thpage'],
                menu: '#menu',
                css3: true,
                scrollingSpeed: 1000,
                scrollOverflow: true,
                fixedElements: '10',
                // paddingTop: '3em',
                lockAnchors: true,
                // scrollBar:true,
                onLeave: function(){

                }
            });
        });
    &lt;/script&gt;

  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
","6265735","","","","","2018-02-23 11:30:29","Wow slider with react.js is not working","<reactjs><fullpage.js><wowslider>","1","4","","",""
"49552907","1","","","2018-03-29 09:48:25","","0","48","<p>What's wrong with this class?</p>

<pre><code>import React from 'react'

export default class Test extends React.Component {
  render() {
    return &lt;h2&gt;test&lt;/h2&gt;
  }
}
</code></pre>

<p>Nothing wrong for sure but I got error of </p>

<p><code>React.createElement: type is invalid — expected a string
</code> after I complied it with webpack and babel.</p>

<p>I got the error when trying to use the complied version like so
<code>import Test from '../lib/test.js'</code></p>

<p>My webpack config as below</p>

<pre><code>const path = require('path');
const webpack = require('webpack');

module.exports = {

    entry: {
        'test': path.resolve(__dirname, 'src') + '/test.js',
    },
    output: {
        path: path.resolve(__dirname, 'lib'),
        filename: '[name].js',
    },
    module: {
        rules: [
            {
                test: /.js[x]?$/,
                include: path.resolve(__dirname, 'src'),
                exclude: path.resolve(__dirname, 'node_modules'),
                use: 'babel-loader',
            },
            {
              test: /\.scss|css$/,
              use: [
                'style-loader',
                'css-loader',
                'sass-loader'
              ]
            },
            {
                test: /\.(eot|woff|woff2|ttf|svg|ico|png|jpe?g|gif)$/,
                use: ['file-loader?name=[name].[ext]&amp;outputPath=assets/images/',
                      'image-webpack-loader']
            },
        ]
    },
    plugins: [
        new webpack.NamedModulesPlugin()
    ]
};
</code></pre>

<p>Possible it's a babel issue? my .babelrc</p>

<pre><code> {
    ""presets"": [""es2015"", ""react""],
    ""plugins"": [
        [""transform-class-properties"", { ""spec"": true }]
      ]
}
</code></pre>
","9320599","","9320599","","2018-03-30 06:23:39","2018-03-30 06:23:39","Webpack React.createElement: type is invalid — expected a string?","<reactjs><webpack><babel>","0","2","","",""
"49610028","1","","","2018-04-02 11:02:23","","0","97","<h2>Why I'm doing it how I'm doing it:</h2>

<p>So I'm trying to implement a simple force directed graph in react, to get started I looked at this code by Mike Bostock:<br>
<a href=""https://bl.ocks.org/mbostock/4062045"" rel=""nofollow noreferrer"">https://bl.ocks.org/mbostock/4062045</a></p>

<p>The problem is that I'm trying to implement it in react, and there seem to be a lot of ways to do d3 in react, so I looked around for ways to do it and found this article by Thibaut Tiberghien going through a few ways of doing it:<br>
<a href=""https://medium.com/@tibotiber/react-d3-js-balancing-performance-developer-experience-4da35f912484"" rel=""nofollow noreferrer"">react-d3-js-balancing-performance-developer-experience</a></p>

<p>It goes through different implementations and settles for using react-faux-dom developed by Oliver Caldwell. The method is outlined in Oliver's own article here:<br>
<a href=""https://oli.me.uk/2015/09/09/d3-within-react-the-right-way/"" rel=""nofollow noreferrer"">d3-within-react-the-right-way</a></p>

<p>There I found a comment with what I was looking for:</p>

<blockquote>
  <p>I wrote an article for beginners like me who try to use d3 with react based on react-faux-dom:<br>
  <a href=""https://blog.sicara.com/a-starting-point-on-using-d3-with-react-869fdf3dfaf"" rel=""nofollow noreferrer"">Set up D3.js Inside React in 5 Minutes
  </a></p>
</blockquote>

<p>giving this code as a template:</p>

<pre><code>class FrequencyChart extends React.Component {
  constructor(props) {
    super(props);
  }
  drawChart() {
    const div = new ReactFauxDOM.createElement('div');
    // ... 
    return div.toReact()
  }

  render () {
    return this.drawChart();
  }
}
module.exports = FrequencyChart;
</code></pre>

<h2>How I'm doing it:</h2>

<p>I altered like this:</p>

<pre><code>class Graph extends Component {
  constructor(props) {
    super(props);
  }
  drawGraph() {
    const reactfauxDOMnode = new ReactFauxDOM.createElement('svg');
    // ... 
    return reactfauxDOMnode.toReact()
  }

  render () {
    return this.drawGraph();
  }
}

export default Graph;
</code></pre>

<p>now I was going to add the code from Mike Bostock's block. </p>

<p>I had to do the following changes:</p>

<ul>
<li>He defined the width and height of the svg in the element so I had to set the width/height attributes of it through code.</li>
<li>Instead of getting the data from csv I got it through function calls to a model.</li>
<li>removed the code for coloring the nodes and just set them all to red</li>
</ul>

<p>The resulting code:
<a href=""https://gist.github.com/Finbel/dc2d83cae3e27703fda82873c216de62"" rel=""nofollow noreferrer"">(link to gist)</a></p>

<h2>The problem:</h2>

<p>When it renders it looks like this:
<a href=""https://i.stack.imgur.com/OdEN2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/OdEN2.png"" alt=""enter image description here""></a>
The dark background is intentional, but all the links and nodes are huddled up in the top left corner.</p>

<p>When I inspect I find that all the nodes and links are there, with the links looking like this:
<a href=""https://i.stack.imgur.com/R0sn5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/R0sn5.png"" alt=""enter image description here""></a></p>

<p>And the nodes looking like this:
<a href=""https://i.stack.imgur.com/U4Td2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/U4Td2.png"" alt=""enter image description here""></a></p>

<p>So I notice that they don't have any x/y-values which seems odd but I don't know why, in Bostock's code it looks like they're given x/y values through the ticked()-function which (when I checked with console.count()) is indeed being called a whole bunch of times.</p>

<p>So any idea what could be wrong here or any suggestions on alternative ways to implement this? </p>
","4136445","","","","","2018-04-02 11:02:23","Implementing d3's force directed graph in react","<reactjs><d3.js>","0","0","","",""
"49689959","1","","","2018-04-06 09:47:59","","0","27","<p>I am developing an app in react js for that, I am using an HTML/CSS/Javascript based template. I am trying to create navbar. This includes adding few scripts in the code. How to include the scripts in React JS?
This is my code, which is currently giving error:</p>

<pre><code>class TopNavBar extends Component {
state = {
    loading: true
}

componentDidMount() {
    const scripts = [
        '../../assets/global/plugins/jquery.min.js',
        '../../assets/global/plugins/bootstrap/js/bootstrap.min.js',
        '../../assets/global/plugins/js.cookie.min.js',
        '../../assets/global/scripts/app.min.js'
    ];
    for (let i = 0; i &lt; scripts.length; i++) { 
        const addScript = document.createElement('script');
        addScript.setAttribute('src', scripts[i]);
        document.body.appendChild(addScript);
    }

}

render () {
    return (
        &lt;div&gt;
            &lt;div className=""page-header navbar navbar-fixed-top""&gt;
                &lt;div className=""page-header-inner ""&gt;
                    &lt;div className=""page-logo""&gt;
                        &lt;img src={logo } style={{width: '40px', height: '40px'}} alt=""logo"" className=""logo-default"" /&gt;
                        &lt;div className=""menu-toggler sidebar-toggler""&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;

                    &lt;a href=""javascript:;"" className=""menu-toggler responsive-toggler"" data-toggle=""collapse"" data-target="".navbar-collapse""&gt; &lt;/a&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    )
}}export default TopNavBar
</code></pre>

<p>When I run this, I get error:</p>

<pre><code>TopNavBar.js:24 GET http://localhost:3000/assets/global/plugins/jquery.min.js net::ERR_ABORTED
</code></pre>

<p>what is the correct way of adding template javascript files in ReactJS app?</p>
","2773561","","","","","2018-04-06 10:09:45","Using template's javascript in react js","<javascript><reactjs><web-applications><react-redux>","1","0","","",""
"49607952","1","49608298","","2018-04-02 08:36:56","","0","55","<p>I am trying to dynamically add new input fields using <a href=""http://www.randomsnippets.com/2008/02/21/how-to-dynamically-add-form-elements-via-javascript/"" rel=""nofollow noreferrer"">this js guide</a>. Everything works with pure js but when I try to adapt it to react I get this error: <strong>TypeError: Cannot read property 'appendChild' of null</strong></p>

<pre><code>import React, { Component } from ""react"";

class addTeams extends Component {
  constructor() {
    super();
    this.state = {
      data: [],
    };
  }


  addInput(divName) {
    var counter = 1;
    var limit = 5;
    if (counter == limit)  {
          alert(""You have reached the limit of adding "" + counter + "" inputs"");
     }
     else {
          var newdiv = document.createElement('div');
          newdiv.innerHTML = ""Entry "" + (counter + 1) + "" &lt;br&gt;&lt;input type='text' name='myInputs[]'&gt;"";
          document.getElementById(divName).appendChild(newdiv);
          counter++;
     }
  }

  render() {
    return (
      &lt;div class=""container""&gt;
        &lt;div class=""row""&gt;
          &lt;div class=""col-md-6 col-md-offset-3""&gt;
            &lt;div class=""jumbotron text-center""&gt;
              &lt;form method=""POST""&gt;
                &lt;div id=""dynamicInput""&gt;
                  Entry 1&lt;br&gt;&lt;/br&gt;&lt;input type=""text"" name=""myInputs[]""&gt;&lt;/input&gt;
                &lt;/div&gt;
                &lt;input type=""button"" value=""Add another text input"" onClick={this.addInput('dynamicInput')}&gt;&lt;/input&gt;
              &lt;/form&gt;
              &lt;button type=""submit"" onClick={this.addTournament} class=""btn btn-primary""&gt;Submit&lt;/button&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    );
  }
}
export default addTeams;
</code></pre>
","8715788","","3719788","","2018-04-02 09:16:53","2018-04-02 09:16:53","Cannot read property 'appendChild' of null react","<javascript><html><reactjs><dom><appendchild>","1","2","","",""
"49688858","1","","","2018-04-06 08:45:52","","2","78","<p>I need to use a lot of the functions of Stripe API in my app, not only checkout which is provided by <a href=""https://www.npmjs.com/package/react-stripe-checkout"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/react-stripe-checkout</a></p>

<p>For example, I need to edit customers, subscriptions, cancel them, etc...</p>

<p>So what is the best way to access those functions ?</p>

<p>For example I want to create a customer like that:</p>

<pre><code>Stripe.apiKey = stripeKey;

let params = {};
params.put(""email"", ""jenny.rosen@example.com"");
params.put(""source"", ""src_18eYalAHEMiOZZp1l9ZTjSU0"");
let customer = Customer.create(params);
</code></pre>

<p>but how do I import stripe library correctly into my projetct ? I tried adding the script to <code>&lt;head&gt;</code> on my index.html. Also tried to add it dynamically inside <code>componentDidMount()</code> like this:</p>

<pre><code>let script = document.createElement('script');
script.src = ""https://js.stripe.com/v3/"";
document.getElementsByTagName('head')[0].appendChild(script);
</code></pre>

<p>What is the best way to add a custom JS library to react project ? Should I do it via Webpack and how please?</p>
","4174240","","","","","2018-04-06 10:28:06","Correct way to include Stripe library inside react project","<javascript><reactjs><webpack><stripe-payments><stripe.js>","1","2","0","",""
"49704762","1","","","2018-04-07 06:54:29","","1","68","<p>I am trying to read an HTML file (client.html) and then listen on <strong>port 8000</strong>.
In that html file I also have a <code>&lt;script = ""client.js""&gt;&lt;/script&gt;</code> tag so that I can use <code>react.js</code> (without jsx) to alter the HTML. Until now I have been able to establish a server but no matter how I change the <code>client.js</code> file the changes don't seem to show on <strong><em><a href=""http://localhost:8000/client.html"" rel=""nofollow noreferrer"">http://localhost:8000/client.html</a>.</em></strong> </p>

<p><strong>server.js</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>//server.js
var http = require('http'),
    fs = require('fs');

fs.readFile('./client.html', function (err, html) {
    if (err) {
        throw err;
    }       
    http.createServer( async (request, response) =&gt; {  
        response.writeHeader(200, {""Content-Type"": ""text/html""});  
        response.write(html);  
        response.end();  
    }).listen(8000,() =&gt; console.log(""started..""));
});`</code></pre>
</div>
</div>
</p>

<p><strong>client.js</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>//client.js
class Hello extends React.Component {
    render() {
      return React.createElement('div', null, `Hello ${this.props.toWhat}`);
      }
}
ReactDOM.render(
  React.createElement(Hello, {toWhat: 'World'}, null),
  document.getElementById('root')
);</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/0.14.3/react.min.js""&gt;&lt;/script&gt;
&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/0.14.3/react-dom.min.js""&gt;&lt;/script&gt;</code></pre>
</div>
</div>
</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!-- client.html --&gt;
&lt;html&gt;
	&lt;body&gt;
		&lt;div id=""root""&gt;&lt;/div&gt;
		&lt;p&gt;helloworld&lt;/p&gt;
		&lt;!-- &lt;script src=""lib.js""&gt;&lt;/script&gt; --&gt;
		&lt;script src=""client.js""&gt;&lt;/script&gt; 
	&lt;/body&gt;
&lt;/html&gt;</code></pre>
</div>
</div>
</p>
","8769943","","1685196","","2018-04-07 09:10:45","2018-04-07 11:08:29","Using javascript to change html using react.js","<javascript><html><node.js><reactjs>","1","0","","",""
"49733179","1","","","2018-04-09 12:37:56","","0","20","<p>I'm trying to use the npm-package <code>react-paypal-button</code> in my project which uses <code>TypeScript</code>.
Currently I am stuck how to be able to use it correctly.</p>

<p>First of all I added <code>""react-paypal-button"": ""1.2.1""</code> to my <code>package.json</code>. Then I created a file <code>PayPalButton.d.ts</code> with the following content:</p>

<pre><code>declare module ""react-paypal-button"" {
    import * as React from ""react"";

    interface IPayPalButtonProps {
        env: ""sandbox"" | ""production"";
        sandboxID?: string;
        productionID?: string;
        amount: number;
        currency: string;
        commit: boolean;
    }

    export class PayPalButton extends React.Component&lt;IPayPalButtonProps&gt;{ }
}
</code></pre>

<p>However, when I try to use the component, e.g. <code>&lt;PayPalButton env={""sandbox""} commit={true} sandboxID={""someId""} currency={""USD""} amount={1000} /&gt;</code>, it throws the following error:</p>

<blockquote>
  <p>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined.</p>
</blockquote>

<p>I have no idea where I should start nor what I should change in order to make it work.</p>
","615288","","","","","2018-04-09 12:37:56","Using react-paypal-button together with TypeScript","<reactjs><typescript>","0","0","1","",""
"50332192","1","50332477","","2018-05-14 13:59:32","","0","39","<p>I managed to get the values <code>Hello</code> and <code>World</code> to render on the page, but as of right now, they are not able to be modified. When I click on it, the text cursor appears but any keyboard input isn't recognized. What do I do so that it takes in input (like delete characters, or adding characters)?</p>

<p><a href=""https://i.stack.imgur.com/FRafO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FRafO.png"" alt=""Screenshot""></a></p>

<p>formatoc.js:</p>

<pre><code>{...
var props = {
    'name' : 'form',
    'timer' : 1500,
    'callback' : function(id, validity, value) {console.log(id, validity, value);},
    'values': [""hello"", ""world""],

    'node' : new FormatOC.ArrayNode({""__array__"":""unique"", ""__type__"":""string"",""__minimum__"":1,""__maximum__"":200,""__component__"":""Input""})
}

React.render(React.createElement(ArrayNodeComponent, props), document.getElementById('react-component')); 
...}
</code></pre>

<p>Array_Node.jsx:</p>

<pre><code> {...
    childChange: function(name, valid, value) {
        // update state

        this.state.values[name] = value;
        this.setState(this.state);

        console.log(name,value);

        // Call parent callback
        this.props.callback(
            this.props.name,
            this.props.newParent.valid(this.state.values),
            this.state.values
        );
    },

        render: function() {
            var that = this;
            console.log(""Hello World"");

            return (
                &lt;div id = ""form""&gt;
                {this.props.values.map(function(v, i) {
                    return (
                        &lt;div&gt;
                        {(that.props.node.get().constructor.name === ""Parent"") ?
                        &lt;ParentComponent
                            name={that.props.name + i}
                            key={i}
                            timer={that.props.timer}
                            callback={that.childChange}
                            values={v}
                            newParent={that.props.node.get()}
                        /&gt;
                        :
                        &lt;NodeComponent
                            name={that.props.name + i}
                            key={i}
                            timer={that.props.timer}
                            callback={that.childChange}
                            value={v}
                            newNode={that.props.node.get()}
                        /&gt;
                        }
                        &lt;/div&gt;
                    )
                })}
                &lt;/div&gt;
           )
        }
  ...}
</code></pre>

<p>Node.jsx:</p>

<pre><code>onChange: function(event) {
  that = this;

  var event2 = event.target;

  if (this.state.component === ""Input"") {

    if (this.timer !== null) {
      clearTimeout(this.timer);
    };
    this.timer = setTimeout(function(){
        that.state.value = event2.value;

        that.props.callback(that.props.name, that.props.newNode.valid(that.state.value), that.state.value);

    }, this.props.timer);
</code></pre>

<p>UPDATE: When I try to give the fields any text input, the console gives the following error:</p>

<p><code>Uncaught TypeError: Cannot read property 'valid' of undefined
    at Constructor.childChange (array_node.js:64)
    at Node.js:36</code></p>
","8303592","","8303592","","2018-05-14 14:43:39","2018-05-14 14:43:39","How to allow for input change in rendered reactjs component? Do I lift up State?","<javascript><reactjs>","1","2","","",""
"41897350","1","41898740","","2017-01-27 15:22:15","","2","942","<p>I am getting error after taking a react <code>render</code> from something like this</p>

<pre><code>            return (
                React.createElement('form', {
                        onSubmit: this.onSubmit,
                        className: 'ContactForm',
                        noValidate: true
                    },
                    React.createElement('input', {
                        type: 'text',
                        className: errors.name &amp;&amp; 'ContactForm-error',
                        placeholder: 'Name',
                        onInput: this.onNameInput,
                        value: this.props.value.name,
                    }),
                    React.createElement('button', {
                        type: 'submit'
                    }, ""Add Contact"")
                )
            );
</code></pre>

<p>to something like this</p>

<pre><code>            function create_input_element(type, fieldname){
                var capital_fieldname = capitalize(fieldname);
                return React.createElement('input', {
                    type: type,
                    className: errors[fieldname] &amp;&amp; 'ContactForm-error',
                    placeholder: capitalize(capital_fieldname),
                    onInput: this['on' + capital_fieldname + 'Input'],
                    value: this.props.value[fieldname],
                    autoFocus: true,
                })
            }

           create_input_element('text', 'name')
</code></pre>

<p>The issue is at <code>this.props.value[fieldname]</code>, and even <code>this.props.value.name</code> will break with the same error.</p>

<p>The exact code is </p>

<pre><code>&lt;head&gt;
    &lt;style&gt;
        body {
            font-family: Tahoma, sans-serif;
            margin: 0;
        }

        .ContactView-title {
            font-size: 24px;
            padding: 0 24px;
        }

        .ContactView-list {
            list-style: none;
            margin: 0;
            padding: 0;
            border-top: 1px solid #f0f0f0;
        }

        .ContactItem {
            margin: 0;
            padding: 8px 24px;
            border-bottom: 1px solid #f0f0f0;
        }

        .ContactItem-email {
            font-size: 16px;
            font-weight: bold;
            margin: 0;
        }

        .ContactItem-name {
            font-size: 14px;
            margin-top: 4px;
            font-style: italic;
            color: #888;
        }

        .ContactItem-description {
            font-size: 14px;
            margin-top: 4px;
        }

        .ContactForm {
            padding: 8px 24px;
        }

        .ContactForm&gt;input {
            display: block;
            width: 240px;
            padding: 4px 8px;
            margin-bottom: 8px;
            border-radius: 3px;
            border: 1px solid #888;
            font-size: 14px;
        }

        .ContactForm&gt;input.ContactForm-error {
            border-color: #b30e2f;
        }
    &lt;/style&gt;

    &lt;meta name=""description"" content=""Ridiculously Simple Forms with Raw React - Exercise Two""&gt;
    &lt;script src=""https://cdn.rawgit.com/zloirock/core-js/master/client/shim.min.js""&gt;&lt;/script&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;title&gt;JS Bin&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;div id=""react-app""&gt;&lt;/div&gt;
    &lt;script src=""https://cdn.jsdelivr.net/react/0.14.0-rc1/react.js""&gt;&lt;/script&gt;
    &lt;script src=""https://cdn.jsdelivr.net/react/0.14.0-rc1/react-dom.js""&gt;&lt;/script&gt;

    &lt;script&gt;
        /*
         * Components
         */

         function capitalize(str){
             return str.charAt(0).toUpperCase() + str.substring(1)
         }


        var ContactForm = React.createClass({
            propTypes: {
                value: React.PropTypes.object.isRequired,
                onChange: React.PropTypes.func.isRequired,
                onSubmit: React.PropTypes.func.isRequired,
            },

            onEmailInput: function(e) {
                this.props.onChange(Object.assign({}, this.props.value, {
                    email: e.target.value
                }));
            },

            onNameInput: function(e) {
                this.props.onChange(Object.assign({}, this.props.value, {
                    name: e.target.value
                }));
            },

            onSubmit: function(e) {
                e.preventDefault();
                this.props.onSubmit();
            },

            render: function() {
                var errors = this.props.value.errors || {};

                function create_input_element(type, fieldname){
                    var capital_fieldname = capitalize(fieldname);
                    return React.createElement('input', {
                        type: type,
                        className: errors[fieldname] &amp;&amp; 'ContactForm-error',
                        placeholder: capitalize(capital_fieldname),
                        onInput: this['on' + capital_fieldname + 'Input'],
                        value: this.props.value[fieldname],
                        autoFocus: true,
                    })
                }

                return (
                    React.createElement('form', {
                            onSubmit: this.onSubmit,
                            className: 'ContactForm',
                            noValidate: true
                        },
                        create_input_element('email', 'email'),
                        create_input_element('text', 'name'),
                        React.createElement('button', {
                            type: 'submit'
                        }, ""Add Contact"")
                    )
                );
            },
        });


        var ContactItem = React.createClass({
            propTypes: {
                name: React.PropTypes.string.isRequired,
                email: React.PropTypes.string.isRequired,
            },

            render: function() {
                return (
                    React.createElement('li', {
                            className: 'ContactItem'
                        },
                        React.createElement('h2', {
                            className: 'ContactItem-email'
                        }, this.props.email),
                        React.createElement('span', {
                            className: 'ContactItem-name'
                        }, this.props.name)
                    )
                );
            },
        });


        var ContactView = React.createClass({
            propTypes: {
                contacts: React.PropTypes.array.isRequired,
                newContact: React.PropTypes.object.isRequired,
                onNewContactChange: React.PropTypes.func.isRequired,
                onNewContactSubmit: React.PropTypes.func.isRequired,
            },

            render: function() {
                var contactItemElements = this.props.contacts
                    .map(function(contact) {
                        return React.createElement(ContactItem, contact);
                    });

                return (
                    React.createElement('div', {
                            className: 'ContactView'
                        },
                        React.createElement('h1', {
                            className: 'ContactView-title'
                        }, ""Contacts""),
                        React.createElement('ul', {
                            className: 'ContactView-list'
                        }, contactItemElements),
                        React.createElement(ContactForm, {
                            value: this.props.newContact,
                            onChange: this.props.onNewContactChange,
                            onSubmit: this.props.onNewContactSubmit,
                        })
                    )
                );
            },
        });



        /*
         * Constants
         */


        var CONTACT_TEMPLATE = {
            name: """",
            email: """",
            description: """",
            errors: null
        };




        /*
         * Model
         */


        // The app's complete current state
        var state = {};

        // Make the given changes to the state and perform any required housekeeping
        function setState(changes) {
            Object.assign(state, changes);

            ReactDOM.render(
                React.createElement(ContactView, Object.assign({}, state, {
                    onNewContactChange: updateNewContact,
                    onNewContactSubmit: submitNewContact,
                })),
                document.getElementById('react-app')
            );
        }

        // Set initial data
        setState({
            contacts: [{
                key: 1,
                name: ""James K Nelson - Front End Unicorn"",
                email: ""james@jamesknelson.com""
            }, {
                key: 2,
                name: ""Jim"",
                email: ""jim@example.com""
            }, ],
            newContact: Object.assign({}, CONTACT_TEMPLATE),
        });



        /*
         * Actions
         */


        function updateNewContact(contact) {
            setState({
                newContact: contact
            });
        }


        function submitNewContact() {
            var contact = Object.assign({}, state.newContact, {
                key: state.contacts.length + 1,
                errors: {}
            });

            if (!/.+@.+\..+/.test(contact.email)) {
                contact.errors.email = [""Please enter your new contact's email""];
            }
            if (!contact.name) {
                contact.errors.name = [""Please enter your new contact's name""];
            }

            setState(
                Object.keys(contact.errors).length === 0 ?
                {
                    newContact: Object.assign({}, CONTACT_TEMPLATE),
                    contacts: state.contacts.slice(0).concat(contact),
                } :
                {
                    newContact: contact
                }
            );
        }
    &lt;/script&gt;

&lt;/body&gt;
</code></pre>

<p>Why can't I generate <code>React.createElement()</code> things in a function? Thank you</p>
","3282434","","","","","2017-01-27 16:35:08","reactjs: Uncaught TypeError: Cannot read property 'value' of undefined","<javascript><reactjs>","1","1","","",""
"49632163","1","49632326","","2018-04-03 14:06:06","","1","33","<p>I have a factory where I want to spawn react components. For now I have <code>Load</code> and <code>Migrate</code>. Passing the imported name directly works fine:</p>

<pre><code>...

return React.createElement(Migrate, {
    node: node,
    diagramEngine: diagramEngine
});
</code></pre>

<p>But I would like to insert the name dynamically.</p>

<pre><code>...    

var ElementToCreate = node.state.manipulator.name;

return React.createElement(ElementToCreate, {
    node: node,
    diagramEngine: diagramEngine
});
</code></pre>

<p>But this blows up with error message:</p>

<blockquote>
  <p>Warning: Unknown props <code>node</code>, <code>diagramEngine</code> on  tag.
  Remove these props from the element</p>
</blockquote>

<p>Passing raw strings ""Migrate"" or ""Load"" also fails. Following the tips <a href=""https://reactjs.org/warnings/unknown-prop.html"" rel=""nofollow noreferrer"">here</a> did not help me identify the issue. Any ideas?</p>
","1228951","","","","","2018-04-03 14:39:29","Cannot create react element from string","<reactjs>","2","0","","",""
"34052020","1","","","2015-12-02 20:06:01","","1","128","<p>I have been trying to fix the problem by searching for onClick not firing problem, but alas, noone seemed to have a proper solution.</p>

<p>For this project, I have recently learned ReactJs to integrate it within AngularJS to replace slow ng-repeat in Angular. </p>

<p>The problem I have right now is that onClick does not call the updateOrders function when clicking on a rendered <code>&lt;tr&gt;</code>. Through my testing I have confirmed that the problem does not lie in the click handler. </p>

<p>Through my research, I have found out that people have the same problem when using .map function to generate an array. While I have manually done so, the problem remains. </p>

<p>I hope the community would be helpful in pointing out what I am doing wrong. </p>

<p>Thank you very much!  </p>

<pre><code>/*Click handler*/ 


function updateOrders(reactComponent, ordPrice, ordAmt) {
      var scope = reactComponent.scope.$root;
      scope.updateOrderInputS(ordPrice,ordAmt)

    }

/*Component*/

var ReactCSSTransitionGroup = React.addons.CSSTransitionGroup;
var OrderBook = React.createClass({


  render: function() {
    var reactComponent = this.props;
    var asks = this.props.data.asks;
    var bids = this.props.data.bids;
    var asksRows = [];
    var bidsRows = [];
    var spread = Number(asks[asks.length-1].price - bids[0].price);
    spread = spread.toFixed(2);

    //creating array of react elements to return
    for (var i = 0; i &lt; asks.length; i++) {
      var ask = asks[i];
      asksRows.push(
        React.createElement(
          ""tr"",
          { ""className"": ""trade"", ""key"": i, ""onClick"": updateOrders(reactComponent, ask.price, ask.amount) },
          //{ ""className"": ""trade"", ""key"": i },
          React.createElement(
                    ""td"",
                    null,
                    Number(ask.amount).toFixed(2)
          ),
          React.createElement(
                    ""td"",
                    { style: {color: ""#FF6939""} },
                    '$'+ Number(ask.price).toFixed(2)
          )
        )
      )
    };

    for (var i = 0; i &lt; bids.length; i++) {
      var bid = bids[i];
      bidsRows.push(
        React.createElement(
          ""tr"",
          { ""className"": ""trade"", ""key"": i*Math.PI, ""onClick"": updateOrders(reactComponent,bid.price, bid.amount) },
          //{ ""className"": ""trade"", ""key"": i*Math.PI},
          React.createElement(
                    ""td"",
                    null,
                    Number(bid.amount).toFixed(2)
          ),
          React.createElement(
                    ""td"",
                    { style: {color: ""#50b949""} },
                    '$'+ Number(bid.price).toFixed(2)
          )
        )
      )
    };

    return (
      React.createElement(
        ""div"",
        null,
        React.createElement(
          ""div"",
          { ""className"": ""row section-head"" },
          React.createElement(
            ""h5"",
            null,
            ""DEPTH:"",
            React.createElement(""span"", { id: ""mktDptProd"", style:{color:""white"" }})
          )
        ),
        React.createElement(
          ""table"",
          { ""className"": ""table scroll table-condensed"", style:{textAlign:""center""} },
          React.createElement(
            ""thead"",
            null,
            React.createElement(
              ""tr"",
              null,
              React.createElement(
                ""th"",
                null,
                ""SIZE""
              ),
              React.createElement(
                ""th"",
                null,
                ""PRICE""
              )
            )
          ),
          React.createElement(
            ""tbody"",
            { id: ""MDtable"", style: {height:""800px""} },
            asksRows,
            React.createElement(
              ""tr"",
              { style: {borderTop: ""1px solid #4B555C"", borderBottom: ""1px solid #4B555C"", display:""block""} },
              React.createElement(
                ""td"",
                null,
                ""Spread:""
              ),
              React.createElement(
                ""td"",
                null,
                spread
              )
            ),
            bidsRows
          )
        )
      )
  );
  }
});
</code></pre>
","5632031","","1016716","","2015-12-07 21:10:06","2015-12-07 21:10:06","onClick does no fire reactJS","<javascript><reactjs>","1","1","","",""
"34094414","1","34094591","","2015-12-04 17:50:09","","1","3404","<p>I have two react components that have to stay in separate files but need to share a property. One component will change the <code>this.props.color</code> and the other component needs to know what that new color is. I know you can import the actual component but I don't know how to access the properties from that component. Here's a very simple example of my app (I'm using ES6)</p>

<p>component1.js</p>

<pre><code>import React, {Component, PropTypes} from 'react';

export default class FirstComponent extends Component {
  static propTypes = {
    color: PropTypes.string
  }
  handleClick () {
    //change color here
  }
  render () {
    var styles = {
      backgroundColor: this.props.color
    };
    return &lt;div id=""one"" style={styles} onclick={this.handleClick}&gt;&lt;/div&gt;;
  }
}
</code></pre>

<p>component2.js</p>

<pre><code>import React, {Component} from 'react';
import FirstComponent from './component1.js';

export default class SecondComponent extends Component {
  /*...*/
  render () {
    console.log(FirstComponent); //??
    return &lt;div id=""two""&gt;&lt;/div&gt;;
  }
}
</code></pre>

<p>parent1.js</p>

<pre><code>import React, {Component} from 'react';
import FirstComponent from './component1.js';

export default class FirstComponentParent extends Component {
  color = 'rgb(255, 0, 0)';
  return React.createElement(FirstComponent, {color: this.color});
}
</code></pre>

<p>parent2.js</p>

<pre><code>import React, {Component} from 'react';
import SecondComponent from './component2.js';

export default class SecondComponentParent extends Component {
  return React.createElement(SecondComponent);
}
</code></pre>
","2328225","","2328225","","2015-12-04 18:01:11","2015-12-04 18:12:55","Access props of react component in separate file","<javascript><reactjs>","1","0","","",""
"42732477","1","42732606","","2017-03-11 07:13:21","","0","53","<p>i'm new to react,and this is just a part of my code.</p>

<p>About.js</p>

<pre><code>import React from 'react'

export default React.createClass({
    render() {
        return &lt;div &gt; About &lt; /div&gt;
    },
    componentDidMount() {
        var elem = document.createElement(""div"");
        elem.innerText = ""okokokkokoko"";
        document.getElementById('app').appendChild(elem);
    }
})
</code></pre>

<p>App.js</p>

<pre><code>import React from 'react'
import { Link } from 'react-router'

export default React.createClass({
  render() {
    return (
      &lt;div&gt;
        &lt;h1&gt;React Router Tutorial&lt;/h1&gt;
        &lt;ul role=""nav""&gt;
          &lt;li&gt;&lt;Link to=""/about""&gt;About&lt;/Link&gt;&lt;/li&gt;
          &lt;li&gt;&lt;Link to=""/repos""&gt;Repos&lt;/Link&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/div&gt;
    )
  }
})
</code></pre>

<p>index.js</p>

<pre><code>import React from 'react'
import { render } from 'react-dom'
import { Router, Route, browserHistory } from 'react-router'
import App from './modules/App'
import About from './modules/About'
import Repos from './modules/Repos'

render((
  &lt;Router history={browserHistory}&gt;
    &lt;Route path=""/"" component={App}/&gt;
    &lt;Route path=""/repos"" component={Repos}/&gt;
    &lt;Route path=""/about"" component={About}/&gt;
  &lt;/Router&gt;
), document.getElementById('app'))
</code></pre>

<p>when i click the browser's back button on the About page,borwser will be back to the App page,but the page still retains the element</p>

<pre><code>&lt;div&gt;okokokkokoko&lt;/div&gt;
</code></pre>

<p>how can i solve this problem without changing the code of About.js?</p>
","6678760","","","","","2017-03-11 08:29:45","react-router performs unexpectedly when clicking back button","<javascript><react-router>","2","0","","",""
"48983386","1","","","2018-02-26 07:26:11","","0","64","<p>I am dynamically adding script tag in componentDidMount() on first load. Next when I route to that component I just need the script to re-execute again. Hence I am calling <code>window.__sharethis__.initialize();</code> . This function gets called, but it doesn't update the count. What function I need to call so that I can re-execute the script.</p>

<pre><code>const script1 = document.getElementById(""shareThisId"");
            if (script1) {
                window.__sharethis__.initialize();
            } else {
                const script = document.createElement(""script"");

                script.src =
                    ""//platform-api.sharethis.com/js/sharethis.js#property=[some-id]&amp;product=sop?r="" +
                    Math.random();
                script.async = true;
                script.id = ""shareThisId"";

                document.body.appendChild(script);
            }
</code></pre>

<p>Note that, on browser reload, the count gets updated, but not when I route using react-router.</p>

<p>I have also tried removing the script from DOM and adding it again in componentDidMount(). But, removing and updating from dom, will not result in the execution of script.</p>
","8036199","","","","","2018-02-26 09:50:59","How to reinitialize external javascript in reactjs?","<javascript><reactjs><dom><react-router><sharethis>","1","2","","",""
"43289348","1","","","2017-04-08 01:52:21","","32","19620","<p>At latest React 15.5.1 package, If using babel react present to resolve jsx file, will appears following warnings:</p>

<pre><code>Warning: Accessing PropTypes via the main React package is deprecated. Use the prop-types package from npm instead.

warning.js:36 Warning: A Component: React.createClass is deprecated and will be removed in version 16. Use plain JavaScript classes instead. If you're not yet ready to migrate, create-react-class is available on npm as a drop-in replacement.
</code></pre>

<p>My code is following:</p>

<pre><code>import React from 'react'
import ReactDOM from 'react-dom';

class Counter extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      count: 1
    }
  }
  componentDidMount() {
    setInterval( ()=&gt; {
      this.setState((prevState, props) =&gt; ({
        count: prevState.count + 1
      }))
    }, 1000)
  }
  render(){
    return (
      &lt;h1&gt;{this.state.count}&lt;/h1&gt;
    )
  }
}

const root = document.createElement('div');
root.id = 'app';
document.body.appendChild(root);

ReactDOM.render(
  &lt;Counter /&gt;,
  document.querySelector('#app')
);
</code></pre>

<p>I am not using React.createClass and PropTypes in my code, It seems babel transform my code to <code>React.createClass</code> and <code>PropTypes</code>, How to fix that?</p>
","2695642","","4652706","","2018-02-24 02:50:02","2018-02-24 02:50:02","Disable React.createClass and PropTypes deprecated warnings in babel react present","<javascript><reactjs><babel>","6","3","9","",""
"35844607","1","35845153","","2016-03-07 13:08:54","","6","4966","<p>I'm trying to setup TypeScript HTML app in visual studio. I want to use reactjs v0.14.7</p>

<p>I would like to avoid using tools like Browserify.</p>

<p>However, how to use the <code>react-dom</code> module then?</p>

<p>Let's forget about typescript for a while. I need to get pure ES5 up and running first.</p>

<p>currently, I have this:</p>

<pre><code>&lt;script src=""Scripts/react/react.js""&gt;&lt;/script&gt;
&lt;script src=""Scripts/react/react-dom.js""&gt;&lt;/script&gt;
&lt;script&gt;
    var Button = React.createClass({
        render: function () {
            return (React.createElement(""div"", { className: ""btn btn-default"" }, 'hello world'));
        }
    });
    ReactDOM.render(React.createElement('Button'), document.getElementById('container'));
&lt;/script&gt;
</code></pre>

<p>however, browser complains, ReactDOM object does not exists.</p>

<p>I have tried:</p>

<pre><code>&lt;script src=""Scripts/require.js""&gt;&lt;/script&gt;
&lt;script src=""Scripts/react/react.js""&gt;&lt;/script&gt;
&lt;script src=""Scripts/react/react-dom.js""&gt;&lt;/script&gt;
&lt;script&gt;
   var React = require('react');
   var ReactDOM = require('react-dom');
   ....
&lt;/script&gt;
</code></pre>

<p>however, it does not work with require.js: Module name ""react"" has not been loaded yet for context: _. Use require([])</p>

<p>Can someone bring a little more light into this, please? How to use react without any server side tools like bundling, transpiling etc.</p>

<p>Answers like ""use npm"" won't be accepted as answer.</p>
","475727","","475727","","2016-03-07 13:16:48","2018-04-03 18:50:47","Require reactjs modules without Browserify, Webpack or Babel","<javascript><reactjs><typescript><commonjs>","3","0","3","",""
"50344466","1","50344522","","2018-05-15 07:21:43","","0","43","<p>I got a problem with quill editor on react.<br/><br/>
<code>imageHandler()</code> works well.<br/>But In <code>imageHandler()</code>, It can't call others like state, props, function, etc as well.<br/>
I wanna call quillRef in <code>imageHandler()</code> that is called by module.toolbar.handlers </p>

<p>Below is my simple code. <br/></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React, { Component } from 'react';
import ReactQuill from 'react-quill'; // ES6

const formats = [
  'header', 'font', 'size',
  'bold', 'italic', 'underline', 'strike', 'blockquote',
  'list', 'bullet', 'indent',
  'link', 'image', 'video'
]

class App extends Component {
  
  constructor(props) {
    super(props)
    this.state = { text: ''}
    this.handleChange = this.handleChange.bind(this)

    this.reactQuillRef = null; // ReactQuill component
    this.quillRef = null;      // Quill instance
  }
  
  modules = {
    toolbar: {
      container:  [['bold', 'italic', 'underline', 'blockquote'],
            [{'list': 'ordered'}, {'list': 'bullet'}],
            ['image'],
      ],
      handlers: {
         'image': this.imageHandler
      }
    }
  }

  componentDidMount() {
    this.attachQuillRefs()
  }
  
  componentDidUpdate() {
    this.attachQuillRefs()
  }
  
  attachQuillRefs = () =&gt; {
    if (typeof this.reactQuillRef.getEditor !== 'function') return;
    this.quillRef = this.reactQuillRef.getEditor();
  }

  imageHandler() {
    const input = document.createElement('input');
    input.setAttribute('type', 'file');
    input.setAttribute('accept', 'image/*');
    input.click();
    
    input.onchange = () =&gt; {
    
      const file = input.files[0];
      console.log(file); // works well
      
      // problems : can't call ref, props, function... etc
      console.log(""ref : "", this.reactQuillRef, this.quillRef); // undefine
      
      // this.insertImg(); // not work (insertImg is not a function)

      console.log(this.props); // undefine
      
    };
  }

  handleChange(value) {
    this.setState({ text: value });
    this.refs.test.innerHTML = this.state.text;
  }
  
  insertImg = () =&gt; {
    console.log(""insertImg"",prototype);
    var range = this.quillRef.getSelection();
    let position = range ? range.index : 0;
    console.log(this.quillRef); // works well!!!!!!!!! why diffrent with imgHandler() 
    this.quillRef.insertEmbed(position, 'image','https://images.pexels.com/photos/47480/pexels-photo-47480.jpeg?auto=compress&amp;cs=tinysrgb&amp;h=350');
  }

  render() {
    return (
      &lt;div className=""App""&gt;
      &lt;button onClick={this.insertImg}&gt;Insert Img&lt;/button&gt;
        &lt;ReactQuill value={this.state.text}
                  onChange={this.handleChange} 
                  modules={this.modules}
                  formats={formats} 
                  ref={(el) =&gt; {this.reactQuillRef = el}}
        /&gt;

      &lt;br/&gt;&lt;br/&gt;
      &lt;div contentEditable='true' ref='test'&gt;&lt;/div&gt;
      {this.state.text}
      &lt;/div&gt;

    );
  }
}

export default App;</code></pre>
</div>
</div>
</p>

<p>I tried many ways(all failed) and this case, not work</p>

<p><code>imageHandler() {...}</code> to <code>imageHandler = () =&gt; {...}</code></p>

<p><br/><br/><br/>
And my package.json here
<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>{
  ""name"": ""quill"",
  ""version"": ""0.1.0"",
  ""private"": true,
  ""dependencies"": {
    ""fine-uploader"": ""^5.16.2"",
    ""react"": ""^16.3.2"",
    ""react-dom"": ""^16.3.2"",
    ""react-quill"": ""^1.2.7"",
    ""react-scripts"": ""1.1.4""
  },
  ""scripts"": {
    ""start"": ""react-scripts start"",
    ""build"": ""react-scripts build"",
    ""test"": ""react-scripts test --env=jsdom"",
    ""eject"": ""react-scripts eject""
  }
}</code></pre>
</div>
</div>
</p>

<p>Any Idea why?
Does anyone give hands for me?
Thank you!</p>
","6724401","","6724401","","2018-05-15 09:16:36","2018-05-15 15:52:58","can't call ref(also others like state, props, function, etc) on react quill custom handler","<javascript><reactjs><quill>","1","0","","",""
"42682055","1","","","2017-03-08 21:15:21","","0","117","<p>I have this es6 + jsx code than work fine:</p>

<pre><code>// list.js
import React from 'react';
import {
  List,
  Datagrid,
  Filter,
  TextInput,
  NumberField,
  TextField,
} from 'admin-on-rest/lib/mui';

const Filters = props =&gt;
  &lt;Filter {...props}&gt;
    &lt;TextInput source=""q"" alwaysOn /&gt;
  &lt;/Filter&gt;
;

export default props =&gt; (
  &lt;List {...props} filters={&lt;Filters /&gt;} &gt;
    &lt;Datagrid&gt;
      &lt;NumberField source=""id"" /&gt;
      &lt;TextField source=""description"" /&gt;
    &lt;/Datagrid&gt;
  &lt;/List&gt;
);
</code></pre>

<p>I want extract Filters definition in a separate source file.</p>

<p>I tried this way:</p>

<pre><code>// filters.js
import React from 'react';
import {
  Filter,
  TextInput,
  TextField,
} from 'admin-on-rest';

export default props =&gt;
  &lt;Filter {...props}&gt;
    &lt;TextInput source=""q"" alwaysOn /&gt;
  &lt;/Filter&gt;
;
</code></pre>

<p>and</p>

<pre><code>// list.js
import React from 'react';
import {
  List,
  Datagrid,
  Filter,
  TextInput,
  NumberField,
  TextField,
} from 'admin-on-rest/lib/mui';
import Filters from 'filters';

export default props =&gt; (
  &lt;List {...props} filters={&lt;Filters /&gt;} &gt;
    &lt;Datagrid&gt;
      &lt;NumberField source=""id"" /&gt;
      &lt;TextField source=""description"" /&gt;
    &lt;/Datagrid&gt;
  &lt;/List&gt;
);
</code></pre>

<p>I thought the code was equivalent, but in the second case I get a couple of</p>

<blockquote>
  <p>Warning: React.createElement: type is invalid -- expected a string
  (for built-in components) or a class/function (for composite
  components) but got: undefined. You likely forgot to export your
  component from the file it's defined in.</p>
</blockquote>

<p>and finally this error</p>

<blockquote>
  <p>Uncaught (in promise) Error: Element type is invalid: expected a
  string (for built-in components) or a class/function (for composite
  components) but got: undefined. You likely forgot to export your
  component from the file it's defined in. Check the render method of
  <code>StatelessComponent</code>.</p>
</blockquote>

<p>The major indicted is</p>

<pre><code>filters={&lt;Filters /&gt;}
</code></pre>

<p>but what would be the correct syntax?</p>
","1425387","","1425387","","2017-03-09 10:44:52","2017-03-09 10:44:52","Es6 react how I can extract const component in other file fail","<ecmascript-6><jsx><admin-on-rest>","1","3","","",""
"34806641","1","34813560","","2016-01-15 08:05:27","","2","442","<p>My app.js requires react.
I am following the following instructions to split the app and react code: <a href=""https://webpack.github.io/docs/code-splitting.html#split-app-and-vendor-code"" rel=""nofollow"">https://webpack.github.io/docs/code-splitting.html#split-app-and-vendor-code</a>.</p>

<p>Unfortunately, webpack generate app.bundle.js and vendors.bundle.js; both contains react.js library, which is not desired.</p>

<p>I am expecting webpack to generate a small app.bundle.js(which does not contains react) and a large vendor.js(which contains react), according to the link post above.</p>

<p>My webpack configure file:</p>

<pre><code>var path = require('path');
var webpack = require('webpack');

module.exports = {
  entry: {
    app: ""./app.js"",
    vendors: ['react']
  },
  output: {
    filename: '[name].bundle.js' // Notice we use a variable
  },
  plugin: [
    new webpack.optimize.CommonsChunkPlugin(/* chunkName= */""vendors"", /* filename= */""vendor.js"")
  ],
  module: {
    preLoaders: [
      {
        test: /\.jsx?$/,
        exclude: /(node_modules|bower_components)/,
        loader: 'source-map'
      }
    ],
    loaders: [
      {
        test: /\.jsx?$/,
        exclude: /(node_modules|bower_components)/,
        loaders: [
          'react-hot',
          'babel?presets[]=stage-0,presets[]=react,presets[]=es2015'
        ]
      }
    ]
  }
};
</code></pre>

<p>My app.js file:</p>

<pre><code>// Import React and JS
var React = require('react')

React.render(
  React.createElement('h1', null, 'Hello, world!'),
  document.getElementById('example')
);
</code></pre>

<p>Any suggestion is highly appreciated.</p>
","4935267","","4935267","","2016-01-15 09:09:33","2016-01-15 14:43:40","why split app and vendor js code fails in webpack & react","<reactjs><webpack>","1","4","1","",""
"33383146","1","33914388","","2015-10-28 04:52:48","","12","5679","<p>I am new to reactJS and try to learn how to test with it. I have encouter the following testing util method. However i am keep getting the same error <code>message:ReferenceError: document is not defined</code>. </p>

<hr>

<p><strong>renderIntoDocument</strong></p>

<pre><code>ReactComponent renderIntoDocument(
  ReactElement instance
)
</code></pre>

<p>Render a component into a detached DOM node in the document. This function requires a DOM.</p>

<p>Note:
You will need to have window, window.document and window.document.createElement globally available before you import React. Otherwise React will think it can't access the DOM and methods like setState won't work.</p>

<hr>

<p>I know it the reason failing its missing the DOM, but how can i insert the DOM or require it?</p>

<hr>

<p>My test below:</p>

<pre><code>import expect from 'expect.js';
import React from 'react';
import Header from '../../components/header';
import {renderShallow} from './help';
import ReactAddOn from 'react/addons';

var TestUtils = ReactAddOn.addons.TestUtils;

describe('Test react', function() {
  let component;

  beforeEach(()=&gt;{
    component = TestUtils.renderIntoDocument(&lt;Header&gt;&lt;/Header&gt;);
  });


  it('Test if the content been correclty render', function() {
    console.log(component);
  });
});
</code></pre>
","409275","","409275","","2015-10-29 00:53:29","2016-08-10 20:13:22","Test with reactjs renderIntoDocument keep failed due to required DOM","<reactjs><mocha><expect.js>","2","10","5","",""
"41268275","1","41268410","","2016-12-21 17:10:47","","2","191","<p>I'm creating my very first app with reactJS but I keep getting this error:</p>

<pre><code>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM element) or a ReactClass (for composite components). Check the render method of 'App'
</code></pre>

<p>I've already read a dozen of questions but none of them helped me get through this problem.
Here are my files:</p>

<p>my <strong>app.js</strong> file:</p>

<pre><code>import React, { Component } from 'react';
import { View, Text } from 'react-native';
import { Header } from './components/common';
import { ChooseLevel } from './components/ChooseLevel';

class App extends Component {

  renderContent() {
    &lt;ChooseLevel/&gt;
  }

  render() {
    return (
      &lt;View&gt;
        &lt;Header headerText=""my app"" /&gt;
        {this.renderContent()}
      &lt;/View&gt;
    );
  }
}

export default App;
</code></pre>

<p><strong>ChooseLevel.js</strong>:</p>

<pre><code>import React, { Component } from 'react';
import { Text, View } from 'react-native';

class ChooseLevel extends Component {

  render() {
    var rows = [];

    for (var i=1; i &lt;= 10; i++) {
        rows.push(
          &lt;button style={styles.squareStyle}&gt; 
            Level   
          &lt;/button&gt;
        );
    }


    return (
      &lt;div&gt;
        {rows}
      &lt;/div&gt;
    );
  }
}

const styles = {
  squareStyle: {
    flex:0.3,
    height:60
  }
};

export default ChooseLevel;
</code></pre>
","4188968","","","","","2016-12-21 17:18:29","Warning: React.createElement: type should not be null","<reactjs><react-native>","1","1","","",""
"45361063","1","45368086","","2017-07-27 21:09:59","","0","283","<p>Problem with transpiling JSX into <code>h()</code> in tests. All config files is similar to create-react-app, exclude changes for <code>TypeScript</code> and <code>preact</code></p>

<p>I create app via <code>create-react-app my-app --script=react-scripts-ts</code> - for TypeScript project. Then do eject and change <code>react</code> to <code>preact</code> (don't use <code>preact-compat</code>).</p>

<p>For migrating to <code>preact</code> I'm add to <code>package.json</code> into <code>babel.plugins section</code> new plugin <code>[""babel-plugin-transform-react-jsx"", { pragma: ""h""}]</code> - for transpiling <code>&lt;JSX /&gt;</code> to <code>h(JSX)</code> function calls, instead for default <code>React.createElement(JSX)</code> (migration guide <a href=""https://preactjs.com/guide/switching-to-preact"" rel=""nofollow noreferrer"">https://preactjs.com/guide/switching-to-preact</a>).</p>

<p>And this works fine.</p>

<p>But test has a different configuration of transpiling <code>&lt;JSX /&gt;</code>: it's transpile to <code>React.createElement(JSX)</code> be default. And in test I take an error <code>ReferenceError: React is not defined at Object.&lt;anonymous&gt; (src/Linkify/Linkify.test.tsx:39:21)</code>. If I manually change <code>&lt;JSX /&gt;</code> to <code>h(SomeComponent)</code> in test and tested file - it work.</p>

<p>How to transpile <code>&lt;JSX /&gt;</code> into <code>h(JSX)</code> for tests?</p>

<pre><code>// typescriptTransform.js
// Copyright 2004-present Facebook. All Rights Reserved.

'use strict';

const fs = require('fs');
const crypto = require('crypto');
const tsc = require('typescript');
const tsconfigPath = require('app-root-path').resolve('/tsconfig.json');
const THIS_FILE = fs.readFileSync(__filename);

let compilerConfig = {
  module: tsc.ModuleKind.CommonJS,
  jsx: tsc.JsxEmit.React,
};

if (fs.existsSync(tsconfigPath)) {
  try {
    const tsconfig = tsc.readConfigFile(tsconfigPath).config;

    if (tsconfig &amp;&amp; tsconfig.compilerOptions) {
      compilerConfig = tsconfig.compilerOptions;
    }
  } catch (e) {
    /* Do nothing - default is set */
  }
}

module.exports = {
  process(src, path, config, options) {
    if (path.endsWith('.ts') || path.endsWith('.tsx')) {
      let compilerOptions = compilerConfig;
      if (options.instrument) {
        // inline source with source map for remapping coverage
        compilerOptions = Object.assign({}, compilerConfig);
        delete compilerOptions.sourceMap;
        compilerOptions.inlineSourceMap = true;
        compilerOptions.inlineSources = true;
        // fix broken paths in coverage report if `.outDir` is set
        delete compilerOptions.outDir;
      }

      const tsTranspiled = tsc.transpileModule(src, {
        compilerOptions: compilerOptions,
        fileName: path,
      });
      return tsTranspiled.outputText;
    }
    return src;
  },
  getCacheKey(fileData, filePath, configStr, options) {
    return crypto
      .createHash('md5')
      .update(THIS_FILE)
      .update('\0', 'utf8')
      .update(fileData)
      .update('\0', 'utf8')
      .update(filePath)
      .update('\0', 'utf8')
      .update(configStr)
      .update('\0', 'utf8')
      .update(JSON.stringify(compilerConfig))
      .update('\0', 'utf8')
      .update(options.instrument ? 'instrument' : '')
      .digest('hex');
  },
};
</code></pre>

<p>Test sample:</p>

<pre><code>import { h, render } from 'preact';
import Linkify from './Linkify';

it('renders without crashing', () =&gt; {
  const div = document.createElement('div');
  render(&lt;Linkify children={'text'} /&gt;, div);
});
</code></pre>
","5106408","","","","","2017-07-28 08:05:07","Using Jest with Typescript + preact","<typescript><babel><create-react-app><jest><preact>","1","0","","",""
"35494916","1","35494974","","2016-02-19 00:01:40","","1","1169","<p>I'm building a Express app using React. I start my server, go to localhost and I see a blank page, when I check the developer tools on chrome it shows me that my js file is plain HTML. Why is that?</p>

<p>This is my <code>server.js</code>:</p>

<pre><code>var express = require('express');

var app = express();
var port = process.env.NODE_ENV || 3000;

app.get('*', function(req, res) {
    res.sendFile(__dirname + '/public/views/index.html');
});

app.listen(port, function() {
    console.log('Listening to http://localhost:' + port);
});
</code></pre>

<p>This is my <code>app.js</code>:</p>

<pre><code>var React = require('react'),
    ReactDOM = require('react-dom');

var App = React.createClass({displayName: ""App"",
    render () {
        return (
            React.createElement(""h1"", null, ""Hello World!!!!!"")
        )
    }
});

ReactDOM.render(React.createElement(App, null), document.getElementById('main-app'));
</code></pre>

<p>My <code>index.html</code>:</p>

<pre><code>&lt;body&gt;
    &lt;div id=""main-app""&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;script src=""public/assets/dist/javascripts/app.js""&gt;&lt;/script&gt;
</code></pre>

<p>This is what I see on developer tools:
<a href=""http://i.stack.imgur.com/2Hy4N.png"" rel=""nofollow"">image</a></p>
","4980591","","","","","2016-02-19 01:40:27","Express app not rendering my react components","<node.js><express><reactjs>","1","0","1","",""
"27918802","1","27919569","","2015-01-13 09:29:46","","0","5687","<p>I'm trying to add animations for enter into my list inside React.js app (<a href=""http://facebook.github.io/react/docs/animation.html"" rel=""nofollow"">http://facebook.github.io/react/docs/animation.html</a>).</p>

<p>But <code>ReactCSSTransitionGroup</code> throws such exceptions:</p>

<p><code>Uncaught TypeError: Cannot read property '_mockedReactClassConstructor' of undefined</code></p>

<p>together with warnings: </p>

<p><code>Warning: React.createElement: type should not be null or undefined. It should be a string (for DOM elements) or a ReactClass (for composite components).
warning.js:36</code></p>

<p><code>Warning: Only functions or strings can be mounted as React components.</code></p>

<p>My component looks like:</p>

<pre><code>var List = React.createClass({
  render: function () {
    var items = this.props.data
        .filter(function (item) {
            return item.stream;
        })
        .map(function (item) {
            return &lt;div key={item.id}&gt;item.name&lt;/div&gt;;
        });

      return (
        &lt;div className=""list clearfix""&gt;
            &lt;ReactCSSTransitionGroup transitionName=""example""&gt;
                {items}
            &lt;/ReactCSSTransitionGroup&gt;
        &lt;/div&gt;
     );
  }
});
</code></pre>
","2117550","","2117550","","2015-01-13 10:11:39","2015-01-13 10:57:04","react.js - ReactCSSTransitionGroup throws exception","<javascript><animation><css-transitions><reactjs><reactcsstransitiongroup>","1","3","1","",""
"44227036","1","44230297","","2017-05-28 11:54:30","","1","432","<p>I am using <code>jest</code> and <code>enzyme</code> to test my react component which relies on <code>antd</code> - a 3rd react UI library.
For illustrative purpose, I produce the minimal code that is fair enough to show my question.</p>

<p>See my <code>test</code> component as follow:</p>

<pre><code>import React from 'react';
import { Button } from 'antd';

function Test({onSubmit}) {
  return (
          &lt;div&gt;
           &lt;Button htmlType=""submit"" type=""primary"" /&gt;
          &lt;/div&gt;
         );
}

export default Test;
</code></pre>

<p><strong><em>Q1: I mock up the Button as below since unit test requires us to isolate the target and mock up any other dependencies.
    Is that correct?</em></strong></p>

<pre><code>__mocks__
  antd.js
</code></pre>

<p>antd.js</p>

<pre><code>import mockComponent from '../mockComponent';

const list = [
  'Form',
  'Input',
  'Button',
  'Spin',
  'Icon'
];

const mockups = list.reduce((prev, next) =&gt; {
  prev[next] = mockComponent(next);
  return prev;
}, {});

mockups.Form.Item = mockComponent('Form.Item');

export const Form = mockups.Form;
export const Input = mockups.Input;
export const Button = mockups.Button;
export const Spin = mockups.Spin;
export const Icon = mockups.Icon;
</code></pre>

<p>mockComponent.js</p>

<pre><code>import React from 'react';

export default function mockComponent (name) {
  return props =&gt; React.createElement(name, props, props.children);
}
</code></pre>

<p><strong><em>Q2. I have got the following warning even if the test passes. How can I resolve that?</em></strong></p>

<p>test.spec.js</p>

<pre><code>import React from 'react';

import { shallow, mount } from 'enzyme';
import renderer from 'react-test-renderer';

import Test from '../components/question';

describe('mount test', () =&gt; {
  let wrapper;

  let props;
  let mountedLogin;

  const test = () =&gt; {
    if (!mountedLogin) {
      mountedLogin = mount(&lt;Test {...props} /&gt;);
    }

    return mountedLogin;
  };

  beforeEach(() =&gt; {
    mountedLogin = null;
  });

  it('always render test as the root', () =&gt; {
    const divs = test().find('div');
    expect(divs.length).toBeGreaterThan(0);
  });
});
</code></pre>

<p>warning</p>

<pre><code> console.error node_modules/fbjs/lib/warning.js:36
 Warning: Unknown prop `htmlType` on &lt;Button&gt; tag. Remove this prop from the 
 element. For details, see
    in Button (created by Unknown)
    in Unknown (created by Test)
    in div (created by Test)
    in Test (created by WrapperComponent)
    in WrapperComponent
</code></pre>

<p>A side note, I haven't got any <code>jest</code> configs in my <code>package.json</code>.</p>

<p>Can anybody help me out with these.</p>

<p>Many thanks</p>
","403976","","","","","2017-05-28 17:50:02","The correct way to unit test react component","<unit-testing><reactjs><jest>","1","0","3","",""
"35694538","1","","","2016-02-29 08:04:44","","1","123","<p>I want to use react-bootstrap in meteor. I used meteorhacks:npm and cosmos:browserify by following the instructions at:
<a href=""https://react-in-meteor.readthedocs.org/en/latest/client-npm/"" rel=""nofollow"">https://react-in-meteor.readthedocs.org/en/latest/client-npm/</a></p>

<p>In myproj_root/packages.json, I added this line:
<code>
{
  ""react-bootstrap"": ""0.28.3"",
  ""externalify"" : ""0.1.0""
}
</code></p>

<p>After ""meteor run"", npm packages were automatically installed based on the command-line output. DropdownButton example works:</p>

<pre><code>var {DropdownButton, MenuItem, Modal} = ReactBootstrap;

renderDropdownButton() {
  return (
    &lt;div&gt;
      &lt;DropdownButton  title=""Menu""&gt;
        &lt;MenuItem eventKey=""1""&gt;New Post&lt;/MenuItem&gt;
      &lt;/DropdownButton&gt;
    &lt;/div&gt;
  );
},
</code></pre>

<p>However, when I tried Modal, </p>

<pre><code>NewPostModal = React.createClass({
  render() {
    return (
      &lt;div&gt;
        &lt;Modal onRequestHide={() =&gt; {}}&gt;
          &lt;Modal.Header closeButton&gt;
            &lt;Modal.Title&gt;Modal heading&lt;/Modal.Title&gt;
          &lt;/Modal.Header&gt;     
        &lt;/Modal&gt;
     &lt;/div&gt;
    );
  }
});
</code></pre>

<p>the following error is thrown:</p>

<blockquote>
  <p>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of <code>NewPostModal</code></p>
</blockquote>

<p>The problem seems to be that Modal.Header, Modal.Title are not recognized. Below are some of my package list info:</p>

<ul>
<li>Meteor: 1.2.1</li>
<li>react                   0.14.3* Everything you need to use React with Meteor</li>
<li>meteorhacks:npm           1.5.0  Use npm modules with your Meteor App</li>
<li>meteorhacks:ssr           2.2.0  Server Side Rendering for Meteor with </li>
<li>meteorhacks:subs-manager  1.6.3  Subscriptions Manager for Meteor</li>
<li>cosmos:browserify         0.9.4* Bundle NPM modules for client side with Brow...</li>
</ul>

<p>Any help is appreciated. </p>
","5996234","","5996234","","2016-03-01 01:40:57","2016-03-01 01:40:57","Failed to use react-bootstrap in meteor with Warning: React.createElement: type should not be null, undefined, boolean, or number","<meteor><browserify><react-bootstrap>","0","0","","",""
"43851776","1","","","2017-05-08 15:38:21","","2","747","<p>I'm completely new in ReactJS and just wanted to play around and test some things out. I was looking into how to implement Facebook API, but getting this error message:</p>

<pre><code>error  'FB' is not defined  no-undef
</code></pre>

<p>Wasn't sure how to go about fixing this. Would like to seek help to see what I'm doing wrong here. Am I supposed to import some kind of Facebook API?</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>import React, { Component } from 'react';
import logo from './logo.svg';
import './App.css';

class App extends Component {

  componentDidMount() {
    window.fbAsyncInit = function() {
      FB.init({
        appId      : '123141151155', //random app number
        cookie     : true,  // enable cookies to allow the server to access
                          // the session
        xfbml      : true,  // parse social plugins on this page
        version    : 'v2.3'
      });
      //JS SDK initialized, now you can use it
      FB.XFBML.parse();

      // Now that we've initialized the JavaScript SDK, we call
      // FB.getLoginStatus().  This function gets the state of the
      // person visiting this page and can return one of three states to
      // the callback you provide.  They can be:
      //
      // 1. Logged into your app ('connected')
      // 2. Logged into Facebook, but not your app ('not_authorized')
      // 3. Not logged into Facebook and can't tell if they are logged into
      //    your app or not.
      //
      // These three cases are handled in the callback function.
      FB.getLoginStatus(function(response) {
        this.statusChangeCallback(response);
      }.bind(this));
    }.bind(this);

    // Load the SDK asynchronously
    (function(d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) return;
      js = d.createElement(s); js.id = id;
      js.src = ""//connect.facebook.net/en_US/sdk.js"";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
  }

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
    console.log('Successful login for: ' + response.name);
    document.getElementById('status').innerHTML =
      'Thanks for logging in, ' + response.name + '!';
    });
  }

  // This is called with the results from from FB.getLoginStatus().
  statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      this.testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
      'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  checkLoginState() {
    FB.getLoginStatus(function(response) {
      this.statusChangeCallback(response);
    }.bind(this));
  }

  handleClick() {
    FB.login(this.checkLoginState());
  }

  render() {
    return (
      &lt;div className=""App""&gt;
        &lt;div className=""App-header""&gt;
          &lt;img src={logo} className=""App-logo"" alt=""logo"" /&gt;
          &lt;h2&gt;Welcome to React&lt;/h2&gt;
        &lt;/div&gt;
        &lt;p className=""App-intro""&gt;
          To get started, edit &lt;code&gt;src/App.js&lt;/code&gt; and save to reload.
        &lt;/p&gt;
      &lt;/div&gt;
    );
  }
}

export default App;</code></pre>
</div>
</div>
</p>
","659751","","","","","2017-07-23 18:25:27","reactjs and Facebook API: Getting error 'FB' is not defined no-undef","<facebook><reactjs><facebook-graph-api>","2","9","1","",""
"44024527","1","","","2017-05-17 12:12:42","","2","319","<p>I am implementing internationalization in a react application with the <a href=""https://github.com/yahoo/react-intl"" rel=""nofollow noreferrer"">react-intl</a> library. The language can be triggered in different components, so I used the <a href=""https://github.com/mroderick/PubSubJS"" rel=""nofollow noreferrer"">pubsub-js</a> library to publish an event each time the language is changed, and subscrib to this event in my central App Component, which then switches the locale and messages which are displayed in the whole application. </p>

<p>My question concerns writing tests with <a href=""https://facebook.github.io/jest/"" rel=""nofollow noreferrer"">jest</a> and <a href=""https://github.com/airbnb/enzyme"" rel=""nofollow noreferrer"">enzyme</a> which would trigger the language change and have my App component updated with the language, so I can assert that the state variables dealing with the locale are correctly updated. Is it possible to trigger such events, or am I on a wrong path here? My code is listed below</p>

<pre><code>//Relevant parts of the app component


class App extends Component {
  constructor(props) {
    super(props);
    this.localeStore = new LocaleStore();
    this.state = {
      locale: this.localeStore.locale(),
      messages: this.localeStore.messages()
    };
  }

  componentDidMount() {
    PubSub.subscribe(LocaleEvent.change, (event, locale) =&gt; {
      this.setState({locale: locale.code, messages: locale.messages})
    });
  }

  componentWillUnmount() {
    PubSub.unsubscribe(LocaleEvent.change);
  }

  render() {
    return (
      &lt;IntlProvider key={ this.state.locale } locale={ this.state.locale } messages={ this.state.messages }&gt;
        &lt;div&gt;
          ...
        &lt;/div&gt;
      &lt;/IntlProvider&gt;
    );
  }
}

// App.test.js

describe('App', () =&gt; {
  it('renders without crashing', () =&gt; {
    const div = document.createElement('div');
    mount(&lt;App /&gt;);
  });

  // This test fails, because the event is not published and the state does not change
  it('correctly switches the language when the language change event is triggered', () =&gt; {
    let app = mount(&lt;App /&gt;);

    PubSub.publish('locale.change', {code: 'en', messages: {}});

    expect(app.state().locale).toEqual('en');
  });
});
</code></pre>
","199072","","","","","2017-05-18 15:40:42","How to trigger a Pubsub.js event in a jest test for react.js","<javascript><reactjs><publish-subscribe><jestjs><enzyme>","1","4","","",""
"41296372","1","","","2016-12-23 06:36:36","","0","435","<p>I am trying to get data from an API and show/hide it on react. I get the data fine but hide button doesn't work. Data is shown always. I am relatively new to react and really want to learn it. Here is my code: (And it would be great if anyone suggest where can I learn more about react on web) </p>

<pre><code>import React from 'react';
import {render} from 'react-dom';

class Series extends React.Component {
    constructor() {
        super();
        this.state = {
            showSeries: false
        };
    }

    render() {
        const serieses = this._GetList();
        let seriesNodes;
        let buttonText = 'Show Series';
        if (this.state.showMangas) {
            seriesNodes = &lt;div&gt;{serieses}&lt;/div&gt;;
            buttonText = 'Hide Series';

        }
        return (&lt;div&gt;
                &lt;button onClick={this._handleClick.bind(this)}&gt;{buttonText}&lt;/button&gt;
                {seriesNodes}
            &lt;/div&gt;
        );
    }

    _GetList() {
        var myInit = {
            method: 'GET',
            headers: new Headers({
                'Content-Type': 'text/plain'
            }),
        }
        var myRequest = new Request('data.json', myInit);
        fetch(myRequest)
            .then(function (response) {
                return response.json()
                    .then(function (json) {
                        console.log(json)
                        json.manga.map((item) =&gt; {
                            var li = document.createElement('li');
                        //  for (var i = 0; i &lt; (item).length; i++) {
                                li.innerHTML = 'Name: ' + item.t + ', Genre: ' + item.c + ' Hit Count: ' + item.h;
                                document.getElementById('myDiv').appendChild(li);
                        //  }
                        })
                    })

            })
            .catch(function (error) {
                console.log('There has been a problem with your fetch operation: ' + error.message);
            });

        return (
            &lt;div&gt;
                &lt;div&gt;&lt;/div&gt;
            &lt;/div&gt;
        )
    }

    _handleClick() {
        this.setState({showSeries: !this.state.showSeries});
    }
}
render( &lt;Series /&gt;, document.getElementById('myDiv'));
</code></pre>
","5899651","","548634","","2016-12-23 06:41:00","2016-12-23 09:06:25","Show/Hide data on react with fetch API","<json><reactjs><fetch>","1","0","","",""
"49048579","1","","","2018-03-01 11:19:28","","1","131","<p>could you please tell me how to compile my react file written in es6 using babel ?</p>

<p>I tried like this
<strong>my file</strong></p>

<pre><code>import React from 'react';
import { render } from 'react-dom';


class Abc extends React.Components{

    render(){
        return (
            &lt;div&gt;dddd&lt;/div&gt;
        )
    }
}

render(&lt;Abc /&gt;, document.getElementById('root'));
</code></pre>

<p><strong>package.json</strong></p>

<p>package.json</p>

<pre><code>{
  ""name"": ""ifscproject"",
  ""version"": ""1.0.0"",
  ""description"": """",
  ""main"": ""index.js"",
  ""scripts"": {
    ""build"": ""babel reacfiles/app.js  --presets react  --out-file build/app.js""
  },
  ""author"": """",
  ""license"": ""ISC"",
  ""devDependencies"": {
    ""axios"": ""^0.18.0"",
    ""babel-cli"": ""^6.26.0"",
    ""babel-core"": ""^6.26.0"",
    ""babel-loader"": ""^7.1.3"",
    ""babel-preset-env"": ""^1.6.1"",
    ""babel-preset-react"": ""^6.24.1"",
    ""express"": ""^4.16.2"",
    ""react"": ""^16.2.0"",
    ""react-dom"": ""^16.2.0""
  }
}
</code></pre>

<p>when I tried <strong>npm run build</strong></p>

<p>it generate a new file</p>

<pre><code>import React from 'react';
import { render } from 'react-dom';

class Abc extends React.Components {

    render() {
        return React.createElement(
            'div',
            null,
            'dddd'
        );
    }
}

render(React.createElement(Abc, null), document.getElementById('root'));
</code></pre>

<p>it is converted react code, not es6 code why?
could you please tel me how to convert es6 code also</p>

<p>Updates</p>

<p>when I used solution it gives update code</p>

<pre><code>'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (""value"" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

function _interopRequireDefault(obj) { return obj &amp;&amp; obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(""Cannot call a class as a function""); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(""this hasn't been initialised - super() hasn't been called""); } return call &amp;&amp; (typeof call === ""object"" || typeof call === ""function"") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== ""function"" &amp;&amp; superClass !== null) { throw new TypeError(""Super expression must either be null or a function, not "" + typeof superClass); } subClass.prototype = Object.create(superClass &amp;&amp; superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Abc = function (_React$Components) {
    _inherits(Abc, _React$Components);

    function Abc() {
        _classCallCheck(this, Abc);

        return _possibleConstructorReturn(this, (Abc.__proto__ || Object.getPrototypeOf(Abc)).apply(this, arguments));
    }

    _createClass(Abc, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                null,
                'dddd'
            );
        }
    }]);

    return Abc;
}(_react2.default.Components);

(0, _reactDom.render)(_react2.default.createElement(Abc, null), document.getElementById('root'));
</code></pre>

<p>But when I run on server it gives me error</p>

<p><strong>server.js</strong></p>

<pre><code>var express = require('express');
var React = require('react');
var ReactDOMServer = require('react-dom/server');
var App = require('./build/app');

var React = require('react');
var path = require('path');
var app = express();
// const indexPath = path.join(__dirname, 'index.html');
const publicPath = express.static(path.join(__dirname, './public'));
app.use(publicPath);
const port = process.env.PORT || 3000;


app.get('/get', function (req, res) {
    res.send(App);
})
app.listen(port, function () {
    console.log('Listening to port 3000');
})
</code></pre>
","8348359","","8348359","","2018-03-01 11:43:52","2018-03-01 11:43:52","how to compile my react file written in es6 using babel?","<javascript><reactjs><ecmascript-6><babeljs><babel>","1","2","","",""
"44613324","1","44613591","","2017-06-18 08:53:30","","0","188","<p>Hi I'm a newb to reactjs and I wanted to try pulling some code from other libraries to see how it works. Unfortunately, I'm sort of stuck on trying to use the react-responsive-carousel. I realize this is a really simple question but I have been stuck on this for quite some time now and would appreciate any tips! Thank you so much!</p>

<p>Here is what I'm currently trying:</p>

<blockquote>
  <p>Index.jsx</p>
</blockquote>

<pre><code>import React from 'react';
import {render} from 'react-dom';
import AwesomeComponent from './AwesomeComponent.jsx';
import CarouselComponent from './Carousel.jsx'

class App extends React.Component {
    render() {
        return (
            &lt;div&gt;
                &lt;p&gt;Hello React!&lt;/p&gt;
                &lt;AwesomeComponent /&gt;
                &lt;CarouselComponent /&gt;
            &lt;/div&gt;
        );
    }
}

render(&lt;App/&gt;, document.getElementById('container'));
</code></pre>

<blockquote>
  <p>Carousel.jsx: </p>
</blockquote>

<pre><code>import React from 'react';
import Carousel from 'react-responsive-carousel';

class CarouselComponent extends React.Component {
    render() {
        return (
            &lt;div&gt;
                &lt;Carousel&gt;
                    &lt;div&gt;
                        &lt;img src=""assets/1.jpeg"" /&gt;
                        &lt;p className=""legend""&gt;Legend 1&lt;/p&gt;
                    &lt;/div&gt;
                    &lt;div&gt;
                        &lt;img src=""assets/2.jpg"" /&gt;
                        &lt;p className=""legend""&gt;Legend 2&lt;/p&gt;
                    &lt;/div&gt;
                    &lt;div&gt;
                        &lt;img src=""assets/3.jpg"" /&gt;
                        &lt;p className=""legend""&gt;Legend 3&lt;/p&gt;
                    &lt;/div&gt;
                &lt;/Carousel&gt;
            &lt;/div&gt;
        );
    }
}
export default CarouselComponent;
</code></pre>

<p>The error I'm seeing in the console right now is:</p>

<pre><code>Warning: React.createElement: type is invalid -- expected a string (for 
built-in components) or a class/function (for composite components) but got: 
undefined. You likely forgot to export your component from the file it's 
defined in. Check the render method of `CarouselComponent`.
    in CarouselComponent (created by App)
    in div (created by App)
    in App
</code></pre>
","5335030","","","","","2017-06-18 09:28:28","Reactjs - react-reponsive-carousel","<reactjs>","1","0","","",""
"36873004","1","36873856","","2016-04-26 18:30:21","","0","220","<p>You shouldn't need to view the video to answer my question, but it is available here: <a href=""http://www.lynda.com/React-js-tutorials/React-js-syntax/379264/413770-4.html"" rel=""nofollow"">http://www.lynda.com/React-js-tutorials/React-js-syntax/379264/413770-4.html</a></p>

<p>I'm starting to learn react.js for the very first time (I'm pretty skilled in HTML/Javascript already), but the very first simple project is not working correctly.</p>

<p>The example code they give, should output ""Hello World"" to the page.</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;script src=""https://--.--/react-0.13.3.min.js""&gt;&lt;/script&gt;
        &lt;title&gt;My First React File&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
    &lt;script&gt;
        React.render(React.createElement('div', null, 'Hello World'), document.body);
    &lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Facebook's github has a much more up-to-date react file, 15.0.1, so my code only differs with the updated files:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;script src=""https://--.--/react-15.0.1.min.js""&gt;&lt;/script&gt;
    &lt;script src=""https://--.--/react-dom-15.0.1.min.js""&gt;&lt;/script&gt;
    &lt;title&gt;My First React File&lt;/title&gt;
&lt;/head&gt;
    &lt;body&gt;
    &lt;script&gt;
        React.render(React.createElement('div', null, 'Hello World'), document.body);
    &lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Their example outputs ""Hello World"" correctly, and mine does nothing. </p>

<p>Should I be using a different training to learn React? I feel silly asking a question about such a simple line of code.</p>

<p>PS: I had to censor the file names to meet Stack Overflow standards of not using URL shorteners, but they are the files located here: <a href=""https://facebook.github.io/react/downloads.html"" rel=""nofollow"">https://facebook.github.io/react/downloads.html</a></p>

<p>Edit: I just noticed the video just came out on 2/17/16, so it can't be that out of date.. must be my mistake somewhere? Any help is appreciated.</p>
","3420736","","3420736","","2016-04-26 18:39:46","2016-05-12 18:30:04","Is Lynda's react.js video too out of date to use (based off this error)?","<reactjs>","1","0","","",""
"36468293","1","36480567","","2016-04-07 06:30:04","","1","111","<p>I tried to send mail to the user who has submitted the application using reactjs and nodemailer but i am getting following error saying route not found.</p>

<pre><code>Warning: Location ""/contact?name=milan&amp;email=xedikaka%40gmail.com&amp;phone=9843698469&amp;city=Biratnagar&amp;state=biratnagar&amp;company=company&amp;title=developer&amp;home-airport=Truckee+%2F+Tahoe+%28TRK%29&amp;frequent-destinations=Monterey+%28MRY%29&amp;travel-type=business&amp;travel-frequency=daily&amp;travel-prefs=Saturday"" did not match any routes
</code></pre>

<p>Here is my code </p>

<pre><code>app.get('*', function(req, res) {
  var location = createLocation(req.url)
  match({routes: Routes, location: location}, function(error, redirectLocation, renderProps) {
    var handler = React.createElement(RoutingContext, objectAssign({}, renderProps))
    var content = React.renderToString(handler);
    var title = DocumentTitle.rewind();
    res.render('index', {content: content})
  })
});

app.post('/contact', function(req,res,next){
    var to = req.body.email;
    var transporter = nodemailer.createTransport({
        service:'Gmail',
        auth:{
            user:'******@gmail.com',
            pass:'***********'
        }
    });

     var mailOptions = {
      from: '&lt;noreply@domain.io&gt;',
      to: to,
      subject: 'Website contact form',
      text: 'Hello!'+req.body.name
    };

    transporter.sendMail(mailOptions, function(error,info){
        if(error){
            console.log('error is',error);
            res.redirect('/');
        }else{
            console.log('message sent');
            res.redirect('/');
        }
    })

});

var server = app.listen(port, function() {
  console.log('Server running on port ' + port);
});
</code></pre>

<p><strong>JoinUsForm.js(/join-us)</strong></p>

<pre><code>render: function() {
    return (
      &lt;div className='join-us-form-wrapper'&gt;
        &lt;form action = ""/contact"" method=""post"" onValidSubmit={this.onSubmit} onValid={this.enableButton} onInvalid={this.disableButton}&gt;

          &lt;TextInput name='name' label='Full Name' placeHolder='Full Name' required/&gt;
          &lt;TextInput name='email' type='email' validations=""isEmail"" label='Your Email' placeHolder='Your Email' required/&gt;
          &lt;TextInput name='phone' type='phone' label='Your Phone' placeHolder='Your Phone' required/&gt;

          &lt;TextInput name='city' label='City' placeHolder='City' required/&gt;

          &lt;div className='input-wrapper'&gt;
            &lt;label htmlFor='state'&gt;State&lt;/label&gt;
            &lt;input type='text' name='state' placeholder='State' /&gt;
          &lt;/div&gt;

          &lt;TextInput name='company' label='Company Name' placeHolder='Company Name'/&gt;
          &lt;TextInput name='title' label='Job Title' placeHolder='Job Title'/&gt;


          &lt;SelectInput name='home-airport' label='What is your home airport?' opts={homeAirportOptions} required /&gt;
          &lt;MultiSelectInput name='frequent-destinations' label='Which Destinations Do You Travel to Frequently?' opts={destinationOptions} required /&gt;

          &lt;SelectInput name='travel-type' label='Do you travel for business or pleasure?' opts={['business', 'pleasure']} required /&gt;
          &lt;SelectInput name='travel-frequency' label='How often do you travel?' opts={['daily', 'weekly', 'monthly']} required /&gt;

          &lt;SelectInput name='travel-prefs' label='Which days do you prefer to travel?' opts={travelPrefsOptions} required /&gt;


          &lt;input type=""submit"" className='submit-button button' value='Submit Your Application'/&gt;
        &lt;/form&gt;
      &lt;/div&gt;
    );
  }

});

module.exports = JoinUsForm;
</code></pre>

<p>What have i done wrong? What is wrong with the route?</p>

<p>UPDATE:</p>

<p>I get this new error after defining method in form 
<a href=""https://i.stack.imgur.com/AKBiy.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/AKBiy.png"" alt=""enter image description here""></a></p>
","5773335","","5773335","","2016-04-18 11:41:59","2016-04-18 11:41:59","Error in express route for submitting the mail to user using nodemailer and reactjs","<javascript><node.js><express><reactjs><nodemailer>","1","3","","",""
"45152717","1","45152815","","2017-07-17 20:02:35","","0","819","<p>I'm new to react and react native. I want to use a libary for react native. 
<a href=""https://github.com/FaridSafi/react-native-gifted-chat"" rel=""nofollow noreferrer"">https://github.com/FaridSafi/react-native-gifted-chat</a>
But I got this error :</p>

<blockquote>
  <p>Warning: React.createElement: type is invalid -- expected a string
  (for built-in components) or a class/function (for composite
  components) but got: object. You likely forgot to export your
  component from the file it's defined in.</p>
  
  <p>Check your code at registerRootComponent.js:21.
      in ExponentRootComponent (at renderApplication.js:35)
      in RCTView (at View.js:128)
      in View (at AppContainer.js:93)
      in RCTView (at View.js:128)
      in View (at AppContainer.js:92)
      in AppContainer (at renderApplication.js:34)</p>
</blockquote>

<p>Here my code :</p>

<pre><code>import React from 'react';
import { StyleSheet, Text, View, KeyboardAvoidingView, Image, TextInput } from 'react-native';
import GiftedChat from 'react-native-gifted-chat';

class App extends React.Component {

  state = {
    messages: [],
  };


  componentWillMount() {
    this.setState({
      messages: [
        {
          _id: 1,
          text: 'Hello developer',
          createdAt: new Date(),
          user: {
            _id: 2,
            name: 'React Native',
            avatar: 'https://facebook.github.io/react/img/logo_og.png',
          },
        },
      ],
    });
  }

  onSend(messages = []) {
    this.setState((previousState) =&gt; ({
      messages: GiftedChat.append(previousState.messages, messages),
    }));
  }

  render() {
    return (
      &lt;GiftedChat
        messages={this.state.messages}
        onSend={(messages) =&gt; this.onSend(messages)}
        user={{
          _id: 1,
        }}
      /&gt;
    );
  }

}
</code></pre>

<p>I add this lib with : </p>

<pre><code>yarn add react-native-gifted-chat
</code></pre>

<p>I use Expo-XDE to launch my app on a android emulator.</p>
","2304517","","2304517","","2017-07-17 20:13:01","2017-07-17 20:20:38","React.createElement: type is invalid","<reactjs><react-native>","2","0","","",""
"41966131","1","41966224","","2017-01-31 19:39:43","","0","50","<p>I have a react app that is getting errors </p>

<pre><code>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of `BasicDataTableExample`.
</code></pre>

<p>and </p>

<pre><code>Uncaught Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. Check the render method of `BasicDataTableExample`.
</code></pre>

<p>I'm at the <code>Create your Columns</code> section of <a href=""https://facebook.github.io/fixed-data-table/getting-started.html"" rel=""nofollow noreferrer"">https://facebook.github.io/fixed-data-table/getting-started.html</a></p>

<p>The difference is I'm using a cdn, and they use </p>

<pre><code>const {Table, Column, Cell} = require('fixed-data-table');
</code></pre>

<p>instead.</p>

<p>I try unpacking like <code>const Table = FixedDataTable.Table;</code>, which seems to work when I went into debugger, but the app is broken. It looks like:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;

    &lt;head&gt;
        &lt;title&gt;data-table-basic&lt;/title&gt;
        &lt;script src=""https://unpkg.com/react@15.3.2/dist/react.js""&gt;&lt;/script&gt;
        &lt;script src=""https://unpkg.com/react-dom@15.3.2/dist/react-dom.js""&gt;&lt;/script&gt;
        &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.23/browser.min.js""&gt;&lt;/script&gt;
        &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react-router/4.0.0-beta.3/react-router.min.js""&gt;&lt;/script&gt;

        &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/fixed-data-table/0.6.3/fixed-data-table.min.js""&gt;&lt;/script&gt;
        &lt;link href=""https://cdnjs.cloudflare.com/ajax/libs/fixed-data-table/0.6.3/fixed-data-table.min.css"" rel=""stylesheet""&gt;
    &lt;head&gt;


    &lt;body&gt;
            &lt;a class=""nav-link"" href=""/clock""&gt;clock&lt;/a&gt;
            &lt;a class=""nav-link"" href=""/counter""&gt;counter&lt;/a&gt;
            &lt;a class=""nav-link"" href=""/data-table-basic""&gt;data-table-basic&lt;/a&gt;
            &lt;a class=""nav-link"" href=""/query-params-react-router""&gt;query-params-react-router&lt;/a&gt;
            &lt;a class=""nav-link"" href=""/todo-list""&gt;todo-list&lt;/a&gt;
            &lt;a class=""nav-link"" href=""/validated-form""&gt;validated-form&lt;/a&gt;



        &lt;div id=""entry""&gt;&lt;/div&gt;
        &lt;div id=""code""&gt;&lt;/div&gt;

&lt;script type=""text/babel""&gt;
var destination = document.querySelector(""#entry"");

const Table = FixedDataTable.Table;
const Column = FixedDataTable.Column;
const Cell = FixedDataTable.cell;


class BasicDataTableExample extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      myTableData: [
        {name: 'Rylan'},
        {name: 'Amelia'},
        {name: 'Estevan'},
        {name: 'Florence'},
        {name: 'Tressa'},
      ],
    };
  }

  render() {
    return (
      &lt;Table
        rowsCount={this.state.myTableData.length}
        rowHeight={50}
        headerHeight={50}
        width={1000}
        height={500}&gt;
        &lt;Column
          header={&lt;Cell&gt;Name&lt;/Cell&gt;}
          cell={props =&gt; (
            &lt;Cell {...props}&gt;
              {this.state.myTableData[props.rowIndex].name}
            &lt;/Cell&gt;
          )}
          width={200}
        /&gt;
      &lt;/Table&gt;
    );
  }
}

ReactDOM.render(
    &lt;div&gt;
        &lt;BasicDataTableExample/&gt;
    &lt;/div&gt;,
    destination
)

        &lt;/script&gt;
    &lt;/body&gt;

&lt;/html&gt;
</code></pre>

<p>How do I make the <code>Table</code>, <code>Column</code>, and <code>Cell</code> show up correctly like they did using cdn? Thank you</p>
","3282434","","","","","2017-01-31 19:54:37","React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements)...; using fixed-data-table CDN","<javascript><html><reactjs><ecmascript-6>","3","0","","",""
"42048462","1","","","2017-02-05 04:11:39","","0","95","<p>I spent a while toying around with <a href=""https://github.com/react-boilerplate/react-boilerplate"" rel=""nofollow noreferrer"">react-boilerplate</a>, reading the docs, searching the web etc. I built up some simple components and containers no problem. </p>

<p>I have a large amount of code that creates DOM nodes and returns them using javascript. For a simple example </p>

<pre><code>  function makeSomething(){    
        let div = document.createElement('div');
        div.innerHTML = 'where would this go in reactjs boilerplate';
        return div
  }
</code></pre>

<p>My code does a ton of DOM manipulation, adding table rows, deleting rows and columns, moving rows, fetching data from remote sources. It is all written in javascript except for ajax calls which use jquery.</p>

<p>My question is how do I call and place the returned nodes into a container? </p>

<p>here is a simplified example of trying to add a js created node in a container:</p>

<pre><code>export default class VendorsPage extends React.Component { // eslint-disable-line react/prefer-stateless-function

  // Since state and props are static,
  // there's no need to re-render this component
  shouldComponentUpdate() {
    return false;
  }
  renderdiv(){
    let div = document.createElement('div');
    div.innerHTML = 'hi there'
      return div
  }
  render() {
    return (
        //how do I put renderdiv in here
    );
  }
}
</code></pre>
","1303144","","1303144","","2017-02-05 09:27:33","2017-02-05 09:27:33","Where would I add existing JS Code to react-boilerplate","<javascript><reactjs><react-boilerplate>","1","0","","",""
"50356449","1","50503076","","2018-05-15 17:51:06","","2","145","<p>I have a Sharepoint Framework webpart which basically has a property side bar where I can select the Sharepoint List, and based on the selection it will render the list items from that list into an Office UI DetailsList Component.</p>

<p>When I debug the REST calls are all fine, however the problem is I never get any data rendered on the screen. </p>

<p>so If I select GenericList it should query Generic LIst, if I select Directory it should query the Directory list, however when I select Directory it still says that the selection is GenericList, not directory.</p>

<p>This is my webpart code</p>

<pre><code>import * as React from ""react"";
import * as ReactDom from ""react-dom"";
import { Version } from ""@microsoft/sp-core-library"";
import {
  BaseClientSideWebPart,
  IPropertyPaneConfiguration,
  PropertyPaneTextField,
  PropertyPaneDropdown,
  IPropertyPaneDropdownOption,
  IPropertyPaneField,
  PropertyPaneLabel
} from ""@microsoft/sp-webpart-base"";

import * as strings from ""FactoryMethodWebPartStrings"";
import FactoryMethod from ""./components/FactoryMethod"";
import { IFactoryMethodProps } from ""./components/IFactoryMethodProps"";
import { IFactoryMethodWebPartProps } from ""./IFactoryMethodWebPartProps"";
import * as lodash from ""@microsoft/sp-lodash-subset"";
import List from ""./components/models/List"";
import { Environment, EnvironmentType } from ""@microsoft/sp-core-library"";
import IDataProvider from ""./components/dataproviders/IDataProvider"";
import MockDataProvider from ""./test/MockDataProvider"";
import SharePointDataProvider from ""./components/dataproviders/SharepointDataProvider"";

export default class FactoryMethodWebPart extends BaseClientSideWebPart&lt;IFactoryMethodWebPartProps&gt; {
  private _dropdownOptions: IPropertyPaneDropdownOption[];
  private _selectedList: List;
  private _disableDropdown: boolean;
  private _dataProvider: IDataProvider;
  private _factorymethodContainerComponent: FactoryMethod;

  protected onInit(): Promise&lt;void&gt; {
    this.context.statusRenderer.displayLoadingIndicator(this.domElement, ""Todo"");

    /*
    Create the appropriate data provider depending on where the web part is running.
    The DEBUG flag will ensure the mock data provider is not bundled with the web part when you package the
     solution for distribution, that is, using the --ship flag with the package-solution gulp command.
    */
    if (DEBUG &amp;&amp; Environment.type === EnvironmentType.Local) {
      this._dataProvider = new MockDataProvider();
    } else {
      this._dataProvider = new SharePointDataProvider();
      this._dataProvider.webPartContext = this.context;
    }

    this.openPropertyPane = this.openPropertyPane.bind(this);

    /*
    Get the list of tasks lists from the current site and populate the property pane dropdown field with the values.
    */
    this.loadLists()
      .then(() =&gt; {
        /*
         If a list is already selected, then we would have stored the list Id in the associated web part property.
         So, check to see if we do have a selected list for the web part. If we do, then we set that as the selected list
         in the property pane dropdown field.
        */
        if (this.properties.spListIndex) {
          this.setSelectedList(this.properties.spListIndex.toString());
          this.context.statusRenderer.clearLoadingIndicator(this.domElement);
        }
      });

    return super.onInit();
  }

  // render method of the webpart, actually calls Component
  public render(): void {
    const element: React.ReactElement&lt;IFactoryMethodProps &gt; = React.createElement(
      FactoryMethod,
      {
        spHttpClient: this.context.spHttpClient,
        siteUrl: this.context.pageContext.web.absoluteUrl,
        listName: this._dataProvider.selectedList === undefined ? ""GenericList"" : this._dataProvider.selectedList.Title,
        dataProvider: this._dataProvider,
        configureStartCallback: this.openPropertyPane
      }
    );

    // reactDom.render(element, this.domElement);
    this._factorymethodContainerComponent = &lt;FactoryMethod&gt;ReactDom.render(element, this.domElement);

  }

  // loads lists from the site and fill the dropdown.
  private loadLists(): Promise&lt;any&gt; {
    return this._dataProvider.getLists()
      .then((lists: List[]) =&gt; {
        // disable dropdown field if there are no results from the server.
        this._disableDropdown = lists.length === 0;
        if (lists.length !== 0) {
          this._dropdownOptions = lists.map((list: List) =&gt; {
            return {
              key: list.Id,
              text: list.Title
            };
          });
        }
      });
  }

  protected get dataVersion(): Version {
    return Version.parse(""1.0"");
  }

  protected onPropertyPaneFieldChanged(propertyPath: string, oldValue: any, newValue: any): void {
    /*
    Check the property path to see which property pane feld changed. If the property path matches the dropdown, then we set that list
    as the selected list for the web part.
    */
    if (propertyPath === ""spListIndex"") {
      this.setSelectedList(newValue);
    }

    /*
    Finally, tell property pane to re-render the web part.
    This is valid for reactive property pane.
    */
    super.onPropertyPaneFieldChanged(propertyPath, oldValue, newValue);
  }

  // sets the selected list based on the selection from the dropdownlist
  private setSelectedList(value: string): void {
    const selectedIndex: number = lodash.findIndex(this._dropdownOptions,
      (item: IPropertyPaneDropdownOption) =&gt; item.key === value
    );

    const selectedDropDownOption: IPropertyPaneDropdownOption = this._dropdownOptions[selectedIndex];

    if (selectedDropDownOption) {
      this._selectedList = {
        Title: selectedDropDownOption.text,
        Id: selectedDropDownOption.key.toString()
      };

      this._dataProvider.selectedList = this._selectedList;
    }
  }


  // we add fields dynamically to the property pane, in this case its only the list field which we will render
  private getGroupFields(): IPropertyPaneField&lt;any&gt;[] {
    const fields: IPropertyPaneField&lt;any&gt;[] = [];

    // we add the options from the dropdownoptions variable that was populated during init to the dropdown here.
    fields.push(PropertyPaneDropdown(""spListIndex"", {
      label: ""Select a list"",
      disabled: this._disableDropdown,
      options: this._dropdownOptions
    }));

    /*
    When we do not have any lists returned from the server, we disable the dropdown. If that is the case,
    we also add a label field displaying the appropriate message.
    */
    if (this._disableDropdown) {
      fields.push(PropertyPaneLabel(null, {
        text: ""Could not find tasks lists in your site. Create one or more tasks list and then try using the web part.""
      }));
    }

    return fields;
  }

  private openPropertyPane(): void {
    this.context.propertyPane.open();
  }

  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {
    return {
      pages: [
        {
          header: {
            description: strings.PropertyPaneDescription
          },
          groups: [
            {
              groupName: strings.BasicGroupName,
              /*
              Instead of creating the fields here, we call a method that will return the set of property fields to render.
              */
              groupFields: this.getGroupFields()
            }
          ]
        }
      ]
    };
  }
}
</code></pre>

<p>This is my component code</p>

<pre><code>//#region Imports
import * as React from ""react"";
import styles from ""./FactoryMethod.module.scss"";
import  { IFactoryMethodProps } from ""./IFactoryMethodProps"";
import {
  IDetailsListItemState,
  IDetailsNewsListItemState,
  IDetailsDirectoryListItemState,
  IDetailsAnnouncementListItemState,
  IFactoryMethodState
} from ""./IFactoryMethodState"";
import { IListItem } from ""./models/IListItem"";
import { IAnnouncementListItem } from ""./models/IAnnouncementListItem"";
import { INewsListItem } from ""./models/INewsListItem"";
import { IDirectoryListItem } from ""./models/IDirectoryListItem"";
import { escape } from ""@microsoft/sp-lodash-subset"";
import { SPHttpClient, SPHttpClientResponse } from ""@microsoft/sp-http"";
import { ListItemFactory} from ""./ListItemFactory"";
import { TextField } from ""office-ui-fabric-react/lib/TextField"";
import {
  DetailsList,
  DetailsListLayoutMode,
  Selection,
  buildColumns,
  IColumn
} from ""office-ui-fabric-react/lib/DetailsList"";
import { MarqueeSelection } from ""office-ui-fabric-react/lib/MarqueeSelection"";
import { autobind } from ""office-ui-fabric-react/lib/Utilities"";
import PropTypes from ""prop-types"";
//#endregion

export default class FactoryMethod extends React.Component&lt;IFactoryMethodProps, IFactoryMethodState&gt; {
  constructor(props: IFactoryMethodProps, state: any) {
    super(props);
    this.setInitialState();
  }


  // lifecycle help here: https://staminaloops.github.io/undefinedisnotafunction/understanding-react/
  //#region Mouting events lifecycle
  // the data returned from render is neither a string nor a DOM node.
  // it's a lightweight description of what the DOM should look like.
  // inspects this.state and this.props and create the markup.
  // when your data changes, the render method is called again.
  // react diff the return value from the previous call to render with
  // the new one, and generate a minimal set of changes to be applied to the DOM.
  public render(): React.ReactElement&lt;IFactoryMethodProps&gt; {
    if (this.state.hasError) {
      // you can render any custom fallback UI
      return &lt;h1&gt;Something went wrong.&lt;/h1&gt;;
    } else {
      switch(this.props.listName) {
          case ""GenericList"":
            // tslint:disable-next-line:max-line-length
            return &lt;this.ListMarqueeSelection items={this.state.DetailsListItemState.items} columns={this.state.columns} /&gt;;
          case ""News"":
            // tslint:disable-next-line:max-line-length
            return &lt;this.ListMarqueeSelection items={this.state.DetailsNewsListItemState.items} columns={this.state.columns}/&gt;;
          case ""Announcements"":
            // tslint:disable-next-line:max-line-length
            return &lt;this.ListMarqueeSelection items={this.state.DetailsAnnouncementListItemState.items} columns={this.state.columns}/&gt;;
          case ""Directory"":
            // tslint:disable-next-line:max-line-length
            return &lt;this.ListMarqueeSelection items={this.state.DetailsDirectoryListItemState.items} columns={this.state.columns}/&gt;;
          default:
            return null;
      }
    }
  }

  public componentDidCatch(error: any, info: any): void {
    // display fallback UI
    this.setState({ hasError: true });
    // you can also log the error to an error reporting service
    console.log(error);
    console.log(info);
  }



  // componentDidMount() is invoked immediately after a component is mounted. Initialization that requires DOM nodes should go here.
  // if you need to load data from a remote endpoint, this is a good place to instantiate the network request.
  // this method is a good place to set up any subscriptions. If you do that, don’t forget to unsubscribe in componentWillUnmount().
  // calling setState() in this method will trigger an extra rendering, but it is guaranteed to flush during the same tick.
  // this guarantees that even though the render() will be called twice in this case, the user won’t see the intermediate state.
  // use this pattern with caution because it often causes performance issues. It can, however, be necessary for cases like modals and
  // tooltips when you need to measure a DOM node before rendering something that depends on its size or position.
   public componentDidMount(): void {
    this._configureWebPart = this._configureWebPart.bind(this);
    this.readItemsAndSetStatus();
  }

  //#endregion
  //#region Props changes lifecycle events (after a property changes from parent component)
  // componentWillReceiveProps() is invoked before a mounted component receives new props.
  // if you need to update the state in response to prop
  // changes (for example, to reset it), you may compare this.props and nextProps and perform state transitions
  // using this.setState() in this method.
  // note that React may call this method even if the props have not changed, so make sure to compare the current
  // and next values if you only want to handle changes.
  // this may occur when the parent component causes your component to re-render.
  // react doesn’t call componentWillReceiveProps() with initial props during mounting. It only calls this
  // method if some of component’s props may update
  // calling this.setState() generally doesn’t trigger componentWillReceiveProps()
  public componentWillReceiveProps(nextProps: IFactoryMethodProps): void {
    if(nextProps.listName !== this.props.listName) {
      this.readItemsAndSetStatus();
    }
  }

  //#endregion
  //#region private methods
  private _configureWebPart(): void {
    this.props.configureStartCallback();
  }

  public setInitialState(): void {
    this.state = {
      hasError: false,
      status: this.listNotConfigured(this.props)
        ? ""Please configure list in Web Part properties""
        : ""Ready"",
      columns:[],
      DetailsListItemState:{
        items:[]
      },
      DetailsNewsListItemState:{
        items:[]
      },
      DetailsDirectoryListItemState:{
        items:[]
      },
      DetailsAnnouncementListItemState:{
        items:[]
      },
    };
  }

  // reusable inline component
  private ListMarqueeSelection = (itemState: {columns: IColumn[], items: IListItem[] }) =&gt; (
      &lt;div&gt;
          &lt;DetailsList
            items={ itemState.items }
            columns={ itemState.columns }
            setKey=""set""
            layoutMode={ DetailsListLayoutMode.fixedColumns }
            selectionPreservedOnEmptyClick={ true }
            compact={ true }&gt;
          &lt;/DetailsList&gt;
      &lt;/div&gt;
  )

  // read items using factory method pattern and sets state accordingly
  private readItemsAndSetStatus(): void {
    this.setState({
      status: ""Loading all items...""
    });

    const factory: ListItemFactory = new ListItemFactory();
    factory.getItems(this.props.spHttpClient, this.props.siteUrl, this.props.listName)
    .then((items: any[]) =&gt; {

      var myItems: any = null;
      switch(this.props.listName) {
          case ""GenericList"":
              myItems = items as IListItem[];
              break;
          case ""News"":
              myItems = items as INewsListItem[];
              break;
          case ""Announcements"":
              myItems = items as IAnnouncementListItem[];
              break;
          case ""Directory"":
              myItems = items as IDirectoryListItem[];
              break;
      }

      const keyPart: string = this.props.listName === ""GenericList"" ? """" : this.props.listName;
        // the explicit specification of the type argument `keyof {}` is bad and
        // it should not be required.
        this.setState&lt;keyof {}&gt;({
          status: `Successfully loaded ${items.length} items`,
          [""Details"" + keyPart + ""ListItemState""] : {
            myItems
          },
          columns: buildColumns(myItems)
        });
    });
  }

  private listNotConfigured(props: IFactoryMethodProps): boolean {
    return props.listName === undefined ||
      props.listName === null ||
      props.listName.length === 0;
  }

  //#endregion
}
</code></pre>

<p>I think the rest of the code is not neccesary</p>

<p>Update
SharepointDataProvider.ts</p>

<pre><code>import {
    SPHttpClient,
    SPHttpClientBatch,
    SPHttpClientResponse
  } from ""@microsoft/sp-http"";
  import { IWebPartContext } from ""@microsoft/sp-webpart-base"";
  import List from ""../models/List"";
  import IDataProvider from ""./IDataProvider"";

  export default class SharePointDataProvider implements IDataProvider {
      private _selectedList: List;
      private _lists: List[];
      private _listsUrl: string;
      private _listItemsUrl: string;
      private _webPartContext: IWebPartContext;

      public set selectedList(value: List) {
        this._selectedList = value;
        this._listItemsUrl = `${this._listsUrl}(guid'${value.Id}')/items`;
      }

      public get selectedList(): List {
        return this._selectedList;
      }

      public set webPartContext(value: IWebPartContext) {
        this._webPartContext = value;
        this._listsUrl = `${this._webPartContext.pageContext.web.absoluteUrl}/_api/web/lists`;
      }

      public get webPartContext(): IWebPartContext {
        return this._webPartContext;
      }

      // get all lists, not only tasks lists
      public getLists(): Promise&lt;List[]&gt; {
        // const listTemplateId: string = '171';
        // const queryString: string = `?$filter=BaseTemplate eq ${listTemplateId}`;
        // const queryUrl: string = this._listsUrl + queryString;
        return this._webPartContext.spHttpClient.get(this._listsUrl, SPHttpClient.configurations.v1)
          .then((response: SPHttpClientResponse) =&gt; {
            return response.json();
          })
          .then((json: { value: List[] }) =&gt; {
            return this._lists = json.value;
          });
      }
    }
</code></pre>

<p>Idataprovider.ts</p>

<pre><code>import { IWebPartContext } from ""@microsoft/sp-webpart-base"";
import List from ""../models/List"";
import {IListItem} from ""../models/IListItem"";

interface IDataProvider {
  selectedList: List;
  webPartContext: IWebPartContext;
  getLists(): Promise&lt;List[]&gt;;
}

export default IDataProvider;
</code></pre>
","1014217","","1014217","","2018-05-15 18:25:54","2018-05-24 07:07:09","not proper use of react lifecycle","<javascript><reactjs><typescript><sharepoint><spfx>","2","7","","",""
"45365211","1","","","2017-07-28 05:02:59","","1","159","<p>I'm just starting to learn React Native and I tried to do RN on Expo. Now I'm getting this error.</p>

<pre><code>Warning: React.createElement: type is invalid -- expected a string (for 
built-in components) or a class/function (for composite components) 
but got: object. You likely forgot to export your component from the 
file it's defined in.
</code></pre>

<p>My code is </p>

<pre><code>import React from 'react';
import {Text, AppRegistry} from 'react-native';

const App = () =&gt; (
    &lt;Text&gt;Some Text &lt;/Text&gt;
    );


AppRegistry.registerComponent('helloworld', () =&gt; App );
</code></pre>

<p>I worte this cod on the <strong>App.js</strong> file</p>
","1715207","","1715207","","2017-07-28 05:25:18","2017-07-28 06:09:09","React.createElement: type is invalid on Expo","<reactjs><react-native><expo>","1","0","","",""
"35586251","1","","","2016-02-23 19:18:43","","0","1136","<p>I have been using React for a while now, and my version was horribly out of date. I updated to 0.12 without incident. Then I tried upgrading react tools as well. That is when everything broke. Now I am getting the following error: ""Error: React.createElement is not a function"". Other than a vague idea that this probably has something to do with the changes to the JSX transformer, I have no idea why upgrading react tools is leading to this error. Any help would be appreciated</p>
","4218971","","","","","2017-11-15 02:19:11","ReactJS: ""Error: React.createElement is not a function""","<javascript><dom><reactjs><jsx>","2","0","","",""
"45203466","1","","","2017-07-20 01:05:29","","0","144","<p>I am using Video-react (<a href=""https://video-react.js.org/components/player/"" rel=""nofollow noreferrer"">https://video-react.js.org/components/player/</a>) and on the page, it says I can use <code>this.refs.player.load()</code> once I have updated its source. But I do not think that method is supported any more as It will not work at all plus I could not find it in the source code downloaded with npm. </p>

<p>Is there another way to do this or has anyone found a solution? This is my partial code: </p>

<pre><code>                var videoRow = document.createElement(""div"");
            videoRow.className = 'col-md-4';
            videoRow.setAttribute(""id"", ""videoRows"");
            //create the myPlayer div which will contain the Player. 
            var myPlayerDiv = document.createElement(""div"");
            myPlayerDiv.setAttribute(""id"", ""myPlayer"");
            //create my player with the information from the attributes.
            var videoPlayer = document.createElementNS('', 'Player');
            videoPlayer.setAttribute(""src"", data.val().videoURL);
            videoPlayer.setAttribute(""ref"",""player"");
            myPlayerDiv.appendChild(videoPlayer);
            videoRow.appendChild(myPlayerDiv);
            document.getElementById('videoList').appendChild(videoRow);
             this.refs.player.load();
</code></pre>

<p>This has not worked. I tried renaming the ref but still nothing. The div shows up but not the player. </p>

<p>Edit: Just found this in the Player.js component but can't figure out how to implement it: <a href=""https://i.stack.imgur.com/1hMu6.png"" rel=""nofollow noreferrer"">Player.js component source code</a></p>
","4143734","","472495","","2017-07-20 08:09:35","2017-07-20 08:09:35","Video-react in videoJS not loading after src is updated","<javascript><reactjs><html5-video><video.js><video-reactjs>","1","0","","",""
"43969578","1","43969990","","2017-05-14 23:01:50","","3","5318","<h3>Expected</h3>

<p>I should be able to export my App component file and import it into my index.js.</p>

<h3>Results</h3>

<p>I get the following error</p>

<blockquote>
  <p>React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: object</p>
</blockquote>

<hr>

<h3>My index.js</h3>

<pre><code>const React = require('react');
const ReactDOM = require('react-dom');
const App = require('./components/App');
require('./index.css');

ReactDOM.render(
    &lt;App /&gt;,
    document.getElementById('app')
);
</code></pre>

<h3>Then in my components/App.js</h3>

<pre><code>const React = require('react');

export default class App extends React.Component {
    render() {
        return (
            &lt;div&gt;
                Hell World! Wasabi Sauce!
            &lt;/div&gt;
        );
    }
}

// module.exports = App;
</code></pre>

<p>If I uncomment <code>module.exports = App;</code> it will work, but I'm trying to use the export syntax. What is driving me nuts is in another project I am doing the exact same thing here and it's working fine :(</p>
","168738","","168738","","2017-05-15 18:12:23","2018-07-18 10:14:25","React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: object","<javascript><reactjs><ecmascript-6><export><commonjs>","3","7","3","",""
"36461472","1","36476273","","2016-04-06 20:16:45","","0","411","<p>First of all I want to say that I'm new to javascript and react world so sorry in advance if my question is trivial but I can't figure out this situation. I will update the post if needed. <br>
<br>
I want to migrate my current application to single page application. I have 3 main pages PageA, PageB and PageC (in react I have 3 main components). I want to be able to switch between these 3 pages/components. Lets say that I have this LogoText which is the component that represents the logo of the site. I want to have it in all other components (including the PageA) and when I click on it I want to render the main page ( PageA ).
<br>
<br>
So I'm trying to build a it with <strong>react</strong> and <strong>webpack</strong> . In this simple example given below I have a main page component MainPage.js which is parent component for all components that should be in the main page and a LogoText component which should render the MainPage component when someone click on it. When all this components are in one file and I don't use <strong>require()</strong> everything is working perfectly but when I break down my app into modules using <strong>require()</strong> and package it with <strong>webpack</strong> I get strange behaviour. I can load the MainPage component and the LogoText component is displayed correctly in the MainPage but when I click on the LogoText I get ""<strong>Uncaught Invariant Violation: Element type is invalid</strong>"" exception (<a href=""http://i.stack.imgur.com/8PkqI.jpg"" rel=""nofollow"">click for screenshot</a>)
<br>
<br>
<strong>first exception</strong>: <br>
react.js:18798 Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components).<br>
<br>
<strong>second exception</strong>: <br>
react.js:18354 Uncaught Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: object.<br>
<br>
I have the following 3 classes:<br>
<br>
main.js:</p>

<pre><code>var MainPage = require(""./MainPage.js"")

ReactDOM.render(
   &lt;MainPage /&gt;,
   document.getElementById('content')
);
</code></pre>

<p>MainPage.js:</p>

<pre><code>var LogoText = require(""./LogoText.js"")

var MainPage = React.createClass({

    render: function() {
        return (
            &lt;div&gt;
                Hello page,
                &lt;LogoText /&gt;
            &lt;/div&gt;
        );
    }
});

module.exports = MainPage;
</code></pre>

<p>LogoText.js</p>

<pre><code>var MainPage = require(""./MainPage.js"")

var LogoText = React.createClass({

    changePage: function(e) {
        ReactDOM.render(
            &lt;MainPage /&gt;,
            document.getElementById('content')
        );
    },

    render: function() {
        return (
            &lt;span onClick={this.changePage}&gt;logo&lt;/span&gt;
        );
    }
});

module.exports = LogoText;
</code></pre>

<p>index.html:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;title&gt;React Tutorial&lt;/title&gt;
    &lt;!-- Not present in the tutorial. Just for basic styling. --&gt;
    &lt;link rel=""stylesheet"" href=""css/base.css"" /&gt;
    &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/0.14.8/react.js""&gt;&lt;/script&gt;
    &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/0.14.8/react-dom.js""&gt;&lt;/script&gt;
    &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.6.16/browser.js""&gt;&lt;/script&gt;
    &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.2/jquery.min.js""&gt;&lt;/script&gt;
    &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/marked/0.3.5/marked.min.js""&gt;&lt;/script&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div id=""content""&gt;&lt;/div&gt;
    &lt;script src=""scripts/bundle.js""&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p><strong>UPDATE 1</strong>:
Here is my <strong>webpack.config.js</strong>:</p>

<pre><code>module.exports = {
    entry: ""./src/scripts/main.js"",
    output: {
        path: ""./src/scripts"",
        filename: ""bundle.js""
    },
    module: {
        loaders: [
            { test: /\.css$/, loader: ""style!css"" },
            { test: /\.js$/, loader: 'jsx-loader?insertPragma=React.DOM&amp;harmony'},
        ]
    },
    externals: {
        //don't bundle the 'react' npm package with our bundle.js
        //but get it from a global 'React' variable
        'react': 'React'
    },
    resolve: {
        extensions: ['', '.js', '.jsx']
    }
};
</code></pre>
","3865191","","3865191","","2016-04-09 21:24:14","2016-04-09 21:24:14","Uncaught Invariant Violation: Element type is invalid (react, webpack, circular imports)","<javascript><reactjs><export><webpack><require>","1","8","","",""
"44456923","1","","","2017-06-09 11:43:39","","0","680","<p>I made a React Webapp using the create-react-app module. Im trying to add in Facebook login but having issues. </p>

<p>I do not know where to load in the Facebook JavaScript SDK asynchronously to use FB.init, FB.getLoginStatus etc. I tried putting in a script tag in my index.html file and loading it like this:</p>

<pre><code>   &lt;!doctype html&gt;
    &lt;html lang=""en""&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no""&gt;
    &lt;meta name=""theme-color"" content=""#000000""&gt;

    &lt;link rel=""manifest"" href=""%PUBLIC_URL%/manifest.json""&gt;
    &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;

    &lt;title&gt;React App&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;

    &lt;div id=""root""&gt;&lt;/div&gt;
    &lt;div id=""fb-root""&gt;&lt;/div&gt;


    &lt;!-- &lt;script src=""./facebookLogin.js""&gt;&lt;/script&gt;--&gt;
    &lt;script&gt;
  window.fbAsyncInit = function() {
    FB.init({
      appId            : '1830088130643938',
      autoLogAppEvents : true,
      xfbml            : true,
      version          : 'v2.9'
    });
    FB.AppEvents.logPageView();
  };

  (function(d, s, id){
     var js, fjs = d.getElementsByTagName(s)[0];
     if (d.getElementById(id)) {return;}
     js = d.createElement(s); js.id = id;
     js.src = ""//connect.facebook.net/en_US/sdk.js"";
     fjs.parentNode.insertBefore(js, fjs);
   }(document, 'script', 'facebook-jssdk'));
&lt;/script&gt;

  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>but when I try to access the FB variable in index.js (starting point for create-react-app) it says FB' is not defined  no-undef"".</p>

<p>I then tried loading it in the index.js file but again same problem:</p>

<pre><code>    import React from 'react';
import ReactDOM from 'react-dom';

// Importing CSS files
import './index.css';

// Importing components
import App from './App';
import FacebookButton from './components/facebookButton';

console.log(""Running index.js right now"");
 window.fbAsyncInit = function() {
    FB.init({
      appId            : 'your-app-id',
      autoLogAppEvents : true,
      xfbml            : true,
      version          : 'v2.9'
    });
    FB.AppEvents.logPageView();
  };

  (function(d, s, id){
     var js, fjs = d.getElementsByTagName(s)[0];
     if (d.getElementById(id)) {return;}
     js = d.createElement(s); js.id = id;
     js.src = ""//connect.facebook.net/en_US/sdk.js"";
     fjs.parentNode.insertBefore(js, fjs);
   }(document, 'script', 'facebook-jssdk'));

console.log(""FB is: "", FB);


ReactDOM.render(&lt;FacebookButton/&gt;, document.getElementById('root'));
</code></pre>

<p>It only works if I make a separate javascript file under public, link it through my index.html file and do all my facebook login there. But how do I access the FB variable from my index.js file using this?</p>

<p>I need the FB variable in index.js as thats the starting javascript file according to how create-react-app works. I wish to pass the FB variable down to my other components to make states, to handle clicks, login checks etc.</p>

<p>Maybe I might be not understanding how create-react-app works and how custom javascript or loading a JDK asynchronously can be done.</p>

<p>Please tell me how facebook login can be done with create-react-app.</p>
","3689564","","","","","2017-06-09 12:17:03","Facebook login using react create app","<javascript><reactjs><loading><facebook-login><create-react-app>","1","0","","",""
"43901660","1","","","2017-05-10 19:55:37","","7","4389","<p>This is my <code>__tests__/App.js</code> file:</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import App from '../src/containers/App';

it('renders without crashing', () =&gt; {
  const div = document.createElement('div');
  ReactDOM.render(&lt;App /&gt;, div);
});

// sanity check
it('one is one', () =&gt; {
  expect(1).toEqual(1)
});
</code></pre>

<p>And this is the output I get when running <code>yarn test</code>:</p>

<pre><code>FAIL  __tests__/App.js
  ● renders without crashing

    ReferenceError: document is not defined

      at Object.&lt;anonymous&gt;.it (__tests__/App.js:6:15)

  ✕ renders without crashing (1ms)
  ✓ one is one

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 passed, 2 total
Snapshots:   0 total
Time:        0.128s, estimated 1s
Ran all test suites related to changed files.
</code></pre>

<p>Do I need to import another module in order for <code>document</code> to be available here?</p>

<p>Thanks for the help!</p>
","1322427","","900078","","2017-05-11 02:16:31","2018-06-09 10:24:27","""ReferenceError: document is not defined"" when trying to test a create-react-app project","<javascript><reactjs><create-react-app><jest>","2","5","1","",""
"36049560","1","36049653","","2016-03-17 00:32:48","","0","247","<p>I've got a boilerplate based on <a href=""https://github.com/coryhouse/react-slingshot/"" rel=""nofollow"">https://github.com/coryhouse/react-slingshot/</a>. I've removed the FuelSavings app and replaced it with one that works OK - but I wrote a component, and when I include it under the App, it prevents anything from rendering (I get a white page).</p>

<p>I'm getting 3 errors when I add in the <code>&lt;UserHeader /&gt;</code> tag into App.js:</p>

<ul>
<li>""Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of <code>App</code>.""</li>
<li>Uncaught Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. Check the render method of <code>App</code>.</li>
<li>Uncaught TypeError: Cannot read property 'props' of undefined</li>
</ul>

<p>If I remove the <code>UserHeader</code> tag, the rest of the page loads just fine.</p>

<p>src/components/App.js</p>

<pre><code>import React, { PropTypes } from 'react';
import { Link, IndexLink } from 'react-router';
import { UserHeader } from './UserHeader';

const App = (props) =&gt; {
  return (
    &lt;div&gt;
      &lt;IndexLink to=""/""&gt;Home&lt;/IndexLink&gt; | &lt;Link to=""/About""&gt;About&lt;/Link&gt;
      &lt;UserHeader /&gt;

      {props.children}
    &lt;/div&gt;
  );
};

export default App;
</code></pre>

<p>src/components/UserHeader.js</p>

<pre><code>import React, { Component, PropTypes } from 'react';

const UserHeader = (props) =&gt; {
  return (
    &lt;p&gt;Welcome!&lt;/p&gt;
    );
};

export default UserHeader;
</code></pre>

<p>Any thoughts welcomed. The server itself shows <em>no</em> problems at all, just a warning about missing the props validation. The issue is preventing any code in <code>UserHeader</code> from executing. I'm just not experienced enough to know how!</p>
","3186263","","","","","2016-03-17 00:43:51","Errors when including simple component into App (react/redux)","<reactjs><react-router><redux><react-redux><react-slingshot>","1","0","","",""
"45131099","1","45131825","","2017-07-16 16:52:19","","1","162","<p>I'm currently creating a react component library that i want to provide as an <code>npm</code> package. I also want to provide a documentation that features fancy live rendering of the available components on e.g. github pages.</p>

<p>For the live editing feature i'm planning to use <a href=""https://github.com/FormidableLabs/react-live"" rel=""nofollow noreferrer"">react-live</a> which provides multiple react components to display a live editor and a preview. See an example from the <a href=""https://www.styled-components.com/docs/advanced#media-templates"" rel=""nofollow noreferrer"">styled-components docs</a> how this looks like.</p>

<p>The <code>react-live</code> component accepts a string <code>code</code> containing the initial code that should be displayed in the editor and a list of components <code>scope</code> that can be used inside the live editor.</p>

<p>Now i want to use <a href=""https://gohugo.io/"" rel=""nofollow noreferrer"">gohugo</a> or a similar static site generator to deploy my documentation. I thought i could maybe provide a <code>&lt;div&gt;</code> inside my static site that has a special class <code>react-live-demo</code> and i will get these containers with <code>document.getElementsByClassName('react-live-demo')</code>, loop over them and render the react-live component into it.</p>

<p>I created a code snippet that shows a little example:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""true"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const {LiveProvider, LiveEditor, LiveError, LivePreview} = window['react-live'];

// a random component that i want to render in the live editor
const MyComponent = () =&gt; (
  &lt;div&gt;
    &lt;h1&gt;react live demo&lt;/h1&gt;
    &lt;p&gt;This is a component from the script tag.&lt;/p&gt;
  &lt;/div&gt;
);

// a wrapper for the react-live editor
const Editor = ({code, scope}) =&gt; (
  &lt;LiveProvider code={code} scope={scope}&gt;
    &lt;div className=""live-example row""&gt;
      &lt;div className=""col-xs""&gt;
        &lt;LiveEditor /&gt;
        &lt;LiveError /&gt;
      &lt;/div&gt;
      &lt;div className=""col-xs""&gt;
        &lt;LivePreview /&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/LiveProvider&gt;
);

// get all containers that have the initial code as innerHTML
const examples = document.querySelectorAll('script[data-name=""react-live""]');

examples.forEach(example =&gt; {
  // insert a new div before the script tag
  const container = document.createElement('div');
  example.parentNode.insertBefore(container, example.nextSibling);
  
  // render the editor with the code from the script tag
  const code = example.innerHTML.trim();
  ReactDOM.render(&lt;Editor code={code} scope={{MyComponent}} /&gt;, container);
});</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>.static-content {
  background-color: papayawhip;
}

.live-example {
  border: 1px solid orange;
}

.react-live-demo.code {
  display: none;
}

.invalid {
  color: red;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;p class=""static-content""&gt;HERE IS SOME STATIC HTML CONTENT&lt;/p&gt;

&lt;script type=""text/html"" data-name=""react-live""&gt;
&lt;div&gt;
  &lt;h1&gt;react live demo&lt;/h1&gt;
  &lt;p&gt;This code is editable.&lt;/p&gt;
&lt;/div&gt;
&lt;/script&gt;

&lt;p class=""static-content""&gt;SOME MORE STATIC HTML CONTENT&lt;/p&gt;

&lt;script type=""text/html"" data-name=""react-live""&gt;
&lt;MyComponent /&gt;
&lt;/script&gt;





&lt;link href=""https://cdnjs.cloudflare.com/ajax/libs/flexboxgrid/6.3.1/flexboxgrid.min.css"" rel=""stylesheet""/&gt;
&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react.min.js""&gt;&lt;/script&gt;
&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react-dom.min.js""&gt;&lt;/script&gt;
&lt;script src=""https://unpkg.com/react-live@1.7.0/dist/react-live.min.js""&gt;&lt;/script&gt;</code></pre>
</div>
</div>
</p>

<p><strong>The question is now:</strong> </p>

<p>How do embed the code string into my static site so that i can grab it with my js code and pass it to my react-live component?</p>

<p>I thought about <code>&lt;pre&gt;</code> or something like that. Or should i just embed it as inner html and read that? But then it would be displayed for short when the react component hasn't rendered yet. Or should i use some sort of script tag and make it available as globals? <strong>The key goal is to make it as easy as possible to add live editing examples to the documentation without touching any javascript code.</strong></p>

<p>However if i pass something like <code>&lt;MyComponent /&gt;</code> as innerHTML this does of course not work as you can see in the code snippet.</p>

<p>Any best practice for that use case appreciated.</p>

<p><strong>EDIT:</strong></p>

<p>Based on the suggestion of <a href=""https://stackoverflow.com/a/45131825/5005177"">@Daniel Alexandrov</a> i edited the code snippet. The solution now reads the <code>innerHTML</code> of script tags with <code>type=""text/html</code> set and creates a <code>&lt;div&gt;</code> container to insert the editor. This seems to work quite well. Any more ideas?</p>
","5005177","","5005177","","2017-07-16 22:10:31","2017-07-16 22:10:31","What is an elegant way to initialize multiple react-live components from a static website?","<javascript><reactjs><github-pages><static-site><hugo>","1","0","","",""
"35732886","1","","","2016-03-01 20:32:32","","1","564","<p>I'm learning React with Redux and Webpack but I keep getting </p>

<pre><code>Uncaught ReferenceError: r is not defined
</code></pre>

<p>It always stops at exactly this point in bundle.js:</p>

<pre><code>    _reactDom2.default.render(_react2.default.createElement(
  _reactRedux.Provider,
  { store: createStoreWithMiddleware(_reducers2.default) },
  _react2.default.createElement(_reactRouter.Router, { history: _reactRouter.browserHistory, routes: _routes2.default })
), document.getElementById('app'));
r;
</code></pre>

<p>highlighting the r; on the last line.  I've searched everywhere and am stumped.  Any thoughts? </p>
","2928231","","","","","2016-03-01 20:32:32","Uncaught ReferenceError: r is not defined - react redux webpack","<reactjs><webpack><redux>","0","3","","",""
"36867345","1","36867417","","2016-04-26 14:06:17","","1","166","<p>Hi I am a newbie in react js and was trying to build an quiz application..When trying to do so I am getting an error when the render is getting called..</p>

<p>The below is the webpack.config file:-</p>

<pre><code>module.exports = {
  entry: {
    app: './src/index.js'
  },

  // Add resolve.extensions.
  // '' is needed to allow imports without an extension.
  // Note the .'s before extensions as it will fail to match without!!!
  resolve: {
    extensions: ['', '.js', '.jsx', '.es6.js']
  },

  output: {
    path: __dirname,
    filename: 'app/js/main.js'
  },
  module: {
    loader: [
//      {
//        test: /\.css$/,
//        loaders: ['style', 'css'],
//       // include: PATHS.app
//
//      },
      // Set up jsx. This accepts js too thanks to RegExp
     {
  test: /\.jsx?$/,
  exclude: /(node_modules|bower_components)/,
 presets:['es2015','react'],
  loader: 'jsx-loader'
//  query: {
//    presets: ['react']
//        }
     }
    ]
  }
};
</code></pre>

<p>The following is my index.js file:-</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import App from './components/App.jsx';

ReactDOM.render(
    &lt;App /&gt;,
    document.getElementById('example')
);

//React.createElement(People, {})
</code></pre>

<p>the following is my App.jsx:-</p>

<pre><code>import React, {Component} from 'react';
import ReactDOM from 'react-dom';

class App extends Component{
    render(){
        return(
        &lt;div&gt;Appppppoihj&lt;/div&gt;
        )
    }

}

export default App
</code></pre>

<p>The most interesting part is that I am getting an error in my index.js file while I am trying to call <code>renderDOM.render</code>..</p>

<p>The issue I am getting is :-</p>

<pre><code>ERROR in ./src/index.js
Module parse failed: C:\Users\Th\Desktop\ReactJs_Master\src\index.js Unexpected token (6:4)
You may need an appropriate loader to handle this file type.
SyntaxError: Unexpected token (6:4)
</code></pre>

<p>The following is my package.json:-</p>

<pre><code>{
  ""name"": ""react_quiz"",
  ""version"": ""1.0.0"",
  ""description"": ""quiz with the help of reactjs"",
  ""main"": ""script.js"",
  ""scripts"": {
    ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1""
  },
  ""author"": ""Pratham"",
  ""license"": ""ISC"",
  ""devDependencies"":{
      ""babel-core"":""5.8.*"",
      ""babel-loader"":""5.3.*"",
      ""webpack"":""1.12.*""
  },
  ""dependencies"":{
      ""react"":""15.0.1"",
      ""react-dom"":""15.0.1""
  }
}
</code></pre>

<p>I have tried out all different websites and solutions on this website but none of them is helping me so far..The error is coming at <code>&lt;</code> in the app component when calling <code>reactDOM.render</code></p>

<p>I would of much help if any of you all could help me out as I am stuck for a long time on this and not getting any sort of solution for this..</p>

<p>Thanks a lot for the help.</p>
","2146996","","2146996","","2016-04-26 14:21:23","2016-04-26 14:54:16","webpack issue when trying to render in reactjs","<javascript><reactjs><components><webpack>","1","1","","",""
"35916445","1","35917790","","2016-03-10 12:24:36","","6","3771","<p>Stuck with sample code from book learning React. Code below throwing <code>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of 'Card'.</code>. Checked SO (there are couple with similar issues) but I couldn't figure out what's wrong here.</p>

<pre><code>import React, {Component} from 'react';
import {render} from 'react-dom';
import CheckList from './CheckList';

class Card extends Component {
    render() {
        return (
            &lt;div className=""card""&gt;
                &lt;div className=""card__title""&gt;{this.props.title}&lt;/div&gt;
                &lt;div className=""card__details""&gt;
                    {this.props.description}
                    &lt;CheckList cardId={this.props.id} tasks={this.props.tasks} /&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        );
    }
}
</code></pre>

<p>CheckList.js</p>

<pre><code>class CheckList extends Component{
    render(){
          let tasks = this.props.tasks.map((task)=&gt;(
            &lt;li className=""checklist__task""&gt;
                &lt;input type=""checkbox"" defaultChecked={task.done} /&gt;
                {task.name}

            &lt;/li&gt;
        ));
        return (
            &lt;div className=""checklist""&gt;
                &lt;ul&gt;{tasks}&lt;/ul&gt;
            &lt;/div&gt;
        );
    }
}
</code></pre>
","514438","","","","","2017-09-15 07:37:34","ReactJS - Warning: React.createElement: type should not be null","<reactjs>","2","1","","",""
"35916055","1","35916205","","2016-03-10 12:06:04","","1","413","<p>I am exploring react-router and ran into a very basic issue. The frustrating part is I am using react-router in another app and it works fine!!.</p>

<p>I get this error in console. What am I missing here?</p>

<p><em>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components).</em></p>

<p><em>Uncaught Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: object.</em></p>

<pre class=""lang-js prettyprint-override""><code>var React = require('react');
var ReactDOM = require('react-dom');
var Router = require('react-router');
var Route = require('react-router').Route;
var hashHistory = require('react-router').hashHistory;

var App = React.createClass({
  render: function() {
    return &lt;div&gt;App Rendered from React Router!&lt;/div&gt;
  }
});

//this works - there is nothing wrong with App component
// ReactDOM.render((
//   &lt;App/&gt;
// ), document.getElementById('app'));


//This works - just so I understand the basics
// var Child = React.createElement('div',{className:'child'});
// var Parent = React.createElement('div',{className:'parent'},Child);
// ReactDOM.render(Parent, document.getElementById('app'));


//this doesn't work - copy pasted from tutorial
ReactDOM.render((
  &lt;Router history={hashHistory}&gt;
    &lt;Route path=""/"" component={App}/&gt;
  &lt;/Router&gt;
), document.getElementById('app'));

//Babel transpiled code
// ReactDOM.render(React.createElement(
//    Router,
//    { history: hashHistory },
//    React.createElement(Route, { path: '/', component: App })
//  ), document.getElementById('app'));


//this doesn't work
// var route = React.createElement(Route, { path: '/', component: App });
// var router = React.createElement(Router,{ history: hashHistory });
//
// ReactDOM.render(router, document.getElementById('app'));
</code></pre>
","3900355","","","","","2016-03-10 12:13:26","react-router createElement and render fail","<reactjs><react-router>","1","0","","",""
"36911339","1","","","2016-04-28 10:03:11","","0","378","<p>I'm trying to learn ReactJS at the moment, with all the differing tutorials using ES5 / ES6 and all the other differences in versions of React it is a little frustrating to say the least. Can anyone see why the code below would throw the following error to console?</p>

<p><strong>Error Message:</strong></p>

<p>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components)</p>

<p>Uncaught Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: object.</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import { Router, Route, Navigation } from 'react-router'


/* 
    Main App layout
*/

var App = React.createClass ({
    render: function () {
        return (
            &lt;div className=""catch-of-the-day""&gt;
                &lt;div className=""menu""&gt;
                    &lt;Header tagline=""Seafood and Eat it!""/&gt;
                &lt;/div&gt;
                &lt;Order/&gt;
                &lt;Inventory/&gt;
            &lt;/div&gt;
        )
    }
});


/*  Header */

var Header = React.createClass ({
    render: function() {
        return (
            &lt;header className=""top""&gt;
                &lt;h1&gt;Catch 
                &lt;span className=""ofThe""&gt;
                    &lt;span className=""of""&gt;of&lt;/span&gt;
                    &lt;span className=""the""&gt;the&lt;/span&gt;
                &lt;/span&gt;
                  day&lt;/h1&gt;
                &lt;h3&gt;&lt;span&gt;{this.props.tagline}&lt;/span&gt;&lt;/h3&gt;
            &lt;/header&gt;
        )
    }
});

/*  Order */

var Order = React.createClass ({
    render: function() {
        return (
            &lt;p&gt;Order&lt;/p&gt;
        )
    }
});

/*  &lt;Inventory/&gt; */

var Inventory = React.createClass ({
    render: function() {
        return (
            &lt;p&gt;Inventory&lt;/p&gt;
        )
    }
});


/* 
    Store Picker
    This will let us make &lt;StorePicker/&gt;
*/

var StorePicker = React.createClass ({
    render: function () {
        return (
            &lt;form className=""store-selector""&gt;
                &lt;h2&gt;Please enter a store&lt;/h2&gt;
                &lt;input type=""text"" ref=""storeId"" /&gt;
                &lt;input type=""submit"" /&gt;
            &lt;/form&gt;
        )
    }
});

/* 
    Routes
*/

var Routes = (
    &lt;Router&gt;
        &lt;Route path=""/"" component={StorePicker} /&gt;
        &lt;Route path=""/store/:storeid"" component={App} /&gt;
    &lt;/Router&gt;
)

ReactDOM.render(&lt;Routes/&gt;, document.querySelector('#main'));
</code></pre>
","4831663","","4831663","","2016-04-28 10:25:24","2016-04-28 10:32:31","React JS Error after requiring ReactRouter - Warning: React.createElement: type should not be null, undefined, boolean, or number","<reactjs>","3","0","","",""
"35895550","1","35918459","","2016-03-09 15:18:00","","0","477","<p>So I have node.js + react and react-router and I want to generate the routes from a list taken from a database. How can I make something like this</p>

<pre><code>&lt;Route component={App}&gt;
  &lt;Route name=""Home"" path=""/"" component={Page}/&gt;
  &lt;Route name=""Page1"" path=""/page1"" component={Page}/&gt;
  &lt;Route name=""Page2"" path=""/page2"" component={Page}/&gt;
  ...
&lt;/Route&gt;
</code></pre>

<p>and use it in my application?
My current files look like this:</p>

<p>server.js</p>

<pre><code>var express = require('express');
var bodyParser = require('body-parser');
...
var routes = require('./app/routes');
...
app.use(function(req, res) {
  Router.match({ routes: routes.default, location: req.url }, function(err, redirectLocation, renderProps) {
    if (err) {
      res.status(500).send(err.message)
    } else if (redirectLocation) {
      res.status(302).redirect(redirectLocation.pathname + redirectLocation.search)
    } else if (renderProps) {
        var html = ReactDOM.renderToString(React.createElement(Router.RoutingContext, renderProps));
        //var page = swig.renderFile('views/index.html', { html: html });
        res.status(200).send('&lt;!DOCTYPE html&gt;&lt;html lang=""ro""&gt;&lt;head&gt;&lt;link rel=""stylesheet"" href=""./foundation-6/css/foundation.min.css""&gt;&lt;link rel=""stylesheet"" href=""./css/main.css""&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=""app""&gt;&lt;/div&gt;&lt;script src=""/socket.io/socket.io.js""&gt;&lt;/script&gt;&lt;/script&gt;&lt;script src=""./js/vendor.js""&gt;&lt;/script&gt;&lt;script src=""./js/vendor.bundle.js""&gt;&lt;/script&gt;&lt;script src=""./js/bundle.js""&gt;&lt;/script&gt;&lt;script src=""./foundation-6/js/foundation.min.js""&gt;&lt;/script&gt;&lt;script&gt;$(document).foundation();var socket = io();&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;');
    } else {
      res.status(404).send('Page Not Found')
    }
  });
});
</code></pre>

<p>routes.js</p>

<pre><code>import React from 'react';
import {Route} from 'react-router';
import App from './components/App';
import Page from './components/Page';

export default (
  &lt;Route component={App}&gt;
    &lt;Route name=""Home"" path=""/"" component={Page}/&gt;
    &lt;Route name=""Test"" path=""/test"" component={Page}/&gt;
  &lt;/Route&gt;
);
</code></pre>

<p><strong>Edit</strong></p>

<p>I just want to get a list of pages. All of the pages will use the same component, but they will have different title and content. I can query the database, but I don't know hot to pass the object to the reactjs and generate routes based on it.</p>
","4356630","","4356630","","2016-03-09 15:52:24","2016-05-13 23:40:08","How do I get a list of react.js routes from a database?","<node.js><mongodb><reactjs><react-router>","2","3","","",""
"27529568","1","27534217","","2014-12-17 15:53:41","","1","1009","<p>I am currently trying to get reactJS working with the following Setup:</p>

<p>I am getting a xml-DOM from the Server. Its a server side rendered ""custom"" DOM, which normaly gets consumed by another client (not html, but java) which renders components.</p>

<pre><code>&lt;row id=""a""&gt;
    &lt;label id=""aa"" width=""140"" text=""Title"" /&gt;
    &lt;field id=""ab"" bgpaint="""" width=""200"" text="""" enabled=""true"" /&gt;
&lt;/row&gt;
</code></pre>

<p>I defined some ReactComponents with React.createClass(). So I have a Label, a Field and a Row (div).</p>

<p>Currently I cannot work out a way to render the Components of the xml-DOM with react.
I am going trough the xml-DOM and got the snippet from above. If I find a ""row"" shell I call React.createElement(Row, {}, ?)? But I i dont know what children will be to fill the '?' before I go deeper into the xml-DOM.
If I walk through the xml-DOM until I got a ""endNode"" with no children, how can i create the react elements from bottom to top? Do I have to create a super String and somehow call it as javascript.</p>

<p>Is there a way to create a Row, and afterwads add the children? Do I have to use the components props?
Something like:</p>

<pre><code>//&lt;row&gt; found
var newRow = React.createElement(Row, {}, ?);
...
//found the label in the row
var newLabel = React.createElement(Label, {}, ""Title"");
newRow.add(newLabel);
</code></pre>

<p>I can hardly come to a solution - is it possible to do with react? Or am I trying to do something which react is not made for? Probably I do not understand the child concept totally.
Or maybe its not really a react-Problem itself...</p>

<p>Any hints for me?</p>

<p>greetz</p>
","2261593","","","","","2014-12-18 12:44:55","How to rebuild a existing Dom in reactjs?","<javascript><html><xml><dom><reactjs>","1","0","","",""
"44878463","1","44878707","","2017-07-03 05:40:35","","3","266","<p>Error in React Router's link tag while switching from 0.14 to v15.5. This worked fine in the former version and it throws the following error in the latter.</p>

<blockquote>
  <p>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in. Check the render method of <code>Navbar</code>.</p>
</blockquote>

<p><strong>navbar.js</strong></p>

<pre><code>import React, { Component } from 'react';
import Link from 'react-router-dom';

class Navbar extends Component
{
  render()
  {
     return (

         &lt;nav className=""nav""&gt;                                         
           &lt;Link className=""btn btn-primary btn-block"" to=""/about""&gt;
           About Us
           &lt;/Link&gt;
         &lt;/nav&gt;

     );
  }

  export default Navbar;
</code></pre>

<p><strong>index.js</strong></p>

<pre><code>import React from 'react';
import { render } from 'react-dom';
import { BrowserRouter, Route, Switch } from 'react-router-dom';

import HomePage from './components/homepage/homepage';
import AboutPage from './components/aboutpage/aboutpage';

render
(
    &lt;BrowserRouter&gt;
        &lt;Switch&gt;
            &lt;Route path=""/about"" component={AboutPage} /&gt;
            &lt;Route path=""/"" component={HomePage} /&gt;
        &lt;/Switch&gt;
    &lt;/BrowserRouter&gt;,
    document.getElementById('app')
);
</code></pre>
","2067108","","2067108","","2017-07-03 06:12:37","2017-07-03 09:05:40","<Link> tag producing error: React.createElement: type is invalid","<reactjs><react-router>","1","3","1","",""
"44521869","1","44541321","","2017-06-13 12:42:05","","2","83","<p>I'm trying to learn react and also introduce it in already existing project. Thus I want to use react in a few places where it makes sense, instead of using it everywhere.</p>

<p>The problem is the entry-point concept that I can't wrap my head around. I'd prefer to have:</p>

<pre><code>ReactDOM.render(
    &lt;MyComponent/&gt;,
    document.getElementById(""componentExample"")
);
</code></pre>

<p>inside my <code>cshtml</code> near <code>&lt;div id='componentExample'&gt;&lt;/div&gt;</code> rather than in a separate <code>jsx</code>. I understand that I can't use <code>jsx</code> syntax in <code>cshtml</code>, but if I write</p>

<pre><code>&lt;script src=""@Url.Content(""~/Scripts/dist/bundle.js"")""&gt;&lt;/script&gt;
&lt;script&gt;
    ReactDOM.render(
        React.createElement(MyComponent, {}, null), document.getElementById(""componentExample"")
    );
&lt;/script&gt;
</code></pre>

<p>This doesn't really work because <code>MyComponent</code> is undefined. It is included in my <code>bundle.js</code> (I had to add it as entry point), but it is inside the scope of some <code>webpack</code> stuff and is not exposed.</p>

<p>What is the proper way of doing this?</p>

<p>My goal is to write some components for my app where it is more suitable and use it here and there, without completely going into react-based architecture.</p>

<p>My setup is <code>webpack</code> + <code>babel polyfill</code> + <code>typescript</code> + <code>react</code> and this is in <code>ASP.NET MVC</code>.</p>

<p>My <code>webpack.config.js</code> is:</p>

<pre><code>var config = {
    entry: ['babel-polyfill', ""./SiteScripts/React/index.tsx"", ""./SiteScripts/React/Components/MyComponent.tsx""],
    output: {
        filename: ""./Scripts/dist/bundle.js"",
    },

    // Enable sourcemaps for debugging webpack's output.
    devtool: ""source-map"",

    resolve: {
        // Add '.ts' and '.tsx' as resolvable extensions.
        extensions: ["".webpack.js"", "".web.js"", "".ts"", "".tsx"", "".js""]
    },

    module: {
        rules: [
            // All output '.js' files will have any sourcemaps re-processed by 'source-map-loader'.
            {
                enforce: 'pre',
                test: /\.js$/,
                loader: ""source-map-loader""
            },

            // All files with a '.ts' or '.tsx' extension will be handled by 'ts-loader'.
            {
                test: /\.tsx?$/, loaders: ['babel-loader', ""ts-loader""], exclude: /node_modules/
            }
        ]
    },

    plugins : []
}

if (process.env.NODE_ENV === ""production"") {
    config.devtool = ""cheap-module-source-map"";
}


module.exports = config;
</code></pre>

<p>Also this is somewhat related to the question (as question about architecture): I'd like to make my <code>bundle.js</code> smaller - it is 30k lines now. It is probably because I'm trying to use <code>react</code> in a wrong way?</p>
","423839","","","","","2017-06-15 14:37:34","How to use react as a component library rather than application","<reactjs><asp.net-mvc-4><webpack>","1","0","","",""
"28072196","1","","","2015-01-21 16:31:31","","20","47885","<p>i would like to ask how to make a button but when the mouse is on the button (hover),the new button is displayed above the previous button... and it's in react.js.. thx</p>

<p>this is the way of my code..</p>

<pre><code>var Category = React.createClass({displayName: 'Category',
  render: function () {
      return (
        React.createElement(""div"", {className: ""row""}, 
        React.createElement(""button"", null, ""Search"",   {OnMouseEnter://I have no idea until here})
      )
    );
  }
});

React.render(React.createElement(Category), contain);
</code></pre>
","4479025","","1150613","","2015-09-03 03:54:10","2016-09-07 01:48:01","a hover button in react.js","<javascript><jquery><css><reactjs>","3","4","5","",""
"44837074","1","","","2017-06-30 00:55:48","","0","259","<p>I have read though the majority of similar questions to this and i cant seem to find an appropriate answer. </p>

<p>I have been following along <a href=""https://www.davidmeents.com/blog/journey-into-react-part-3-navigating-between-webpages-with-react-router/"" rel=""nofollow noreferrer"">this tutorial</a> and have got to Including the Router into our App.) in which it asked to make sure everything is working and proceed, However, when I run the app I get no output (the expected is ""Hello world"". </p>

<p>When looking at the console in Chrome I get the error </p>

<pre><code>bundle.js:1003 Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in.
</code></pre>

<p><strong>EDIT - ADDITIONAL ERROR MESSAGES</strong></p>

<p>There are additional error messages that were missed (window size meant they were displayed just off screen.</p>

<pre><code>`bundle.js:1003 Warning: Failed prop type: The prop `history` is marked as required in `Router`, but its value is `undefined`. in Router`
</code></pre>

<p>and:</p>

<pre><code>Uncaught TypeError: Cannot read property 'location' of undefined
</code></pre>

<p>Both of these do generate a sstack trace but points to locations in the generated bundle.js</p>

<p><strong>END EDIT - ADDITIONAL ERROR MESSAGES</strong></p>

<p>Now I have checked my code to the one in the tutorial and it appears I have done everything the same. I have looked (to the best of my ability at this point) at the imports and exports and they appear fine to me. so I am at a loss as to what needs changing. </p>

<p>my code:</p>

<p>routes.js </p>

<pre><code>import React from 'react';
import { Route, IndexRoute } from 'react-router';
import App from './components/app';

export default (
  &lt;Route path='/' component={App}&gt;
    &lt;IndexRoute component={App} /&gt;
  &lt;/Route&gt;
);
</code></pre>

<p>app.js </p>

<pre><code>import React,  {Component} from ""react"";

export default class App extends Component {
  render() {
    return (
      &lt;div&gt;
        Hello World 
      &lt;/div&gt;
    );
  }
}
</code></pre>

<p>index.js </p>

<pre><code>import React from 'react';
import ReactDom from 'react-dom';
import { Router, browserHistory } from 'react-router';
import routes from './routes';

import App from './components/app';
ReactDom.render(&lt;Router history={browserHistory} routes={routes} /&gt;, document.querySelector('#app'));
</code></pre>

<p>index.html</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Journey into React&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div id=""app""&gt;&lt;/div&gt;
    &lt;script type=""text/javascript"" src=""bundle.js"" charset=""utf-8""&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Any help would be greatly appreciated. </p>
","5275045","","5275045","","2017-06-30 22:37:45","2017-06-30 22:37:45","reach-router Warning: React.createElement: type is invalid","<reactjs><react-router>","1","4","1","",""
"44547201","1","44547248","","2017-06-14 14:09:47","","1","492","<p>I have the following typescript:</p>

<pre><code>import React from 'react'
import ReactDOM from 'react-dom'

const App = () =&gt; {
  return (
    &lt;div&gt;
      &lt;p&gt;Hello world!&lt;/p&gt;
    &lt;/div&gt;
  )
}

ReactDOM.render(&lt;App /&gt;, document.getElementById('app'))
</code></pre>

<p>It produce the following js:</p>

<pre><code>""use strict"";
Object.defineProperty(exports, ""__esModule"", { value: true });
const react_1 = require(""react"");
const react_dom_1 = require(""react-dom"");
const App = () =&gt; {
    return (react_1.default.createElement(""div"", null,
        react_1.default.createElement(""p"", null, ""Hello world!"")));
};
react_dom_1.default.render(react_1.default.createElement(App, null), document.getElementById('app'));
//# sourceMappingURL=react.component.js.map
</code></pre>

<p>When running it, I get the following error: (index):29 Error: (SystemJS) Cannot read property 'render' of undefined
    TypeError: Cannot read property 'render' of undefined</p>

<p>It seems like react_dom_1.default is undefined, but I have no clue why?</p>
","834815","","","","","2017-06-14 14:24:30","Typescript react not importing correctly","<reactjs><typescript>","1","0","1","",""
"44500858","1","48790289","","2017-06-12 13:37:08","","1","74","<p>Working with the example in the README at </p>

<p><a href=""https://github.com/ReactTraining/react-router/tree/master/packages/react-router-redux"" rel=""nofollow noreferrer"">https://github.com/ReactTraining/react-router/tree/master/packages/react-router-redux</a></p>

<p>I have created this layout in my index:</p>

<pre class=""lang-js prettyprint-override""><code>// attach the redux dev tools extension for Chrome
const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;

// apply router logic as middleware
const history = createHistory();
const router_mw = routerMiddleware(history);


// second arg to createStore is the inital redux store state
const store = createStore(
  reducers,
  initialState,
  composeEnhancers(
    applyMiddleware(
      ReduxPromise,
      ReduxThunk,
      router_mw
    )
));

// --&gt; add routes for logs, opsec, etc. later
ReactDOM.render(
  &lt;Provider store={ store }&gt;
    &lt;ConnectedRouter history={ history }&gt;  // &lt;- error here
      &lt;div&gt;
        &lt;Route exact path=""/"" component={ LoginScreen } /&gt;
        &lt;Route path=""/comp1"" component={ comp1 } /&gt;
        &lt;Route path=""/comp2"" component={ comp2 } /&gt;
      &lt;/div&gt;
    &lt;/ConnectedRouter&gt;
  &lt;/Provider&gt;
  , document.getElementById('root')
);
</code></pre>

<p>Any attempt to compile it complains about { history } in the ConnectedRouter entry point:</p>

<pre><code>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in. Check your code at index.js:52.
</code></pre>

<p>What am I missing? This is a <code>react-router-redux</code> retrofit - going back to <code>react-router</code> (and changing <code>ConnectedRouter</code> to <code>BrowserRouter</code>) and everything works as expected.</p>
","3212967","","","","","2018-02-14 15:05:22","react-router-redux history not being accepted (from sample code)","<react-router><react-router-redux>","1","0","0","",""
"36962719","1","36962873","","2016-05-01 03:24:56","","1","864","<p>I am using reactJS and following file is the client side code which i later bundle using browserify.<br>
I am able to create elements such as check box input etc. but i am having issue while creating element for Router.<br>
This is ok - </p>

<pre><code>React.createElement('input', { ref: 'done', type: 'checkbox', defaultChecked: this.state.done, onChange: this.onChange })
</code></pre>

<p>I am having issue with below code -  </p>

<pre><code>var React = require('react');
var ReactDOM = require('react-dom');
var TodoItem = require('../lib/components/todo-item');
var Router = require('react-router').Router;
var Route = require('react-router').Route;
var browserHistory = require('react-router').browserHistory;
var renderTarget = document.getElementById('content');
TodoItem.component = React.cloneElement(TodoItem.component, {done: false, name: 'Write Tutorial'});
var TodoItemFactory = React.createFactory(TodoItem.component);

ReactDOM.render(
  React.createElement(
    Router,
    { history: browserHistory },
    React.createElement(Route, {path: ""/"", component: TodoItemFactory })
  ),
  renderTarget);
</code></pre>

<p>In the browser at ReactDOM.render ... the error is reported as - </p>

<blockquote>
  <p>warning.js:45 Warning: React.createElement: type should not be null,
  undefined, boolean, or number. It should be a string (for DOM
  elements) or a ReactClass (for composite components). Check the render
  method of <code>bound</code>.</p>
</blockquote>

<p>For reference - lib/components/todo-item.js - </p>

<pre><code>'use strict';

var React = require('react');

var TodoComponent = React.createClass({
  displayName: 'TodoItem',

  /**
   * Lifecycle functions
   **/
  getInitialState: function getInitialState() {
    return { done: this.props.done };
  },

  componentDidMount: function componentDidMount() {},

  render: function render() {
    return React.createElement(
      'label',
      null,
      React.createElement('input', { ref: 'done', type: 'checkbox', defaultChecked: this.state.done, onChange: this.onChange }),
      this.props.name
    );
  },

  /**
   * Event handlers
   **/
  onChange: function onChange(event) {
    this.setDone(event.target.checked);
  },

  /**
   * Utilities
   **/
  setDone: function setDone(done) {
    this.setState({ done: !!done });
  }
});

module.exports.component = TodoComponent;
</code></pre>
","815929","","815929","","2016-05-01 03:35:35","2016-05-01 04:04:54","Error while using React.createElement","<javascript><reactjs><react-native><jsx>","1","5","","",""
"45168005","1","45169311","","2017-07-18 13:20:00","","0","364","<p>newbie</p>

<p>I can create an element but how do I then add to that element ?</p>

<p>When I try</p>

<pre><code>  &lt;body&gt;
    React....
    &lt;div id=""main_insert""&gt;
      &lt;span&gt;
      &lt;/span&gt;
    &lt;/div&gt;
    &lt;script src=""https://unpkg.com/react@15.4.2/dist/react.js""&gt;&lt;/script&gt;
    &lt;script src=""https://unpkg.com/react-dom@15.4.2/dist/react-dom.js""&gt;&lt;/script&gt;    &lt;script&gt;
      let dish = React.createElement(""h1"", {id: 'top'}, ""Baked Salmon"");
      let ingredients = React.createElement(""ul"", {id: 'mainList'},
        React.createElement(""li"", null, ""eggs""),
        React.createElement(""li"", null, ""ham""),
        React.createElement(""li"", null, ""spam"")
      );

      ReactDOM.render(dish, document.getElementById('main_insert'));
      ReactDOM.render(ingredients,  document.getElementById('top'));
      // react and js code here
    &lt;/script&gt;
  &lt;/body&gt;
</code></pre>

<p>I get the ingredients but not the dish</p>

<p>My H1 does exist, but content is gone</p>

<p><a href=""https://i.stack.imgur.com/hHHtx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hHHtx.png"" alt=""enter image description here""></a></p>
","631619","","","","","2017-07-18 18:17:13","React - how to add to react DOM?","<reactjs>","2","4","1","",""
"44494787","1","44495385","","2017-06-12 08:31:21","","1","147","<pre><code>function Welcome(props) {
  return &lt;h1&gt;Hello, {props.name}&lt;/h1&gt;;
}

const element = &lt;Welcome name=""Sara""/&gt;;
</code></pre>

<p>I have this in jsx.</p>

<p>It compiles to this js:</p>

<pre><code>function Welcome(props) {
  return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
    ""h1"",
    {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 7
      },
      __self: this
    },
    ""Hello, "",
    props.name
  );
}

var element = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Welcome, { name: ""Sara"", __source: {
    fileName: _jsxFileName,
    lineNumber: 10
  },
  __self: this
});
</code></pre>

<p>It looks like normal js to me.</p>

<p><a href=""https://i.stack.imgur.com/EG72Q.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/EG72Q.png"" alt=""enter image description here""></a></p>

<p>So I put a break point here in chrome.</p>

<p>When it ran to that break point, I went to chrome's console and did this:
<a href=""https://i.stack.imgur.com/TB3up.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TB3up.png"" alt=""enter image description here""></a></p>

<p>These 3 expressions were typed into the console and executed when the break point was on.</p>

<p>It seems like I really can not change properties of the variable named props.</p>

<p>But the props object looks like an innocent object, how is this implemented in react js?</p>
","290284","","290284","","2017-06-12 08:52:23","2017-06-12 09:21:12","How does react js ensure immutability of props?","<javascript><reactjs><immutability>","1","9","","",""
"35961221","1","","","2016-03-12 17:49:45","","2","1292","<p>In my app I'm using react-router v2 - <a href=""https://github.com/reactjs/react-router"" rel=""nofollow noreferrer"">https://github.com/reactjs/react-router</a></p>

<p>I have problem with redirect in <code>onEnter</code>:</p>

<p><strong>some component</strong></p>

<pre><code>static async onEnter({ flux }, nextState, replace, callback) {
    const token = flux.getStore('auth').getAccessToken();
    if (!token) {
        replace('/login');
        return callback();
    }
}
</code></pre>

<p>I'm using server-side rendering and have used this guide - <a href=""https://github.com/reactjs/react-router/blob/master/docs/guides/ServerRendering.md#async-routes"" rel=""nofollow noreferrer"">https://github.com/reactjs/react-router/blob/master/docs/guides/ServerRendering.md#async-routes</a> as it says I need to use <code>match</code> on client too:</p>

<p><strong>client.js</strong></p>

<pre><code>RouterMatch({history: browserHistory, routes: patchedRouteHooks(routes)}, (error, redirectLocation, renderProps) =&gt; {
    // renderProps are `undefined` when replace from onEnter hook
    ReactDOM.render(
        &lt;Router {...renderProps} createElement={passFluxToComponent} /&gt;,
        mountNode,
    );
});
</code></pre>

<p><strong>routes.js</strong></p>

<pre><code>const routes = (
    &lt;Route path=""/"" component={AppHandler}&gt;
        &lt;Route path=""/"" component={AuthHandler}&gt;
            &lt;Route path=""login(/)"" component={LoginFormHandler} /&gt;
            &lt;Route path=""signup(/)"" component={SignupFormHandler} /&gt;
            &lt;Route path=""resetpassword(/)"" component={ResetPasswordFormHandler} /&gt;
            &lt;Route path=""changepassword(/)"" component={ChangePasswordFormHandler} /&gt;
            &lt;Route path=""logout(/)"" component={LogoutHandler} /&gt;
        &lt;/Route&gt;

        &lt;Route path=""/"" component={AppLayoutHandler}&gt;
            &lt;Route path=""/"" component={EnsureAuthHandler}&gt;
                &lt;Route path=""me/favorites(/)"" component={FavoritePropertiesHandler} /&gt;
                &lt;Route path=""me/settings(/)"" component={UserSettingsHandler} /&gt;
                &lt;Route path=""dashboard(/)(:status)(/)"" component={DashboardFlowHandler} /&gt;
                &lt;IndexRoute component={DashboardFlowHandler} /&gt;
            &lt;/Route&gt;

            &lt;Route path=""/s(/)"" component={SearchResultsHandler} /&gt;
            &lt;Route path=""/user/:id(/)"" component={UserDetailsHandler} /&gt;
            &lt;IndexRoute component={EnsureAuthHandler} /&gt;
        &lt;/Route&gt;

        &lt;IndexRoute component={AppLayoutHandler} /&gt;
    &lt;/Route&gt;
);

export default routes
</code></pre>

<p><strong>patchRouteHooks.js</strong></p>

<pre><code>function patchRouteHooks (Route, patchData = {}) {
    const { props: { children, component } } = Route;

    function _patchChildren (children) {
        if (Array.isArray(children)) {
            return React.Children.map(children, ChildRoute =&gt; patchRouteHooks(ChildRoute, patchData));
        } else {
            return patchRouteHooks(children, patchData);
        }
    }

    return {
        ...Route,
        props: {
            ...Route.props,
            onEnter: component &amp;&amp; component.onEnter &amp;&amp; function (...args) {
                component.onEnter.call(null, patchData, ...args);
            },
            onLeave: component &amp;&amp; component.onLeave &amp;&amp; function (...args) {
                component.onLeave.call(null, patchData, ...args);
            },
            children: children ? _patchChildren(children) : null
        }
    };
}

export default patchRouteHooks;
</code></pre>

<p>After replace in onEnter I receive renderProps as <code>undefined</code> which results in warnings in console and broken app:</p>

<p><a href=""https://i.stack.imgur.com/f9lmg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/f9lmg.png"" alt=""enter image description here""></a></p>

<p>Any suggestions what I am doing wrong? Thanks!</p>
","2117550","","2117550","","2016-03-13 10:49:34","2016-07-06 14:20:02","react-router v2 - replace in onEnter doesn't work","<javascript><reactjs><routing><react-router><server-rendering>","1","2","","",""
"35975501","1","35977089","","2016-03-13 20:36:08","","0","383","<p>I am trying to create a node module for all the reusable react components that i have. I am stuck while importing a jsx file.
I have a basic jsx module i.e greeting.jsx in components folder.</p>

<pre><code>//greeting.jsx
import React from 'react';
export default class Greeting extends React.Component {
    render() {
        return (
            &lt;p&gt;Hello World&lt;/p&gt;
        )
    }
}
</code></pre>

<p>Folder structure :- </p>

<pre><code>- index.js
- components
  ¦-- Greeting
      ¦-- greeting.jsx
  ¦-- &lt;Other Modules like Greeting&gt;
</code></pre>

<p>index.js which imports all the components and exports them</p>

<pre><code>//index.js

import Greeting from './components/Greeting/greeting.jsx';

export default {
    Greeting
};
</code></pre>

<p>When i have to use greeting module i have to import the module. Like the way in below code. But doing this gives me error on the page</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import GreetingModule from './index.js';

ReactDOM.render( &lt;GreetingModule /&gt;, document.getElementById('content') );
</code></pre>

<p>Errors:-</p>

<pre><code>warning.js:45 Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components).
invariant.js:39 Uncaught Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: object.
</code></pre>

<p>This is where i am stuck now. Although if i import jsx file directly (like below) then it works.  </p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import GreetingModule from './components/Greeting/greeting.jsx';

ReactDOM.render( &lt;GreetingModule /&gt;, document.getElementById('content') );
</code></pre>

<p>But this is not the way i want to do as i am trying to create a npm module and my index.js should export all the react components.</p>

<p>I have tried googling for creating a npm module for react componets but couldn't find any thing. Please Help, in resolving the issue</p>
","913436","","","","","2016-03-13 23:14:51","Error while creating a npm module of a react component","<node.js><reactjs><module><npm>","1","0","","",""
"35979488","1","36003534","","2016-03-14 04:20:15","","0","971","<p>for my isomorphic application, i'm usign react router (<strong>2.0.1</strong>) and i need to handle authentication, so i used the <strong>onEnter</strong> hook , according to the documentation api. I need to handle authentication but getting </p>

<blockquote>
  <p>TypeError: transition.redirect is not a function</p>
</blockquote>

<p><em>routes.jsx file</em> </p>

<pre><code>**/**
 *
 * @param next
 * @param transition
 * @param callback
 */
function  requireAuth  (next, transition, callback) {
    if (!window.user){
        transition.abort();
        transition.redirect ({
            pathname: '/login',
            state: { nextPathname: next.location.pathname }
        }, transition);
    }
    else {
        callback(null, transition);
    }
}**



&lt;Router history={history} onUpdate={onUpdate} onEnter={requireAuth}&gt;
            &lt;Route path=""/rt/"" component={RealTime}/&gt;
            &lt;Route path=""/"" component={Blank}/&gt;
            {devRoutes}

 &lt;/Router&gt;
</code></pre>

<p><em>server.js file</em></p>

<pre><code>app.get('*', function(req, res, next) {
 Router.run(routes(), location, function(e, i, t) {
      var str = React.renderToString(
                  React.createElement(Router, i));
      res.send (str)
  }
}
</code></pre>
","4904189","","","","","2016-03-15 05:47:53","Server side react router onEnter handling, transition.redirect is not a function","<node.js><reactjs><react-router>","2","0","","",""
"36190541","1","","","2016-03-23 23:20:29","","1","47","<p>In my React app all of my components can update themselves through the browser, however a module I'm using called <code>jenkins-api</code> only works when I call it server side. I can get the data and pass it into my template like this:</p>

<pre><code>require(""babel-core/register"")({presets: ['es2015', 'react']});
var express = require('express');
var router = express.Router();
var React = require('react');
var ReactDOM = require('react-dom');
var Component = require('../src/javascripts/components/Areachart');
var jenkinsapi = require('jenkins-api');
var jenkins = jenkinsapi.init('https://username:password@my.jenkins.server:8080', {strictSSL: false});

router.get('/', function(req, res, next) {
  jenkins.all_jobs(function(err,jenkins-res){
    if (err) {
      console.log(err)
    }
    res.render('index', { title: 'My App', data: JSON.stringify(jenkins-res) });
  })
});
</code></pre>

<p>But I'm having trouble making this data available to my react component, ideally I would like to be able to do something like this</p>

<pre><code>router.get('/', function(req, res, next) {
  jenkins.all_jobs(function(err,jenkins-res){
    if (err) {
      console.log(err)
    }
    res.render('index', { title: 'My App', data: Component.setState({prop1: jenkins-res.prop1, prop2: jenkins-res.prop2 });
</code></pre>

<p>I have even tried rendering the entire React component:</p>

<pre><code>res.render('index', { title: 'My App', data: ReactDOM.render(React.createElement(Component), document.getElementById('main'))});
</code></pre>

<p>But this does not work because <code>document</code> doesn't exist. I would like to use <code>.setState</code> or something similar to update the state of my component when the data has been retrieved by the server - is this possible?</p>

<p>Thanks</p>
","1811481","","","","","2016-03-24 11:04:06","Rendering or updating react element on server","<javascript><node.js><express><reactjs>","1","0","","",""
"28650447","1","","","2015-02-21 19:41:49","","10","5690","<p>I have a simple reactJS component like this : </p>

<pre><code>var LikeCon = React.createClass({

    render: function() {
        return (
            &lt;span&gt;Like&lt;/span&gt;
        );
    }
});
</code></pre>

<p>This is placed in a file called Common.jsx. Im trying to use this LinkeCon component from antoher jsx file like this </p>

<pre><code>var FeedTopic = React.createClass({
        render: function() {
            var test = false;
            return (
                &lt;div className=""topic""&gt;
                        {LikeCon}
                &lt;/div&gt;

            );
        }
});
</code></pre>

<p>The problem is that this exception is thrown </p>

<blockquote>
  <p>Error while rendering ""FeedBox"" to ""react1"": ReferenceError: LikeCon
  is not defined</p>
</blockquote>

<p>This is how the import looks like on the Layoutpage </p>

<pre><code>&lt;script src=""@Url.Content(""~/Scripts/Common.jsx"")""&gt;&lt;/script&gt;
&lt;script src=""@Url.Content(""~/Scripts/Grid.jsx"")""&gt;&lt;/script&gt;
&lt;script src=""@Url.Content(""~/Scripts/Feed.jsx"")""&gt;&lt;/script&gt;
</code></pre>

<p>My thought was that if Common.jsx that contains the shared component was first, then the var would also be available to the other react components?</p>

<p>Edit :</p>

<p>this is placed on the Layout.cshtml</p>

<pre><code>&lt;script type=""text/jsx"" src=""@Url.Content(""~/Scripts/JSXTransformer.js"")""&gt;&lt;/script&gt;
&lt;script type=""text/jsx"" src=""@Url.Content(""~/Scripts/Common.jsx"")""&gt;&lt;/script&gt;
&lt;script type=""text/jsx"" src=""@Url.Content(""~/Scripts/Grid.jsx"")""&gt;&lt;/script&gt;
&lt;script type=""text/jsx"" src=""@Url.Content(""~/Scripts/Feed.jsx"")""&gt;&lt;/script&gt;
</code></pre>

<p>The component is now refered to with <code>&lt;LikeCon like=""0"" /&gt;</code> instead of <code>{LikeCon}</code>.</p>

<p>Edit 2 :</p>

<p>This is how I use the LikeCon</p>

<pre><code>var TopicComments = React.createClass({
    render: function() {
        var comment = this.props.data.map(function(com, i) {
            return (
            &lt;article key={i}&gt;
            &lt;div className=""commentCon""&gt;
                &lt;div className=""tUImgLnk""&gt;
                    &lt;a title={com.UserName} target=""_blank"" href={com.UserInfoUrl}&gt;
                        &lt;img className=""tUImg"" src={com.UserPicSrc} /&gt;
                    &lt;/a&gt;
                &lt;/div&gt;
                &lt;b&gt;&lt;a href=""#"" title={""Visit "" + com.UserName} target=""_blank""&gt;{com.UserName}&lt;/a&gt;&lt;/b&gt;&amp;nbsp;:&amp;nbsp;
                &lt;span className=""content""&gt;
                    {com.Message}
                &lt;/span&gt;
                &lt;div className=""status""&gt;
                    &lt;div className=""dateCreated dimText""&gt;
                        {com.DateCreated}
                    &lt;/div&gt;  
                    &lt;LikeCon initialLike={com.Like} initialLikeCount={com.LikeCount} objectId={com.Id} categoryKey={1} userId={this.props.userId} /&gt;
                    &lt;article&gt;&lt;/article&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;/article&gt;);
        }.bind(this));
        return(
            &lt;div className=""comments""&gt;
                {comment}
            &lt;/div&gt;
            );
    }
});
</code></pre>

<p>This is how the script import looks like</p>

<pre><code>    &lt;script src=""http://fb.me/react-0.12.2.js""&gt;&lt;/script&gt;
    &lt;script src=""@Url.Content(""~/Scripts/jquery-2.1.3.min.js"")""&gt;&lt;/script&gt;
    &lt;script src=""@Url.Content(""~/Scripts/jquery.autosize.min.js"")""&gt;&lt;/script&gt;
    &lt;script src=""@Url.Content(""~/Scripts/spin.min.js"")""&gt;&lt;/script&gt;
    &lt;script src=""@Url.Content(""~/Scripts/JSXTransformer.js"")""&gt;&lt;/script&gt;

    &lt;script src=""@Url.Content(""~/Scripts/Grid.jsx"")""&gt;&lt;/script&gt;
    &lt;script src=""@Url.Content(""~/Scripts/Feed.jsx"")""&gt;&lt;/script&gt;
    @RenderSection(""ScriptFoot"", required: false)
    @Html.ReactInitJavaScript()
&lt;/body&gt;
</code></pre>

<p>This is the exception I get : </p>

<blockquote>
  <p>Error while rendering ""FeedBox"" to ""react1"": ReferenceError: LikeCon
  is not defined    at React.createClass.render (Script Document
  [7]:83:33) ->         React.createElement(LikeCon, {initialLike:
  this.props.data.Like, i    at Script Document [2]:7021:34    at
  wrapper (Script Document [2]:12893:21)    at Script Document
  [2]:6563:14    at wrapper (Script Document [2]:12893:21)    at
  ReactMultiChild.Mixin.mountChildren (Script Document [2]:12352:42)<br>
  at ReactDOMComponent.Mixin._createContentMarkup (Script Document
  [2]:7801:32)    at Script Document [2]:7723:14    at wrapper (Script
  Document [2]:12893:21)    at Script Document [2]:6569:44    at wrapper
  (Script Document [2]:12893:21)    at Script Document [2]:6569:44    at
  wrapper (Script Document [2]:12893:21)    at Script Document
  [2]:13797:38    at Mixin.perform (Script Document [2]:16855:20)    at
  renderToString (Script Document [2]:13795:24)    at Script Document
  [9] [temp]:1:7 Line: 7021 Column:34</p>
</blockquote>
","365624","","290784","","2015-03-10 02:24:09","2016-03-09 15:31:14","How to use react components from other files","<javascript><asp.net><components><reactjs><react-jsx>","2","8","2","",""
"27885620","1","29422834","","2015-01-11 09:28:49","","0","894","<p>I'm currently using Rails with a ReactJS front end. I have most of my JS in an appropriate .js.jsx file, however, I have this sitting in index.html.erb under a script tag:</p>

<pre><code>React.render(
    React.createElement(CommentBox, {url: ""/demo""}),
            document.getElementById('content')
        );
&lt;/script&gt;
</code></pre>

<p>Under this configuration it works perfectly.</p>

<p>I appreciate the usual ""Rails Way"" is unobstrusive JS, but I'm having a hard time making that happen. If I simply move the above code into my main .js file, it loads before the content element exists and just renders nothing.</p>

<p>React-rails actually provides a special gem for unobtrusive JS, however I have two issues with that. Firstly, the documents don't refer to how to actually attach a URL tag, so neither of these work (no errors, just nothing renders):</p>

<pre><code>&lt;% react_component('CommentBox', url: '/demo') %&gt;
&lt;div data-react-class=""CommentBox"" data-react-props=""url: /demo"" /&gt;
</code></pre>

<p>The bigger issue however, is that the way the react-ujs gem works is by automatically embedding a few hundred lines of JavaScript before the body close tag. This doesn't feel less obtrusive than the four embedded lines I started with, or any improvement over it. </p>

<p>Am I missing something, in terms of why this method would be better, assuming I can get the first issue fixed?</p>

<p>Would there be a way to move this into the main .js file and still have it render? I could move it into a dedicated .js file and call it after the content tag, but that messes with the asset pipeline and replaces four lines of embedded scripting with a call to another whole file.</p>

<p>Half the rails community would call this embedded scripting heretical but it just keeps looking like the most efficient solution.</p>
","3988789","","3988789","","2015-01-11 09:41:35","2015-04-17 14:14:32","Unobtrusive JS with react-rails","<javascript><ruby-on-rails>","2","0","","",""
"45042301","1","45042810","","2017-07-11 18:40:48","","1","388","<p>I'm trying to test my <code>&lt;Header /&gt;</code> component, but it seems that <code>shallow</code> and <code>mount</code> are not working. I read that in <a href=""https://facebook.github.io/react/blog/2017/04/07/react-v15.5.0.html"" rel=""nofollow noreferrer"">react v15.5.0</a> there are some updates, but I didn't understand how to make my tests work.</p>

<p>I'm using <code>""react"": ""^15.5.4"",</code> and <code>""enzyme"": ""^2.9.1"",</code>. If <code>shallow</code> or <code>mount</code> are not called, everything works. It was also tried installing <code>""react-test-renderer"": ""^15.6.1"",</code>.</p>

<pre><code>import React from 'react';
import { expect } from 'chai';
import { shallow } from 'enzyme';
import Header from '../../../components/header/Header';

describe('&lt;Header /&gt;', () =&gt; {
  it('should be correct', () =&gt; {
    const props = {
      attendant: {
        id: 1,
        first_name: 'firstName',
        last_name: 'lastName',
      },
    };

    const wrapper = shallow(&lt;Header {...props} /&gt;);
    console.log(wrapper);
    expect(0).eql(0);
  });
});
</code></pre>

<p>Log error:</p>

<pre><code>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: object. You likely forgot to export your component from the file it's defined in.
/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/react-test-renderer/lib/shallow/ReactCompositeComponent.js:305
        return Component(publicProps, publicContext, updateQueue);
               ^

TypeError: Component is not a function
    at /Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/react-test-renderer/lib/shallow/ReactCompositeComponent.js:305:16
    at measureLifeCyclePerf (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/react-test-renderer/lib/shallow/ReactCompositeComponent.js:75:12)
    at ShallowComponentWrapper._constructComponentWithoutOwner (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/react-test-renderer/lib/shallow/ReactCompositeComponent.js:304:14)
    at ShallowComponentWrapper.mountComponent (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/react-test-renderer/lib/shallow/ReactCompositeComponent.js:187:21)
    at Object.mountComponent (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/react-test-renderer/lib/shallow/ReactReconciler.js:45:35)
    at ReactShallowRenderer._render (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/react-test-renderer/lib/shallow/ReactShallowRenderer.js:138:23)
    at _batchedRender (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/react-test-renderer/lib/shallow/ReactShallowRenderer.js:85:12)
    at Object.batchedUpdates (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/react-test-renderer/lib/shallow/ReactDefaultBatchingStrategy.js:60:14)
    at Object.batchedUpdates (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/react-test-renderer/lib/shallow/ReactUpdates.js:97:27)
    at ReactShallowRenderer.render (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/react-test-renderer/lib/shallow/ReactShallowRenderer.js:112:18)
    at ReactShallowRenderer.render (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/enzyme/build/react-compat.js:171:37)
    at /Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/enzyme/build/ShallowWrapper.js:128:26
    at ReactDefaultBatchingStrategyTransaction.perform (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/react-test-renderer/lib/shallow/Transaction.js:143:20)
    at Object.batchedUpdates (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/react-test-renderer/lib/shallow/ReactDefaultBatchingStrategy.js:62:26)
    at Object.batchedUpdates (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/react-test-renderer/lib/shallow/ReactUpdates.js:97:27)
    at ReactShallowRenderer.unstable_batchedUpdates (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/react-test-renderer/lib/shallow/ReactShallowRenderer.js:130:25)
    at performBatchedUpdates (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/enzyme/build/ShallowWrapper.js:103:21)
    at /Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/enzyme/build/ShallowWrapper.js:127:9
    at withSetStateAllowed (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/enzyme/build/Utils.js:284:3)
    at new ShallowWrapper (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/enzyme/build/ShallowWrapper.js:126:38)
    at shallow (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/enzyme/build/shallow.js:19:10)
    at Suite.&lt;anonymous&gt; (/Users/gtmiyabe/Documents/contactto-master-frontend/app/test/components/header/Header.test.js:17:21)
    at Object.create (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/mocha/lib/interfaces/common.js:114:19)
    at context.describe.context.context (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/mocha/lib/interfaces/bdd.js:44:27)
    at Suite.&lt;anonymous&gt; (/Users/gtmiyabe/Documents/contactto-master-frontend/app/test/components/header/Header.test.js:7:3)
    at Object.create (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/mocha/lib/interfaces/common.js:114:19)
    at context.describe.context.context (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/mocha/lib/interfaces/bdd.js:44:27)
    at Object.&lt;anonymous&gt; (/Users/gtmiyabe/Documents/contactto-master-frontend/app/test/components/header/Header.test.js:6:1)
    at Module._compile (module.js:569:30)
    at loader (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/babel-register/lib/node.js:144:5)
    at Object.require.extensions.(anonymous function) [as .js] (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/babel-register/lib/node.js:154:7)
    at Module.load (module.js:503:32)
    at tryModuleLoad (module.js:466:12)
    at Function.Module._load (module.js:458:3)
    at Module.require (module.js:513:17)
    at require (internal/module.js:11:18)
    at /Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/mocha/lib/mocha.js:230:27
    at Array.forEach (native)
    at Mocha.loadFiles (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/mocha/lib/mocha.js:227:14)
    at Mocha.run (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/mocha/lib/mocha.js:495:10)
    at Object.&lt;anonymous&gt; (/Users/gtmiyabe/Documents/contactto-master-frontend/node_modules/mocha/bin/_mocha:469:18)
    at Module._compile (module.js:569:30)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:503:32)
    at tryModuleLoad (module.js:466:12)
    at Function.Module._load (module.js:458:3)
    at Function.Module.runMain (module.js:605:10)
    at startup (bootstrap_node.js:158:16)
    at bootstrap_node.js:575:3
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! contactto-master@1.0.0 test: `mocha --require ignore-styles --require mock-local-storage ./testSetup.js ""./app/test/**/*.test.js""`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the contactto-master@1.0.0 test script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /Users/gtmiyabe/.npm/_logs/2017-07-11T18_45_30_025Z-debug.log
</code></pre>

<p>Header:</p>

<pre><code>import React from 'react';
import PropTypes from 'prop-types';
import style from './Header.scss';
import User from '../user/User';

const Header = ({ attendant }) =&gt; (
  &lt;div className={style.wrapper}&gt;
    &lt;header /&gt;
    {attendant &amp;&amp;
      &lt;User
        attendant={attendant}
      /&gt;
    }
  &lt;/div&gt;
);

Header.propTypes = {
  attendant: PropTypes.shape({
    id: PropTypes.number,
    first_name: PropTypes.string,
    last_name: PropTypes.string,
  }).isRequired,
};

export default Header;
</code></pre>
","6480816","","6480816","","2017-07-13 12:26:58","2017-07-13 12:26:58","react 15.5.4 enzyme shallow and mount are not working","<reactjs><react-redux><enzyme>","1","5","","",""
"27737535","1","27748521","","2015-01-02 04:56:29","","0","636","<p>In a react.js app I have a <code>Tip</code> component that uses the Tether library, as a mixin, to allow it to attach to some other component that requires a tip.  This works great, however I am a little confuses on how to remove the tip when the user clicks the close link.</p>

<p>After some reading around it seems that the best practice is, from the tip component, call a passsed in method from the parent, that will not render the component on the next pass.  Unfortunately, when I do this I get an error message saying:</p>

<pre><code>Uncaught Error: Invariant Violation: processUpdates(): Unable to find child 2 of element. This probably means the DOM was unexpectedly mutated
</code></pre>

<p>The first question is, whether there is a better way to insert the tip?  If you checkout the <code>getTip()</code> method that seems pretty ugly to do a conditional insertion of the component.</p>

<p>The second question is to why the error mentioned above is occuring.</p>

<p>Thanks for any help.</p>

<p>Here is the code:</p>

<h3>parent component</h3>

<pre><code>React.createClass({

    getTip: function() {
        if (!this.state.showTip) return React.createElement('div', null, '');

        return React.createElement(Tip, {
            closeText: 'Got it!',
            destroy: this.removeTip,
            attachment: 'top center',
            targetAttachment: 'bottom center'
          },
          'Click outer arrows to skip by the week and inner arrows to skip by the day.');
    },

    removeTip: function() {
      this.setState({showTip: false});
    },

    render: function() {
        var tip = this.getTip();

        return (
          &lt;div className=""page""&gt;
            &lt;header&gt;
              &lt;div className=""dates__header__details""&gt;
                &lt;!-- stuff --&gt;

                {tip}
              &lt;/div&gt;
              ...   
})
</code></pre>

<h3>Tip component</h3>

<pre><code>var React = require('react');
var Tether = require('../tether/tether');

var Tip = React.createClass({

  mixins: [Tether],

  propTypes: {
    destroy: React.PropTypes.func.isRequired
  },

  getInitialState: function() {
    return {
      isVisible: true
    }
  },

  remove: function() {
    this.setState({isVisible: false});
    setTimeout(function() {
      this.props.destroy();
    }.bind(this), 500);
  },

  render: function() {
    // ...

    return (
      &lt;div className={classList}&gt;
        {this.props.children}

        &lt;div className=""tip__close"" onClick={this.remove}&gt;{this.props.closeText}&lt;/div&gt;
      &lt;/div&gt;
    );
  }

});
</code></pre>

<h3>Tether component</h3>

<pre><code>var React = require('react');
var T = require('../../../../../bower_components/tether/tether');

var Tether = {

  propTypes: {
    attachment: React.PropTypes.string.isRequired,
    targetAttachment: React.PropTypes.string.isRequired
  },

  componentDidMount: function() {
    var el = this.getDOMNode();

    var tether = new T({
      target: el.parentNode,
      element: el,
      attachment: this.props.attachment,
      targetAttachment: this.props.targetAttachment
    });

    this.setState({'tether': tether});
  },

  componentWillUnmount: function() {
    var t = this.state.tether;
    t.destroy();
  }
};

module.exports = Tether;
</code></pre>
","26849","","26849","","2015-01-02 19:39:42","2015-01-02 21:03:15","Conditional react.js render is throwing an error","<javascript><reactjs>","1","4","","",""
"45525140","1","","","2017-08-05 18:24:00","","1","148","<p>(Attention: I am asking about <strong>Preact</strong>, not <strong>React</strong> for which there are solutions using Reacts <code>DomElement</code> wrapper component).</p>

<p>I have an <code>HTMLImageElement</code>, which is created using <code>var img = document.createElement('img')</code>. How can I render this manually created DOM Element using Preact?</p>

<p>The following JSX snippet works, but is very slow for larger images on mobile devices:</p>

<pre><code>&lt;img src={img.src} /&gt;
</code></pre>

<p>I assume it is so slow because the image instance is copied in-memory instead of using the existing DOM node and image buffer.</p>

<p>Any better (faster) solutions?</p>
","777928","","","","","2017-09-04 21:38:18","Render an HTMLImageElement dom node in Preact","<javascript><image><dom><jsx><preact>","1","0","","",""
"36964156","1","36964777","","2016-05-01 07:22:32","","0","519","<p>Say I have a list of records and I want to filter them based on the select box selection the user makes. I have the details in the jsfiddle.</p>

<p><a href=""http://jsfiddle.net/reactjs/69z2wepo/"" rel=""nofollow"">http://jsfiddle.net/reactjs/69z2wepo/</a></p>

<p>so if the user selects 1-10 only those numbers in 1 to 10 should show. 
How do we add an event handler to filter all the records?</p>

<pre><code>var numbers =   [   
    {""number"":1},    {""number"":2},    {""number"":3},    {""number"":4},    {""number"":5},    {""number"":6},    {""number"":7},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":18},    {""number"":11},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":21},    {""number"":41},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":1},     {""number"":14},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":81},    {""number"":12},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":1},    {""number"":111}
];
var DisplayNumbers = React.createClass({    
render: function(){

return (
&lt;div&gt;
    {this.props.allnumbers}
  &lt;/div&gt;
);
}
       });
 var FilterBox = React.createClass({
      getInitialState: function() {
        return { selected: ""1-10"" }
      },      

            render: function() {
        return (
          React.createElement(""select"", { value: this.state.selected },
             React.createElement(""option"", { value: 1 }, ""1-10""),
             React.createElement(""option"", { value: 2 }, ""11-20""),
             React.createElement(""option"", { value: 3 }, ""21-30""), 
          React.createElement(""option"", { value: 4 }, ""31-40"")
          )
        )
      }
    });


var App = React.createClass({
    render: function() {              
        return (
        &lt;div&gt;
          &lt;FilterBox /&gt;
                      &lt;h1&gt;Requests&lt;/h1&gt;
                &lt;DisplayNumbers allnumbers={this.props.data} /&gt;
          &lt;/div&gt;
        );
    }
});
ReactDOM.render(&lt;App data={numbers}/&gt;, document.getElementById('container'));
</code></pre>
","920504","","","","","2016-05-01 08:52:25","Filtering records in react.js","<javascript><reactjs><react-native>","2","1","","",""
"35993769","1","","","2016-03-14 17:05:58","","0","255","<p>I am interested in trying to jsfiddle this application.  I like to see how to improve this application to avoid the tearing that is happening in the demo. </p>

<p>//latest js fiddle - but has broken 404 on the images.
<a href=""https://jsfiddle.net/7xzd92s5/64/"" rel=""nofollow"">https://jsfiddle.net/7xzd92s5/64/</a></p>

<p><a href=""http://threejs.org/examples/#css3d_panorama"" rel=""nofollow"">http://threejs.org/examples/#css3d_panorama</a></p>

<p>eventually turn it into a reactjs component.</p>

<pre><code>var ThreePan= React.createClass({
  render: function() {
    return &lt;div&gt;ThreePan&lt;/div&gt;;
  }
});

ReactDOM.render( &lt; Hello name = ""ThreePan"" / &gt; ,
  document.getElementById('ThreePan')
);
</code></pre>

<p>//the three.js example code</p>

<pre><code>var camera, scene, renderer;
        var geometry, material, mesh;
        var target = new THREE.Vector3();

        var lon = 90, lat = 0;
        var phi = 0, theta = 0;

        var touchX, touchY;

        init();
        animate();

        function init() {

            camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 1000 );

            scene = new THREE.Scene();

            var sides = [
                {
                    url: 'textures/cube/Bridge2/posx.jpg',
                    position: [ -512, 0, 0 ],
                    rotation: [ 0, Math.PI / 2, 0 ]
                },
                {
                    url: 'textures/cube/Bridge2/negx.jpg',
                    position: [ 512, 0, 0 ],
                    rotation: [ 0, -Math.PI / 2, 0 ]
                },
                {
                    url: 'textures/cube/Bridge2/posy.jpg',
                    position: [ 0,  512, 0 ],
                    rotation: [ Math.PI / 2, 0, Math.PI ]
                },
                {
                    url: 'textures/cube/Bridge2/negy.jpg',
                    position: [ 0, -512, 0 ],
                    rotation: [ - Math.PI / 2, 0, Math.PI ]
                },
                {
                    url: 'textures/cube/Bridge2/posz.jpg',
                    position: [ 0, 0,  512 ],
                    rotation: [ 0, Math.PI, 0 ]
                },
                {
                    url: 'textures/cube/Bridge2/negz.jpg',
                    position: [ 0, 0, -512 ],
                    rotation: [ 0, 0, 0 ]
                }
            ];

            for ( var i = 0; i &lt; sides.length; i ++ ) {

                var side = sides[ i ];

                var element = document.createElement( 'img' );
                element.width = 1026; // 2 pixels extra to close the gap.
                element.src = side.url;

                var object = new THREE.CSS3DObject( element );
                object.position.fromArray( side.position );
                object.rotation.fromArray( side.rotation );
                scene.add( object );

            }

            renderer = new THREE.CSS3DRenderer();
            renderer.setSize( window.innerWidth, window.innerHeight );
            document.body.appendChild( renderer.domElement );

            //

            document.addEventListener( 'mousedown', onDocumentMouseDown, false );
            document.addEventListener( 'mousewheel', onDocumentMouseWheel, false );

            document.addEventListener( 'touchstart', onDocumentTouchStart, false );
            document.addEventListener( 'touchmove', onDocumentTouchMove, false );

            window.addEventListener( 'resize', onWindowResize, false );

        }

        function onWindowResize() {

            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();

            renderer.setSize( window.innerWidth, window.innerHeight );

        }

        function onDocumentMouseDown( event ) {

            event.preventDefault();

            document.addEventListener( 'mousemove', onDocumentMouseMove, false );
            document.addEventListener( 'mouseup', onDocumentMouseUp, false );

        }

        function onDocumentMouseMove( event ) {

            var movementX = event.movementX || event.mozMovementX || event.webkitMovementX || 0;
            var movementY = event.movementY || event.mozMovementY || event.webkitMovementY || 0;

            lon -= movementX * 0.1;
            lat += movementY * 0.1;

        }

        function onDocumentMouseUp( event ) {

            document.removeEventListener( 'mousemove', onDocumentMouseMove );
            document.removeEventListener( 'mouseup', onDocumentMouseUp );

        }

        function onDocumentMouseWheel( event ) {

            camera.fov -= event.wheelDeltaY * 0.05;
            camera.updateProjectionMatrix();

        }

        function onDocumentTouchStart( event ) {

            event.preventDefault();

            var touch = event.touches[ 0 ];

            touchX = touch.screenX;
            touchY = touch.screenY;

        }

        function onDocumentTouchMove( event ) {

            event.preventDefault();

            var touch = event.touches[ 0 ];

            lon -= ( touch.screenX - touchX ) * 0.1;
            lat += ( touch.screenY - touchY ) * 0.1;

            touchX = touch.screenX;
            touchY = touch.screenY;

        }

        function animate() {

            requestAnimationFrame( animate );

            lon +=  0.1;
            lat = Math.max( - 85, Math.min( 85, lat ) );
            phi = THREE.Math.degToRad( 90 - lat );
            theta = THREE.Math.degToRad( lon );

            target.x = Math.sin( phi ) * Math.cos( theta );
            target.y = Math.cos( phi );
            target.z = Math.sin( phi ) * Math.sin( theta );

            camera.lookAt( target );

            renderer.render( scene, camera );

        }
</code></pre>
","2700673","","","","","2016-03-14 17:38:52","Three.js - pananorama application into reactjs","<javascript><reactjs><three.js>","1","0","","",""
"37360202","1","37360233","","2016-05-21 07:35:44","","18","10579","<p>I needed to refactor my stateless functional component to a class. When I did so though, I keep getting an error where it looks like React itself is undefined.</p>

<pre><code>import React from 'react';
import { Cell } from 'fixed-data-table';

const DataCell = ({rowIndex, columnKey, data, onMessageClicked, ...props}) =&gt; {
  return (
    &lt;Cell {...props} onClick={onMessageClicked(data[rowIndex].Id)}&gt;
      {data[rowIndex][columnKey]}
    &lt;/Cell&gt;
  );
};

export default DataCell;
</code></pre>

<p>to</p>

<pre><code>import { React, Component } from 'react';
import { Cell } from 'fixed-data-table';

class DataCell extends Component {

  onCellClicked() {
    this.props.onMessageClicked(this.props.data[this.props.rowIndex].Id);
  }

  render() {
    const {rowIndex, columnKey, data, ...props} = this.props;
    return (
      &lt;Cell {...props} onClick={onCellClicked}&gt;
        {data[rowIndex][columnKey]}
      &lt;/Cell&gt;
    );
  }
}

export default DataCell;
</code></pre>

<p><code>bundle.js:43248 Uncaught (in promise) TypeError: Cannot read property 'createElement' of undefined(…)</code></p>

<p>and when I go to that line I see</p>

<p><code>return _react.React.createElement(</code></p>

<p>I don't get it. How do I debug/fix this?</p>

<p>My full code for this app is <a href=""https://github.com/magician11/vensa-test"" rel=""noreferrer"">here</a> in case the code I'm posting is not related somehow.</p>

<p>Thanks!</p>
","2813041","","5862315","","2017-06-21 14:16:20","2017-06-21 14:16:20","Uncaught (in promise) TypeError: Cannot read property 'createElement' of undefined(…)","<javascript><reactjs>","3","0","4","",""
"44531186","1","","","2017-06-13 20:42:39","","1","1341","<p>I am trying to create a simple Link in react . here is the code:</p>

<pre><code>    import React from 'react';
import { Link }  from 'react-router';
class List extends React.Component{
    render() {
        return (
        &lt;div&gt;
        &lt;p&gt;please choose from repository below.&lt;/p&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;Link to={""/react""}&gt;React&lt;/Link&gt;&lt;/li&gt;
        &lt;/ul&gt;
        &lt;/div&gt;
        );
    }
}

export default List;
</code></pre>

<p>Here is my package.json:</p>

<pre><code>""dependencies"": {
    ""chance"": ""^1.0.9"",
    ""history"": ""^4.6.1"",
    ""react"": ""^15.5.4"",
    ""react-dom"": ""^15.5.4"",
    ""react-router"": ""^4.1.1"",
    ""react-router-dom"": ""^4.1.1"",
    ""superagent"": ""^3.5.2""
</code></pre>

<p>I used following command to run my code:</p>

<p>webpack-dev-server</p>

<pre><code>bundle.js:1004 Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in. Check the render method of `List`.
    in List (created by Route)
    in Route
    in div
    in Router (created by HashRouter)
    in HashRouter
</code></pre>

<p>if I remove </p>

<pre><code>&lt;li&gt;&lt;Link to={""/react""}&gt;React&lt;/Link&gt;&lt;/li&gt; 
</code></pre>

<p>from my code then the page loads properly. Am i using old method of creating Link on component ?</p>

<p>Any hints are appreciated ...</p>
","3550077","","","","","2017-06-13 20:57:02","react-router Link is not working","<reactjs><react-router><react-redux>","2","0","1","",""
"37224641","1","37225715","","2016-05-14 08:51:25","","0","672","<p>Here is what shown in browser's log:</p>

<blockquote>
  <p>[HMR] Waiting for update signal from WDS...</p>
  
  <p>ok router</p>
  
  <p>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components).</p>
  
  <p>ok datawrapper</p>
  
  <p>invariant.js:38 Uncaught Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined.</p>
  
  <p>[WDS] Hot Module Replacement enabled.</p>
</blockquote>

<p>My webpack entry file <code>app.jsx</code> is:</p>

<pre><code>import React from ""react"";
import Router from ""react-router"";
import ReactDOM from ""react-dom"";
import createBrowserHistory from 'history/lib/createBrowserHistory';

import router from ""./router/router"";
import DataWrapper from './container/DataWrapper';

if (process.env.BROWSER &amp;&amp; process.env.NODE_ENV === 'development') {
  require('../../public/css/app.css');
}

let history = createBrowserHistory();
let data = JSON.parse(document.querySelector('#data').innerHTML);
ReactDOM.render(&lt;DataWrapper data={data}&gt;&lt;Router history = {history}&gt;{router}&lt;/Router&gt;&lt;/DataWrapper&gt;, document.querySelector('#app'));
</code></pre>

<p>the <code>DataWrapper.jsx</code> is:</p>

<pre><code>import React from 'react';

 class DataWrapper extends React.Component {
    constructor(props) {
        super(props);
    }

    getChildContext() {
        return {
            data: this.props.data
        };
    }

    render() {
        console.log(""ok datawrapper"");
        return this.props.children;
    }
}
DataWrapper.childContextTypes = {
    data: React.PropTypes.object.isRequired
};

export default DataWrapper;
</code></pre>

<p>the <code>router.jsx</code> is:</p>

<pre><code>import React from ""react"";
import {Route, IndexRedirect} from ""react-router"";

import Index from '../components/Index'

console.log(""ok router"");

export default(
  &lt;Route path='/' component={Index}&gt;

  &lt;/Route&gt;
);
</code></pre>

<p>and the <code>Index.jsx</code> is:</p>

<pre><code>import React from 'react';

class Index extends React.Component {
  constructor(props, context) {
    super(props, context);
  }

  render() {
    console.log(""ok"");
    return (
      &lt;div style={{height: '100%'}}&gt;
        hello world
        &lt;div style={{display: 'none'}} id=""data""&gt;{JSON.stringify(this.context.data)}&lt;/div&gt;
      &lt;/div&gt;
    );
  }
};

Index.propTypes = {
  location: React.PropTypes.object
};

Index.contextTypes = {
  data: React.PropTypes.object.isRequired
};

export default Index;
</code></pre>

<p>It seems like the warning didn't affect the server rendering. The <code>console.log(""ok"")</code> works in server.</p>
","4698795","","","","","2016-05-14 10:51:12","React.createElement: type should not be null or undefined","<javascript><reactjs>","1","0","","",""
"45610845","1","","","2017-08-10 10:13:51","","0","1261","<p>Trying to get react-router-dom and react-redux to play nicely, but getitng the following error in the browser console:</p>

<blockquote>
  <p>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in.</p>
</blockquote>

<p>index.js</p>

<pre><code>import React from 'react';
import ReactDom from 'react-dom';
import Provider from 'react-redux';
import { createStore } from 'redux';
import reducer from './src/reducers/Index';
import Root from './src/views/Root';

let store = createStore(reducer)

ReactDom.render(
    &lt;Provider store={store}&gt;
        &lt;Root /&gt;
    &lt;/Provider&gt;,
    document.getElementById('content')
);
</code></pre>



<p>reducer (Index.js)</p>

<pre><code>import {combineReducers} from 'redux';
import Login from './Login';

export default combineReducers({
    Login
})
</code></pre>



<p>reducer (Login.js)</p>

<pre><code>export default function login(state = 'Login', action) {
  switch (action.type) {
    case 'LOGINLOADING':
      return state + 1
    case 'LOGINLOADED':
      return state - 1
    default:
      return state
  }
}
</code></pre>



<p>Root.js</p>

<pre><code>import React from 'react';
import BrowserRouter from 'react-router-dom';
import App from './App';

class Root extends React.Component {
    render(){
        return (
            &lt;BrowserRouter&gt;
                &lt;App /&gt;
            &lt;/BrowserRouter&gt;
        );
    }
}

export default Root;
</code></pre>



<p>App.js</p>

<pre><code>import React from 'react';

class App extends React.Component {
    render(){
        return (
            &lt;div&gt;
                &lt;p&gt; Hello Kitty &lt;/p&gt;
            &lt;/div&gt;
        );
    }
}

export default App;
</code></pre>


","6001124","","","","","2017-08-10 10:20:21","React.createElement: type is invalid — expected a string","<reactjs><react-router><react-redux>","1","0","","",""
"45462563","1","","","2017-08-02 13:40:43","","0","304","<p>I'm pretty new to this react/nodejs/bootstrap affair. I'm trying to make use of the reactjs-adminlte theme for bootstrap. I can get bootstrap widgets to work fine, such as buttons, but having trouble with this theme. The error I get is </p>

<pre><code>React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: object.
</code></pre>

<p>My code is as follows</p>

<h2>index.html</h2>

<pre><code>&lt;!doctype html&gt;
&lt;html lang=""en""&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no""&gt;
    &lt;meta name=""theme-color"" content=""#000000""&gt;
    &lt;!--
      manifest.json provides metadata used when your web app is added to the
      homescreen on Android. See https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/
    --&gt;
    &lt;link rel=""manifest"" href=""%PUBLIC_URL%/manifest.json""&gt;
    &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;



    &lt;!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.
      Unlike ""/favicon.ico"" or ""favicon.ico"", ""%PUBLIC_URL%/favicon.ico"" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    --&gt;

    &lt;!-- Latest compiled and minified CSS --&gt;
&lt;link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/latest/css/bootstrap.min.css""&gt;

&lt;link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/latest/css/bootstrap.min.css""&gt;

&lt;!-- Optional theme --&gt;
&lt;link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/latest/css/bootstrap-theme.min.css""&gt;

&lt;!-- Font Awesome --&gt;
        &lt;link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css""&gt;
        &lt;!-- Ionicons --&gt;
        &lt;link rel=""stylesheet"" href=""https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css""&gt;

         &lt;link rel=""stylesheet"" href=""dist/css/AdminLTE.min.css""&gt;
        &lt;!-- AdminLTE Skins. Choose a skin from the css/skins
         folder instead of downloading all of them to reduce the load. --&gt;
        &lt;link rel=""stylesheet"" href=""dist/css/skins/_all-skins.min.css""&gt;

    &lt;title&gt;React App&lt;/title&gt;
  &lt;/head&gt;
  &lt;body class=""skin-blue sidebar-mini ""&gt;
    &lt;noscript&gt;
      You need to enable JavaScript to run this app.
    &lt;/noscript&gt;
    &lt;div id=""root""&gt;&lt;/div&gt;
    &lt;!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the &lt;body&gt; tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    --&gt;



   &lt;script src=""/dist/js/vendors.js""&gt;&lt;/script&gt;
  &lt;script src=""/dist/js/app.bundle.js""&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<h2>index.js</h2>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import registerServiceWorker from './registerServiceWorker';

ReactDOM.render(&lt;App /&gt;, document.getElementById('root'));
registerServiceWorker();
</code></pre>

<h2>App.js</h2>

<pre><code>import React, { Component } from 'react';
import './App.css';
import  Sidebar  from 'adminlte-reactjs';

class App extends Component {

  render() {


    return (
      &lt;div className=""App""&gt;

        &lt;Sidebar&gt;

        &lt;/Sidebar&gt;     

      &lt;/div&gt;
    );
  }
}

export default App;
</code></pre>

<p>Would love to know why i cant get the Sidebar to display. Its probably something simple that im missing.</p>

<p>Thanks</p>
","1379891","","","","","2017-08-11 09:37:50","Cannot get reactjs-admin-lte to work with my reactjs project","<reactjs><adminlte>","1","0","","",""
"37609644","1","37609875","","2016-06-03 08:33:30","","2","869","<p>I am trying to change image source <code>url from it's child component. If they clicks on button1 index 0 of backgroundImages</code>array` will be the image source. button2 will be index 1, button 3 will be index 2.</p>

<p>But it is showing setstate cannot update during an existing state transition.</p>

<p>Below I'm attaching code. </p>

<blockquote>
  <p>App.jsx</p>
</blockquote>

<pre><code>var React = require('react');
var ReactDOM = require('react-dom');
var ChildComponent = require('./child-component.jsx');

var Hello = React.createClass({
  getInitialState: function(){
    return{
      backgroundImage: 'https://images.unsplash.com/photo-1464013778555-8e723c2f01f8?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=entropy&amp;s=4b2c415f63f63afa66a347f993351bee'
    };
  },
  handleBackgroundChange: function(imageIndex) {
    this.setState({
      backgroundImage: this.backgrounds[imageIndex]
    });
  },
  backgrounds: [
    'https://images.unsplash.com/photo-1464013778555-8e723c2f01f8?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=entropy&amp;s=4b2c415f63f63afa66a347f993351bee',
    'https://images.unsplash.com/photo-1463595373836-6e0b0a8ee322?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=entropy&amp;s=69a198dc9bfba968b5deb20c04cec8c9',
    'https://images.unsplash.com/photo-1462819067004-905a72ea3996?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=entropy&amp;s=4832f28a526c7a3538a887b8fbbfe897'
  ],
  render: function() {
    return(
      &lt;div&gt;
        &lt;img src={this.state.backgroundImage} height=""400px"" width=""400px""/&gt;
        &lt;ChildComponent handleBackgroundChange = {this.handleBackgroundChange}/&gt;
      &lt;/div&gt;
    );
  }
});

var element = React.createElement(Hello, {});
ReactDOM.render(element, document.querySelector('.container'));
</code></pre>

<blockquote>
  <p>child-component.jsx</p>
</blockquote>

<pre><code>var React = require('react');

module.exports = React.createClass({
  handleBackgroundChange: function(imageIndex){
    this.props.handleBackgroundChange(imageIndex);
  },
  render: function(){
    return(
      &lt;div&gt;
      &lt;button className=""btn btn-primary"" onClick = {this.handleBackgroundChange(0)}&gt;Image 1&lt;/button&gt;
      &lt;button className=""btn btn-primary"" onClick = {this.handleBackgroundChange(1)}&gt;Image 2&lt;/button&gt;
      &lt;button className=""btn btn-primary"" onClick = {this.handleBackgroundChange(2)}&gt;Image 3&lt;/button&gt;
      &lt;/div&gt;
    )
  }
});
</code></pre>

<p>As per my knowledge I didn't use any illegal state transitions or <code>setState()</code> method in the code. Please help me to fix this. Thanks in advance.</p>
","3755797","","5950520","","2016-06-03 08:46:12","2017-01-28 13:31:25","setstate cannot update during an state transition - react","<javascript><reactjs>","2","0","","",""
"37178237","1","37178993","","2016-05-12 05:46:09","","2","1175","<p>I am having trouble to inject react element via chrome extension. Although it may be duplicated, <strong>i have already read some questions in terms of injecting react element via chrome extension and tried a various methods to inject react element.</strong> but it is still not working.</p>

<p><a href=""https://stackoverflow.com/questions/32734906/add-reactjs-elements-via-a-chrome-extension"">READ1</a></p>

<p><a href=""https://stackoverflow.com/questions/36599147/proper-way-to-inject-react-component-onto-page-in-chrome-extension"">READ2</a></p>

<p><a href=""https://stackoverflow.com/questions/33449634/react-js-inject-react-is-not-defined"">READ3</a></p>

<p>Following my code</p>

<p><strong>manifest.json</strong></p>

<pre><code>{
    ""manifest_version"": 2,
    ""name"": ""__MSG_name__"",
    ""version"": ""1.0.0"",
    ""description"": ""__MSG_description__"",
    ""author"": ""Seokjun Hong"",
    ""default_locale"": ""en"",
    ""browser_action"": {
        ""default_title"": ""__MSG_name__""
    },
    ""web_accessible_resources"": [
        ""js/jquery-2.2.3.min.js"",
        ""html/emoji_box.html"",
        ""js/vendor/browser.min.js"",
        ""js/vendor/react.min.js"",
        ""js/vendor/react-dom.min.js"",
        ""js/vendor/react-with-addons.min.js"",
        ""js/test.js""
    ],
    ""content_scripts"": [{
        ""matches"": [
            ""https://github.com/*"",
            ""https://gist.github.com/*""
        ],
        ""js"": [
            ""js/jquery-2.2.3.min.js"",
            ""js/content_script.js"",
            ""js/semantic.min.js"",
            ""js/test.js""
        ],
        ""css"": [
            ""css/semantic.min.css""
        ],
        ""run_at"": ""document_idle"",
        ""all_frames"": false
    }]
}
</code></pre>

<p><strong>test.js (react element)</strong></p>

<pre><code>/** @jsx React.DOM */
var Counter = React.createClass({
    getInitialState: function () {
        return { count: 0 };
    },
    handleClick: function () {
        this.setState({
            count: this.state.count + 1,
        });
    },
    render: function () {
        return (
            &lt;button onClick={this.handleClick}&gt;
                Click me! Number of clicks: {this.state.count}
            &lt;/button&gt;
        );
    }
});
ReactDOM.render(
    &lt;Counter /&gt;,
    document.getElementsByClassName('timeline-comment')[0]
);
</code></pre>

<p><strong>content_script.js</strong></p>

<pre><code>(function() {
    //append react script, following trial
})();
</code></pre>

<p>I have tried to inject react script into content. </p>

<p><strong>TRIAL1: Injecting script tag using <code>createElement</code></strong></p>

<pre><code>// Adds the react.jsx
var jsx = document.createElement('script');
jsx.src = chrome.extension.getURL('js/test.js');
jsx.type=""text/babel"";
jsx.onload = function() {
    this.parentNode.removeChild(this);
};
(document.head||document.documentElement).appendChild(jsx);
</code></pre>

<p>I also tried following code</p>

<pre><code>$(document.head).append('&lt;script src=""' + chrome.extension.getURL('js/test.js') + '"" type=""text/babel""&gt;&lt;/script&gt;')
</code></pre>

<p><strong>TRIAL2: Loading script using <code>getScript of jQuery</code></strong></p>

<pre><code>$.getScript(chrome.extension.getURL('js/test.js'), function(){
});
</code></pre>

<p>In this case, I also tried to load all script to execute react code, e.g., <code>browser.min.js</code>, <code>react.min.js</code>, <code>react-dom.min.js</code>.</p>

<p>Various trial returns errors, e.g., <code>Unexpected Token '&lt;'</code> or script not loading.</p>

<p>Everything is not working. i don't know <strong>how to inject react element.</strong> </p>
","5908271","","-1","","2017-05-23 12:16:06","2016-05-12 07:50:17","How to inject react element via chrome extension?","<javascript><reactjs><google-chrome-extension>","1","0","1","",""
"37668368","1","37687440","","2016-06-06 23:33:45","","0","89","<p>I've tried following <a href=""https://github.com/reactjs/react-router/blob/master/docs/guides/ServerRendering.md"" rel=""nofollow noreferrer"">this guide</a> and <a href=""https://stackoverflow.com/questions/32789537/server-side-react-router-wont-render-my-routes"">this question</a>, but am getting undefined for all callback arguments when <code>ReactRouter.match</code> is fired. </p>

<p>This is my server:</p>

<pre><code>var app = new (require('express'))()
var port = 3000

var ReactDomServer = require('react-dom/server');
var ReactRouter = require('react-router');
var routes = require('./es6/routes.js');

app.use(function(req, res) {
    console.log(req.url);
    ReactRouter.match({ routes: routes, location: req.url }, function(error, redirectLocation, renderProps) {
        console.log('error', error); // undefined
        console.log('erredirectLocationror', redirectLocation); // undefined
        console.log('renderProps', renderProps); // undefined
    });
})

app.listen(port, function(error) {
  if (error) {
    console.error(error)
  } else {
    console.info(""==&gt; Listening on port %s. Open up http://localhost:%s/ in your browser."", port, port)
  }
})
</code></pre>

<p>like the comments show, <code>error</code>, <code>redirectLocation</code>, and <code>renderProps</code> all log as <code>undefined</code>.</p>

<p>Logging the <code>routes</code> variable kicks off: </p>

<pre><code>{ default: 
   { '$$typeof': Symbol(react.element),
     type: 
      { [Function]
        displayName: 'Route',
        createRouteFromReactElement: [Function: createRouteFromReactElement],
        propTypes: [Object] },
     key: null,
     ref: null,
     props: { path: '/', component: [Function: App], children: [Object] },
     _owner: null,
     _store: {} } }
</code></pre>

<p>It starts as a typescript file, <strong>routes.tsx</strong>:</p>

<pre><code>import * as React from 'react'
import { Route } from 'react-router'
import App from './containers/app';
import Home from './containers/home';

export default (
    &lt;Route path='/' component={App}&gt;
        &lt;Route path='/home' component={Home} /&gt;
    &lt;/Route&gt;
)
</code></pre>

<p>which compiles to <strong>es6/routes.js</strong></p>

<pre><code>""use strict"";
const React = require('react');
const react_router_1 = require('react-router');
const app_1 = require('./containers/app');
const home_1 = require('./containers/home');
Object.defineProperty(exports, ""__esModule"", { value: true });
exports.default = (React.createElement(react_router_1.Route, {path: '/', component: app_1.default}, React.createElement(react_router_1.Route, {path: '/home', component: home_1.default})));
//# sourceMappingURL=routes.js.map
</code></pre>

<p>What am I missing?</p>
","967405","","-1","","2017-05-23 12:08:01","2016-06-07 19:09:20","ReactRouter.match has no callback arguments when attempting to server-render react elements","<javascript><reactjs><typescript><react-router><server-rendering>","1","0","","",""
"37473085","1","","","2016-05-27 00:37:31","","0","118","<p>constantly getting these two errors in console:</p>

<blockquote>
  <p>Warning: React.createElement: type should not be null, undefined, boolean, or >number. It should be a string (for DOM elements) or a ReactClass (for composite >components). Check the render method of <code>Embedded</code>.</p>
  
  <p>Uncaught Invariant Violation: Element type is invalid: >expected a string (for built-in components) or a class/function (for composite >components) but got: object. Check the render method of <code>Embedded</code>.</p>
</blockquote>

<p>what i'm trying to do is have my <code>Embedded</code> class contain many <code>Prop</code> classes within it. </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react';
import ReactDOM from 'react-dom';

class Prop extends React.Component {
	constructor () {
		super();
	}
	
    render() {
    	console.log(this);
        return &lt;span&gt; I am a { this.props.position } &lt;/span&gt;
    }
}

ReactDOM.render(&lt;Prop position=""developer""/&gt;, document.getElementById('prop-passed'));</code></pre>
</div>
</div>
</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react';
import ReactDOM from 'react-dom';
import Prop from './prop.jsx';


class Embedded extends React.Component {
 
  constructor() {
    super();
  }
 
  render() {
    let lines = this.props.sentences.map((item) =&gt; {
      return &lt;li key={ Math.random(1, 5) }&gt;&lt;Prop position={ item.position }/&gt;&lt;/li&gt;
    });

    return (
      &lt;div&gt;
      { lines }
      &lt;/div&gt;  
    );

  }
}
 
ReactDOM.render(&lt;Embedded sentences={[ { id: 1, position: 'dog' }, { id: 2, position: 'cat' }, { id: 3, position: 'bear' }]}/&gt;, document.getElementById('embedded'));</code></pre>
</div>
</div>
</p>

<p>EDIT:</p>

<p>i've essentially removed the lines at the bottom of each snippet i provided earlier and created another file to put there instead but I am still getting the same errors.</p>

<p>i don't want to put all my classes in the same file because i would like them separate and easier to find when I need to look for them again.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react';
import ReactDOM from 'react-dom';
import Simple from './simple.jsx';
import Prop from './prop.jsx';
import Embedded from './embedded.jsx';

ReactDOM.render(&lt;Simple/&gt;, document.getElementById('simple'));
ReactDOM.render(&lt;Prop position=""developer""/&gt;, document.getElementById('prop-passed'));
ReactDOM.render(&lt;Embedded sentences={[ { id: 1, position: 'dog' }, { id: 2, position: 'cat' }, { id: 3, position: 'bear' }]}/&gt;, document.getElementById('embedded'));</code></pre>
</div>
</div>
</p>
","3592191","","3592191","","2016-05-27 01:35:53","2016-05-27 04:59:36","react reusable components error (es6)","<javascript><reactjs>","1","6","","",""
"37728601","1","","","2016-06-09 14:19:42","","0","295","<p>I am learning reactjs and I am getting errors when executing the code below:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;title&gt;React Tutorial&lt;/title&gt;

    &lt;link rel=""stylesheet"" href=""css/base.css"" /&gt;
    &lt;script type=""text/javascript"" src=""scripts/react-15.0.1.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript"" src=""scripts/react-dom.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript"" src=""scripts/reactrouter-2.4.1.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript"" src=""scripts/babel-core-5.6.16-browser.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript"" src=""scripts/jquery-2.2.2.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript"" src=""scripts/marked-0.3.5.js""&gt;&lt;/script&gt;
  &lt;/head&gt;
  &lt;body&gt;

    &lt;div id=""app20""&gt;&lt;/div&gt;
    &lt;script type=""text/javascript"" src=""scripts/index.js""&gt;&lt;/script&gt;
    &lt;script type=""text/babel"" src=""scripts/example.js""&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;

I am using react router to see how the menu works. index.js is classnames js of jedwatson and example.js contains code as below

    var Home = React.createClass({
       render() {
          return (    
             &lt;div&gt;
                &lt;h1&gt;Home...&lt;/h1&gt;
             &lt;/div&gt;
          );
       }
    });'

    var About = React.createClass({
       render() {
          return (
             &lt;div&gt;
                &lt;h1&gt;About...&lt;/h1&gt;
             &lt;/div&gt;
          );
       }
    });

    var Contact = React.createClass({
       render() {
          return (
             &lt;div&gt;
                &lt;h1&gt;Contact...&lt;/h1&gt;
             &lt;/div&gt;
          );
       }
    });



    var App20 = React.createClass({
       render() {
          return (
             &lt;div&gt;
                &lt;ul&gt;
                   &lt;li&gt;&lt;ReactRouter.Link to=""/home""&gt;Home&lt;/ReactRouter.Link&gt;&lt;/li&gt;
                   &lt;li&gt;&lt;ReactRouter.Link to=""/about""&gt;About&lt;/ReactRouter.Link&gt;&lt;/li&gt;
                   &lt;li&gt;&lt;ReactRouter.Link to=""/contact""&gt;Contact&lt;/ReactRouter.Link&gt;&lt;/li&gt;
                &lt;/ul&gt;

               {this.props.children}
             &lt;/div&gt;
          );
       }
    });


    ReactDOM.render((&lt;ReactRouter history = {ReactRouter.browserHistory}&gt;
                        &lt;ReactRouter.Route path = ""/"" component = {App20}&gt;
                        &lt;ReactRouter.IndexRoute component = {Home} /&gt;
                        &lt;ReactRouter.Route path = ""home"" component = {Home} /&gt;
                        &lt;ReactRouter.Route path = ""about"" component = {About} /&gt;
                        &lt;ReactRouter.Route path = ""contact"" component = {Contact} /&gt;
                        &lt;/ReactRouter.Route&gt;
                    &lt;/ReactRouter&gt;), document.getElementById('app20'));
</code></pre>

<p>This should render a menu with sections ""about"", ""home"", ""contact"" which are mapped by a <code>react-router</code> implementation. When clicking on one of the menu items the respective component should be rendered below the menu.</p>

<p>But I am getting the following warning...</p>

<blockquote>
  <p>Warning: React.createElement: type should not be null, undefined, 
       boolean, or number. It should be a string (for DOM elements) or 
       a ReactClass (for composite components).</p>
</blockquote>

<p>And this error...</p>

<blockquote>
  <p>Error: Element type is invalid: expected a string (for built-in 
       components) or a class/function (for composite components) but 
       got: object.</p>
</blockquote>

<p>I would appreciate if you are able to help me.</p>

<p>Thanks in advance.</p>
","3787335","","350933","","2016-06-09 15:39:45","2016-06-09 15:39:45","React JS Warning: React.createElement:","<reactjs>","1","2","","",""
"36827293","1","","","2016-04-24 18:38:20","","9","3186","<p>I have tried several times to use the <code>&lt;Form&gt;</code> and <code>&lt;FormControl&gt;</code> components. Everytime I use I keep getting same erros:</p>

<blockquote>
  <p>""warning.js?8a56:45 Warning: React.createElement: type should not be
  null, undefined, boolean, or number. It should be a string (for DOM
  elements) or a ReactClass (for composite components). Check the render
  method of <code>App</code>.""</p>
  
  <p>""Uncaught Invariant Violation: Element type is invalid: expected a
  string (for built-in components) or a class/function (for composite
  components) but got: undefined. Check the render method of <code>App</code>.""</p>
</blockquote>

<p>Even with this basic example:</p>

<pre><code>import React, {Component} from 'react';
import {FormControl, FormGroup, ControlLabel, HelpBlock, Checkbox, Radio, Button} from 'react-bootstrap';

export default class App extends Component {
  render() {
    return (
      &lt;form&gt;
        &lt;FormGroup controlId=""formControlsText""&gt;
          &lt;ControlLabel&gt;Text&lt;/ControlLabel&gt;
          &lt;FormControl type=""text"" placeholder=""Enter text"" /&gt;
        &lt;/FormGroup&gt;

        &lt;Button type=""submit""&gt;
          Submit
        &lt;/Button&gt;
      &lt;/form&gt;
    );
  }
}
</code></pre>

<p>Any ideas?</p>
","1399063","","5928186","","2016-04-26 13:05:10","2017-07-17 07:12:33","react-bootstrap Form component","<reactjs><react-bootstrap>","2","5","","",""
"37467013","1","","","2016-05-26 17:02:06","","1","570","<p>The errors I am getting are:
bundle.js:1168 Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of <code>AddBillForm</code>.</p>

<p>bundle.js:778 Uncaught Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: object. Check the render method of <code>AddBillForm</code>.
I AM USING WEBPACK and ES6.
Please try to provide a fiddle example with datepicker material UI</p>

<p>//MyButton.jsx</p>

<pre><code>var React = require('react');
var RaisedButton =  require('material-ui/RaisedButton');
var MyButton = React.createClass({

    render: function()
    {

        return (
            &lt;Link to={this.props.to}&gt;{this.props.message}&lt;/Link&gt;

        );
    }
});

module.exports = MyButton;
</code></pre>

<p>//AddBillForm.jsx (Here I am using MyButton component)</p>

<pre><code>var React = require('react');
var ReactDOM = require('react-dom');

var MuiThemeProvider = require('material-ui/styles/MuiThemeProvider');
var GenericInputArea = require('../GenericInputArea');
var MyButton = require('../MyButton')

var AddBillForm=React.createClass({
    render: function()
    {
        return (
             &lt;div className=""row""&gt;
                &lt;div className=""col-md-12 col-sm-12 col-xs-12 biller-name""&gt;
                    &lt;GenericInputArea placeholder=""Enter your biller name"" /&gt;
                &lt;/div&gt;
                &lt;div className=""col-md-12 col-sm-12 col-xs-12 account-id""&gt;
                    &lt;GenericInputArea placeholder=""Enter 10 digit account Id"" /&gt;
                    &lt;p&gt;What is my account id? Refer to sample bill below&lt;/p&gt;
                &lt;/div&gt;
                &lt;MyButton  label = ""testing""/&gt;
            &lt;/div&gt;
        );
    },
});

module.exports = AddBillForm;
</code></pre>

<p>//app.jsx</p>

<pre><code>var React = require('react');
var ReactDOM = require('react-dom');
var {Route, Router, IndexRoute, hashHistory} = require('react-router');
var RaisedButton =  require('material-ui/RaisedButton');

var GetMyBillsMain = require('./components/getMyBills/GetMyBillsMain');
var AddBillMain = require('./components/addBillDetails/AddBillMain');
var AddBiller =  require('./components/selectBiller/AddBiller');
var BillDetailsMain = require('./components/billDetails/BillDetailsMain')

// Load foundation
require('style!css!bootstrap/dist/css/bootstrap.min.css')

// App css
require('style!css!bootstrapStyles')
require('style!css!customStyles')



ReactDOM.render(
        // &lt;Main&gt;&lt;/Main&gt;
        &lt;Router history={hashHistory}&gt;
            &lt;Route path=""/"" component={GetMyBillsMain} /&gt;
            &lt;Route path = ""selectBiller"" component = {AddBiller} /&gt;
            &lt;Route path = ""addBillDetails"" component = {AddBillMain} /&gt;
            &lt;Route path = ""billDetails"" component = {BillDetailsMain} /&gt;
        &lt;/Router&gt;
        , 
    document.getElementById('main'));
</code></pre>

<p>//webpack.config.js (This is my webpack config)</p>

<pre><code>var webpack = require('webpack');
var ExtractTextPlugin   = require(""extract-text-webpack-plugin"");


module.exports = {
    entry: [
    'script!jquery/dist/jquery.min.js',
    'script!bootstrap/dist/js/bootstrap.min.js', 
    './app/app.jsx'
    ],
    externals: {
        jquery: 'jQuery'
    },
    plugins: [
        new webpack.ProvidePlugin({
            '$': 'jquery',
            'jQuery': 'jquery'
        })
    ],
    output: {
        path: __dirname,
        filename: './public/bundle.js'
    },

    resolve: {
        root: __dirname,
        alias: {
            bootstrapStyles : 'bootstrap/dist/css/bootstrap.min.css',
            customStyles: 'app/styles/style.css'
        },

        extensions: ['', '.jsx', '.js' ]
    },
    module : {
        loaders: [
            {
                loader: 'babel-loader',
                query : {
                    presets: [
                        'react', 'es2015'
                    ]
                },
                test: /\.jsx?$/,
                exclude: /(node_modules| bower_components)/
            },
            {
                test: /\.(woff|woff2)(\?v=\d+\.\d+\.\d+)?$/, 
                loader: 'url?limit=10000&amp;mimetype=application/font-woff'
              },
              {
                test: /\.ttf(\?v=\d+\.\d+\.\d+)?$/, 
                loader: 'url?limit=10000&amp;mimetype=application/octet-stream'
              },
              {
                test: /\.eot(\?v=\d+\.\d+\.\d+)?$/, 
                loader: 'file'
              },
              {
                test: /\.svg(\?v=\d+\.\d+\.\d+)?$/, 
                loader: 'url?limit=10000&amp;mimetype=image/svg+xml'
              }
        ]
    }
}
</code></pre>
","6387343","","","","","2016-07-11 19:03:16","I am not able to add material-ui in my react project","<reactjs><material-ui>","1","0","1","",""
"37194903","1","37195494","","2016-05-12 18:34:54","","0","306","<p>I have just started working through the book ""Reactjs Essentials"" from Packt trying to learn react.js, I have everything setup including building my app with gulp. I have never used this before - seems really annoying having to run gulp after every change in the code - but anyway here is some code from the book:</p>

<pre><code>var React       = require('react');
var ReactDOM    = require('react-dom');

var listOfItems =   &lt;ul className=""list-of-items""&gt;
                        &lt;li className=""item-1""&gt;Item 1&lt;/li&gt;
                        &lt;li className=""item-2""&gt;Item 2&lt;/li&gt;
                        &lt;li className=""item-3""&gt;Item 3&lt;/li&gt;
                    &lt;/ul&gt;;

ReactDOM.render(listOfItems, document.getElementById('react-application'));
</code></pre>

<p>According to the book, this is ok (the html) and that the JSX compiler will convert this. It saves having to create lots of react elements.</p>

<p>The problem is that gulp complains about an unexpected token that starts at the ""&lt;"" of the UL tag.</p>

<p>Here is my basic test gulp file also from the book:</p>

<pre><code>gulp.task('default', function () {
    return browserify('./source/app.js')
        .transform(babelify)
        .bundle()
        .pipe(source('snapterest.js'))
    .   .pipe(gulp.dest('./build/'));
});
</code></pre>

<p>Up until this point in the book I was creating tags OK with createElement(). This problem has only happened since the book said add the html instead.</p>

<p>Can anyone more experienced see what is wrong, this pretty much the first chapter so I still don't know what could be the cause. I tried searching online but had no joy. I'm guessing it has something to do with the babelify part of the gulp file as that is this JSX compiler part.</p>

<p>Maybe the book is out-of-date or has typos?</p>
","6327115","","6327115","","2016-05-12 18:41:16","2016-05-12 19:07:19","gulp unexpected token when trying to build reactjs tutorial","<reactjs><gulp>","2","0","","",""
"37746189","1","","","2016-06-10 10:41:34","","0","47","<p>I'm trying to pass built in react function through props and trying to set state but I get <code>this</code> as undefined!</p>

<p>I've tried something like this:</p>

<p><strong>index.js</strong></p>

<pre><code>let somefun = function(){
    this.setState({myvar:1});
}

ReactDom.render(&lt;someComponent body={&lt;someOtherComponent1 componentWillUpdate={somefun}/&gt;} /&gt;, document.getElementById('someValidID'));
</code></pre>

<p><strong>someOtherComponent1.js</strong></p>

<pre><code>React.createElement( someOtherComponent1, { ""className"": ""someclass""} )
</code></pre>

<p>My Problem is whenever I pass a builtin function ie, functions present in react prototype <code>this</code> is always undefined.</p>

<p><strong>How can I send built-in functions through props?</strong></p>
","3706088","","616443","","2016-12-20 15:58:59","2016-12-20 15:58:59","react nested component pass builtin function (no flux)","<reactjs><this><virtual-dom>","2","0","","",""
"37050805","1","","","2016-05-05 12:36:49","","10","3319","<p>I have done a component with a store using react, redux and react-redux.
bundling of the code is done with webpack.(please check the codes attached below)</p>

<p>when i wanted to use the webpack build component inside another react project i faced the following issues.</p>

<ul>
<li><blockquote>
  <p>Warning: React.createElement: type should not be null, undefined,
  boolean, or number. It should be a string (for DOM elements) or a
  ReactClass (for composite components).</p>
</blockquote></li>
<li><blockquote>
  <p>Uncaught Invariant Violation: Element type is invalid: expected a
  string (for built-in components) or a class/function (for composite
  components) but got: undefined.</p>
</blockquote></li>
</ul>

<p>Then i went on and do the following modification in the code, earlier i had a destructuring assignment like below for <strong>connect</strong> and <strong>bindActionCreators</strong> </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import {connect} from 'react-redux';
import  {bindActionCreators} from 'redux';
import  actions from '../app/redux/actions';</code></pre>
</div>
</div>
</p>

<p>Then i changed it like below, by removing the curly braces around connect and bindActionCreators</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react';

import connect from 'react-redux';
import  bindActionCreators from 'redux';
import  actions from '../app/redux/actions';

import postal from 'postal';

const channel = postal.channel(""msplayer"");

class Player extends React.Component {</code></pre>
</div>
</div>
</p>

<p>But after that i'm facing the below error, as i guess this is something to do with babel transpiling ES6 to ES5 , but not sure what steps to follow to resolve this, would like to get an answer or some pointers to get this resolved?</p>

<ul>
<li><blockquote>
  <p>Uncaught TypeError: (0 , _reactRedux2.default) is not a function</p>
</blockquote></li>
<li><blockquote>
  <p>Uncaught TypeError: Cannot read property 'PlayerWrapper' of undefined</p>
</blockquote></li>
</ul>

<p><strong>component code</strong> </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react';

import {connect} from 'react-redux';
import  {bindActionCreators} from 'redux';
import  actions from '../app/redux/actions';

import postal from 'postal';

const channel = postal.channel(""msplayer"");

class Player extends React.Component {


    constructor() {
        super();
        this.state = {
            userData: {},
            uiStates: {
                panelClosed: true,
                submissionSelected: false
            },
            selectedSubmission: {}
        };
        this.subSelectChannel = null;
        this.tabSelectChannel = null;
    }


    componentWillMount() {
        require('!style!css!../app/styles/player.css');
    }

    componentDidMount() {
        var _that = this;
        var _msData = {
            piToken: this.props.piToken,
            sectionId: this.props.sectionId,
            assignmentId: this.props.assignmentId,
            userId: this.props.userId
        };

        this.props.actions.getAssignmentData(msData);
        this.props.actions.getPeerSubmissionData(msData);

        this.subSelectChannel = channel.subscribe(""submission.selected"", function (data, envelope) {
            _that.setState({
                    uiStates: Object.assign({}, _that.state.uiStates, {
                        ""submissionSelected"": true
                    })
                }
            );
            _that.setState({
                    selectedSubmission: data.submission
                }
            );
        });

        this.tabSelectChannel = channel.subscribe(""tab.selected"", function (data, envelope) {
            if (data.submitted) {
                _that.showSubmissionDetailPanel(data.data);
            } else {
                _that.hideSubmissionDetailPanel()
            }
        });
    }

    closePanel() {

        postal.publish({
            channel: ""notifier"",
            topic: ""notifier.notify"",
            data: {
                type: ""warning"",
                message: ""warning message""
            }
        });


        if (this.state.uiStates.panelClosed) {

            this.setState({
                    uiStates: Object.assign({}, this.state.uiStates, {
                        ""panelClosed"": false
                    })
                }
            );
        } else {


            postal.publish({
                channel: ""msplayer"",
                topic: ""close.selected"",
                data: {}
            });

            this.setState({
                    uiStates: Object.assign({}, this.state.uiStates, {
                        ""panelClosed"": true,
                        ""submissionSelected"": false
                    })
                }
            );
        }
    }


    hideSubmissionDetailPanel() {
        console.log(""inside hide submission panel"");
        this.setState({
                uiStates: Object.assign({}, this.state.uiStates, {
                    ""submissionSelected"": false
                })
            }
        );
    };

    showSubmissionDetailPanel(data) {
        console.log(""inside show submission panel"");
        this.setState({
                uiStates: Object.assign({}, this.state.uiStates, {
                    ""submissionSelected"": true
                })
            }
        );

        this.setState({
            selectedSubmission: data
        });
    };


    loadUserAssignmentData(submission) {

        this.setState({
                uiStates: Object.assign({}, this.state.uiStates, {
                    ""submissionSelected"": true
                })
            }
        );

        postal.publish({
            channel: ""msplayer"",
            topic: ""submission.selected"",
            data: {
                submission: submission
            }
        });

    }

    componentWillUnmount() {
        postal.unsubscribe(this.subSelectChannel);
        postal.unsubscribe(this.tabSelectChannel);
    }

    render() {

        var _that = this;
        var _submittedKey = 0;
        var _unsubmittedKey = 0;
        return (
            &lt;div className=""player-container col-sm-12""&gt;
                &lt;div className=""row""&gt;
                &lt;/div&gt;
                &lt;div className=""row""&gt;
                    &lt;div className={_that.state.uiStates.panelClosed?""col-sm-12"":""col-sm-8""}&gt;
                        &lt;div className=""top-actions-panel""&gt;
                            &lt;div className=""pull-right""&gt;

                            &lt;/div&gt;


                        &lt;/div&gt;
                        &lt;div className=""common-view""&gt;
                            &lt;div className=""breadcrumb-panel""&gt;
                                &lt;ol className=""breadcrumb arrow-left""&gt;
                                    &lt;li&gt;&lt;a href=""#""&gt;Communication 220&lt;/a&gt;&lt;/li&gt;
                                    &lt;li className=""active""&gt;TED Topics for an Informative Speech&lt;/li&gt;
                                &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div className=""description-panel""&gt;
                                &lt;p className=""title""&gt;
                                    &lt;b&gt;Title&lt;/b&gt;:
                                    &lt;span&gt;{_that.props.assignment.title}&lt;/span&gt;
                                &lt;/p&gt;
                                &lt;p className=""dueDates font-light""&gt;
                                    &lt;b&gt;Due &lt;/b&gt;:&lt;span&gt;{_that.props.assignment.startDate}&lt;/span&gt;
                                    &lt;b&gt; - &lt;/b&gt;&lt;span&gt;{_that.props.assignment.endDate}&lt;/span&gt;
                                &lt;/p&gt;
                                &lt;p&gt;
                                    &lt;b&gt;Learning Objective: &lt;/b&gt;
                                    &lt;span&gt;{_that.props.assignment.learningObjective}&lt;/span&gt;
                                &lt;/p&gt;
                                &lt;p&gt;
                                    &lt;b&gt;Description: &lt;/b&gt;
                                    &lt;span&gt;
                                       {_that.props.assignment.description}
                                    &lt;/span&gt;
                                &lt;/p&gt;
                            &lt;/div&gt;

                            &lt;div
                                className={_that.state.uiStates.submissionSelected?""row submission-info col-sm-12"":""hidden""}&gt;
                                &lt;div&gt;
                                    &lt;span className=""student-avatar""&gt;
                                        &lt;img
                                            src={(_that.state.selectedSubmission &amp;&amp; _that.state.selectedSubmission.userDetails &amp;&amp; _that.state.selectedSubmission.userDetails.avatar &amp;&amp; _that.state.selectedSubmission.userDetails.avatar!=="""")?_that.state.selectedSubmission.userDetails.avatar:""../app/images/avatar.svg""}/&gt;
                                    &lt;/span&gt;

                                    &lt;p&gt;
                                        &lt;b&gt; &lt;span
                                            className=""font-light mediaTile""&gt;&lt;strong&gt;{(_that.state.selectedSubmission.title &amp;&amp; _that.state.selectedSubmission.title !== null &amp;&amp; _that.state.selectedSubmission.title !== """" ) ? _that.state.selectedSubmission.title : "".""}&lt;/strong&gt;&lt;/span&gt;
                                        &lt;/b&gt;
                                    &lt;/p&gt;
                                    &lt;br/&gt;
                                    &lt;p&gt;
                                        &lt;span
                                            className=""font-light ""&gt;{(_that.state.selectedSubmission.description &amp;&amp; _that.state.selectedSubmission.description !== null &amp;&amp; _that.state.selectedSubmission.description !== """") ? _that.state.selectedSubmission.description : "".""}&lt;/span&gt;
                                    &lt;/p&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;

                            &lt;div className=""common-functionality-panel col-sm-12""&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                    &lt;div
                        className={_that.state.uiStates.panelClosed?""hidden"":""col-sm-4 no-padding peer-review-panel""}&gt;

                        &lt;div className=""review-section""&gt;
                            &lt;button className=""btn btn-link pull-left close-panel""
                                    onClick={_that.closePanel.bind(_that)}&gt;
                                &lt;span className=""reader-only""&gt;Close Student Submission Panel&lt;/span&gt;
                                &lt;i className=""fa fa-times""&gt;&lt;/i&gt;
                            &lt;/button&gt;

                            &lt;div className=""submission-tabs""&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        )
    }

}

function mapStateToProps(state) {
    return state
}

function mapDispatchToProps(dispatch) {
    return {
        actions: bindActionCreators(actions, dispatch)
    }
}

export default connect(mapStateToProps, mapDispatchToProps)(Player)</code></pre>
</div>
</div>
</p>

<p><strong>component wrapper code</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react';
import Player from './app';

import bb from './redux/store'
import Provider from 'react-redux';

class PlayerWrapper extends React.Component {


    constructor(props) {
        super(props);
    }

    render() {
        return (
            &lt;Provider store={bb.store}&gt;&lt;Player piToken={this.props.piToken} sectionId={this.props.sectionId}
                                               assignmentId={this.props.assignmentId}
                                               userId={this.props.userId}/&gt;&lt;/Provider&gt;
        )
    }
}

export default PlayerWrapper;</code></pre>
</div>
</div>
</p>

<p><strong>webpack build file</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var webpack = require('webpack');

module.exports = {
    devtool: 'inline-source-map',
    entry: [
        'webpack-hot-middleware/client',
        './app/PlayerWrapper.js'
    ],
    output: {
        path: require(""path"").resolve(""./dist/app""),
        filename: 'index.js',
        publicPath: '/'
    },
    plugins: [
        new webpack.optimize.OccurrenceOrderPlugin(),
        new webpack.HotModuleReplacementPlugin(),
        new webpack.NoErrorsPlugin()
    ],
    module: {
        loaders: [{
            test: /\.js?$/,
            exclude: /node_modules/,
            loader: 'babel-loader',
            query: {
                presets: ['react', 'es2015']
            }
        },
        { test: /\.css$/, loader: [""css-loader"",""style-loader""] },
        { test: /\.scss$/, loader: ""sass-loader"" },
        { test: /\.(ttf|eot|svg|eot|woff|otf|png|gif)(\?v)*/, loader: ""file-loader?name=fonts/[name].[ext]"" }
        ]
    }
};</code></pre>
</div>
</div>
</p>
","202313","","202313","","2016-05-05 13:43:42","2017-11-08 17:23:35","Error using component done with react,redux and react-redux and build with webpack in react application","<reactjs><webpack><babeljs><redux><react-redux>","3","4","1","",""
"27881410","1","27881797","","2015-01-10 21:31:08","","1","1118","<p>I'm trying to just send the client a single line like so:</p>

<pre><code>&lt;script src=""/js/app.js""&gt;&lt;/script&gt;
</code></pre>

<p>which is valid HTML5.</p>

<p>I then want to build the page back up with React.js. E.g. (note modified code, I had some errors in my simplified code),</p>

<pre><code>React = require('react');
e = React.createElement;
App = React.createClass({
  render: function(){
    return e('html', null, 
            (e('head', null, 
              e('script', {src: '/js/app.js'})), 
            e('body', null, 'hello!')));
  }
});
React.render(e(App, null), document.documentElement);
</code></pre>

<p>the resulting DOM:</p>

<pre><code>&lt;html&gt;
&lt;head&gt;&lt;/head&gt;
&lt;body data-reactid="".0.0""&gt;hello!&lt;/body&gt;
&lt;body&gt;&lt;/body&gt;
&lt;/html&gt;
</code></pre>
","632495","","632495","","2015-01-10 22:03:19","2015-01-10 22:15:29","Create page with single script file given to browser using react.js","<reactjs>","1","0","","",""
"37145892","1","","","2016-05-10 18:05:05","","1","407","<p>This is a certainly a beginner's question, but I am confused and haven't been able to google my way out of it/find a decent article. </p>

<p>I'm fairly new to web dev, and I've built a small ASP.NET MVC application. I now want to make my frontend (view) attractive and fluid, and I want to use React to do this. </p>

<p>So I 'install' react in a html document by including the following scripts in the head:</p>

<pre><code>&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/15.0.2/react.js""&gt;&lt;/script&gt;
&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/15.0.2/react-dom.js""&gt;&lt;/script&gt;
&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/0.14.0-alpha1/JSXTransformer.js""&gt;&lt;/script&gt;
</code></pre>

<p>I went looking for an existing implementation of a popup tooltip and came across: <code>https://github.com/romainberger/react-portal-tooltip/tree/master/example</code> I like the 'groups' tooltips.</p>

<p>However, I'm stuck on how to install this. I <em>think</em> this is the only file I need from the repro:</p>

<p><a href=""https://raw.githubusercontent.com/romainberger/react-portal-tooltip/master/src/index.js"" rel=""nofollow"">https://raw.githubusercontent.com/romainberger/react-portal-tooltip/master/src/index.js</a></p>

<p>correct? </p>

<p>So I simply include this from 
`
import React from 'react'
import ToolTip from '<a href=""https://raw.githubusercontent.com/romainberger/react-portal-tooltip/master/src/index.js"" rel=""nofollow"">https://raw.githubusercontent.com/romainberger/react-portal-tooltip/master/src/index.js</a>'
import {NicolasCage} from 'react-image-placeholder'</p>

<p>export default class Style extends React.Component {
  state = {
    display: false
  }
  getText() {
    let base = <code>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
    quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</code></p>

<pre><code>let text = []

for (let i = 0; i &lt; 10; i++) {
  text.push(base)
}

return text
</code></pre>

<p>}
  componentDidMount() {
    setTimeout(() => this.setState({display: true}), 0)
  }
  escape(html) {
    return document.createElement('div').appendChild(document.createTextNode(html)).parentNode.innerHTML
  }
  getBasicExample() {
    return {
      __html: this.escape(<code>let style = {
  style: {
    background: 'rgba(0,0,0,.8)',
    padding: 20,
    boxShadow: '5px 5px 3px rgba(0,0,0,.5)'
  },
  arrowStyle: {
    color: 'rgba(0,0,0,.8)',
    borderColor: false
  }
}
&lt;ToolTip parent=""#style-btn"" active={true} position=""bottom"" arrow=""center"" style={style}&gt;
  &lt;NicolasCage/&gt;
&lt;/ToolTip&gt;</code>)
    }
  }
  render() {
    let style = {
      style: {
        background: 'rgba(0,0,0,.8)',
        padding: 20,
        boxShadow: '5px 5px 3px rgba(0,0,0,.5)'
      },
      arrowStyle: {
        color: 'rgba(0,0,0,.8)',
        borderColor: false
      }
    }</p>

<pre><code>return (
  &lt;div style={{padding: 20}}&gt;
    &lt;div style={{marginBottom: 20}}&gt;
      &lt;p&gt;You can provide a &lt;code&gt;style&lt;/code&gt; prop to customize some part of the tooltip. You can give it 
</code></pre>

<p>an object with two properties: <code>style</code>, that will be applied to the tooltip itself, and </p>

<p><code>arrowStyle</code> which will be applied to the arrows. The last one is tricky as the arrows are made </p>

<p>with borders so it can be painfull to customize. To make it easier, the <code>arrowStyle.color</code> property </p>

<p>will change the background color of the arrow and <code>arrowStyle.borderColor</code> its border. To remove </p>

<p>completely the border use a falsy value.</p>
          <p>

<p>tooltip/blob/master/example/src/style.js"">Check out this example to see how this one is done</p>
        
        
          
        
        
          Thanks react-image-</p>

<p>placeholder!
          

<p>{style}>
            
          
        
        {this.getText()}
      
    )
  }
}
</p>

<p>But I cant see any effect, and think I'm probably taken multiple wrong turns at this point.</p>

<p>I'm confused as all the pages file in the Github repo are .js and the example html files don't reference them. The only thing I see them referencing is  bundle.js, which my gut tells me is some concatenation of all JS scripts used to speed things up (probably prevent roundtrip/latency in request JS files individually). Nowhere do I see directly embedded JS into html files.</p>

<p>Note, I haven't installed node, I'm just adding this code to my view code - html pages (actually cshtml pages). My limited understanding is that I only require node if I want to do server side JS development. </p>

<p>I'm very new to this. I expect I've muddled plenty of concepts, but I would like to get to the part where I know how to correctly 'install' third party React components and begin writing my own React.</p>

<p>Thanks</p>
","527302","","","","","2016-05-10 18:05:05","Client side React.JS frontend - is this react code only for server side","<javascript><html><asp.net-mvc><reactjs>","0","9","1","",""
"37095957","1","37105433","","2016-05-08 03:35:42","","0","117","<p>I'm going through this <a href=""https://www.airpair.com/reactjs/posts/reactjs-a-guide-for-rails-developers"" rel=""nofollow"">tutorial</a>, and was fine until I changed the Records component and added <code>React.createElement RecordForm, handleNewRecord: @addRecord</code> between two DOM renderings. Seems to interfere and prevent the DOM from rendering at all.</p>

<p>Here's the component:</p>

<pre><code>@Records = React.createClass
  getInitialState: -&gt;
    records: @props.data
  getDefaultProps: -&gt;
    records: []
  addRecord: (record) -&gt;
    records = @state.records.slice()
    records.push record
    @setState records: records
  render: -&gt;
    React.DOM.div
      className: 'records'
      React.DOM.h2
        className: 'title'
        'Records'
      React.createElement RecordForm, handleNewRecord: @addRecord
      React.DOM.hr null
      React.DOM.table
        className: 'table table-bordered'
        React.DOM.thead null,
          React.DOM.tr null,
            React.DOM.th null, 'Date'
            React.DOM.th null, 'Title'
            React.DOM.th null, 'Amount'
        React.DOM.tbody null,
          for record in @state.records
            React.createElement Record, key: record.id, record: record
</code></pre>

<p>Console error says ""Uncaught ReferenceError: RecordForm is not defined"". Which, yes I do, and it's:</p>

<pre><code>@RecordForm = React.createClass
 bla bla bla bla
 handleChange: (e) -&gt;
   name = e.target.name
   @setState ""#{ name }"": e.target.value
 handleSubmit: (e) -&gt;
    e.preventDefault()
    $.post '', { record: @state }, (data) =&gt;
      @props.handleNewRecord data
      @setState @getInitialState()
    , 'JSON'
  render: -&gt;
    React.DOM.form
     bla bla bla bla
</code></pre>

<p>What gives?</p>
","2009652","","2009652","","2016-05-08 22:10:19","2016-05-08 22:20:17","why does createElement prevent the DOM from loading in react-rails?","<ruby-on-rails><reactjs><react-rails>","1","0","","",""
"46417903","1","","","2017-09-26 04:37:58","","1","563","<p>I wants to add following script tag in react component</p>

<pre><code>&lt;script&gt;
window.fcSettings = {
token: ""XXXXXXXXXXXXXXXXXX"",
host: ""https://wchat.freshchat.com"",
siteId: ""SITE_ID""               // OPTIONAL: id unique to your site
};
&lt;/script&gt;
</code></pre>

<p>in my react component i did like following</p>

<pre><code>componentDidMount() {
var fc_JS=document.createElement('script');
fc_JS.type='text/javascript';
(document.body?document.body:document.getElementsByTagName('head')[0]).appendChild(fc_JS);window.token='xxxxxxx';window.host='host_name';
window.siteId: ""SITE_ID"";
}
</code></pre>

<p>but not working</p>

<p>Also following for following  code in html template file is  working</p>

<pre><code>&lt;div id='freshteam-widget'&gt;&lt;/div&gt;
-&lt;script src='https://s3.amazonaws.com/files.freshteam.com/attachments/10003920/original/0212_widget.js?15526251'&gt;&lt;/script&gt;
</code></pre>

<p>but in this way in react</p>

<pre><code>componentDidMount() {
var fc_JS=document.createElement('script');
fc_JS.type='text/javascript';    fc_JS.src='url';
        console.log(fc_JS)
        document.getElementsByTagName('head')[0].appendChild(fc_JS);
}

 render() {
  return (
    &lt;div id='freshteam-widget'&gt;&lt;/div&gt;
)
}
</code></pre>

<p>not working</p>

<p>kindly help</p>
","2617226","","","","","2018-06-13 18:43:18","Add '<script>' in react component","<reactjs>","1","7","","",""
"36974699","1","36979709","","2016-05-02 03:44:57","","1","402","<p>I have seen several methods of making a facade or wrapping Javascript components in <code>scala.js</code>, including doing so for <code>react.js Component</code>s. They seem to vary in the degree they encapsulate or hide the functionality provided by the component itself, I suppose based on their needs (maybe they only need to call one method).</p>

<p>In my case, I need to use a component called <code>react-sticky</code> and I am first trying to determine how to proceed with making a facade for one of its just two component classes, <a href=""https://github.com/captivationsoftware/react-sticky/blob/master/src/container.js"" rel=""nofollow""><code>StickyContainer</code>, code provided here.</a></p>

<p>My questions are as follows:</p>

<ol>
<li>How do I deal with <code>static</code> Javascript methods in <code>scala</code>? Do I even need to care about this, or can I be agnostic about it?</li>
<li>What is the <strong>minimum</strong> amount of ""facade"" I need to make to just include the <code>component</code> without any <code>Props</code> in another <code>component</code>'s <code>render()</code>?</li>
<li>What is fundamentally <em>different</em> about wrapping or facading a <code>reactjs</code> component as opposed to any other <code>js</code> native class?</li>
</ol>

<p>Finally, which of the following strategies would be most appropriate?</p>

<pre><code>@js.native
trait StickyContainer extends js.Object { ... }
object StickyContainer extends StickyContainer {}
</code></pre>

<p>or</p>

<pre><code>case class StickyContainer(offset: js.UndefOr[Double],...) {
    def apply() = { React.createElement(ReactUniversal.Image, JSMacro[StickyContainer](this), children: _*)
}
</code></pre>
","843477","","","","","2016-05-03 01:37:23","Wrapping/facading a ScalaJS react js component (react-sticky) in the most encapsulating manner possible","<javascript><scala><react-native><scala.js><scalajs-react>","2","0","","",""
"36822258","1","36822396","","2016-04-24 11:03:20","","0","160","<p>I am newbie with react.js . I want to make isomorphic react.js component . I wonder is it possible to make it without flux pattern ? Now I have little component and there is api fetch method inside component and as it seems this api call runs twice :( . </p>

<p>For more clarity, I want to render DOM in server side , and want to handle react.js component events in browser side . </p>

<p>My component looks like : </p>

<pre><code>Class MyComponent extends React.Component{

 // my component code 
 // components events 

 render() {} 

}


if (!is_server()) {


apiFetch.my_api_call(function (result) {
    ReactDom.render(&lt;MyComponent data={result.data}/&gt;, document.getElementById('navigation'))
});


}else{

apiFetch.my_api_call(function (result) {
    res.status(200).send(
        ReactDOMServer.renderToString(React.createElement(MyComponent, {data: result.data}))
    );
});
</code></pre>
","283192","","","","","2016-04-24 11:18:24","isomorphic react.js without flux","<javascript><reactjs><redux><reactjs-flux><isomorphic-javascript>","1","0","","",""
"37603414","1","37603614","","2016-06-02 22:55:10","","1","813","<p>I have created a universal React app based on <a href=""http://blog.lunarlogic.io/2015/how-to-create-a-universal-reactjs-application-with-bare-reactjs/"" rel=""nofollow noreferrer"">this tutorial</a> however I'm getting </p>

<pre><code>'Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components).'
</code></pre>

<p>in Chrome Dev tools. Looking at the compiled code I can see an object which is undefined - <code>_reactRouter2.default</code>. On the surface everything seems to be working ok, I can navigate between pages, I can use the back button in the browser, but I don't understand that error. Can anyone shed some light on how I might fix it?</p>

<p>Here is a screenshot showing how <code>_reactRouter2.default</code> is constructed and that it is undefined. <a href=""https://i.stack.imgur.com/4jVCx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4jVCx.png"" alt=""Screenshot of router construction""></a></p>

<p>Here are some relevant code snippets:</p>

<p><a href=""https://github.com/stuartleyland/packed-it-webapp/blob/master/src/routes.js"" rel=""nofollow noreferrer""><strong>src/routes.js</strong></a></p>

<pre><code>import React from 'react';
import { Route } from 'react-router';

import Main from './components/Main.js';
import Login from './components/Login.js';
import ListsOverview from './components/ListsOverview.js';

export default (
  &lt;Route path=""/"" component={Main}&gt;
    &lt;Route path=""/login"" component={Login} /&gt;
    &lt;Route path=""/overview"" component={ListsOverview} /&gt;
  &lt;/Route&gt;
);
</code></pre>

<p><a href=""https://github.com/stuartleyland/packed-it-webapp/blob/master/src/application.js"" rel=""nofollow noreferrer""><strong>src/application.js</strong></a></p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import Router from 'react-router';
import Routes from './routes';

import { createHistory } from 'history'

const history = createHistory()

var app = document.getElementById('app');

ReactDOM.render(&lt;Router history={history} routes={Routes} /&gt;, app);
</code></pre>

<p><a href=""https://github.com/stuartleyland/packed-it-webapp/blob/master/server.js"" rel=""nofollow noreferrer""><strong>server.js</strong></a></p>

<pre><code>import React from 'react';
import { match, RouterContext } from 'react-router';
import ReactDOMServer from 'react-dom/server';
import Express from 'express';
import http from 'http';
import Routes from './src/routes';
import Webpack from 'webpack';
import WebpackMiddleware from 'webpack-dev-middleware';
import DefaultConfig from './webpack/default.config.js';
import DevConfig from './webpack/development.config.js';

let app = Express();
let port = process.env.PORT || DefaultConfig.Port;
const isDevelopment = process.env.NODE_ENV !== 'production';
const isProduction = process.env.NODE_ENV === 'production';

app.engine('ejs', require('ejs').__express);
app.set('view engine', 'ejs');
app.use(Express.static(DefaultConfig.Dist));

if (isDevelopment) {
  const compiler = Webpack(DevConfig);
  app.use(WebpackMiddleware(compiler, {
    publicPath: DevConfig.output.publicPath,
    noInfo: true
  }));
}

if (isProduction) {
  app.set('views', DefaultConfig.Dist);
}

app.use((req, res) =&gt; {
  match({ routes: Routes, location: req.url }, (error, redirectLocation, renderProps) =&gt; {
    if (error) {
      res.status(500).send(error.message);
    } else if (redirectLocation) {
      res.redirect(302, redirectLocation.pathname + redirectLocation.search);
    } else if (renderProps) {
      res.render('index', {
        isDevelopment: isDevelopment,
        app: ReactDOMServer.renderToString(&lt;RouterContext {...renderProps} /&gt;)
      });
    } else {
      res.status(404).send('Not found');
    }
  })
});

http.createServer(app).listen(port, function() {
  console.log('Express server listening on port ' + port);
});
</code></pre>

<p><a href=""https://github.com/stuartleyland/packed-it-webapp/blob/master/package.json"" rel=""nofollow noreferrer""><strong>package.json</strong></a></p>

<pre><code>{
  ""name"": ""packed-it"",
  ""version"": ""1.0.0"",
  ""description"": ""Application for managing packing lists"",
  ""scripts"": {
    ""start"": ""nodemon --exec babel-node -- server.js"",
    ""build"": ""rimraf dist &amp;&amp; NODE_ENV=production webpack --config ./webpack/production.config.js --progress --profile --colors"",
    ""production"": ""NODE_ENV=production npm start""
  },
  ""repository"": {
    ""type"": ""git"",
    ""url"": ""git+ssh://git@github.com/stuartleyland/packed-it.git""
  },
  ""author"": ""Stuart Leyland"",
  ""license"": ""MIT"",
  ""bugs"": {
    ""url"": ""https://github.com/stuartleyland/packed-it/issues""
  },
  ""homepage"": ""https://github.com/stuartleyland/packed-it#readme"",
  ""dependencies"": {
    ""ejs"": ""^2.4.2"",
    ""express"": ""^4.13.3"",
    ""history"": ""^3.0.0"",
    ""moment"": ""^2.13.0"",
    ""nodemon"": ""^1.9.2"",
    ""react"": ""^15.0.2"",
    ""react-dom"": ""^15.0.2"",
    ""react-router"": ""^2.4.0""
  },
  ""devDependencies"": {
    ""babel-cli"": ""^6.9.0"",
    ""babel-core"": ""^6.8.0"",
    ""babel-loader"": ""^6.2.4"",
    ""babel-plugin-syntax-jsx"": ""^6.8.0"",
    ""babel-preset-es2015"": ""^6.6.0"",
    ""babel-preset-react"": ""^6.3.13"",
    ""babel-preset-stage-0"": ""^6.5.0"",
    ""html-webpack-plugin"": ""^2.19.0"",
    ""node-jsx"": ""^0.13.3"",
    ""npm-watch"": ""^0.1.4"",
    ""react-hot-loader"": ""^1.3.0"",
    ""rimraf"": ""^2.5.2"",
    ""webpack"": ""^1.13.0"",
    ""webpack-dev-middleware"": ""^1.6.1""
  }
}
</code></pre>

<p>All of the code is available in <a href=""https://github.com/stuartleyland/packed-it-webapp"" rel=""nofollow noreferrer"">this Github repository</a> in case I've missed anything relevant.</p>
","336752","","","","","2016-06-02 23:18:29","reactRouter2.default undefined using Babel","<javascript><node.js><reactjs><react-router><babeljs>","1","0","1","",""
"37773775","1","","","2016-06-12 11:38:29","","2","5475","<p>I am trying to import multiple component which is in one single jsx file in the main js file </p>

<p>This question has been already answered but without example here <a href=""https://stackoverflow.com/questions/33956201/how-to-import-and-export-components-using-react-es6-webpack"">How to import and export components using React + ES6 + webpack?</a></p>

<p>My code is as below </p>

<p>App3.jsx file </p>

<pre><code>import React from '../node_modules/react';


export default class App2 extends React.Component {
   render() {
       var i = 1;

       var myStyle = {
         fontSize: 25,
         color: '#FF0000'
       }

      return (
         &lt;div&gt;
            &lt;h1&gt;Header&lt;/h1&gt;
            &lt;h2&gt;Content&lt;/h2&gt;
            &lt;p data-myattribute = ""somevalue""&gt;This is the content!!!&lt;/p&gt;
            &lt;h1&gt;{1+1}&lt;/h1&gt;
            &lt;h1&gt;{i = 1 ? 'True!' : 'False'}&lt;/h1&gt;
            &lt;h1 style = {myStyle}&gt;Header&lt;/h1&gt;
            { /*gsadjshds */ }
         &lt;/div&gt;
      );
   }
}




export default class App3 extends React.Component {
   render() {
      return (
         &lt;div&gt;
            &lt;Header/&gt;
            &lt;Content/&gt;
         &lt;/div&gt;
      );
   }
}

export default class Header extends React.Component {
   render() {
      return (
         &lt;div&gt;
            &lt;h1&gt;Header&lt;/h1&gt;
         &lt;/div&gt;
      );
   }
}

export default class Content extends React.Component {
   render() {
      return (
         &lt;div&gt;
            &lt;h2&gt;Content&lt;/h2&gt;
            &lt;p&gt;The content text!!!&lt;/p&gt;
         &lt;/div&gt;
      );
   }
}
</code></pre>

<p>And main.js file as below </p>

<pre><code>import React from './node_modules/react';
import ReactDOM from './node_modules/react-dom';
import App  from './js/App.jsx';
import App1  from './js/App1.jsx';
import {App2, App3}  from './js/App3.jsx';


ReactDOM.render(&lt;App /&gt;, document.getElementById('app'));
ReactDOM.render(&lt;App1 /&gt;, document.getElementById('app1'));
ReactDOM.render(&lt;App2 /&gt;, document.getElementById('app2'));
ReactDOM.render(&lt;App3 /&gt;, document.getElementById('app3'));
</code></pre>

<p>But i am getting below errors</p>

<p>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components).</p>

<p>Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined.</p>

<p>Your help will be appreciated</p>
","3787335","","-1","","2017-05-23 12:17:01","2016-11-09 07:36:12","react js importing multiple component from a single jsx file","<reactjs>","1","3","3","",""
"45165089","1","45165361","","2017-07-18 11:09:59","","1","122","<p>I'm trying to import this <a href=""https://www.npmjs.com/package/conversational-form"" rel=""nofollow noreferrer"">conversational-form npm module</a> to my Create-React-App application and I've been getting compile errors on any attempts to do so.</p>

<p>Here is the exact error:</p>

<pre><code>./~/conversational-form/dist/conversational-form.js
Module not found: Can't resolve 'conversationalform' in '/Users/user/Desktop/app_name/node_modules/conversational-form/dist'
</code></pre>

<p>So far I've tried to import it like</p>

<pre><code>import ConversationalForm from 'conversational-form';
</code></pre>

<p>or using an absolute path to the js file in the ""dist"" folder, or even just including that js file in my project, but there are always compile errors.</p>

<p>The module <a href=""https://github.com/space10-community/conversational-form/blob/master/docs/reactjs.html"" rel=""nofollow noreferrer"">is supposed to work with React</a>. </p>

<p>Any ideas what may be causing this? Is perhaps Create-React-App incompatible with this? Should I just include the JQuery plugin from that module instead? Thank you.</p>

<p>UPDATE: Module seems to have been fixed now, but I still get errors when trying to adapt the example to a Webpack/React/Component structure</p>

<p>Error:</p>

<pre><code>TypeError: Cannot read property 'setAttribute' of undefined

componentDidMount(){
13 |    // add Conversational Form info
&gt; 14 |  this.refs.name.setAttribute('cf-questions', ""Your name?"");
15 |    this.refs.email.setAttribute('cf-questions', ""Your email?"");
16 |    this.refs.description.setAttribute('cf-questions', ""What is description?"");
</code></pre>

<hr>

<p>CODE</p>

<pre><code>    import React, { Component } from 'react';
    import { CSSTransitionGroup } from 'react-transition-group';
    import ConversationalForm from './conversational_form';

    class ConversationForm extends Component {

        constructor(props) {
            super(props);
            this.cf = null; // &lt;-- Conversational Form ref
        }

        componentDidMount(){
            // add Conversational Form info
            this.refs.name.setAttribute('cf-questions', ""Your name?"");
            this.refs.email.setAttribute('cf-questions', ""Your email?"");
            this.refs.description.setAttribute('cf-questions', ""What is description?"");
            this.cf = window.cf.ConversationalForm.startTheConversation({
                formEl: this.refs.form,
                context: document.getElementById(""cf-context""),
                    flowStepCallback: function(dto, success, error){
                        success();
                    },
                    submitCallback: function(){
                    // this callback could also be added to the React.createElement it self...
                        alert(""You made it!"")
                        console.log(""Form submitted..."");
                    }
            });
        }
        render() {

            var conversation;

            if (this.props.visible) {
            conversation = 
            &lt;div&gt;
                    &lt;form id=""form"" ref={form =&gt; this.input = form} className=""form""&gt;
                        &lt;input type=""text"" ref={name =&gt; this.input = name} placeholder=""Name (required)"" defaultValue={this.props.name} /&gt;
                        &lt;input type=""email"" ref={email =&gt; this.input = email} placeholder=""Email"" defaultValue={this.props.email} /&gt;
                        &lt;textarea ref={description =&gt; this.input = description} placeholder=""Description"" defaultValue={this.props.description} /&gt;
                        &lt;button type=""submit""&gt;Submit&lt;/button&gt;
                    &lt;/form&gt;
                    &lt;section id=""cf-context"" role=""cf-context"" cf-context&gt;

                    &lt;/section&gt;
                &lt;/div&gt;
            }

            return (
                &lt;CSSTransitionGroup
              transitionName=""success""
              transitionEnterTimeout={500}
              transitionLeaveTimeout={300}&gt;
                {conversation}
            &lt;/CSSTransitionGroup&gt;
            )
        }
    }

    export default ConversationForm;
</code></pre>
","5074921","","5074921","","2017-07-19 10:44:00","2017-07-19 10:44:00","react failed to compile module ""conversational-form""","<reactjs><npm><create-react-app>","1","1","","",""
"44713510","1","","","2017-06-23 05:13:33","","0","664","<p>I try to play with react-router but can't make it working with browserify. I'm stuck with this error: </p>

<pre><code>events.js:182
      throw er; // Unhandled 'error' event
      ^

Error: Cannot find module 'react-router-dom' from '/usr/src/app'
    at /usr/src/app/node_modules/browserify/node_modules/browser-resolve/node_modules/resolve/lib/async.js:46:17
    at process (/usr/src/app/node_modules/browserify/node_modules/browser-resolve/node_modules/resolve/lib/async.js:173:43)
    at ondir (/usr/src/app/node_modules/browserify/node_modules/browser-resolve/node_modules/resolve/lib/async.js:188:17)
    at load (/usr/src/app/node_modules/browserify/node_modules/browser-resolve/node_modules/resolve/lib/async.js:69:43)
    at onex (/usr/src/app/node_modules/browserify/node_modules/browser-resolve/node_modules/resolve/lib/async.js:92:31)
    at /usr/src/app/node_modules/browserify/node_modules/browser-resolve/node_modules/resolve/lib/async.js:22:47
    at FSReqWrap.oncomplete (fs.js:152:21)
npm info lifecycle irregular_verbs@1.0.0~start: Failed to exec start script
</code></pre>

<p>My first js file is <code>server.js</code> which generate a bundle to load <code>app.js</code>.
I removed everything on my app.js file to be sure that no personal components create a conflict. So it is very light now! But still doesn't work.</p>

<p>My app.js file:</p>

<pre><code>var React = require('react');
require('react-router-dom');
React.render(&lt;div&gt;&lt;p&gt;Blop&lt;/p&gt;&lt;/div&gt;, document.getElementById('base_ihm'));
</code></pre>

<p>Without the <code>require('react-router-dom');</code>, everything works!</p>

<p>My <code>server.js</code>:</p>

<pre><code>var express = require('express');
var browserify = require('browserify');
var React = require('react');
var jsx = require('node-jsx');
var app = express();

// Constants
const PORT = 8080;

jsx.install();

// Enable compression
var compression = require('compression');
app.use(compression());

// Create a path name bundle.js which call app.js and apply browserify
app.use('/bundle.js', function(req, res) {
  res.setHeader('content-type', 'application/javascript');
  browserify('./app.js', {
    debug: true
  })
  .transform('reactify')
  .bundle()
  .pipe(res);
});

// static ressources
app.use(express.static(__dirname + '/static/css'));
app.use(express.static(__dirname + '/static/images'));

// Main route   
app.use('/', function(req, res) {

    res.setHeader('Content-Type', 'text/html');
    res.end(React.renderToStaticMarkup(

        React.createElement(
            'html', null,

            // Header
            React.createElement(
                'head', null,

                // Title
                React.createElement('title', null, 'Irregular Verbs'),

                // Meta
                React.createElement('meta', {charSet: 'UTF-8'}, null),
                React.createElement('meta', {name: 'viewport', content: 'width=device-width, initial-scale=1'}, null),

                // Custom CSS
                React.createElement('link', { rel: 'stylesheet', href:     'main.css' }, null)
            ),

            // Body
            React.DOM.body(
                null,
                React.DOM.div({
                    id: 'base_ihm',
                    dangerouslySetInnerHTML: {
                    __html:     React.renderToString(React.createElement('div', null))
                    }
                }),

                // Use the path create just before
                React.DOM.script({
                    src: '/bundle.js'
                })
            )
        )
    ));
});

var server = app.listen(PORT, function() {
  var addr = server.address();
  console.log('Listening @ http://%s:%d', addr.address, addr.port);
});
</code></pre>

<p><strong>Is react-router well installed?</strong></p>

<p>There is the content of my package.json file:</p>

<pre><code>{
  ""main"": ""server.js"",
  ""scripts"": {
    ""start"": ""node server.js""
  },
  ""dependencies"": {
    ""express"": ""^4.13.3"",
    ""body-parser"": ""^1.15.2"",
    ""node-jsx"": ""^0.13.3"",
    ""react"": ""^15.6.1"",
    ""react-dom"": ""^15.6.1"",
    ""react-router-dom"": ""^4.0.0"",
    ""browserify"": ""^14.4.0"",
    ""reactify"": ""^1.1.1"",
    ""mysql"": ""^2.11.1""
  }
}
</code></pre>

<p>I use <code>docker</code> and <code>docker-compose</code>. On my Dockerfile, I added <code>RUN npm ls</code> and <code>RUN ls node_modules</code>: I can see <code>react-router</code> and <code>react-router-dom</code>. So there are here!</p>

<p><strong>Any cache with docker?</strong></p>

<p>I rename my image to be sure to use the good one and not an old one.
I also restart my container using <code>docker-compose up --force-recreate</code>.
So I presume it is ok.</p>

<p><strong>Erreur with server.js where browserify is used</strong></p>

<p>I think I've made a mistake in my server.js file but I have no idea...
There are what I have tried with no success:</p>

<ol>
<li>I try to add a global:true then global:false at my transform('reactify')</li>
<li>In my Dockerfile, I try to add <code>npm install react-router-dom -g</code> to be sure it was installed</li>
<li>I finaly upgraded my versions. And also tried react-router-dom in version 4.1.1</li>
<li>I replace the <code>require('react-router-dom')</code> by <code>require('./node_modules/react-router-dom')</code> but get the same error (except it was the new path which wasn't found).</li>
</ol>

<p>Do you have any idea? 
Thank you for your help!</p>
","8201365","","","","","2017-07-25 03:53:37","Browserify cannot find module 'react-router-dom'","<reactjs><docker><react-router><browserify>","1","0","1","",""
"29604806","1","","","2015-04-13 12:00:39","","2","1867","<p>I am setting up a getting-started app using react-bootstrap + requirejs + bower + php ( not nodejs). Very new to this spectrum of tools. so here is my app:</p>

<p><strong>.bowerrc</strong></p>

<pre><code>{
  ""directory"": ""javascript/components/"",
  ""analytics"": false,
  ""timeout"": 120000
}
</code></pre>

<p><strong>bower.json</strong></p>

<pre><code>{
  ""name"": ""hello-react-bootstrap"",
  ""version"": ""1.0.0"",
  ""dependencies"": {
    ""requirejs"": ""*"",
    ""react"": ""~0.13.1"",
    ""react-bootstrap"": ""~0.20.0""
  }
}
</code></pre>

<p><strong>index.html</strong></p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=""en""&gt;
&lt;head&gt;
 &lt;title&gt;Hello World&lt;/title&gt;

&lt;!-- Bootstrap Core CSS --&gt; 
    &lt;link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css""/&gt;
</code></pre>

<p>
    </p>

<pre><code>    &lt;!-- Require Js --&gt;
    &lt;script data-main=""javascript/setup.js"" src=""javascript/components/requirejs/require.js""&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p><strong>javascript/setup.js</strong></p>

<pre><code>requirejs.config({
    baseUrl: ""javascript/components"",
    paths: {
        ""app"": ""../app"",
        'classnames':'classnames/index',
        'jquery': 'https://code.jquery.com/jquery-2.1.3.min',
        'react':'react/react',
        'react-bootstrap':'react-bootstrap/react-bootstrap'
    }
});

require.config({
    urlArgs: ""bust="" + (new Date()).getTime()
})

requirejs([""app/main""]);
</code></pre>

<p><strong>javascript/app/main.js</strong></p>

<pre><code>//empty for now
</code></pre>

<p><strong>application structure</strong></p>

<pre><code>── bower.json
├── index.html
├── javascript
│   ├── app
│   │   └── main.js
│   ├── components
│   │   ├── classnames
│   │   ├── react
│   │   ├── react-bootstrap
│   │   └── requirejs
│   └── setup.js
└── styles
</code></pre>

<p>I tried sth like this:
<strong>app/main.js</strong></p>

<pre><code>define(['react-bootstrap'], function(ReactBootstrap){
    var React = require('react');
    var Button= ReactBootstrap.Button;
    React.render(Button,document.body)
});
</code></pre>

<p>which gives me :
<code>Error: Invariant Violation: React.render(): Invalid component element. Instead of passing a component class, make sure to instantiate it by passing it to React.createElement.</code></p>

<p><strong>Edit</strong>
Disregard my question following is working for me :</p>

<p><strong>app/main.js</strong></p>

<pre><code>define(['react-bootstrap'], function(ReactBootstrap){
    var React = require('react');  
    React.render(React.createElement(ReactBootstrap.Button,{bsStyle:'info'},'Hello World' ), document.body)
});
</code></pre>
","416100","","416100","","2015-04-13 12:32:54","2015-09-12 01:39:08","Setting up react-bootstrap simple app","<javascript><requirejs><reactjs><bower><react-bootstrap>","1","5","","",""
"46469425","1","46470016","","2017-09-28 12:40:15","","1","95","<p>I integrated <code>react-leaflet</code> on my project create with <code>create-react-app</code> scripts. I follow this <a href=""https://jsfiddle.net/e3zh51fp/7/"" rel=""nofollow noreferrer"">example</a>.</p>

<p>Everything works, but when I try use <code>GeoJson</code>component imported as:</p>

<pre><code>import { Map, TileLayer, Popup, GeoJson } from 'react-leaflet'
</code></pre>

<p>I have the following warning.</p>

<blockquote>
  <p>warning.js:35 Warning: React.createElement: type is invalid --
  expected a string (for built-in components) or a class/function (for
  composite components) but got: undefined. You likely forgot to export
  your component from the file it's defined in. Check your code at
  index.js:47.</p>
</blockquote>

<p>and error</p>

<blockquote>
  <p>Uncaught Error: Element type is invalid: expected a string (for
  built-in components) or a class/function (for composite components)
  but got: undefined. You likely forgot to export your component from
  the file it's defined in. Check the render method of <code>Leaflet</code></p>
</blockquote>

<p>and I can't see the region on maps.</p>

<p>How can fix this? 
Thanks
.</p>
","4658306","","","","","2017-09-28 17:33:01","Uncaught Error: Element type is invalid: expected a string react-leaflet","<reactjs><leaflet><react-leaflet>","1","0","","",""
"37571402","1","","","2016-06-01 14:21:40","","3","1298","<p>Is it possible to embed a Facebook video from a public post in a <code>react-native</code> app?</p>

<p>If it is possible, I believe I need to use a <code>&lt;WebView&gt;</code> component which is what I have used for several other types of video embeds, but the Facebook embed is different.  We have achieved it on our web client, but there are some DOM specific aspects to it that I'm not sure how to recreate in <code>react-native</code>.</p>

<p>This is the solution I have used successfully for other video types (e.g. Vine, Vimeo), but for FB it just renders an image</p>

<pre><code>&lt;WebView source={{ uri: 'https://www.facebook.com/TheWitBible/videos/1747642252158297/' }} style={ styles.media } /&gt;
</code></pre>

<p>Here are the docs <a href=""https://developers.facebook.com/docs/plugins/embedded-video-player"" rel=""nofollow"">https://developers.facebook.com/docs/plugins/embedded-video-player</a></p>

<p>Here is a FB SDK component, but I don't think it supports this use case
<a href=""https://github.com/facebook/react-native-fbsdk"" rel=""nofollow"">https://github.com/facebook/react-native-fbsdk</a></p>

<p>In the web client there are 2 parts to get it to work</p>

<pre><code>&lt;script&gt;
  window.fbAsyncInit = function() {
    FB.init({
      xfbml: true,
      version: 'v2.6'
    });
  };
  (function(d, s, id){
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = ""//connect.facebook.net/en_US/sdk.js"";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));
&lt;/script&gt;
</code></pre>

<p>............................</p>

<pre><code>render() {
    return (
      &lt;div ref={el =&gt; el &amp;&amp; FB &amp;&amp; FB.XFBML.parse(el)} className=""fb-media-wrapper"" style={{ width: this.props.width + 'px' }}&gt;
        &lt;div className=""fb-video"" data-href={this.props.url} data-width={this.props.width}&gt;&lt;/div&gt;
      &lt;/div&gt;
    );
  }
</code></pre>
","3403178","","","","","2017-03-28 06:08:18","Embedding facebook video in react-native app","<facebook><react-native>","1","0","","",""
"45723637","1","45723949","","2017-08-16 21:57:32","","1","46","<p>Basing this question on <a href=""https://www.typescriptlang.org/docs/handbook/jsx.html"" rel=""nofollow noreferrer"">this TypeScript official documentation</a>:</p>

<blockquote>
  <p>The <strong>react</strong> mode will emit React.createElement, does not need to go
  through a JSX transformation before use, and the output will have a
  .js file extension.  </p>
  
  <p>The <strong>react-native</strong> mode is the equivalent of
  preserve in that it keeps all JSX, but the output will instead have a
  .js file extension.</p>
</blockquote>

<p>But, all the tutorials I've seen have it react mode:</p>

<pre><code>""jsx"": ""react""
</code></pre>

<p>While this works perfectly, and I don't even see a warning, I'd like to understand how/why is it that React Native compiles the <code>TSX</code> and is able to load them without any problem.</p>

<p>Basically:</p>

<ol>
<li>Why create the <code>react-native</code> mode, when React Native supports <code>react</code> mode?  </li>
<li>Would there be any performance reason to use one over the other?</li>
</ol>
","2141621","","","","","2017-08-16 22:29:49","Should JSX mode be react or react-native?","<typescript><react-native>","1","0","","",""
"45880180","1","45880744","","2017-08-25 11:18:47","","0","84","<p>Showing error while opening app. </p>

<pre><code>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: object. You likely forgot to export your component from the file it's defined in.
</code></pre>

<p>This is a basic code I have created. See the steps to reproduce:</p>

<ol>
<li>Created native project using command <code>create-react-native-app AwesomeProject</code></li>
<li>Installed <code>npm install --save react-navigation</code></li>
<li><p>Pasted the below code to App.js from react navigation documentation</p>

<pre><code>import React from 'react';
import {
AppRegistry,
Text,
} from 'react-native';
import { StackNavigator } from 'react-navigation';

class HomeScreen extends React.Component {
    static navigationOptions = {
        title: 'Welcome',
    };
    render() {
        return &lt;Text&gt;Hello, Navigation!&lt;/Text&gt;;
    }
}

const SimpleApp = StackNavigator({
    Home: { screen: HomeScreen },
});

AppRegistry.registerComponent('SimpleApp', () =&gt; SimpleApp);
</code></pre></li>
<li><p>Run the app using <code>npm start</code> and opened in expo app android</p></li>
</ol>

<p>Please note that none of the other files are edited.</p>
","2273007","","6646189","","2017-08-25 12:39:03","2017-08-25 12:39:03","React Native navigation package Error React.createElement: type is invalid -- expected a string","<javascript><android><reactjs><react-native><react-navigation>","1","0","","",""
"37778205","1","","","2016-06-12 19:23:07","","0","252","<p>My app's background - it's an ASP 5 ('vNext', MVC 6). The project is using Visual Studio 2015 with the integrated use of gulp to re-generate my client scripts, with browserify and gulp. </p>

<p>So I have a '.jsx' source file with require stmts, like:</p>

<pre><code>var DatePicker = require('react-toolbox/lib/date_picker');
var React = require('react');
var ReactDOM = require('react-dom');
</code></pre>

<p>...and i run it through browserify and everything is resolved as expected. I know it's resolving because if i change any of the require stmts to something invalid i see the browserify error in the task runner console in VS. I've stripped everything out of the page and just have a script tag with a reference to my bundled app.</p>

<p>So it finds all of the sources OK. And if I run a dead-simple html page that references my bundled script <em>without</em> any references to the DatePicker component it loads fine. </p>

<p>As soon as I try to use the DatePicker component, though, I get a react error:</p>

<p><code>React.createElement: type should not be null, undefined, boolean, or number.     It should be a string (for DOM elements) or a ReactClass (for composite  components). Check the render method of 'Dashboard'.</code></p>

<p>However, i set a breakpoint in the browser just before the use of the 'DatePicker' component and re-load to inspect the state, and 'DatePicker' is a fully instantiated, normal object available to the script at that point. I can inspect it and see that its prototype is 'ReactComponent' and that it has the methods you would expect it to {render, isMounted, etc}.</p>

<p>So it's not null at all. I can't understand the error being thrown when it seems as if everything is right at run-time. Of course I'm afraid it may be a function of how I'm browserify-ing and bundling, but this is all new to me so i'm not sure what to even try.</p>

<p>Here's my entire JSX srouce before bundling:</p>

<pre><code>var DatePicker = require('react-toolbox/lib/date_picker');
var React = require('react');
var ReactDOM = require('react-dom');


var Dashboard = React.createClass({
   render: function () {
       return (

     &lt;div&gt;
        &lt;DatePicker /&gt;
      &lt;/div&gt;

     );
   }
});

ReactDOM.render(
   React.createElement(
      Dashboard, {}),
      document.getElementById (""dashReactRoot"")
   );
</code></pre>

<p>...and here's the pertinent gulp task:</p>

<pre><code>gulp.task('b-fy-dashboard', function () {
   gulp.src(paths.react + '/Admin/Profile/Dashboard.jsx')
        .pipe(browserify({
           insertGlobals: false,
           bundleExternal: true,
           debug: false,
           transform: [
            ['browserify-css']
           ]
        }))
        .pipe(gulp.dest(paths.webroot + 'js/modules'));
});
</code></pre>

<p>...how is it that i can't get even the most basic use of a third-party component to work?!?! i've been at it for hours, please share any thoughts or experiences you may have.</p>
","2403744","","","","","2016-06-12 20:12:42","Unable to use react-toolbox component in my react.js application","<.net><reactjs><gulp><browserify>","1","0","","",""
"46540736","1","46544678","","2017-10-03 08:55:00","","3","273","<p>I'm trying to use fineuploader with react and have installed all the relevant dependencies. 
Following is the code I use:-</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React, { Component } from 'react'

import FineUploaderTraditional from 'fine-uploader-wrappers'
import Gallery from 'react-fine-uploader'

import 'react-fine-uploader/gallery/gallery.css'

const uploader = new FineUploaderTraditional({
    options: {
        chunking: {
            enabled: true
        },
        deleteFile: {
            enabled: true,
            endpoint: '/uploads'
        },
        request: {
            endpoint: '/uploads'
        },
        retry: {
            enableAuto: true
        }
    }
})

class UploadComponent extends Component {
    render() {
        return (
            &lt;Gallery uploader={uploader} /&gt;
        )
    }
}

export default UploadComponent</code></pre>
</div>
</div>
</p>

<p>But I get the following errors:-</p>

<pre class=""lang-none prettyprint-override""><code>Uncaught Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in. Check the render method of `Gallery`.
at invariant (invariant.js?7313:44)
at instantiateReactComponent (instantiateReactComponent.js?e676:74)
at instantiateChild (ReactChildReconciler.js?c86a:44)
at eval (ReactChildReconciler.js?c86a:71)
at traverseAllChildrenImpl (traverseAllChildren.js?5edf:77)
at traverseAllChildrenImpl (traverseAllChildren.js?5edf:93)
at traverseAllChildrenImpl (traverseAllChildren.js?5edf:93)
at traverseAllChildren (traverseAllChildren.js?5edf:172)
at Object.instantiateChildren (ReactChildReconciler.js?c86a:70)
at ReactDOMComponent._reconcilerInstantiateChildren (ReactMultiChild.js?e1f8:185)
</code></pre>

<blockquote>
  <p>Warning: React.createElement: type is invalid -- expected a string
  (for built-in components) or a class/function (for composite
  components) but got: undefined. You likely forgot to export your
  component from the file it's defined in. Check the render method of
  `Gallery`.<br>
  in Gallery (created by UploadComponent)<br>
  in UploadComponent</p>
</blockquote>

<p>I've been following the react fineuploader documentation and I've tried a few different things but nothing seems to work.</p>
","4130843","","4130843","","2017-10-03 09:52:11","2017-10-03 12:31:50","Using fineuploader with react-rails","<javascript><ruby-on-rails><reactjs><fine-uploader>","2","0","","",""
"45900597","1","45900638","","2017-08-26 23:48:43","","0","18","<p>I'm building a textbox that pops up on selection and have it set up so the box pops up when I want it to. What happens is the Tooltip component shows up in the toolbar with two buttons, but the buttons don't do anything. The two methods I'm sending down into that Tooltip component don't seem to be doing anything. </p>

<p>When I check in devtools it looks like the Tooltip component is rendering outside of the Main component which would possibly explain this.</p>

<p>Is there a way I can fix this to get the functionality I need?</p>

<p>Main component: </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react';
import ReactDOM from 'react-dom';
import ReactTooltip from 'react-tooltip';
import Tooltip from './Tooltip.jsx';
import Editor from 'react-medium-editor';

class Main extends React.Component {
  constructor(props) {
    super(props);
    this.state = {text: ''}
  }

  render() {
    return (
      &lt;div className = ""container"" onMouseDown={this.removetoolBox.bind(this)} onMouseUpCapture={this.captureSelection.bind(this)}&gt;
        &lt;h1 className = ""headLine"" &gt;Medium Markup&lt;/h1&gt;
          &lt;p className='editable'&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris id felis vel sem tristique efficitur. Nunc neque purus, tempor eget urna eu, porttitor congue nulla. Morbi vitae lectus sollicitudin, congue dolor ac, ornare ex. Aenean molestie rutrum mauris, vel ultricies erat pellentesque eget. Nunc at nisi id turpis lobortis ultrices ac eget mi. Cras ac facilisis leo. Vestibulum a enim eget ex tempor pretium. Nunc dignissim bibendum molestie. Fusce imperdiet imperdiet tristique. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Donec nec gravida massa. Fusce tristique, nulla vitae porttitor venenatis, mi sem fermentum metus, sit amet auctor mi nisl nec erat.&lt;/p&gt;
      &lt;/div&gt;
    );
  }

  captureSelection() {
    var selectedText = '';

    if(window.getSelection()){
      selectedText = window.getSelection();
    } else if (document.getSelection()) {
      selectedText = document.getSelection()
    } else if (document.selection) {
      selectedText = document.selection.createRange().text;
    }
    console.log('this is selectedtext: ', selectedText)
    this.setState({text: selectedText.toString()})
    if(selectedText.toString() !== ''){
      this.toolBox();
    }
    
  }

  highLightText(e) {
    console.log('highlight this!');
  }

  commentText(e) {
    console.log('comment this!');
  }

  toolBox() {
    var selection = window.getSelection()
    var range = selection.getRangeAt(0);
    var rect = range.getBoundingClientRect();
    var div = document.createElement('div');   // make box
    div.style.top = (rect.top + -75) + 'px';
    div.style.left= (rect.left) + 'px';
    div.style.height = 50 + 'px';
    div.style.width = rect.width + 'px';
    div.className = 'toolTip';
    ReactDOM.render(
      &lt;Tooltip highli={this.highLightText} commentT={this.commentText} /&gt;,
      document.body.appendChild(div),
    )
    document.body.appendChild(div);
  }
  
  removetoolBox() {
    var elements = document.getElementsByClassName('toolTip');
    while(elements.length &gt; 0){
        elements[0].parentNode.removeChild(elements[0]);
    }
  }
}

export default Main;</code></pre>
</div>
</div>
</p>

<p>Tooltip component:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react'


class Tooltip extends React.Component {
  constructor(props){
    super(props);
  }

  render () {
    return (
      &lt;div className=""container""&gt;

        &lt;button onClick={this.highl} className=""buttons""&gt;Highlight&lt;/button&gt;
        &lt;button onClick={this.commentT} className=""buttons""&gt;Comment&lt;/button&gt;
      &lt;/div&gt;
    )
  }
}

export default Tooltip;</code></pre>
</div>
</div>
</p>
","7066742","","","","","2017-08-26 23:59:32","I can't seem to get react to pass down these methods to my component","<javascript><reactjs>","2","0","","",""
"46532301","1","","","2017-10-02 19:21:18","","0","28","<p>I have this reactjs code that works perfectly. source  <strong><a href=""http://bytutorial.com/blogs/reactjs/how-to-populate-json-data-using-reactjs-framework"" rel=""nofollow noreferrer"">http://bytutorial.com/blogs/reactjs/how-to-populate-json-data-using-reactjs-framework</a></strong></p>

<p>below is the code</p>

<pre><code>&lt;div id=""divContent""&gt;&lt;/div&gt;
&lt;script type=""text/jsx""&gt;
    var SampleReact = React.createClass({
        render: function(){
            var data =  [
                { 
                    ""name"": ""James Angus"", 
                    ""age"" : ""22"", 
                    ""job"": ""Dentist"" 
                },
                { 
                    ""name"": ""Milan Howen"", 
                    ""age"" : ""36"", 
                    ""job"": ""Truck Driver"" 
                }   
            ];

            var rows = data.map(function(row){
             return &lt;tr&gt;
                     &lt;td&gt;{row.name}&lt;/td&gt;
                     &lt;td&gt;{row.age}&lt;/td&gt;
                     &lt;td&gt;{row.job}&lt;/td&gt;
                 &lt;/tr&gt;
             });

            return  &lt;table&gt;
                        &lt;thead&gt;
                        &lt;th&gt;Name&lt;/th&gt;
                        &lt;th&gt;Age&lt;/th&gt;
                        &lt;th&gt;Job&lt;/th&gt;
                        &lt;/thead&gt;
                        {rows}
                    &lt;/table&gt;

        }
    });

    React.render(React.createElement(SampleReact), document.getElementById(""divContent""));
&lt;/script&gt;
</code></pre>

<p>what am trying to achieve is to copy out json data and then call it from external source hence</p>

<p>I have file.json</p>

<pre><code>{ 
                        ""name"": ""James Angus"", 
                        ""age"" : ""22"", 
                        ""job"": ""Dentist"" 
                    },
                    { 
                        ""name"": ""Milan Howen"", 
                        ""age"" : ""36"", 
                        ""job"": ""Truck Driver"" 
                    }   
</code></pre>

<p>so my final  calling becomes the code below which does not display anything, can someone help me fix the issue.....</p>

<pre><code> &lt;div id=""divContent""&gt;&lt;/div&gt;
    &lt;script type=""text/jsx""&gt;
        var SampleReact = React.createClass({
            render: function(){


                getData: function(){
    $.ajax({
    url: 'file.json',
    dataType: 'jsonp',
    success: function(parsed_json){
      console.log('data: ', parsed_json);
    }.bind(this)
    });
  }(),

                var rows = data.map(function(row){
                 return &lt;tr&gt;
                         &lt;td&gt;{row.name}&lt;/td&gt;
                         &lt;td&gt;{row.age}&lt;/td&gt;
                         &lt;td&gt;{row.job}&lt;/td&gt;
                     &lt;/tr&gt;
                 });

                return  &lt;table&gt;
                            &lt;thead&gt;
                            &lt;th&gt;Name&lt;/th&gt;
                            &lt;th&gt;Age&lt;/th&gt;
                            &lt;th&gt;Job&lt;/th&gt;
                            &lt;/thead&gt;
                            {rows}
                        &lt;/table&gt;

            }
        });

        React.render(React.createElement(SampleReact), document.getElementById(""divContent""));
    &lt;/script&gt;
</code></pre>
","8490288","","","","","2017-10-02 19:21:18","calling json file externally using reactjs","<json><reactjs>","0","1","","",""
"38192824","1","","","2016-07-04 22:13:28","","0","610","<p>Just updated my application from ES5 to ES6. After doing so, I'm running into this warning from react:</p>

<pre><code>React.createElement: type should not be null, undefined, boolean, or number
</code></pre>

<p>I believe this has to do with my load order, but I can't seem to find where exactly. The error occurred after converting the <code>HeaderContainer</code> to es6 syntax</p>

<p><strong>entry.js</strong></p>

<pre><code>require('babel-polyfill');
require('expose?React!react');
require('expose?ReactDOM!react-dom');
require('expose?$!expose?jQuery!jquery');

require('expose?HeaderContainer!./header/HeaderContainer.jsx');
</code></pre>

<p><strong>HeaderContainer.jsx</strong></p>

<pre><code>import React from 'react';

export class HeaderContainer extends React.Component {
  render() {

    return (
      &lt;nav id=""header"" className=""navbar navbar-default navbar-fixed-top""&gt;
        &lt;div className=""container-fluid""&gt;
          This should work
        &lt;/div&gt;
      &lt;/nav&gt;
    );
  }
}
</code></pre>

<p><strong>application.html.erb</strong></p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;App Name here&lt;/title&gt;
  &lt;%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' =&gt; true %&gt;
  &lt;%= javascript_include_tag 'bundle' %&gt;
&lt;/head&gt;
  &lt;body&gt;
    &lt;div id=""react-header-container""&gt;&lt;/div&gt;

    &lt;script&gt;
      var headerContainer = React.createElement(HeaderContainer);

      ReactDOM.render(headerContainer, document.getElementById('react-header-container'));
    &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p><strong>webpack.config.js</strong></p>

<pre><code>var path = require('path');
var webpack = require('webpack');

module.exports = {
  context: __dirname,
  entry: './app/frontend/javascripts/entry.js',

  output: {
    path: path.join(__dirname, 'app', 'assets', 'javascripts'),
    filename: 'bundle.js',
    publicPath: '/assets',
  },

  resolve: {
    extensions: ['', '.js', '.jsx'],
    modulesDirectories: [ 'node_modules'],
  },

  module: {
    loaders: [
      {
        test: /\.jsx$/,
        loader: 'babel-loader',
        exclude: /node_modules/,
        query: {
          presets: ['es2015', 'react']
        }
      }
    ]
  },
};

new webpack.ProvidePlugin({
  React: 'react',
  ReactDOM: 'react-dom',
});
</code></pre>

<p><strong>package.json</strong></p>

<pre><code>{
  ""name"": ""app-name-here"",
  ""private"": true,
  ""scripts"": {
    ""dev"": ""webpack --progress --colors --watch""
  },
  ""devDependencies"": {
    ""babel-core"": ""^6.4.5"",
    ""babel-loader"": ""^6.2.1"",
    ""babel-polyfill"": ""^6.9.1"",
    ""babel-preset-es2015"": ""^6.3.13"",
    ""babel-preset-react"": ""^6.3.13"",
    ""exports-loader"": ""^0.6.2"",
    ""expose-loader"": ""^0.7.1"",
    ""imports-loader"": ""^0.6.5"",
    ""jsx-loader"": ""^0.13.2"",
    ""webpack"": ""^1.12.11""
  },
  ""engines"": {
    ""node"": ""&gt;= 0.10""
  },
  ""dependencies"": {
    ""classnames"": ""^2.2.1"",
    ""jquery"": ""^2.2.0"",
    ""jquery-mask-plugin"": ""^1.13.4"",
    ""lodash"": ""^3.10.1"",
    ""material-ui"": ""^0.14.4"",
    ""moment"": ""^2.13.0"",
    ""react"": ""^0.14.7"",
    ""react-dom"": ""^0.14.7"",
    ""react-tap-event-plugin"": ""^0.2.1""
  }
}
</code></pre>
","817774","","","","","2016-07-05 04:39:02","React.createElement: type should not be null, undefined, boolean, or number","<javascript><ruby-on-rails><reactjs><ecmascript-6><webpack>","2","0","","",""
"46576369","1","46577075","","2017-10-05 01:06:54","","0","290","<p>In my react component I am trying to trigger a click on the hyperlink created in the below function: </p>

<pre><code>  getUsers(e){
    e.preventDefault();
    const { userIds } = this.props;
    BatchRoleActions.getAllRoleUsers(userIds)
    .then((users) =&gt; {
      const link = document.createElement('a');
      link.setAttribute('id', 'csvLink');
      link.setAttribute('download', 'roles.csv');
      link.setAttribute('href', users);
      document.getElementById('csvLink').onClick();
    });

  }
</code></pre>

<p>When the function is run I get the below error :
Uncaught (in promise) TypeError: Cannot read property 'onClick' of null</p>

<p>How can I trigger click to start my download?</p>

<p>BatchRoleActions.getAllRoleUsers(userIds) returns an an array with data for export to a csv file.  encodeURI(<code>data:text/csv;charset=utf-8,\uFEFF${data}</code>);</p>

<p>I am trying to find a solution for: <a href=""https://stackoverflow.com/questions/46554776/reactjs-how-to-complete-onclick-before-download-href"">ReactJs - How to complete onClick before download - href</a></p>
","1526912","","1526912","","2017-10-05 02:53:48","2017-10-05 08:11:35","How to trigger hyperlink click even - react component","<javascript><reactjs>","1","3","","",""
"38649165","1","","","2016-07-29 01:29:55","","1","838","<p>Trying to use react-data-tables here and getting errors left right and center. Going crazy.</p>

<p>After following the instructions as per <a href=""https://github.com/adazzle/react-data-grid"" rel=""nofollow"">https://github.com/adazzle/react-data-grid</a> and using the code samples from <a href=""http://adazzle.github.io/react-data-grid/examples.html#/filterable-sortable-grid"" rel=""nofollow"">http://adazzle.github.io/react-data-grid/examples.html#/filterable-sortable-grid</a> I am having the following issues.</p>

<p>If I use this in my file</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import ReactDataGrid from 'react-data-grid';
import ReactDataGridPlugins from 'react-data-grid/addons';

var Toolbar = ReactDataGridPlugins.Toolbar;
var Selectors = ReactDataGridPlugins.Data.Selectors;
</code></pre>

<p>I get a ""Cannot read property 'Toolbar' of undefined.</p>

<p>If I try </p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import ReactDataGrid from 'react-data-grid';
import Toolbar from 'react-data-grid/addons';
import Selectors from 'react-data-grid/addons';
</code></pre>

<p>I get the following error:</p>

<p>React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of <code>HostProviderList</code>.</p>

<p>And if I try</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import ReactDataGrid from 'react-data-grid';
import {Toolbar} from 'react-data-grid/addons';
import {Selectors} from 'react-data-grid/addons';
</code></pre>

<p>I get this error </p>

<p>Warning: Unknown props <code>onGridSort</code>, <code>columns</code>, <code>rowGetter</code>, <code>rowsCount</code>, <code>minHeight</code>, <code>onRowUpdated</code>, <code>toolbar</code>, <code>onAddFilter</code>, <code>minColumnWidth</code>, <code>columnEquality</code>, <code>enableCellSelect</code>, <code>rowHeight</code>, <code>enableRowSelect</code>, <code>rowKey</code>, <code>rowScrollTimeout</code>, <code>cellNavigationMode</code>, <code>headerRows</code>, <code>columnMetrics</code>, <code>cellMetaData</code>, <code>selectedRows</code>, <code>rowSelection</code>, <code>expandedRows</code>, <code>rowOffsetHeight</code>, <code>sortColumn</code>, <code>sortDirection</code>, <code>onSort</code>, <code>totalWidth</code>, <code>onViewportKeydown</code>, <code>onViewportKeyup</code>, <code>onViewportDragStart</code>, <code>onViewportDragEnd</code>, <code>onViewportDoubleClick</code>, <code>onColumnResize</code> on  tag. Remove these props from the element.</p>

<p>I am not sure what to do here. If I do just the basic data-grid as per the online example it works fine. However as soon as I try anything with the addons.jsx file it fails.</p>

<p>On a side note
    nmp install react-data-grid/addons</p>

<p>does not work. The git repo is not found. However I do see that after doing an npm install of react-data-grid I do have a addons.jsx file that imports dist/react-data-grid.ui-plugins.js</p>
","962792","","","","","2016-07-29 03:36:05","react-data-tables Undefined Toolbar","<reactjs>","1","3","","",""
"29062628","1","","","2015-03-15 15:47:56","","2","717","<p>I am very new to react. I tried to use react-router. But no matter how I change the code, it always give me the warning.</p>

<blockquote>
  <p>Warning: No route matches path ""/"". Make sure you have  somewhere in your routes</p>
</blockquote>

<p>After googling for few hours, still have no idea what is wrong. Can anyone give me some hint? Thank you</p>

<p>In my app.js</p>

<pre><code>Router.run(routes, Router.HistoryLocation, function(Handler, routerState) {
var params = routerState.params;
React.render(
    &lt;Handler params={params}/&gt;,
    document.getElementById('react-app')
    )
});
</code></pre>

<p>In my route.js</p>

<pre><code>var routes = (
&lt;Route name=""root"" path=""/"" handler={App}&gt;
    &lt;DefaultRoute handler={Home} /&gt;
    &lt;Route name=""commitments"" handler={CommitmentList} /&gt;
    &lt;Route name=""commitment"" handler={Commitment} /&gt;
&lt;/Route&gt;
);
</code></pre>

<p>I am also use express and tring to do server-side rendering,</p>

<pre><code>module.exports = {

  index: function(req, res) {
        var path = req.url;
        Router.run(routes, req.url, function(Handler) {
            var handler = React.createElement(Handler);
            var markup = React.renderToStaticMarkup(handler);
            res.render('home', {
                markup: markup // Pass rendered react markup
            });
         });

  }
}
</code></pre>
","4140283","","","","","2015-05-21 19:00:27","Always showing No route matches path ""/"" when using react-rotuer","<reactjs><react-router>","1","1","","",""
"37767137","1","","","2016-06-11 18:20:10","","0","413","<p>I am trying to work on node, and I'll be the first to admit it is a bit beyond me. Without a good list of tutorials, and troubleshooting being limited, I am doing my best to ask as few questions as I can, in the proper fashion. I believe I am messing up a require, but it could just be I do not fully understand renderToString. I am running node, express, and react, and eventually, I'd like to work with the MERN stack.</p>

<pre><code>var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');
import React from ""react"";
import { renderToString } from ""react-dom/server"";
</code></pre>

<p>Those are just my imports, and stuff automatically loaded by the express CLI. Just thought I'd include them in case they were relevant.</p>

<pre><code>function render(filePath, options, callback){

  function capitalizeFirstLetter(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
  }

  let views = require(filePath);
  let name = filePath.slice(filePath.lastIndexOf(""/"") + 1, -4);
  let componentName = capitalizeFirstLetter(name);
  let Component = views[componentName];
  // current problem is believed to be an import issue. I don't know for sure,
  // but the data seems to be mutated and not in a React form.
  let markup = renderToString(&lt;Component model={options} /&gt;)
  return callback(null, markup);
}

app.set('views', path.join(__dirname, 'views'));
app.engine(""jsx"", render);
app.set('view engine', 'jsx');
</code></pre>

<p>My views are written in JSX and stored in the views folder. I am trying to compile them into raw html and css and javascript, and I think this is the way to do it.</p>

<pre><code>This is my index route, if it matters.

var express = require('express');
var router = express.Router();

/* GET home page. */
router.get('/', function(req, res, next) {
res.render('index', { title: 'Express' });
});

module.exports = router;
</code></pre>

<p>Here is an example of one of my views. This one is the index view.</p>

<pre><code>import React from ""react"";

import Layout from ""./layout.jsx"";

class Index extends React.Component {
  constructor(props){
  super(props);
  }

  render(){
    return (
    &lt;Layout&gt;
      &lt;h1&gt;
        {this.props.model.title}
      &lt;/h1&gt;
      &lt;p&gt;
        Welcome to &lt;strong&gt;{this.props.model.title}&lt;/strong&gt;
      &lt;/p&gt;
    &lt;/Layout&gt;
    );
  }
}

export { Index };
</code></pre>

<p>Here is the error output:</p>

<pre><code>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of `Index`.
undefined
Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of `Error`.
undefined
Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of `Error`.
GET / 500 472.717 ms - 1527
Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. Check the render method of `Error`.
    at invariant (/Users/Tim/dev/express/myPage2/node_modules/react/node_modules/fbjs/lib/invariant.js:38:15)
    at [object Object].instantiateReactComponent [as _instantiateReactComponent] (/Users/Tim/dev/express/myPage2/node_modules/react/lib/instantiateReactComponent.js:85:134)
    at [object Object].ReactCompositeComponentMixin.performInitialMount (/Users/Tim/dev/express/myPage2/node_modules/react/lib/ReactCompositeComponent.js:355:36)
    at [object Object].ReactCompositeComponentMixin.mountComponent (/Users/Tim/dev/express/myPage2/node_modules/react/lib/ReactCompositeComponent.js:244:21)
    at Object.ReactReconciler.mountComponent (/Users/Tim/dev/express/myPage2/node_modules/react/lib/ReactReconciler.js:46:35)
    at /Users/Tim/dev/express/myPage2/node_modules/react/lib/ReactServerRendering.js:43:36
    at ReactServerRenderingTransaction.Mixin.perform (/Users/Tim/dev/express/myPage2/node_modules/react/lib/Transaction.js:136:20)
    at renderToStringImpl (/Users/Tim/dev/express/myPage2/node_modules/react/lib/ReactServerRendering.js:38:24)
    at renderToString (/Users/Tim/dev/express/myPage2/node_modules/react/lib/ReactServerRendering.js:68:10)
    at View.render (app.js:30:15)
</code></pre>

<p>I am really trying hard to learn node. I would love any helpful feedback and I am hoping to fix this problem! Thanks for the advice guys! I am pretty decent at React for client side code, but it is kicking my butt on the server. Lol!</p>
","5734819","","5734819","","2016-06-13 05:09:15","2016-06-14 20:47:00","rendering react server-side is causing an error","<javascript><node.js><express><reactjs>","1","6","","",""
"46583986","1","46601621","","2017-10-05 10:56:41","","0","632","<p>We're using svg-react-loader for some of the SVG files in our application. We're trying to setup jest to run with a babel-jest and the following <strong>.babelrc</strong>:</p>

<pre><code>{
  ""presets"": [
    ""es2015"", 
    ""react""
  ],
  ""plugins"": [
    ""transform-decorators-legacy"", 
    ""transform-class-properties"",
    ""transform-object-rest-spread""
  ]
}
</code></pre>

<p>The following test fails:</p>

<pre><code>/* global it, document */
import React from 'react'
import ReactDOM from 'react-dom'
import Comp from './Icon'

it('renders without crashing', () =&gt; {
  const div = document.createElement('div')
  ReactDOM.render(&lt;Comp&gt;&lt;div /&gt;&lt;/Comp&gt;, div)
})
</code></pre>

<p>With error:
<code>Cannot find module '-!svg-react-loader!../../assets/grid.svg' from 'Icon.js'</code></p>

<p>How could I ignore imports that start with like <strong>import grid from '-!svg-react-loader!../../assets/grid.svg'</strong> in jest?</p>
","665791","","","","","2017-10-06 08:34:39","How can I ignore ""-!svg-react-loader!./path/to/my.svg"" when testing with Jest without bundling everything with webpack","<jest><babel-jest>","1","0","","",""
"45929363","1","","","2017-08-29 01:20:38","","-1","68","<p>I have a jsx file, which creates <code>&lt;li&gt;</code> elements on page load. These <code>&lt;li&gt;</code> items are created based on the ajax return values.</p>

<p>For each <code>&lt;li&gt;</code> element i am adding ""click"" event programatically, which calls a react function (friendChat) . But while implementing this, i am getting the following error. (But i am able to get other properties. which initialised inside constructor.)</p>

<ul>
<li><strong>Error:this.friendChat is not a function</strong> </li>
</ul>

<p>Following is my jsx file.</p>

<p>Thanks in advance.</p>

<p>jsx file</p>

<pre><code>import React from 'react'

class Home extends React.Component {


constructor(props) {

    super(props);
    this.state = {username: ""Anu""};
    this.friendChat = this.friendChat.bind(this);


  }


  friendChat(friendId)
  {
        console.log(""Clicked friend id: ""+ friendId );

  }





componentDidMount() {
     console.log('Component DID MOUNT!');


 $(document).ready(function(){


     $.ajax({
        type: ""GET"",
        url: ""/friends/myFriends"",
        success: function(data){

          if (data == ""No friends"")
            {
                 console.log(""No friends exist"");
                document.getElementById('friends').innerHTML = ""Please add 
   friends"";
             }
            else
            {
            console.log(""Friends: ""+data);
             //Displaying friends in div
             for (var i = 0; i &lt; data.length; i++) 
              {
                  console.log(""Friend: ""+ data[i]);
                 var li=document.createElement(""li"");
                 //var br=document.createElement(""br"");
                 li.appendChild(document.createTextNode(data[i]));
                 li.setAttribute(""id"",data[i]);


                console.log(this.state.username);
           //It's Printing correctusername (Anu) initialised inside 
            //the constructor


                //Adding on click event for each friend

               li.addEventListener(""click"", function() { 
               this.friendChat(this.id); }, false);
               //Here it's showing the error of this.friendChat is not a 
               //function

             //Appending list item to document
             document.getElementById(""friends"").appendChild(li);
          }
        }


    }.bind(this)
 });


 }



 render() {
   return (


  &lt;div&gt;



        &lt;div className=""home_recentfriends""&gt;
           &lt;ul id=""friends""&gt;&lt;/ul&gt;
        &lt;/div&gt;


  &lt;/div&gt;


   )
   }


 }

 export default Home
</code></pre>
","6531373","","","","","2017-08-29 01:33:57","Error: this.friendChat is not a function (Jquery + react )","<jquery><reactjs><state><jsx>","1","5","","",""
"29697268","1","","","2015-04-17 10:55:23","","4","21298","<p>When i create several instances of a react class (by using React.createElement on the same class), some member variables are shared between the instances (arrays and objects are shared, strings and booleans etc. not).</p>

<p>For me this feels horrible and scary and wrong. Is this a bug or is there another way to do what i want to do?</p>

<p>Please have a look:
<a href=""http://jsbin.com/kanayiguxu/1/edit?html,js,console,output"" rel=""nofollow"">http://jsbin.com/kanayiguxu/1/edit?html,js,console,output</a></p>
","1844479","","1455016","","2015-04-21 22:20:12","2015-04-21 22:20:12","Member variables in react class are ""shared"" by reference","<javascript><reactjs>","1","4","2","",""
"37795346","1","37833406","","2016-06-13 17:01:15","","4","2259","<p>It is highly ironic that there are no react facebook plugins...</p>

<p>I want to show the facebook page plugin on my site (built in React) but nothing shows.</p>

<p>I have the default javascript jargon (I added <code>async</code> to no avail):</p>

<pre><code>&lt;div id=""fb-root""&gt;&lt;/div&gt;
&lt;script&gt;
    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s);
        js.id = id;
        js.async=true;
        js.src = ""//connect.facebook.net/en_GB/sdk.js#xfbml=1&amp;version=v2.6&amp;appId="";
    fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
&lt;/script&gt;
</code></pre>

<p>And the normal page plugin in the <code>render</code> of my react component:</p>

<pre><code>&lt;div className=""fb-page""
    data-href=""https://www.facebook.com/facebook/""
    data-tabs=""timeline""
    data-width=""500""
    data-height=""400""
    data-small-header=""true""
    data-adapt-container-width=""true""
    data-hide-cover=""false""
    data-show-facepile=""false""&gt;
    &lt;blockquote className=""fb-xfbml-parse-ignore""
                cite=""...
&lt;/div&gt;
</code></pre>

<p>How can I get this to load async?</p>
","184379","","184379","","2016-06-15 12:13:40","2016-06-15 12:13:40","How to load facebook page plugin with react","<facebook><reactjs>","2","0","1","",""
"38393967","1","","","2016-07-15 10:35:54","","0","711","<p>I'm compiling my react component with gulp webpack stream into a <code>TncComponent.js</code> file, which I will <code>require</code> in another <code>.js</code> file.</p>

<p><strong>Component:</strong></p>

<pre><code>let TncComponent = React.createClass ( {
    render() {
        return (
            &lt;div className=""terms-and-conditions""&gt;
               hello

            &lt;/div&gt;
        )

    }
} );

export default TncComponent;
</code></pre>

<p>Then in one of my <code>.js</code> file I want to render the component via a <code>onClick</code> event.</p>

<p><strong>JS file</strong></p>

<pre><code>export const init = () =&gt; {
    let tnc_init = () =&gt; {
        require.ensure ( [], ( require )=&gt; {
            let TncComponent = require ( '../TncComponent' );
            let $tnc = $ ( '.tnc' );
            $tnc.on ( 'click', ( e )=&gt; {
                e.preventDefault ();
                console.log ( document.getElementById ( 'tnc-root' ) );
                console.log ( TncComponent );
                ReactDOM.render (
                    React.createElement ( TncComponent, document.getElementById ( 'tnc-root' ) ) );
            } );
        } );

    }
    tnc_init ();
}
</code></pre>

<p>But <code>console.log(TncComponent)</code> returns an empty object.</p>

<p>How should I load the react component?</p>

<p><strong>TncComponent.js</strong></p>

<pre><code>/******/ (function(modules) { // webpackBootstrap
/******/    // The module cache
/******/    var installedModules = {};

/******/    // The require function
/******/    function __webpack_require__(moduleId) {

/******/        // Check if module is in cache
/******/        if(installedModules[moduleId])
/******/            return installedModules[moduleId].exports;

/******/        // Create a new module (and put it into the cache)
/******/        var module = installedModules[moduleId] = {
/******/            exports: {},
/******/            id: moduleId,
/******/            loaded: false
/******/        };

/******/        // Execute the module function
/******/        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/        // Flag the module as loaded
/******/        module.loaded = true;

/******/        // Return the exports of the module
/******/        return module.exports;
/******/    }


/******/    // expose the modules object (__webpack_modules__)
/******/    __webpack_require__.m = modules;

/******/    // expose the module cache
/******/    __webpack_require__.c = installedModules;

/******/    // __webpack_public_path__
/******/    __webpack_require__.p = """";

/******/    // Load entry module and return exports
/******/    return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

    module.exports = __webpack_require__(4);


/***/ },
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */
/***/ function(module, exports) {

    ""use strict"";

    Object.defineProperty(exports, ""__esModule"", {
        value: true
    });
    var TncComponent = React.createClass({
        displayName: ""TncComponent"",
        render: function render() {
            return React.createElement(
                ""div"",
                { className: ""terms-and-conditions"" },
                ""hello""
            );
        }
    });

    exports.default = TncComponent;

/***/ }
/******/ ]);
</code></pre>
","440646","","440646","","2016-07-15 23:05:44","2016-07-15 23:05:44","Loading react component with require.ensure()","<reactjs><webpack>","0","3","","",""
"37976342","1","","","2016-06-22 19:05:16","","0","232","<p>I am just learning react-native and how it works with redux. I have setup a store, setup a loginContainer, loginView. This view has a button that when it is clicked, i send an action / reducer to change the text of the button too ""logged in"". I was hoping I could get some insight into why I see the logs for the action / reducer, but nothing ever gets sent to the loginContainer to then re-render on the loginView.</p>

<p>Here is the code for loginView:</p>

<pre><code>import { View, Platform, Text, TextInput, TouchableHighlight, Alert, Navigator} from 'react-native';
import React, { Component } from 'react';
import styles from './styles';
import MainView from '../MainView/mainview';
import loginReducers from '../../reducers';
import { createStore } from 'redux';
import * as loginActions from '../../actions/actions';
import { LOGIN } from '../../actions/actions';
class LoginView extends Component {
    constructor(props)
    {
      super(props);
    }

    render() {
      const {text, _loginPressed} = this.props;
        return (
          &lt;View style={styles.container}&gt;
          &lt;TextInput style={styles.textInput} placeholder={""Username..""}/&gt;
          &lt;TextInput style={styles.textInput} placeholder={""Password..""}/&gt;
          &lt;TouchableHighlight onPress={_loginPressed} style={styles.loginButton} underlayColor={'#2f9bd7'}&gt;
          &lt;Text style={styles.loginButtonText}&gt;{text}&lt;/Text&gt;
          &lt;/TouchableHighlight&gt;
          &lt;/View&gt;
        );
    }
}
export default LoginView;
</code></pre>

<p>Login Container:</p>

<pre><code>import { View, Platform, Text, TextInput, TouchableHighlight, Alert, Navigator} from 'react-native';
import React, { Component } from 'react';
import { createStore } from 'redux';
import { StyleSheet } from 'react-native';
import styles from './styles';
import loginReducers from '../../reducers';
import {LOGIN} from '../../actions/actions'
import LoginView from '../../components/Login/loginview';
import { connect } from 'react-redux';
import {bindActionCreators} from 'redux';

export default class LoginContainer extends Component {
  constructor(props) {
    super(props);
  }

  render() {
    const {text} = this.props;
    console.log(this.state);
    return (
      &lt;LoginView
       text={text}
       _loginPressed={this._loginPressed.bind(this)}/&gt;
    );
  }
}

const stateToProps = (state) =&gt; {
  return {
    state: this.state
  }
}

const dispatchToProps = (dispatch) =&gt; {
  return {
    _loginPressed: () =&gt; {
      dispatch(LOGIN())}
  };
};

export default connect(stateToProps, dispatchToProps)(LoginView)
</code></pre>

<p>top view (setup.js):</p>

<pre><code>import App from './components/App';
import React, { Component } from 'react';
import { Provider } from 'react-redux';
import configureStore from './store';

const store = configureStore();

function setup() {
  class Root extends Component {
    render() {
      return (
        &lt;Provider store={store}&gt;
          &lt;App/&gt;
        &lt;/Provider&gt;
      );
    }
  }

  return Root;
}

module.exports = setup;
</code></pre>

<p>App/index.js</p>

<pre><code>import { View, Platform, Text, TextInput, TouchableHighlight, Alert, Navigator} from 'react-native';
import React, { Component } from 'react';
import styles from './styles';
import LoginContainer from '../../containers/Login/loginContainer';
import configureStore from '../../store';

class App extends Component {
  render() {
    return (
      &lt;Navigator
        initialRoute={{name: 'LoginView', component: LoginContainer}}
          renderScene={(route, navigator) =&gt; {
          //creates new element with the component and navigator;]
          if (route.component) {
              return React.createElement(route.component, Object.assign({navigator }, {type: 'LoginView', text: 'Login'}));
              }
            }}
         /&gt;
    );
  }
}

export default App;
</code></pre>
","5705780","","5705780","","2016-06-23 02:09:46","2016-06-23 05:00:46","react-native / redux sent action, send reducer, but UI not updated","<android><react-native><react-redux>","1","2","","",""
"38166125","1","38166183","","2016-07-03 02:09:59","","18","16529","<p>I found a problem in my code when I was trying to use these two functions in my React version 15.2.0, nonetheless, I found a workaround but I would like to know if there's a better solution. </p>

<pre><code>//app.jsx
var React = require('react');

var ThumbnailList = require('./thumbnail-list');

var options = {
     ThumbNailData: [{
     title : 'Download the ISO',
     number : 32,
     header : 'Learning React',
     description: 'The best library for creating fast and dynamic websites.',
     imageUrl : 'image source'
    },{
     title : 'Download the ISO',
     number : 64,
     header : 'Learning Gulp',
     description: 'Speed your development framework!',
     imageUrl : 'image source'
    }],
};

var element = React.createElement(ThumbnailList,options);
React.render(element, document.querySelector('.container'));
</code></pre>

<p>So, whenever I try to run my index.html file nothing is displayed but this first error comes into the console: <strong>React.render is not a function</strong>. I found that this occurs because this new version of React needs the react-dom, that is, </p>

<pre><code>//app.jsx
var React = require('react-dom');

var ThumbnailList = require('./thumbnail-list');

var options = {
     ThumbNailData: [{
     title : 'Download the ISO',
     number : 32,
     header : 'Learning React',
     description: 'The best library for creating fast and dynamic websites.',
     imageUrl : 'image source'
    },{
     title : 'Download the ISO',
     number : 64,
     header : 'Learning Gulp',
     description: 'Speed your development framework!',
     imageUrl : 'image source'
    }],
};

var element = React.createElement(ThumbnailList,options);
React.render(element, document.querySelector('.container'));
</code></pre>

<p>Now the problem is solved but now comes the second problem when you try to run again the index.html: <strong>React.CreateElement is not a function.</strong> What I did was to add another variable requiring react, that is, </p>

<pre><code>var React = require('react-dom');
var React2 = require('react');
var ThumbnailList = require('./thumbnail-list');

var options = {
    ThumbNailData: [{
        title : 'Download the ISO',
        number : 32,
        header : 'Learning React',
        description: 'The best library for creating fast and dynamic  websites.',
        imageUrl : 'image-source'
    },{
        title : 'Download the ISO',
        number : 64,
        header : 'Learning Gulp',
        description: 'Speed your development framework!',
        imageUrl : 'image-source'
   }],
};

var element = React2.createElement(ThumbnailList,options);
React.render(element, document.querySelector('.container'));
</code></pre>

<p>In few words, to solve the problem of React.render</p>

<pre><code>var React = require('react-dom') 
</code></pre>

<p>to solve the problem of React.createElement</p>

<pre><code>var React2 = require('react') 
</code></pre>

<p>My questions are: </p>

<ol>
<li><p>Why the react-dom created the problem with React.createElement?</p></li>
<li><p>Is it because of this new version of React? </p></li>
<li><p>Is there a better approach to solve these problems without having to invoke react-dom and react?</p></li>
</ol>

<p>Any thoughts and comments are appreciated ;)</p>
","2514936","","","","","2018-04-26 11:56:55","ReactJS: React.render is not a function and React.createElement is not a function","<javascript><reactjs>","2","0","4","",""
"38669619","1","38669646","","2016-07-30 01:48:21","","0","1213","<p>So the full error is as follows...</p>

<pre><code>Warning: React.createElement: type should not be null, undefined, 
boolean, or number. It should be a string (for DOM elements) or a ReactClass (for 
composite components). Check the render method of `IndexBody.
</code></pre>

<p>I'm not sure why I'm receiving this error, I thought I created my component properly but maybe another eye can see what I'm doing wrong. </p>

<p><strong>index.jsx:</strong> </p>

<pre><code>import React, { PropTypes } from 'react';
import ReactDOM from 'react-dom';
import Test from './app';


class IndexBody extends React.Component {

  render() {
    return (
      &lt;div&gt;
        &lt;h1&gt;This will show the Test Component&lt;/h1&gt;
        &lt;Test /&gt;
      &lt;/div&gt;
    );
  }
}

ReactDOM.render(&lt;IndexBody /&gt;, document.getElementById('react-app'))
</code></pre>

<p>And my imported Test component from ./<strong>app.jsx</strong></p>

<pre><code>import React, { PropTypes } from 'react';
import ReactDOM from 'react-dom';


class Test extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      hello: 'hello world',
    };
  }

  render() {
    console.log('WORKS'); // logs fine

    return (
      &lt;div&gt;
        &lt;h1&gt;{this.state.hello}&lt;/h1&gt;
      &lt;/div&gt;
    );
  }
}

ReactDOM.render(&lt;Test/&gt;, document.getElementById('react-app'));
</code></pre>

<p>I'm able to display the log, but it doesn't want to render the component. Am I incorrectly creating components? Thank you for your help in advance!</p>
","908392","","","","","2016-07-30 02:02:10","React.createElement: type should not be null, undefined.. When creating/rendering components","<javascript><reactjs>","2","0","1","",""
"28867871","1","28868530","","2015-03-05 00:30:24","","0","896","<p>I'm trying to create texteditor with React.JS that works a bit like Sir Trevor(<a href=""https://madebymany.github.io/sir-trevor-js/example.html"" rel=""nofollow"">https://madebymany.github.io/sir-trevor-js/example.html</a>). So you basically have blocks of different types of content that you order, edit and embed.</p>

<p>I have a JSON data set from the backend that looks like this.</p>

<pre class=""lang-js prettyprint-override""><code>var content = [
    {""tag"": ""p"", ""content"": ""Lorem ipsum dolor sit amet, consectetur adipiscing elit.""},
    {""tag"": ""Youtube"", ""content"": ""dQw4w9WgXcQ""},
    {""tag"": ""ul"", ""content"": [
        {""tag"": ""li"", ""content"": ""Rick""},
        {""tag"": ""li"", ""content"": ""Astley""},
    ]},
    {""tag"": ""TagCloud"", ""content"": [""news"",""opinon"",""papers""]}
];
</code></pre>

<p>Youtube and TagCloud are React classes. I render the code like this:</p>

<pre><code>var ArticleContent = React.createClass({
  render: function() {
    var elments = this.props.content;
    var reactElements = []
    for (var elementIndex in elments) {
      if (elments.hasOwnProperty(elementIndex)) {
        var tagname = elments[elementIndex].tag;
        var content = elments[elementIndex].content;
        console.log(tagname.toString());
        if(!/(div|p|li)/.test(tagname))
          tagname = React.createFactory(tagname)
        reactElements.push(React.createElement(tagname, null, content));
      }
    }

    return (
      React.createElement('div', {className: 'articleContent'},
        reactElements
      )
    );
  }
});
React.render(
  &lt;ArticleContent content={content}&gt;&lt;/ArticleContent&gt;
  document.getElementById('content')
);
</code></pre>

<p>Now my whish is to render normal html tags with just createElement, but for those matching a defined React component Class, I want to render using the components render method.</p>

<p>As far as I understand this is not possible because <code>createElement</code> only accepts proper React objects or strings of html tags. Help please :)</p>
","1134326","","","","","2015-03-05 01:40:39","How to best render react components dynamically from data model","<javascript><reactjs>","1","0","","",""
"29494111","1","","","2015-04-07 14:31:36","","1","1719","<p>I am trying to write a simple jest test for a react-router Route module.</p>

<p>The component has a button and when clicking on it, there is a programatic navigation to another route by using the 'transitionTo' method. </p>

<p>I keep getting the following error, even after adding the stubRouterContext utils (as explained <a href=""https://github.com/rackt/react-router/blob/v0.12.4/docs/guides/testing.md"" rel=""nofollow"">here</a>), and wrapping my UserDetails component in the stubRouterContext:</p>

<p><code>TypeError: Property 'transitionTo' of object #&lt;Object&gt; is not a function</code></p>

<p>I am using react 12.2, react-router 12.4, and jest 2.2</p>

<p>My dummy component:</p>

<pre><code>var Navigation, React, Router;

React = require('react/addons');
Router = require('react-router');
Navigation = require('react-router').Navigation;

module.exports = React.createClass({

  mixins: [Navigation],

  onButtonClick: function() {
    this.transitionTo('next-page');
  },

  render: function() {
    return (&lt;button onClick={@onButtonClick}&gt;Go to next page&lt;/button&gt;)
  }
});
</code></pre>

<p>My test file:</p>

<pre><code>jest.dontMock('./../utils/stub-router-context')
    .dontMock('../dummy-component');

describe('DummyComponent', function() {
  it('let you navigate to next page', function() {

    var React = require('react/addons');
    var TestUtils = React.addons.TestUtils;
    var stubRouterContext = require('./../utils/stub-router-context');
    var DummyComponent = require('../dummy-component');

    var Subject = stubRouterContext(DummyComponent);
    dummyComponent = TestUtils.renderIntoDocument(&lt;Subject/&gt;);

    button = TestUtils.findRenderedDOMComponentWithTag(dummyComponent, 'button');
    React.addons.TestUtils.Simulate.click(button);

  });
});
</code></pre>

<p>My stub-router-context.cjsx file:</p>

<pre><code>var React = require('react/addons');
var func = React.PropTypes.func;
var _ = require('lodash');

module.exports  = function(Component, props, stubs) {
  return React.createClass({
    childContextTypes: {
      makePath: func,
      makeHref: func,
      transitionTo: func,
      replaceWith: func,
      goBack: func,
      getCurrentPath: func,
      getCurrentRoutes: func,
      getCurrentPathname: func,
      getCurrentParams: func,
      getCurrentQuery: func,
      isActive: func
    },
    getChildContext: function() {
      return _.merge({}, {
        makePath: function() {},
        makeHref: function() {},
        transitionTo: function() {},
        replaceWith: function() {},
        goBack: function() {},
        getCurrentPath: function() {},
        getCurrentRoutes: function() {},
        getCurrentPathname: function() {},
        getCurrentParams: function() {},
        getCurrentQuery: function() {},
        isActive: function() {}
      }, stubs);
    },
    render: function() {
      return React.createElement(Component, props);
    }
  });
};
</code></pre>
","4757928","","","","","2015-05-25 18:29:18","Jest testing of react-router","<react-router><jestjs>","2","1","1","",""
"46816069","1","","","2017-10-18 17:37:50","","0","174","<p>I'm currently playing around with <code>ReactJS</code> using <code>TypeScript</code> as the underlying language wher I define my components.</p>

<p>I saw on many sites, that it is possible to render such components within a page (in my case <code>cshtml</code>). Especially <a href=""https://channel9.msdn.com/Series/aspnetmonsters/ASPNET-Monsters-94-React-with-Server-Side-Rendering"" rel=""nofollow noreferrer"">here</a> which I tried to accomplish.
To do so there should be something like:</p>

<pre><code>&lt;!-- ... --&gt;
&lt;body&gt;
    &lt;div id=""myTargetId""&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;!-- ... --&gt;

&lt;script src=""@(Url.Content(""~/Scripts/React/dist/commons.js""))""&gt;&lt;/script&gt;
&lt;script src=""@(Url.Content(""~/Scripts/React/dist/MyComponent.js""))""&gt;&lt;/script&gt;
&lt;script&gt;
    ReactDOM.render(React.createElement(MyComponent, {}), document.getElementById(""targetId""));
&lt;/script&gt;
</code></pre>

<p>Currently I get the following error:</p>

<blockquote>
  <p>Uncaught ReferenceError: MyComponent is not defined</p>
</blockquote>

<p>This is what my <code>MyComponent.tsx</code> looks like:</p>

<pre><code>import * as React from ""react"";

export interface IMyComponentProps { }
export interface IMyComponentState { }

export class MyComponent extends React.Component&lt;IMyComponentProps, IMyComponentState&gt; {
    render(): JSX.Element {
        return (
            &lt;p&gt;This comes from ReactJs&lt;/p&gt;
        );
    }
}
</code></pre>

<p>To pack this all together I am using <code>webpack</code> with the following <code>webpack.config.js</code> (simplified):</p>

<pre><code>const webpack = require(""webpack"");
module.exports = {
    entry: {
        MyComponent: ""./Scripts/React/Modules/MyComponent.tsx""
    },
    output: {
        path: path.join(__dirname, ""./Scripts/React/dist/""),
        filename: ""[name].js""
    },

    externals: {
        ""react"": ""React"",
        ""react-dom"": ""ReactDOM""
    }
};
</code></pre>

<p>And, finally, this is the emitted <code>JavaScript</code>:</p>

<pre><code>webpackJsonp([0],[
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

""use strict"";

Object.defineProperty(exports, ""__esModule"", { value: true });
const React = __webpack_require__(1);
class MyComponent extends React.Component {
    render() {
        return (React.createElement(""p"", null, ""This comes from ReactJs""));
    }
}
exports.MyComponent = MyComponent;


/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = React;

/***/ })
],[0]);
//# sourceMappingURL=MyComponent.js.map
</code></pre>

<p>What am I missing here?</p>
","615288","","615288","","2017-10-18 20:42:43","2017-10-18 23:24:10","React.createElement throws Component not defined","<javascript><asp.net><reactjs><typescript><webpack>","1","4","","",""
"46046599","1","","","2017-09-05 03:29:01","","1","158","<p>I'm trying to render a React element in a PHP webpage. Thing is I haven't touched React in awhile (6mths+) and am kinda rusty...</p>

<p>Of course, I have tried searching for answers before asking, but most solutions deal with exporting of the React element within the React file itself. Thing is, I need to export the element in the DOM itself in order to feed it initial PHP data.</p>

<p>Anyway, I keep getting this error in the console and am not sure how to resolve it.</p>

<pre><code>react-with-addons.js:5221 Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: object. You likely forgot to export your component from the file it's defined in.
printWarning @ react-with-addons.js:5221
warning @ react-with-addons.js:5245
createElement @ react-with-addons.js:2283
(anonymous) @ new_booking:265
react-dom.js:18118 Uncaught Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: object. You likely forgot to export your component from the file it's defined in.
    at invariant (react-dom.js:18118)
    at ReactCompositeComponentWrapper.instantiateReactComponent [as _instantiateReactComponent] (react-dom.js:16179)
    at ReactCompositeComponentWrapper.performInitialMount (react-dom.js:4828)
    at ReactCompositeComponentWrapper.mountComponent (react-dom.js:4719)
    at Object.mountComponent (react-dom.js:11551)
    at mountComponentIntoNode (react-dom.js:9772)
    at ReactReconcileTransaction.perform (react-dom.js:14760)
    at batchedMountComponentIntoNode (react-dom.js:9794)
    at ReactDefaultBatchingStrategyTransaction.perform (react-dom.js:14760)
    at Object.batchedUpdates (react-dom.js:8825)
</code></pre>

<p>And here is the code:</p>

<p>PHP page</p>

<pre><code>&lt;?php defined('BASEPATH') OR exit('No direct script access allowed');
?&gt;&lt;!DOCTYPE html&gt;
&lt;html&gt;

&lt;head&gt;
    &lt;link href=""&lt;?=STATIC_REPO;?&gt;css/parsley.css"" rel=""stylesheet"" type=""text/css"" /&gt;
    &lt;link href=""&lt;?=STATIC_REPO;?&gt;vendor/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css"" rel=""stylesheet"" type=""text/css"" /&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;!-- Wrapper start --&gt;
&lt;div id=""wrapper""&gt;
    &lt;?php $this-&gt;load-&gt;view('staff/_snippets/navbar_staff'); ?&gt;
    &lt;!-- Page Content start --&gt;
    &lt;div id=""page-wrapper""&gt;
        &lt;ol class=""breadcrumb""&gt;
            &lt;li&gt;&lt;a href=""&lt;?=site_url('staff/authenticate_staff/start');?&gt;""&gt;Home&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=""&lt;?=site_url('staff/room_booking/browse_bookings');?&gt;""&gt;Bookings&lt;/a&gt;&lt;/li&gt;
            &lt;li class=""active""&gt;New Booking&lt;/li&gt;
        &lt;/ol&gt;

        &lt;div class=""row""&gt;
            &lt;div class=""col-md-12""&gt;

                &lt;div class=""page-header""&gt;
                    &lt;h2&gt;New Booking&lt;/h2&gt;
                &lt;/div&gt;

                &lt;div class=""col-md-11""&gt;
                    &lt;div class=""row""&gt;

                        &lt;form id=""new_booking_form"" role=""form"" class=""form-horizontal"" method=""post"" data-parsley-validate&gt;
                            &lt;div id=""TestReact""&gt;&lt;/div&gt;

                            &lt;div class=""form-group""&gt;
                                &lt;div class=""col-md-10 col-md-offset-2""&gt;
                                    &lt;button id=""submit_btn"" type=""submit"" class=""btn btn-primary""&gt;
                                        &lt;i class=""fa fa-check fa-fw""&gt;&lt;/i&gt; Submit&lt;/button&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/form&gt;

                    &lt;/div&gt;
                &lt;/div&gt;

            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Page Content end --&gt;

&lt;/div&gt;
&lt;!-- Wrapper end --&gt;
&lt;?php $this-&gt;load-&gt;view('admin/_snippets/body_resources_admin'); ?&gt;
&lt;script src=""&lt;?=STATIC_REPO;?&gt;vendor/parsleyjs/parsley.min.js""&gt;&lt;/script&gt;
&lt;script src=""&lt;?=STATIC_REPO;?&gt;vendor/moment/moment.min.js""&gt;&lt;/script&gt;
&lt;script src=""&lt;?=STATIC_REPO;?&gt;vendor/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js""&gt;&lt;/script&gt;

&lt;script src=""&lt;?=STATIC_REPO;?&gt;vendor/moment/moment.min.js""&gt;&lt;/script&gt;
&lt;script src=""&lt;?=STATIC_REPO;?&gt;vendor/numeral/numeral.min.js""&gt;&lt;/script&gt;
&lt;script&gt;
let dateFormat = 'DD-MM-YYYY';

$(document).ready(function() {
    $('#start_date').datetimepicker({
        format: dateFormat
    });

    $('#end_date').datetimepicker({
        format: dateFormat
    });
});
&lt;/script&gt;

&lt;!-- react resources --&gt;
&lt;script src=""&lt;?=STATIC_REPO;?&gt;vendor/react/react-with-addons.js""&gt;&lt;/script&gt;
&lt;script src=""&lt;?=STATIC_REPO;?&gt;vendor/react-dom/react-dom.js""&gt;&lt;/script&gt;
&lt;scirpt src=""&lt;?=STATIC_REPO;?&gt;react/dist/TestReact.js""&gt;&lt;/script&gt;
&lt;script&gt;
    let element = React.createElement(TestReact);

    ReactDOM.render(
        element,
        document.getElementById('TestReact')
    );
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>JSX code compiled to JS with gulp. This is currently just a test element to check if my React is setup correctly.</p>

<pre><code>const TestReact = React.createClass({
    render: function() {
        console.log('TestReact rendered.');
        return (
            &lt;div&gt;
                &lt;h1&gt;This is a Test React class. Hello World&lt;/h1&gt;
            &lt;/div&gt;
        );
    }
}); //end TestReact class
</code></pre>
","498007","","","","","2017-09-05 03:29:01","React.createElement: type is invalid -- expected string","<php><reactjs><codeigniter-3><react-dom>","0","1","","",""
"46247093","1","46247369","","2017-09-15 20:31:27","","1","176","<p>Here is an error message:</p>

<blockquote>
  <p>React.createElement: type is invalid -- expected a string (for
  built-in components) or a class/function (for composite components)
  but got: undefined. You likely forgot to export your component from
  the file it's defined in.</p>
</blockquote>

<p>The error is pointing to this code line:</p>

<pre><code> &lt;CSSTransitionGroup {...fadeAnimation}&gt; 
</code></pre>

<p>The complete Code:</p>

<pre><code>import React, { Component } from 'react';
import { Link } from 'react-router-dom';
import { CSSTransitionGroup } from 'react-transition-group';

const URL_TEAMS = ""http://localhost:3001/teams"";

const fadeAnimation = {
  transitionName:""fade"",
  transitionAppear:true,
  transitionAppearTimeout:500,
  transitionEnter:true,
  transitionEnterTimeout:500,
  transitionLeave:true,
  transitionLeaveTimeout:500
}

class Teams extends Component {
    constructor(props){
    super(props);

    this.state = {
        teams:[],
        filtered:[],
        keyword:''
    }
}

componentDidMount(){
  fetch(URL_TEAMS,{method: 'GET'})
  .then(response =&gt; response.json())
  .then(json =&gt; {
    this.setState({
      teams:json,
      filtered:json
    })
  })
}

rendeList = ({filtered}) =&gt;{
  return filtered.map((item) =&gt; {
    return(
      &lt;Link to={`/team/${item.name}`} key={item.id} 
      className=""team_item""&gt;
        &lt;img alt={item.name} src={`/images/teams/${item.logo}`}/&gt;
      &lt;/Link&gt; 
    ) 
  })
}

render() {
    return (
        &lt;div className=""teams_component""&gt;
          &lt;div className=""teams_input""&gt;
            &lt;input type=""text""
                   placeholder=""Search for a team""
            /&gt;
          &lt;/div&gt;
          &lt;div className=""teams_container""&gt;
             &lt;CSSTransitionGroup {...fadeAnimation}&gt;
               {this.rendeList(this.state)}              
             &lt;/CSSTransitionGroup&gt;
           &lt;/div&gt;
        &lt;/div&gt;
    );
  }
}

export default Teams;
</code></pre>
","8480460","","1000551","","2017-09-15 21:14:27","2017-09-15 21:14:27","ReactJS - Error Message: React.createElement: type is invalid -- expected a string","<javascript><reactjs>","1","2","","",""
"29198920","1","29207874","","2015-03-22 19:34:40","","0","633","<p>I have been playing with this jsfiddle which shows how to use css within js: <a href=""http://jsfiddle.net/vjeux/y11txxv9/"" rel=""nofollow"">http://jsfiddle.net/vjeux/y11txxv9/</a></p>

<p>In the above jsfiddle, the following three functions seem to be deprecated for <code>React v0.13.1</code>. </p>

<pre><code>var View = React.DOM.div;
var Text = React.DOM.span;
....
React.renderComponent(&lt;div style={{width: '100vw', height: '100vh'}}&gt;&lt;StyleDemo /&gt;&lt;/div&gt;, document.body);
</code></pre>

<p>It seems that the code after refactoring should be something like below for <code>React 0.13.1</code>:</p>

<pre><code>var View = React.createElement('div');
var Text = React.createElement('span');
...
React.render(React.createElement(""div"", {style: {width: '100vw', height: '100vh'}}, React.createElement(StyleDemo, null)), document.body);
</code></pre>

<p>However, above refactoring doesn't seem to work - nothing renders in Chrome after refactoring. Since my knowledge of JS and React is quite limited, I will appreciate pointers on how to refactor above code for <code>React 0.13.1</code>.</p>

<p>To test the above code on my computer, I created <code>index.html</code> and <code>test.js</code>, both of which are attached below.</p>

<p><code>index.html</code>:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=""en""&gt;
  &lt;head&gt;
    &lt;style&gt;
body {
    padding: 0;
    margin: 0;
    font-family: Helvetica;
    font-size: 14px;
    font-weight: 100;
}
div, span {
    box-sizing: border-box;
    position: relative;
    border: 0 solid black;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: flex-start;
    flex-shrink: 0;
}

 &lt;/style&gt;
  &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/0.13.1/JSXTransformer.js""&gt;&lt;/script&gt;
  &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/0.13.1/react.js""&gt;&lt;/script&gt;
  &lt;/head&gt;
  &lt;body&gt;
  &lt;script type=""text/jsx"" src=""test.js""&gt;&lt;/script&gt;
  &lt;/body&gt;

&lt;/html&gt;
</code></pre>

<p><code>test.js</code>:</p>

<pre><code>/** @jsx React.DOM */
var StyleSheet = { create: function(e) { return e; } };
var View = React.createElement('div');
var Text = React.createElement('span');



var StyleDemo = React.createClass({
  render: function() {
    return (
      &lt;View style={styles.card}&gt;
        &lt;View style={styles.header}&gt;
          &lt;View style={styles.profilePicture} /&gt;
          &lt;View style={{flex: 1}}&gt;
            &lt;Text style={styles.name}&gt;Christopher Chedeau&lt;/Text&gt;
            &lt;Text style={styles.subtitle}&gt;August 28 at 9:46pm &amp;middot; Paris, France&lt;/Text&gt;
          &lt;/View&gt;
        &lt;/View&gt;
        &lt;View&gt;
          &lt;Text&gt;'react js' search on Twitter returns 96 results in the past 24 hours. I declare bankruptcy!&lt;/Text&gt;
          &lt;Text style={styles.bling}&gt;Like &amp;middot; Comment &amp;middot; Share&lt;/Text&gt;
        &lt;/View&gt;
      &lt;/View&gt;
    );
  }
});

var styles = StyleSheet.create({
  card: {
    margin: 15,
    padding: 8,
    borderWidth: 1,
    borderColor: '#cccccc',
    borderRadius: 3
  },
  profilePicture: {
    width: 40,
    height: 40,
    backgroundColor: '#cccccc',
    marginRight: 8,
    marginBottom: 8,
  },
  name: {
    color: '#3B5998',
    fontWeight: 'bold',
    marginBottom: 2,
  },
  subtitle: {
    fontSize: 12,
    color: '#9197A3',
  },
  header: {
    flexDirection: 'row',
  },  
  bling: {
    marginTop: 8,
    color: '#6D84B4',
    fontSize: 13,
  },
});


React.render(React.createElement(""div"", {style: {width: '100vw', height: '100vh'}}, React.createElement(StyleDemo, null)), document.body);
</code></pre>
","986475","","986475","","2015-03-23 01:48:20","2015-03-23 10:25:48","Redoing css-layout jsfiddle in react v0.13","<reactjs><react-jsx>","1","3","","",""
"29383026","1","","","2015-04-01 04:45:27","","2","882","<p>I am writing wrapper for react-native in scala-js</p>

<pre><code>  lazy val reactNative = js.Dynamic.global.require(""react-native"")
  val View = reactNative.View
  val component = ReactNativeB[Unit](""NativeYeah"")
          .render(P =&gt; {
             reactNative.createElement(View,null)
        }).buildU
  reactNative.AppRegistry.registerComponent(""iOSscala"", () =&gt; component())
</code></pre>

<p><strong>Component registered fine</strong> ,but its failing while creating View element! </p>

<blockquote>
  <p>null is not a function (evaluating 'autoGenerateWrapperClass(tag)')""</p>
</blockquote>

<p>Full stack trace : </p>

<pre><code>CTJSLog&gt; ""Error: 
 stack: 
  getComponentClassForElement     index.ios.bundle:5894
  validatePropTypes               index.ios.bundle:5634
  createElement                   index.ios.bundle:5681
  renderApplication               index.ios.bundle:33913
  run                             index.ios.bundle:33858
  runApplication                  index.ios.bundle:33880
  jsCall                          index.ios.bundle:7237
  _callFunction                   index.ios.bundle:7484
  applyWithGuard                  index.ios.bundle:877
  guardReturn                     index.ios.bundle:7286
  callFunctionReturnFlushedQueue  index.ios.bundle:7493
 URL: http://localhost:8081/index.ios.bundle
 line: 5894
 message: null is not a function (evaluating 'autoGenerateWrapperClass(tag)')""
</code></pre>

<p>while debugging this function </p>

<pre><code>function getComponentClassForElement(element) {
  if (typeof element.type === 'function') {
    return element.type;
  }
  var tag = element.type;
  var componentClass = tagToComponentClass[tag];
  if (componentClass == null) {
    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
  }
  return componentClass;
}
</code></pre>

<p>tag value is ReactElement </p>

<p>Note : the above code works fine in reactjs with div tag / react component.</p>

<p><strong>Edit : Its issue from scalajs-react builder ,which obeys ReactJS render API not AppRegistry , closing issue.</strong></p>
","986387","","986387","","2015-04-02 11:20:56","2015-04-02 11:20:56","autoGenerateWrapperClass is null react-native","<javascript><reactjs><react-native>","1","0","2","",""
"46155622","1","","","2017-09-11 12:17:53","","0","55","<p>I am learning react.js</p>

<p>I created an example where there is a textarea, 
If I enter comma seperated names in that textarea, I show a listing those
names below the textarea.</p>

<p>the working example is as follows, 
<a href=""https://jsfiddle.net/rahulshivsharan/uxzx0xaL/1/"" rel=""nofollow noreferrer"">click here</a></p>

<p>The code is as follows</p>

<pre><code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;React Template&lt;/title&gt;
        &lt;link rel=""stylesheet"" href=""https://www.w3schools.com/w3css/4/w3.css""&gt;     
        &lt;style type=""text/css""&gt;
            .mywidth{
                width : 50%;
            } 
        &lt;/style&gt;    
    &lt;/head&gt;
    &lt;body&gt;
        &lt;!-- Body Content --&gt;
            &lt;div id=""mainContent""&gt;&lt;/div&gt;
        &lt;!-- Body Content --&gt;

        &lt;!-- The core React library --&gt;
        &lt;script src=""/node_modules/react/dist/react.min.js""&gt;&lt;/script&gt;
        &lt;!-- The ReactDOM Library --&gt;
        &lt;script src=""/node_modules/react-dom/dist/react-dom.min.js""&gt;&lt;/script&gt;

        &lt;script type=""text/javaScript""&gt;
            (function(){
                'use strict'
                // custom javaScript content

                var DataFeedComponent = React.createClass({
                    propTypes : {
                        ""defaultValue"" : React.PropTypes.string.isRequired
                    },
                    getDefaultProps : function(){
                        return {
                            ""content"" : """"
                        }
                    },
                    getInitialState : function(){
                        return {
                            ""content"" : this.props.defaultValue
                        }
                    },
                    doRenderingUI : function(evt){                                              
                        this.setState({
                            content : evt.target.value
                        });
                    },
                    render : function(){
                        var TextAreaElement = React.createElement(""textarea"",{
                            ""className"" : ""mywidth"",
                            ""value"" : this.state.content,
                            ""onChange"" : this.doRenderingUI
                        });

                        var listElementArray = [];

                        var someContent = this.state.content.split("","");

                        for(var x = 0; x &lt; someContent.length; x++){

                            if(someContent[x] !== undefined &amp;&amp; someContent[x] !== null &amp;&amp; someContent[x] !== """"){
                                listElementArray.push(React.createElement(""li"",null,someContent[x]));   
                            }                               

                        } // end of for

                        var orderedListingElement =  React.createElement(""ol"",null,listElementArray);

                        var DivElement = React.createElement(""div"",null,TextAreaElement,orderedListingElement);
                        return DivElement;
                    }
                });



                var elementObject = React.createElement(DataFeedComponent,{ ""defaultValue"" : ""Victor,Nick"" });

                ReactDOM.render(elementObject,document.getElementById(""mainContent""));
            })();   
        &lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>So my problem is</p>

<p>on event 'onChange' my example works fine,</p>

<pre><code>render : function(){
                        var TextAreaElement = React.createElement(""textarea"",{
                            ""className"" : ""mywidth"",
                            ""value"" : this.state.content,
                            ""onChange"" : this.doRenderingUI
                        });
</code></pre>

<p>i.e. on entering the text in textarea I am able to see the listing below the textarea.</p>

<p>BUT </p>

<p>if I change to onBlur, it doesn't work. why ?</p>
","861015","","","","","2017-09-11 13:32:02","Why I am not able to attach onBlur to component created in react?","<javascript><html><reactjs>","2","2","","",""
"29775775","1","","","2015-04-21 14:54:04","","2","1515","<p>I write next reactjs 0.13.2 class with jsx template</p>

<pre><code>var ImageTest = React.createClass({
    getInitialState:function(){
         return {image:""https://pp.vk.me/c1432/g6369227/c_194fa45c.jpg""};
    },

    render: function () {
         return &lt;img src={this.state.image}/&gt;;
    }
});

$(document).ready(function () {
   React.render(&lt;ImageTest/&gt;, document.getElementById('card'));
});
</code></pre>

<p>I worked in Intelj Idea and have File watcher. FW run Babel task for transform this file to clean JS. And this file worked in browser Chrome</p>

<pre><code>""use strict"";

var ImageTest = React.createClass({
    displayName: ""ImageTest"",

    getInitialState: function getInitialState() {
        return { image: ""https://pp.vk.me/c1432/g6369227/c_194fa45c.jpg"" };
    },

    render: function render() {
        return React.createElement(""img"", { src: this.state.image });
    }
});

$(document).ready(function () {
    React.render(React.createElement(ImageTest, null), document.getElementById(""card""));
});
</code></pre>

<p>And throw next Exception on page load
Warning: Only functions or strings can be mounted as React components.
Uncaught TypeError: undefined is not a function</p>

<pre><code>function autoGenerateWrapperClass(type) {
    return ReactClass.createClass({
    tagName: type.toUpperCase(),
     render: function() {
      return new ReactElement(
      type,
      null,
      null,
      null,
      null,
      this.props
     );
   }
 });
}
</code></pre>

<p>This function in Reactjs raise exception, row this type.toUpperCase(). For <code>img</code> type==Object, if use <code>&lt;div&gt;</code> type==div. Whats wrong in code?</p>
","4796237","","","","","2015-05-27 12:33:22","Render image tag in jsx throw exception in reactjs","<reactjs><react-jsx>","1","3","","",""
"38258479","1","","","2016-07-08 03:25:33","","5","719","<p>My website is written in PHP. Node.js is also set up for socket.io. I have been thinking about server-side rendering with Reactjs so I can reuse the views. Planning to use v8js extension, but then I came across <a href=""https://blog.frankdejonge.nl/rendering-reactjs-templates-server-side/"" rel=""nofollow"">this article</a> talking about two possible solutions:</p>

<p>1.Use v8js extension and React-PHP-V8Js</p>

<p>2.Send data from php to node.js to render views, example:</p>

<p>node.js</p>

<pre><code>require(""babel/register"");  
var React = require('react');  
var express = require('express');  
var path = require('path');  
var bodyParser = require('body-parser');

var app = express();  
app.use(bodyParser.json());  
app.use('/', function(req, res) {  
    try {
        var view = path.resolve('./views/' + req.query.module);
        var component = require(view);
        var props = req.body || null;
        res.status(200).send(
            React.renderToString(
                React.createElement(component, props)
            )
        );
    } catch (err) {
        res.status(500).send(err.message);
    }
});
</code></pre>

<p>php </p>

<pre><code>use GuzzleHttp\Client;

$app-&gt;get('/{name:.*?}', function($name) use ($app) {
    $client = new Client(['base_url' =&gt; 'http://localhost:3000']);
    $response = $client-&gt;post('/', [
        'json' =&gt; ['name' =&gt; ucfirst($name ?: 'World')],
        'query' =&gt; ['module' =&gt; 'hello'],
    ]);
    $contents = $response-&gt;getBody()-&gt;getContents();

    return response($contents, 200);
});
</code></pre>

<p>The author says he would prefer the second method because the first one:</p>

<blockquote>
  <p>Unless you're comfortable installing (and updating) libv8 and   the
  V8Js PECL extension on your production machines,   this is not an
  option. Personally, I wouldn't go this route.   Installing the
  dependencies is cumbersome, dependency management   is tricky, and
  there aren't many resources to guide you along   the way.   <strong>In
  addition, you'll need to account for the fact that your  javascript
  builds should not be bundled with react if you want   to re-use
  them</strong>.</p>
</blockquote>

<p>Could you tell me what he means by ""javascript builds not being able to bundle with react""? I have been thinking about using <code>v8js</code> + <code>React-PHP-V8Js</code> so I would like to understand some of the drawbacks of it. Also, would you prefer the second method (node.js as template rendering service)? I have node.js running already so this seems to be a good suggestion. </p>
","2598292","","4233593","","2016-07-13 22:53:43","2016-07-17 06:49:23","Is node.js with reactjs as php template rendering service a good idea?","<php><node.js><reactjs>","3","0","2","",""
"46158762","1","","","2017-09-11 15:00:03","","1","140","<p>The problem is that I have to send to v8js file like this</p>

<pre><code>let HelloWorld = function(props){
    return (
        React.createElement('h1', null, 'Hello World!'+props.count)
    );
}
</code></pre>

<p>I mean no import and no export lines are acceptable</p>

<p>But for webpack I need to have file like this </p>

<pre><code>import React, { Component } from 'react';

let HelloWorld = function(props){
    return (
        React.createElement('h1', null, 'Hello World!'+props.count)
    );
}

export default HelloWorld;
</code></pre>

<p>I can't find how to include file like for v8js code to webpack correctly</p>

<p>I want to use one component in v8js and webpack at the same time without copy paste.</p>
","8592794","","8592794","","2017-09-11 15:11:17","2017-09-12 09:08:09","How to organize js code when you are using v8js engine (php) for prerending react component?","<reactjs><components><v8><prerender>","1","0","","",""
"38057041","1","","","2016-06-27 14:49:36","","1","840","<p>I have used these npm dependencies while rendering the react using node on server side.</p>

<pre><code>var React = require('react');
var ReactDOMServer = require('react-dom/server');
var request = require('request');
</code></pre>

<p>I can not use <code>componentDidMount</code> because it is never called while rendering server side. So, I used <code>componentWillMount</code> and my final code structure is like this : </p>

<pre><code>var Content = React.createClass({
displayName: 'Content',
getInitialState: function getInitialState() {
    console.log('getInitialState');
    return {
        xyz : [],
        abc : ''
    };
},

componentWillMount: function componentWillMount() { 
    console.log('componentWillMount');  
    request(
        'some_url', 
        function (error, response, body) {
            console.log(response.statusCode);
         if (!error &amp;&amp; response.statusCode == 200) {
            console.log('Request Call');
            this.setState = {
                    xyz : [],
                    abc : ''
           }
        } 
    }.bind(this));
},
render: function render() {
    console.log('render');
    return React.createElement(
        'div',
        { 
            className: 'clearfix container-fluid padding-none' },
            React.createElement(TopSection, { title: this.state.title, slug: this.state.slug })
       );
    }
});
</code></pre>

<p>My LifeCycle is going as follow</p>

<pre><code>getInitialState
componentWillMount
render
Request Call
render
</code></pre>

<p>and after the render is called second time i got this error</p>

<pre><code>Warning: React can't find the root component node for data-reactid
      value `.1va42hea328.1.0.1`. If you're seeing this message, it 
probably means that you've loaded two copies of React on the page. At   this
time, only a single copy of React can be loaded at a time.

/Users/me/Desktop/Projects/silly-poke/node_modules/react/lib/ReactMount.js:715

firstChildren[0] = deepestAncestor.firstChild;
                                  ^

TypeError: Cannot read property 'firstChild' of undefined
</code></pre>

<p>Output of <code>npm ls</code> is as below : </p>

<pre><code>     ├─┬ compression@1.6.2
│ ├─┬ accepts@1.3.3
│ │ ├─┬ mime-types@2.1.11
│ │ │ └── mime-db@1.23.0
│ │ └── negotiator@0.6.1
│ ├── bytes@2.3.0
│ ├─┬ compressible@2.0.8
│ │ └── mime-db@1.23.0
│ ├─┬ debug@2.2.0
│ │ └── ms@0.7.1
│ ├── on-headers@1.0.1
│ └── vary@1.1.0
├─┬ express@4.14.0
│ ├─┬ accepts@1.3.3
│ │ ├─┬ mime-types@2.1.11
│ │ │ └── mime-db@1.23.0
│ │ └── negotiator@0.6.1
│ ├── array-flatten@1.1.1
│ ├── content-disposition@0.5.1
│ ├── content-type@1.0.2
│ ├── cookie@0.3.1
│ ├── cookie-signature@1.0.6
│ ├─┬ debug@2.2.0
│ │ └── ms@0.7.1
│ ├── depd@1.1.0
│ ├── encodeurl@1.0.1
│ ├── escape-html@1.0.3
│ ├── etag@1.7.0
│ ├─┬ finalhandler@0.5.0
│ │ ├── statuses@1.3.0
│ │ └── unpipe@1.0.0
│ ├── fresh@0.3.0
│ ├── merge-descriptors@1.0.1
│ ├── methods@1.1.2
│ ├─┬ on-finished@2.3.0
│ │ └── ee-first@1.1.1
│ ├── parseurl@1.3.1
│ ├── path-to-regexp@0.1.7
│ ├─┬ proxy-addr@1.1.2
│ │ ├── forwarded@0.1.0
│ │ └── ipaddr.js@1.1.1
│ ├── qs@6.2.0
│ ├── range-parser@1.2.0
│ ├─┬ send@0.14.1
│ │ ├── destroy@1.0.4
│ │ ├─┬ http-errors@1.5.0
│ │ │ ├── inherits@2.0.1
│ │ │ └── setprototypeof@1.0.1
│ │ ├── mime@1.3.4
│ │ ├── ms@0.7.1
│ │ └── statuses@1.3.0
│ ├── serve-static@1.11.1
│ ├─┬ type-is@1.6.13
│ │ ├── media-typer@0.3.0
│ │ └─┬ mime-types@2.1.11
│ │   └── mime-db@1.23.0
│ ├── utils-merge@1.0.0
│ └── vary@1.1.0
├── parent-require@1.0.0
├─┬ react@0.14.8
│ ├─┬ envify@3.4.1
│ │ ├─┬ jstransform@11.0.3
│ │ │ ├── base62@1.1.1
│ │ │ ├─┬ commoner@0.10.4
│ │ │ │ ├─┬ commander@2.9.0
│ │ │ │ │ └── graceful-readlink@1.0.1
│ │ │ │ ├─┬ detective@4.3.1
│ │ │ │ │ ├── acorn@1.2.2
│ │ │ │ │ └── defined@1.0.0
│ │ │ │ ├─┬ glob@5.0.15
│ │ │ │ │ ├─┬ inflight@1.0.5
│ │ │ │ │ │ └── wrappy@1.0.2
│ │ │ │ │ ├── inherits@2.0.1
│ │ │ │ │ ├─┬ minimatch@3.0.2
│ │ │ │ │ │ └─┬ brace-expansion@1.1.5
│ │ │ │ │ │   ├── balanced-match@0.4.1
│ │ │ │ │ │   └── concat-map@0.0.1
│ │ │ │ │ ├─┬ once@1.3.3
│ │ │ │ │ │ └── wrappy@1.0.2
│ │ │ │ │ └── path-is-absolute@1.0.0
│ │ │ │ ├── graceful-fs@4.1.4
│ │ │ │ ├── iconv-lite@0.4.13
│ │ │ │ ├─┬ mkdirp@0.5.1
│ │ │ │ │ └── minimist@0.0.8
│ │ │ │ ├── private@0.1.6
│ │ │ │ ├── q@1.4.1
│ │ │ │ └─┬ recast@0.10.43
│ │ │ │   ├── ast-types@0.8.15
│ │ │ │   ├── esprima-fb@15001.1001.0-dev-harmony-fb
│ │ │ │   └── source-map@0.5.6
│ │ │ ├── esprima-fb@15001.1.0-dev-harmony-fb
│ │ │ ├── object-assign@2.1.1
│ │ │ └─┬ source-map@0.4.4
│ │ │   └── amdefine@1.0.0
│ │ └── through@2.3.8
│ └─┬ fbjs@0.6.1
│   ├── core-js@1.2.6
│   ├─┬ loose-envify@1.2.0
│   │ └── js-tokens@1.0.3
│   ├─┬ promise@7.1.1
│   │ └── asap@2.0.4
│   ├── ua-parser-js@0.7.10
│   └── whatwg-fetch@0.9.0
├── react-dom@0.14.8
└─┬ request@2.72.0
  ├── aws-sign2@0.6.0
  ├── aws4@1.4.1
  ├─┬ bl@1.1.2
  │ └─┬ readable-stream@2.0.6
  │   ├── core-util-is@1.0.2
  │   ├── inherits@2.0.1
  │   ├── isarray@1.0.0
  │   ├── process-nextick-args@1.0.7
  │   ├── string_decoder@0.10.31
  │   └── util-deprecate@1.0.2
  ├── caseless@0.11.0
  ├─┬ combined-stream@1.0.5
  │ └── delayed-stream@1.0.0
  ├── extend@3.0.0
  ├── forever-agent@0.6.1
  ├─┬ form-data@1.0.0-rc4
  │ └── async@1.5.2
  ├─┬ har-validator@2.0.6
  │ ├─┬ chalk@1.1.3
  │ │ ├── ansi-styles@2.2.1
  │ │ ├── escape-string-regexp@1.0.5
  │ │ ├─┬ has-ansi@2.0.0
  │ │ │ └── ansi-regex@2.0.0
  │ │ ├─┬ strip-ansi@3.0.1
  │ │ │ └── ansi-regex@2.0.0
  │ │ └── supports-color@2.0.0
  │ ├─┬ commander@2.9.0
  │ │ └── graceful-readlink@1.0.1
  │ ├─┬ is-my-json-valid@2.13.1
  │ │ ├── generate-function@2.0.0
  │ │ ├─┬ generate-object-property@1.2.0
  │ │ │ └── is-property@1.0.2
  │ │ ├── jsonpointer@2.0.0
  │ │ └── xtend@4.0.1
  │ └─┬ pinkie-promise@2.0.1
  │   └── pinkie@2.0.4
  ├─┬ hawk@3.1.3
  │ ├── boom@2.10.1
  │ ├── cryptiles@2.0.5
  │ ├── hoek@2.16.3
  │ └── sntp@1.0.9
  ├─┬ http-signature@1.1.1
  │ ├── assert-plus@0.2.0
  │ ├─┬ jsprim@1.3.0
  │ │ ├── extsprintf@1.0.2
  │ │ ├── json-schema@0.2.2
  │ │ └── verror@1.3.6
  │ └─┬ sshpk@1.8.3
  │   ├── asn1@0.2.3
  │   ├── assert-plus@1.0.0
  │   ├── dashdash@1.14.0
  │   ├── ecc-jsbn@0.1.1
  │   ├── getpass@0.1.6
  │   ├── jodid25519@1.0.2
  │   ├── jsbn@0.1.0
  │   └── tweetnacl@0.13.3
  ├── is-typedarray@1.0.0
  ├── isstream@0.1.2
  ├── json-stringify-safe@5.0.1
  ├─┬ mime-types@2.1.11
  │ └── mime-db@1.23.0
  ├── node-uuid@1.4.7
  ├── oauth-sign@0.8.2
  ├── qs@6.1.0
  ├── stringstream@0.0.5
  ├── tough-cookie@2.2.2
  └── tunnel-agent@0.4.3
</code></pre>

<p>means  there is no other version of react loading as i have seen problem on searching this error.</p>
","1788641","","","","","2016-12-02 09:04:23","TypeError: Cannot read property 'firstChild' of undefined While rendering the react page server side","<javascript><node.js><reactjs>","1","8","","",""
"29424470","1","","","2015-04-03 00:09:56","","1","3843","<p>I am working with the latest version of react.js installed by NPM. I've written this code which works when I put it through jsfiddle, but not when I try it in my own setup. Here is the code I'm working with:</p>

<pre><code>/** @jsx React.DOM */

var React = require('react');

var MyButton = React.createClass({
    render: function(){
        return ( &lt;button onClick={this.props.onClick} &gt;more!&lt;/button&gt; );
    }
});

var Count = React.createClass({

    getInitialState: function(){
        return { counter: 0 };
    },

    increment: function(){ 
        this.setState({ 
            counter: this.state.counter + 1
        });
    },

    render: function(){
        return ( &lt;div&gt;
           &lt;li&gt;{this.state.counter}&lt;/li&gt;
           &lt;MyButton onClick={this.increment} /&gt;
        &lt;/div&gt; );
    }
});

React.render( &lt;Count /&gt;, document.getElementById('container'));
</code></pre>

<p>and then my HTML file looks like this:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=""en""&gt;
&lt;head&gt;
    &lt;meta charset=""UTF-8""&gt;
    &lt;title&gt;what the f&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id=""container""&gt;
    &lt;!-- This element's contents will be replaced with your component. --&gt;
&lt;/div&gt;
&lt;script src=""js/main.js""&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>In my browser I get an error saying:</p>

<pre class=""lang-none prettyprint-override""><code>""TypeError: undefined is not an object (evaluating 'this.__reactAutoBindMap')
(anonymous function)""
</code></pre>

<p>and a warning that says:</p>

<pre class=""lang-none prettyprint-override""><code>""Warning: Something is calling a React component directly. Use a factory or JSX instead. See: http://fb.me/react-legacyfactory""
</code></pre>

<p>----> update:</p>

<p>There are two specific issues I am experiencing after searching for exact problem areas. </p>

<p>A. The <code>React.render()</code> function is not accepting JSX.</p>

<p>In order for anything to display without error I have to use: <code>React.render(React.createElement(Count), document.getElementById('container'));</code></p>

<p>instead of:
<code>React.render( &lt;Count /&gt;, document.getElementById('container'));</code></p>

<p>B. Then I get an error anytime I try to access the objects properties, for example, if in the above code I comment out anything that has <code>this.something</code> in it then the code executes just fine, otherwise it gives the error: </p>

<p><code>TypeError: undefined is not an object (evaluating 'this.__reactAutoBindMap')</code></p>

<p>both of these problems seem like they could be related to a problem with jsx, but I'm not sure why jsx would work in some ways but not others. I am able to return <code>&lt;h1&gt;hello!&lt;/h1&gt;</code> without incident, but other aspects of jsx, in render for example, do not work at all... getting desperate here... is this a bug or am I doing something wrong?</p>

<p>---> update</p>

<p>here is my gulp file:</p>

<pre><code>var connect = require('gulp-connect');
var gulp = require('gulp');
var source = require('vinyl-source-stream'); // Used to stream bundle for further handling
var browserify = require('browserify');
var watchify = require('watchify');
var reactify = require('reactify'); 
var concat = require('gulp-concat');

gulp.task('browserify', function() {
    var bundler = browserify({
        entries: ['app_root/js/main.js'], 
        transform: [reactify], // convert JSX to javascript
        debug: true,
        cache: {}, packageCache: {}, fullPaths: true 
    });
    var watcher  = watchify(bundler);

    return watcher
    .on('update', function () { 
        var updateStart = Date.now();
        console.log('Updating!');
        watcher.bundle() // Create new bundle that uses the cache for high performance
        .pipe(source('app_root/js/main.js'))
        .pipe(gulp.dest('dist/js'));
        console.log('Updated!', (Date.now() - updateStart) + 'ms');
    })
    .bundle()
    .pipe(source('app_root/js/main.js'))
    .pipe(gulp.dest('dist/js'));
});
// concat app to directory being served
gulp.task('conkat', function(){
    gulp.src('/src/dist/app_root/js/main.js')
      .pipe(concat('main.js'))
      .pipe(gulp.dest('dist/js'));
});

// copy index.html to served directory
gulp.task('copy', function(){
    gulp.src('app_root/index.html')
      .pipe(gulp.dest('dist'));
          gulp.src('/src/dist/app_root/js/main.js')
});

// watch app directory
gulp.task('watch', function(){
    gulp.watch('app_root/**/*.*', ['reload']);
});

// serve the dist directory
gulp.task('serveDist', function(){
    connect.server({
        root: 'dist'
    });
});

// run on change
gulp.task('reload', [ 'browserify','conkat', 'copy' ]);

// run all
gulp.task('default', [ 'browserify', 'conkat','copy', 'serveDist', 'watch' ]);
</code></pre>

<p>and heres my package.son:</p>

<pre><code>{
    ""private"": true,
    ""devDependencies"":
    {
        ""gulp"":""^3.8.8"",
        ""browserify"":""^9.0.6"",
        ""gulp-concat"":""^2.4.1"",
        ""react"":""^0.13.1"",
        ""reactify"":""^0.14.0"",
        ""watchify"":""^3.1.0"",
        ""vinyl-source-stream"":""^1.1.0"",
        ""react-router"":""^0.13.2"",
        ""gulp-connect"":""^2.2.0""
    }
}
</code></pre>
","3901400","","1434116","","2016-01-30 10:25:38","2016-01-30 10:25:38","TypeError: undefined is not an object (evaluating 'this.__reactAutoBindMap')","<javascript><node.js><reactjs><react-jsx>","2","6","","",""
"46308989","1","","","2017-09-19 20:10:05","","0","127","<p>I am trying to design an appointment schedule layed out by week in my react on rails application. It should look like this when done:</p>

<p><a href=""https://i.stack.imgur.com/q5mRu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/q5mRu.png"" alt=""enter image description here""></a></p>

<ul>
<li>Colored boxes will be bootstrap classes depending on the status of the appointment. They should be links to the individual appointment show pages (I know I don't have this done yet, it's not my primary concern at the moment).</li>
</ul>

<p>Here is the data structure I'm working with in JSON:</p>

<pre><code>{
  ""clients"": [
    {
      ""id"": 2,
      ""name"": ""Oscar"",
      ""appointments"": [
        {
          ""id"": 2,
          ""status"": ""Not Done"",
          ""report"": ""Not Started"",
          ""start"": ""2017-09-24T12:06:19.000Z"",
          ""finish"": ""2017-09-24T12:36:19.000Z"",
          ""scheduled"": ""2017-09-24T12:09:19.000Z"",
          ""duration"": null
        },
        {
          ""id"": 3,
          ""status"": ""Not Done"",
          ""report"": ""Not Started"",
          ""start"": ""2017-09-18T13:07:56.000Z"",
          ""finish"": ""2017-09-18T13:37:56.000Z"",
          ""scheduled"": ""2017-09-18T13:10:56.000Z"",
          ""duration"": null
        }
      ],
      ""url"": ""http:\/\/localhost:3000\/clients\/2.json""
    },
    {
      ""id"": 3,
      ""name"": ""Molly"",
      ""appointments"": [
        {
          ""id"": 4,
          ""status"": ""Not Done"",
          ""report"": ""Not Started"",
          ""start"": ""2017-09-21T11:09:31.000Z"",
          ""finish"": ""2017-09-21T11:39:31.000Z"",
          ""scheduled"": ""2017-09-21T11:12:31.000Z"",
          ""duration"": null
        }
      ],
      ""url"": ""http:\/\/localhost:3000\/clients\/3.json""
    }]}
</code></pre>

<p>Appointments.js.coffee</p>

<pre><code>@Appointments = React.createClass

getInitialState: -&gt;
    clients: @props.clients

  getDefaultProps: -&gt;
    clients: []

  render: -&gt;
    React.DOM.div
      className: 'client-appts'
      React.DOM.h2
        className: 'title'
        'Clients Title'
      React.DOM.table
          className: 'table table-bordered'
          React.DOM.thead null,
            React.DOM.tr null,
              React.DOM.th null, 'Client'
              React.DOM.th null, 'col 2'
              React.DOM.th null, 'col 3'
          React.DOM.tbody null,
            for client in @state.Clients
              React.createElement Client, key: client.id, client: client
</code></pre>

<p>This is my client.js.coffee</p>

<pre><code>@Client= React.createClass
  render: -&gt;
      React.DOM.tr null,
        React.DOM.td null, @props.client.name
        for appointment in @props.client.appointments
          React.createElement Appointment, key: appointment.id, appointment: appointment
</code></pre>

<p>This is my appointment.js.coffee</p>

<pre><code>@Appointment = React.createClass
    render: -&gt;
      React.DOM.td null,
        React.DOM.p null, @props.appointment.status
        React.DOM.p null, @props.appointment.report
</code></pre>

<p>I know rails OK, but am new to react. How do I design the structure so that the appointments show up only when they're supposed to. Once I have that figured out I need to figure out how to click through pages for different weeks. How do I design the react components? Anyone see another good example on S/O or G/H? </p>
","8016360","","","","","2017-09-19 20:10:05","Designing a weekly calendar with react on rails","<ruby-on-rails><twitter-bootstrap><reactjs><coffeescript>","0","2","","",""
"37104135","1","","","2016-05-08 19:49:27","","1","354","<p>Okay, my Frankenstein monster has gotten out of control and I only have so much hair left to pull out, so any help here is appreciated.</p>

<p>I'm trying to get a very basic app setup working with React, React-Router, React-Relay, and Typescript. I actually have it all functioning, but it's doing so while throwing some nasty Typescript errors that I'd like to correct.</p>

<p>So, the basic react-router + react-relay setup mimics the official react-relay approach found here: <a href=""https://medium.com/@cpojer/relay-and-routing-36b5439bad9"" rel=""nofollow"">https://medium.com/@cpojer/relay-and-routing-36b5439bad9</a></p>

<p>Unfortunately, when translating this into TypeScript and using the imported type-definitions for react-relay via typings (and, I would <em>very</em> much not have to modify the imported type definitions); <code>Route</code> has defined props and TypeScript objects to passing a <code>home</code> and <code>queries</code> prop to the <code>Route</code> component.</p>

<p>Apologies for just dumping my code in here, but you'll need it to fully appreciate the problem.</p>

<pre><code>import * as React from 'react';
import * as ReactDOM from 'react-dom';
import { Router, Route, browserHistory } from 'react-router';
import * as Relay from 'react-relay';
import MainApp from './components/MainApp';

const createRelayContainer: any = function createRelayContainer (Component: new() =&gt; React.Component&lt;any, any&gt;, props: any): JSX.Element {
  if (Relay.isContainer(Component)) {
    // construct the RelayQueryConfig from the route and the router props
    const { name, queries } = props.route;
    const { params } = props;

    return (
      &lt;Relay.RootContainer
        Component={Component}
        renderFetched={(data: any) : any =&gt; &lt;Component {...props} {...data} /&gt; }
        route={{name, params, queries}}
       /&gt;
    );
  }
  return &lt;Component {...props} /&gt;;
};

const homeQueries: any = {
  viewer: (): Relay.QLExpression =&gt; Relay.QL`
    query {
      viewer
    }`,
};

ReactDOM.render(
  &lt;Router
    history={ browserHistory }
    createElement={createRelayContainer}&gt;
    &lt;Route&gt;
      &lt;Route
        name='home'
        path='/'
        component={MainApp}
        queries={homeQueries}
      /&gt;
    &lt;/Route&gt;
  &lt;/Router&gt;,
  document.getElementById('root'));
;
</code></pre>

<p>As I said, this actually functions as expected but the rub is that the react-router interface for <code>Route</code> doesn't have <code>name</code> or <code>queries</code> so TypeScript throws errors.</p>

<p>I'm sure there are a couple of different approaches to solving this, but I have no clue what would be best practice in this scenario.</p>

<p>(Some basic version info may be helpful: TypeScript 1.8.10, React 15, React-Router 2.4, React-Relay 0.8)</p>
","1162945","","","","","2016-05-10 01:31:37","Making a Higher Order Component to inter-operate react-relay and react-router with TypeScript","<javascript><reactjs><typescript><react-router><relay>","1","0","","",""
"37306197","1","39446391","","2016-05-18 17:14:39","","10","2999","<p>I'm using Preact as my View framework <em>(can <strong>NOT</strong> use React due to the Facebook IP problems)</em>.  I needed to use React Router for the location routing because it has more flexibility than the Preact Router that the same team built.</p>

<p>I managed to get React Router to accept Preact in place of React, however, I can't get it to match locations.  I'm not sure if it's a compatibility problem, or a configuration problem.  I've tried using just one pair of routes ( App and Account ) and it still doesn't work with that simplified setup.</p>

<p><strong>Q:</strong> Does anyone see if I'm doing something wrong here?</p>

<p>The error I get is: <code>Location ""/account/12345/"" did not match any routes</code></p>

<p><strong>main.js</strong></p>

<pre><code>import { h, render } from 'preact';
import { Router, browserHistory } from 'react-router';
import { Provider } from 'react-redux';

import createStore from './createStore';
import createRoutes from './createRoutes';

process.env.DEBUG &amp;&amp; console.log('Hello, developer!');

const history = browserHistory;
const store = createStore( history );
const routes = createRoutes( store );

render((
    &lt;Provider store={ store } key=""redux-provider""&gt;
        &lt;Router history={ history } createElement={ h } routes={ routes } /&gt;
    &lt;/Provider&gt;
), document.body );
</code></pre>

<p><strong>createRoutes.js</strong></p>

<pre><code>import { h } from 'preact';
import { IndexRoute, Route } from 'react-router';

// App Component
import App from './components/app';

// Sub Components
import Account from './components/account';
import Conversation from './components/conversation';
import Dashboard from './components/dashboard';

// Error Components
import BadAccount from './components/bad-account';
import NotFound from './components/not-found';

// Routes
export default ()=&gt; (
    &lt;Route path=""/"" component={App}&gt;
        {/* Get URL parameter */}
        &lt;Route path=""account/:accountID"" component={Account}&gt;
            {/* Index Route */}
            &lt;IndexRoute component={Dashboard} /&gt;
            {/* Sub Routes ( Alphabetical Please ) */}
            &lt;Route path=""chat"" component={Conversation} /&gt;
            {/* Catch-All Route */}
            &lt;Route path=""*"" component={NotFound} /&gt;
        &lt;/Route&gt;
        {/* Handle Invalid URIs */}
        &lt;Route path=""*"" component={BadAccount} /&gt;
    &lt;/Route&gt;
);
</code></pre>

<p><strong>createStore.js</strong></p>



<pre><code>import { applyMiddleware, combineReducers, compose, createStore } from 'redux';
import thunk from 'redux-thunk';
import { routerMiddleware } from 'react-router-redux';

import messages from './resources/messages/reducer';
import conversation from './resources/conversation/reducer';
import layout from './resources/layout/reducer';
import profile from './resources/profile/reducer';
import contract from './resources/contract/reducer';

/*const { devToolsExtension } = window;*/

export default history =&gt; {

    // Sync dispatched route actions to the history
    const reduxRouterMiddleware = routerMiddleware( history );

    // Create single reducer from all modules
    const rootReducer = combineReducers({
        messages,
        conversation,
        layout,
        profile,
        contract
    });

    // List redux middleware to inject
    const middleware = [
        thunk,
        reduxRouterMiddleware
    ];

    // Compose the createStore function
    const createComposedStore = compose(
        applyMiddleware( ...middleware )/*, // Figure this out...
        ( process.env.DEBUG &amp;&amp; devToolsExtension ) ? devToolsExtension() : f =&gt; f*/
    )( createStore );

    // Create the store
    const store = createComposedStore( rootReducer );

    // Hook up Redux Routing middleware
    // reduxRouterMiddleware.listenForReplays(store);

    // Return store
    return store;
};
</code></pre>


","1677925","","","","","2017-10-05 13:12:47","How to use React Router with Preact","<javascript><reactjs><react-router><preact>","4","1","1","",""
"29320363","1","","","2015-03-28 17:36:00","","9","7596","<p>For the last week now I've been completely at a loss for how to set up server side rendering with React. This is a new project but it's an express server and I'm attempting to render just a super simple hello world react app which uses react-router-component..</p>

<p>I think the best way for me to get some help is to share the code I have right now and I'm hoping somebody can please tell me what I'm doing wrong! I've followed tutorial after tutorial and tried all sorts of different things but I keep getting error after error!</p>

<p>This is my app.js for the express server, the relevant code is the * route if you scroll down a bit:</p>

<pre><code>require('node-jsx').install({extension: '.jsx'});
var React = require('react');

var App = require('./src/App.jsx');

var request = require('superagent');
var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');
var url = require('url');

//Database and Passport requires
var mongoose = require('mongoose');
var passport = require('passport');
var LocalStrategy = require('passport-local');

// var api = require('./routes/api');

var app = express();

app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'jade');

// uncomment after placing your favicon in /public
//app.use(favicon(__dirname + '/public/favicon.ico'));
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(require('express-session')({
  secret: 'secret',
  resave: false,
  saveUninitialized: false
}));
app.use(passport.initialize());
app.use(passport.session());
app.use(express.static(path.join(__dirname, 'public')));

//passport config
var Account = require('./models/account');
passport.use(new LocalStrategy(Account.authenticate()));
passport.serializeUser(Account.serializeUser());
passport.deserializeUser(Account.deserializeUser());

//mongoose
mongoose.connect('mongodb://localhost/database');

//THIS is the relevant section that renders React and sends to client
app.get('*', function(req, res, next){
  var path = url.parse(req.url).pathname;
  React.renderToString(
    React.createFactory(App({path : path})),
    function(err, markup) {
      res.send('&lt;!DOCTYPE html&gt;' + markup);
    }
  );
});


// catch 404 and forward to error handler
app.use(function(req, res, next) {
  var err = new Error('Not Found');
  err.status = 404;
  next(err);
});

// error handlers

// development error handler
// will print stacktrace
if (app.get('env') === 'development') {
  app.use(function(err, req, res, next) {
    res.status(err.status || 500);
    res.render('error', {
      message: err.message,
      error: err
    });
  });
}

// production error handler
// no stacktraces leaked to user
app.use(function(err, req, res, next) {
  res.status(err.status || 500);
  res.render('error', {
    message: err.message,
    error: {}
  });
});


module.exports = app;
</code></pre>

<p>the App.jsx file being required in the app.js file:</p>

<pre><code>/**
 * @jsx React.DOM
 */

var React = require('react');
var Router = require('react-router-component');
var Locations = Router.Locations;
var Location = Router.Location;
var Index = require('./components/Index.jsx');


var App = React.createClass({
    render: function() {
        return (
              &lt;html&gt;
                &lt;head lang=""en""&gt;
                    &lt;meta charSet=""UTF-8""/&gt;
                    &lt;title&gt;React App&lt;/title&gt;
                &lt;/head&gt;
                &lt;body&gt;
                    &lt;div id=""main""&gt;
                        &lt;Locations path={this.props.path}&gt;
                            &lt;Location path=""/"" handler={Index} /&gt;
                        &lt;/Locations&gt;
                    &lt;/div&gt;
                    &lt;script type=""text/javascript"" src=""./javascripts/bundle.js""&gt;&lt;/script&gt;
                &lt;/body&gt;
               &lt;/html&gt;
        )
    }
});

module.exports = App;
</code></pre>

<p>and the Index.jsx file required in the App.jsx:</p>

<pre><code>var React = require('react');

 var Index = React.createClass({
    render: function() {
        return (
        &lt;div className=""test""&gt;
            &lt;span&gt;Whats going on&lt;/span&gt;
        &lt;/div&gt;
        )
    }
 });

 module.exports = Index; 
</code></pre>

<p>I'm only showing you my most recent attempt at getting this to work here but rest assured I've tried all different methods to render a react component, such as renderComponentToString, I've also tried React.renderToString(React.createElement(App)) etc etc.. </p>

<p>But now I keep getting this error ""Cannot read property '__reactAutoBindMap' of undefined"" </p>

<p>Please Help!!! :) Thanks</p>
","4103072","","","","","2015-06-09 00:57:39","Cannot read property '__reactAutoBindMap' of undefined","<javascript><node.js><express><reactjs><reactjs-flux>","2","3","1","",""
"46084088","1","","","2017-09-06 20:47:20","","0","153","<p>So i have MDC finially working with React and using the Google docs I have worked out that I some how need reactjs to run the following JS when a user clicks on an input field - basiclly the label should move above the input so the user can type - like my pure HTML / JS demo <a href=""https://codepen.io/russellharrower/pen/oeReEN"" rel=""nofollow noreferrer"">https://codepen.io/russellharrower/pen/oeReEN</a></p>

<p>However with reactjs I noticed I can't put the code below in the render area, so i am wondering where would I place it and how?</p>

<pre><code>(function() {
        var tfs = document.querySelectorAll(
          '.mdc-textfield:not([data-demo-no-auto-js])'
        );
        for (var i = 0, tf; tf = tfs[i]; i++) {
          mdc.textfield.MDCTextfield.attachTo(tf);
        }
      })();
</code></pre>

<p>full reactjs code <strong>updated</strong> </p>

<pre><code>import React, { Component } from 'react';
import './App.css';
import * as mdc from 'material-components-web';

class App extends Component {
    hrefjs(l){
            var script   = document.createElement(""script"");
            script.type  = ""text/javascript"";
            script.src   = l;    // use this for linked script
            document.body.appendChild(script);
    }


    componentWillMount() {
            this.hrefjs(""//unpkg.com/material-components-web@latest/dist/material-components-web.min.js"");
            var texst =""(function(){var tfs = document.querySelectorAll('.mdc-textfield:not([data-demo-no-auto-js])'); for (var i = 0, tf; tf = tfs[i]; i++) {mdc.textfield.MDCTextfield.attachTo(tf); mdc.autoInit();}})();""
            const script = document.createElement(""script"");
            script.text=texst;
            document.body.appendChild(script);
    };
  render() {
    return (
      &lt;div className=""App""&gt;
        &lt;header className=""mdc-toolbar mdc-toolbar--fixed mdc-toolbar--waterfall""&gt;
          &lt;div className=""mdc-toolbar__row""&gt;
            &lt;section className=""mdc-toolbar__section mdc-toolbar__section--align-start""&gt;
              &lt;span className=""mdc-toolbar__title""&gt;Title&lt;/span&gt;
            &lt;/section&gt;
          &lt;/div&gt;
        &lt;/header&gt;
        &lt;main className=""demo-main mdc-toolbar-fixed-adjust""&gt;

            &lt;div className=""mdc-form-field""&gt;
              &lt;div className=""mdc-checkbox""&gt;
                &lt;input type=""checkbox""
                       id=""my-checkbox""
                       className=""mdc-checkbox__native-control""/&gt;
                &lt;div className=""mdc-checkbox__background""&gt;
                  &lt;svg className=""mdc-checkbox__checkmark""
                       viewBox=""0 0 24 24""&gt;
                    &lt;path className=""mdc-checkbox__checkmark__path""
                          fill=""none""
                          stroke=""white""
                          d=""M1.73,12.91 8.1,19.28 22.79,4.59""/&gt;
                  &lt;/svg&gt;
                  &lt;div className=""mdc-checkbox__mixedmark""&gt;&lt;/div&gt;
                &lt;/div&gt;
              &lt;/div&gt;
              &lt;label htmlhtmlhtmlFor=""my-checkbox"" id=""my-checkbox-label""&gt;This is my checkbox&lt;/label&gt;
            &lt;/div&gt;
            &lt;section className=""example""&gt;
                 &lt;div className=""mdc-textfield""&gt;
                      &lt;input type=""text"" id=""username"" className=""mdc-textfield__input"" aria-controls=""username-helptext""/&gt;
                      &lt;label htmlFor=""username"" className=""mdc-textfield__label""&gt;Username&lt;/label&gt;
                    &lt;/div&gt;
                    &lt;p id=""username-helptext"" className=""mdc-textfield-helptext"" aria-hidden=""true""&gt;
                      This will be displayed on your public profile
                    &lt;/p&gt;
              &lt;/section&gt;
        &lt;/main&gt;
        &lt;script&gt;
        mdc.toolbar.MDCToolbar.attachTo(document.querySelector('.mdc-toolbar'));
        //mdc.textfield.MDCToolbar.attachTo(document.querySelector('.mdc-textfield'));
        //mdc.autoInit();
        &lt;/script&gt;

        &lt;/div&gt;
    );
  }
}

export default App;
</code></pre>

<p><strong>Latest update</strong>
I have added these two functions in however for some reason the (function(){})(); script while it will do an alert etc. it will not allow the text label to move like the codepen.io demo</p>

<pre><code>hrefjs(l){
        var script   = document.createElement(""script"");
        script.type  = ""text/javascript"";
        script.src   = l;    // use this for linked script
        document.body.appendChild(script);
}


componentWillMount() {
        this.hrefjs(""//unpkg.com/material-components-web@latest/dist/material-components-web.min.js"");
        var texst =""(function(){var tfs = document.querySelectorAll('.mdc-textfield:not([data-demo-no-auto-js])'); for (var i = 0, tf; tf = tfs[i]; i++) {mdc.textfield.MDCTextfield.attachTo(tf); mdc.autoInit();}})();""
        const script = document.createElement(""script"");
        script.text=texst;
        document.body.appendChild(script);
};
</code></pre>
","275414","","275414","","2017-09-06 21:59:07","2017-10-11 08:55:10","Material Design Component & reactjs input fields","<javascript><reactjs><material-components>","1","3","","",""
"46381558","1","","","2017-09-23 16:03:45","","1","183","<p>I'm now developing webview for facebook messenger with PreactJS. But now problem is I didn't have any solution to include/implement adding Messenger Extensions in preactJS. I did as following but <code>chooseTownship</code> action not working totally. Please help me how to solve it.</p>

<pre><code>chooseTownship = (e) =&gt; {
    window.extAsyncInit = function() {
        MessengerExtensions.getUserID(function success(uids) {
            var psid = uids.psid;
            var theUrl = ""/webhooks/webview?fbUserId="" + psid +  ""&amp;townshipId="" + e.target.name + ""&amp;townshipName="" + e.target.value;
            fetch(url).then((response) =&gt; {
                if (response.status === 200) {
                    MessengerExtensions.requestCloseBrowser(function success() {

                    }, function error(err) {

                    });
                }
            });
        }, function error(err, errorMessage) {
            console.log(errorMessage);
        });
    }
}

componentDidMount() {
    const that = this;
    const url = '/api/townships';

    fetch(url).then((response) =&gt; {
        if (response.status &gt;= 400) {
            throw new Error('Bad response from server');
        }
        return response.json();
    }).then((data) =&gt; {
        that.setState({
            townships: data.townships
        });
    });

    (function(d, s, id){
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) {return;}
        js = d.createElement(s); js.id = id;
        js.src = ""//connect.facebook.com/en_US/messenger.Extensions.js"";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'Messenger'));
}
</code></pre>
","2555911","","","","","2017-09-23 16:03:45","how to include Facebook Messenger Webview Extension in PreactJS","<reactjs><facebook-messenger><preact>","0","0","1","",""
"46159615","1","","","2017-09-11 15:48:27","","-1","68","<p>I am new to UI development, trying to split up my components in different files.
This is one of the components that I need to use in some other file.</p>

<pre><code>import React, { Component } from 'react';
import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';
import injectTapEventPlugin from 'react-tap-event-plugin';

import {AppBar} from 'material-ui/AppBar';


//injectTapEventPlugin();

class LoginPage extends Component {

  render() {
    return (
      &lt;div&gt;This is from the login page&lt;/div&gt;
    );
  }
}
export default LoginPage;
</code></pre>

<p>This is the main page where I am trying to use the above component.
It gives me the following error in the browser</p>

<blockquote>
  <p>React.createElement: type is invalid -- expected a string (for built-in
  components) or a class/function (for composite components) but got:
  undefined. You likely forgot to export your component from the file
  it's defined in</p>
</blockquote>

<pre><code>import React, { Component } from 'react';
import logo from './logo.svg';
import './App.css';
import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';
import injectTapEventPlugin from 'react-tap-event-plugin';
import LoginPage from './LoginPage.js'

import {RaisedButton, Dialog, FlatButton} from 'material-ui';


injectTapEventPlugin();

//var LoginPage = require('./pages/LoginPage.js');
//class component
class App extends Component {

  render() {
    return (
      &lt;MuiThemeProvider&gt;
      &lt;div&gt;
      This is my page
      &lt;LoginPage /&gt;
      &lt;/div&gt;
      &lt;/MuiThemeProvider&gt;
    );
  }
}
export default App;
</code></pre>

<p>I saw similar error on SO, but they all say that there is some problem in exporting the components, I cant see the same problem as I am exporting the LoginPage component properly and then importing it in the App.js file as well.</p>

<p>Can someone please help here?</p>
","5873698","","15168","","2017-09-11 18:16:15","2017-09-11 18:16:15","reactjs reusable component throw error","<reactjs><material-ui>","2","5","","",""
"46366818","1","","","2017-09-22 14:12:32","","0","285","<p>react: ^15.4.2,
react-select: ^1.0.0-rc.10,</p>

<p><strong>Example.tsx</strong>   </p>

<pre><code> import * as React from 'react';
import Select from 'react-select';
// Be sure to include styles at some point, probably during your bootstrapping
import 'react-select/dist/react-select.css';

var Select = require('react-select');
var options = [
  { value: 'one', label: 'One' },
  { value: 'two', label: 'Two' }
];

function logChange(val) {
  console.log(""Selected: "" + JSON.stringify(val));
}

export class Example extends React.Component&lt;any, any&gt; {

  render() {

    return (
        &lt;div&gt;
          &lt;Select name=""form-field-name"" value=""one"" options={options} onChange={logChange}/&gt;
        &lt;/div&gt;
    );
  }
}
</code></pre>

<p>No errors reported at compile time.</p>

<p>Get an error message when attempting to render it</p>

<blockquote>
  <p>React.createElement: type is invalid -- expected a string (for
  built-in components) or a class/function (for composite components)
  but got: object. Check the render method of <code>Example</code>.
      in Example</p>
</blockquote>

<p>Being this is my first react project I have no idea how to debug this.  I do not see anything wrong with this code.</p>

<p>Here is my render out of main.tsx</p>

<pre><code>    (() =&gt; {

    const container = document.querySelector('#container');
    render( &lt;Example /&gt;, container);
})();
</code></pre>
","1730289","","","","","2017-09-22 17:30:14","react-select component, not rendering","<reactjs><react-select>","2","0","","",""
"29586411","1","29587553","","2015-04-12 05:49:14","","14","12176","<p>I'm working on a map-based app that uses Google Map API to create markers and its info window in React.js. The <code>infowindow.setContent()</code> only accepts either a <code>String</code> or <code>HTML</code>. It's impossible for me to pass in <code>String</code> as I have a <code>button</code> that links to a specific method in another react component (something like: <code>_this.props.addList(place)</code> ). Thus I must fill the argument as HTML DOM as the following lines of code:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var div = document.createElement('div');
var title = document.createElement('h4');
title.innerHTML = place.name;

var btn = document.createElement('button');
btn.className = 'btn btn-danger btn-block';
btn.appendChild(document.createTextNode('I want to go here !!'));

div.appendChild(title).appendChild(btn);

google.maps.event.addListener(marker, 'click', function() {

  infowindow.setContent( div );
  infowindow.open(map, this);
});

btn.addEventListener('click', function() {
  _this.props.addList(place);
});</code></pre>
</div>
</div>
</p>

<p>The codes work for me but I don't wanna create elements one by one. I've also tried to pass the argument with a React component but it seems not working:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>createMarker: function() {
  
  /** Some other lines of code */

  var _this = this;

  google.maps.event.addListener(marker, 'click', function() {

    infowindow.setContent( _this._renderInfoWindow(place) );
    infowindow.open(map, _this);

  });

},

// my infowindow rendering method
_renderInfoWindow: function(place) {
  return(
    &lt;div&gt;
      &lt;h4&gt;{place.name}&lt;/h4&gt;
      &lt;p&gt;{place.cost}&lt;/p&gt;
      &lt;button className=""btn btn-danger btn-block"" onClick={this.props.addList.bind(this, place)}&gt;I want to go here !! &lt;/button&gt;
    &lt;/div&gt;
  )
},</code></pre>
</div>
</div>
</p>

<p>so is there another way to at least convert a react component to HTML so that I don't have to write <code>document.createElement()</code> one by one?</p>

<p>Thanks</p>
","3956497","","3956497","","2015-06-10 00:09:30","2018-07-13 06:55:03","React.js: Is it possible to convert a react component to HTML DOM's?","<javascript><reactjs>","4","0","3","",""
"45953324","1","45953786","","2017-08-30 06:23:41","","0","84","<p>I have facing this problem in a react project. I am using rc-upload package for uploading files in react. code is as below:</p>

<pre><code>import React, { Component } from 'react';
import logo from './logo.svg';
import './App.css';
const Upload = require('rc-upload');

class App extends Component {
 constructor(props) {
 super(props);
 this.uploaderProps = {
    action: '/upload/',
    data: { user_id: 1 },
    headers: {
      Authorization: `Bearer abcdef`,
    },
    multiple: false,
    beforeUpload(file) {
      console.log(file);
    },
    onStart: (file) =&gt; {
      // console.log('onStart', file.name);
    },
    onSuccess(result) {
      console.log(result);
    },
    onProgress(step, file) {
      console.log('Progress: ', Math.round(step.percent), file.name);
    },
    onError(err) {
      // Show response data with close button in modal body
      console.log('onError', err);
    }
  };
 }
 render() {

  return (
   &lt;div className=""App""&gt;
    &lt;div className=""App-header""&gt;
      &lt;img src={logo} className=""App-logo"" alt=""logo"" /&gt;
      &lt;h2&gt;Welcome to React&lt;/h2&gt;
    &lt;/div&gt;
    &lt;p className=""App-intro""&gt;
      To get started, edit &lt;code&gt;src/App.js&lt;/code&gt; and save to reload.
    &lt;/p&gt;
    &lt;Upload {...this.uploaderProps}&gt;Choose File&lt;/Upload&gt;
   &lt;/div&gt;
  );
 }
}
export default App;
</code></pre>

<p>This code is working in react@15.5.4 and react-scripts@0.9.5 and the dev dependencies of react or react-scripts. I created react app through create-react-app few months before. And now I created new app with create-react-app which installed with react@15.6.1 and react-scripts@1.0.12.</p>

<p>So when I run the above code in new project than it is showing this error.</p>

<blockquote>
  <p>React.createElement: type is invalid -- expected a string (for
  built-in components) or a class/function (for composite components)
  but got: object</p>
</blockquote>

<p>I figure out that it is coming from below code:</p>

<pre><code>&lt;Upload {...this.uploaderProps}&gt;Choose File&lt;/Upload&gt;
</code></pre>

<p>And it is working in my previous version of react@15.5.4 but not in react@15.6.1</p>

<p>How to resolve this error? Is this a version error or any other dependency error?</p>
","4625045","","","","","2017-08-30 06:49:47","React createElement error ""type is invalid -- expected a string got object""","<reactjs><npm><node-modules><create-react-app>","1","0","","",""
"47469323","1","","","2017-11-24 08:38:48","","0","20","<p>I am learning react.js, I am following the book ""React Up and Running"",</p>

<p>I have done one example in react.js 
Done rendering using JSX,</p>

<p>I have  html Form which accepts name an profession as input's,
the data entered by user is rendered in table,
the table rendering code is done in React's JSX.</p>

<p>the code is as follows,</p>

<pre><code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;React Template&lt;/title&gt;
        &lt;link rel=""stylesheet"" href=""https://www.w3schools.com/w3css/4/w3.css""&gt;         
    &lt;/head&gt;
    &lt;body&gt;
        &lt;!-- Body Content --&gt;

        &lt;div class=""w3-container"" style=""margin-top:3%""&gt;
            &lt;div class=""w3-row""&gt;
                &lt;div class=""w3-col m2""&gt;&amp;nbsp;&lt;/div&gt;
                &lt;div class=""w3-col m8""&gt;
                    &lt;form class=""w3-container""&gt;
                        &lt;label&gt;Name&lt;/label&gt;
                        &lt;input type=""text"" class=""w3-input"" id=""employeeName"" /&gt;

                        &lt;label&gt;Profession&lt;/label&gt;
                        &lt;input type=""text"" class=""w3-input"" id=""profession"" /&gt;
                        &lt;br/&gt;
                        &lt;button class=""w3-btn w3-blue""
                                type=""button"" 
                                id=""enterBtn""&gt;Enter&lt;/button&gt;
                    &lt;/form&gt;
                    &lt;br/&gt;
                    &lt;div id=""employee-container""&gt;&lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;

        &lt;!-- The core React library --&gt;
        &lt;script src=""/node_modules/react/dist/react.js""&gt;&lt;/script&gt;
        &lt;!-- The ReactDOM Library --&gt;
        &lt;script src=""/node_modules/react-dom/dist/react-dom.js""&gt;&lt;/script&gt;
        &lt;!-- JSX Interpreter --&gt;
        &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.34/browser.js""&gt;&lt;/script&gt;
        &lt;script type=""text/babel""&gt;
            (function(){
                'use strict'
                // custom javaScript content

                var employeeList = [];
                employeeList.push({
                    ""name"" : ""Stevens Kimberly"",
                    ""profession"" : ""Lab Technician""
                });             

                var employeeTableComponent = React.createClass({
                    propType : {
                        initialValue : React.PropTypes.array.isRequired
                    },
                    getDefaultProps : function(){
                        return {
                            ""list"" : employeeList
                        }
                    },
                    getInitialState : function(){
                        return {
                            ""list"" : this.props.initialValue
                        }
                    },
                    componentWillRecieveProps : function(newProps){
                        this.setState({
                            ""list"" : newProps.initialValue
                        });
                    },
                    render : function(){
                        var myList = this.state.list;
                        var rowList = [];
                        for(var x = 0; x &lt; myList.length; x++){
                            rowList.push(
                                &lt;tr&gt;
                                    &lt;td&gt;{myList[x]['name']}&lt;/td&gt;
                                    &lt;td&gt;{myList[x]['profession']}&lt;/td&gt;
                                &lt;/tr&gt;
                            );  
                        }

                        return (
                            &lt;table className='w3-table w3-table-all'&gt;
                                &lt;tr&gt;
                                    &lt;th&gt;Name&lt;/th&gt;
                                    &lt;th&gt;Profession&lt;/th&gt; 
                                &lt;/tr&gt;
                                {rowList}                               
                            &lt;/table&gt;    
                        );                                              
                    }                   
                });

                var employeeTableElement = React.createElement(employeeTableComponent,{
                    ""initialValue"" : employeeList
                });

                var myContainer = document.getElementById(""employee-container"");
                var employeeElementRef = ReactDOM.render(employeeTableElement,myContainer);                                 

                document.getElementById(""enterBtn"").addEventListener(""click"",function(evt){
                    employeeList.push({
                        ""name"" : document.getElementById(""employeeName"").value,
                        ""profession"" : document.getElementById(""profession"").value
                    });

                    document.getElementById(""employeeName"").value = """";
                    document.getElementById(""profession"").value = """";

                    employeeElementRef.componentWillRecieveProps({
                        ""initialValue"" : employeeList
                    });
                });             

            })();   
        &lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>In the above code you can see that I have dynamic table which I render in JSX,
I create seperate array for rows which is as follows,</p>

<pre><code>var rowList = [];
 for(var x = 0; x &lt; myList.length; x++){
        rowList.push(
                &lt;tr&gt;
                    &lt;td&gt;{myList[x]['name']}&lt;/td&gt;
                    &lt;td&gt;{myList[x]['profession']}&lt;/td&gt;
                &lt;/tr&gt;
            );  
 }
</code></pre>

<p>And then I add the row Array in Table JSX as follows,</p>

<pre><code>return (
                            &lt;table className='w3-table w3-table-all'&gt;
                                &lt;tr&gt;
                                    &lt;th&gt;Name&lt;/th&gt;
                                    &lt;th&gt;Profession&lt;/th&gt; 
                                &lt;/tr&gt;
                                {rowList}                               
                            &lt;/table&gt;    
                        );
</code></pre>

<p>Is there any better way to do it ?</p>
","861015","","","","","2017-11-24 08:38:48","How do I do rendering in react JSX effectively?","<javascript><reactjs>","0","0","","2017-11-24 08:40:13",""
"29463749","1","","","2015-04-06 00:15:16","","3","388","<p>I am aware of native <a href=""https://github.com/magus/react-native-facebook-login"" rel=""nofollow""><code>ios</code></a> solution. I am wondering if it is possible to use <a href=""https://developers.facebook.com/docs/javascript/quickstart/v2.3"" rel=""nofollow""><code>FB JS sdk</code></a> in <code>react-native</code> to login the users. A sample code to load FB SDK below - it will throw error in <code>react-native</code> because <code>document</code> doesn't seem to be a valid object in that implementation.</p>

<pre><code>(function(d, s, id){
         var js, fjs = d.getElementsByTagName(s)[0];
         if (d.getElementById(id)) return;
         js = d.createElement(s); js.id = id;
         js.src = ""//connect.facebook.net/es_LA/sdk.js"";
         fjs.parentNode.insertBefore(js, fjs);
       }(document, 'script', 'facebook-jssdk'));
</code></pre>

<p>I can also use <code>oauth2</code> manual login flow but using <code>FB JS SDK</code> seems better because it handles other scenarios like two-factor authentication.</p>
","986475","","986475","","2015-04-06 00:40:22","2015-10-18 12:57:32","Using FB JS sdk for user authentication in react-native","<facebook-graph-api><reactjs-native>","1","0","","",""
"38702641","1","38713968","","2016-08-01 15:27:22","","1","186","<p>Is there any way to set only one toolbarAndroid to be used on every screen of the application in conjunction with a navigator.</p>

<p>I set up a navigator in index.android.js :</p>

<pre><code>import React, { Component } from 'react';

import {
  AppRegistry,
  Navigator,
} from 'react-native';

import ContactList from './src/containers/ContactList.js';

class MyIndex extends Component {
  render() {
    return (
      &lt;Navigator
        initialRoute={{ name: 'index', component: ContactList }}
        renderScene={(route, navigator) =&gt; {
          if (route.component) {
            return React.createElement(route.component, { navigator, ...route.props });
          }

          return undefined;
        }}
      /&gt;
    );
  }
}

AppRegistry.registerComponent('reactest', () =&gt; MyIndex);
</code></pre>

<p>The first screen displays a contact list : </p>

<pre><code>import React, { Component, PropTypes } from 'react';
import {
  Text,
  View,
  TouchableOpacity,
  TouchableHighlight,
  ListView,
  Image,
  ActivityIndicator,
  ToolbarAndroid,
} from 'react-native';

import styles from '../../styles';
import ContactDetails from './ContactDetails';
import logo from '../images/ic_launcher.png';

const url = 'http://api.randomuser.me/?results=15&amp;seed=azer';

export default class ContactList extends Component {
  static propTypes = {
    navigator: PropTypes.object.isRequired,
  }
  constructor(props) {
    super(props);

    const datasource = new ListView.DataSource({ rowHasChanged: (r1, r2) =&gt; r1 !== r2 });
    this.state = {
      animating: false,
      animatingSize: 0,
      jsonData: datasource.cloneWithRows([]),
      ds: datasource,
      appTitle: 'Test',
      appLogo: logo,
    };
  }
  _handlePress() {
    this.setState({
      animating: true,
      animatingSize: 80,
    });


    return fetch(url)
      // convert to json
      .then((response) =&gt; response.json())
      // do some string manipulation on json
      .then(({ results }) =&gt; {
        const newResults = results.map((user) =&gt; {
          const newUser = {
            ...user,
            name: {
              title: `${user.name.title.charAt(0).toUpperCase()}${user.name.title.slice(1)}`,
              first: `${user.name.first.charAt(0).toUpperCase()}${user.name.first.slice(1)}`,
              last: `${user.name.last.charAt(0).toUpperCase()}${user.name.last.slice(1)}`,
            },
          };

          return newUser;
        });

        return newResults;
      })
      // set state
      .then((results) =&gt; {
        this.setState({
          appSubTitle: 'Contacts list',
          animating: false,
          animatingSize: 0,
          jsonData: this.state.ds.cloneWithRows(results),
        });
      });
  }
  renderRow(rowData: string) {
    return (
      &lt;TouchableHighlight
        onPress={() =&gt; {
          this.props.navigator.push({
            first: rowData.name.first,
            component: ContactDetails,
            props: {
              title: rowData.name.title,
              first: rowData.name.first,
              last: rowData.name.last,
              picture: rowData.picture.large,
              thumbnail: rowData.picture.thumbnail,
            },
          });
        }}
      &gt;
        &lt;View style={styles.listview_row}&gt;
          &lt;Image
            source={{ uri: rowData.picture.thumbnail }}
            style={{ height: 48, width: 48 }}
          /&gt;
          &lt;Text&gt;
            {rowData.name.title} {rowData.name.first} {rowData.name.last}
          &lt;/Text&gt;
        &lt;/View&gt;
      &lt;/TouchableHighlight&gt;
    );
  }
  render() {
    const view = (
      &lt;View style={styles.container}&gt;
        &lt;ToolbarAndroid
          logo={this.state.appLogo}
          title={this.state.appTitle}
          subtitle={this.state.appSubTitle}
          style={[{ backgroundColor: '#e9eaed', height: 56 }]}
        /&gt;
        &lt;ActivityIndicator
          animating={this.state.animating}
          style={[styles.centering, { height: this.state.animatingSize }]}
        /&gt;
        &lt;TouchableOpacity
          onPress={() =&gt; this._handlePress()}
          style={styles.button}
          size=""large""
        &gt;
          &lt;Text&gt;Fetch results?&lt;/Text&gt;
        &lt;/TouchableOpacity&gt;
        &lt;ListView
          enableEmptySections
          dataSource={this.state.jsonData}
          renderRow={(rowData) =&gt; this.renderRow(rowData)}
          onPress={() =&gt; this._handleRowClick()}
        /&gt;
      &lt;/View&gt;
    );

    return view;
  }
}
</code></pre>

<p>and the second one displays a contact details : </p>

<pre><code>import React, {
  Component,
  PropTypes,
} from 'react';

import {
  Text,
  View,
  Image,
  ToolbarAndroid,
} from 'react-native';

import styles from '../../styles';

export default class ContactDetails extends Component {
  constructor(props) {
    super(props);

    this.state = {
      animating: false,
      animatingSize: 0,
      appTitle: 'Test',
      appLogo: { uri: this.props.thumbnail, height: 56 },
      appSubTitle: `Contact Details - ${this.props.first} ${this.props.last}`,
    };
  }
  render() {
    return (
      &lt;View style={styles.container}&gt;
        &lt;ToolbarAndroid
          logo={this.state.appLogo}
          title={this.state.appTitle}
          subtitle={this.state.appSubTitle}
          style={[{ backgroundColor: '#e9eaed', height: 56 }]}
        /&gt;
        &lt;Image
          source={{ uri: this.props.picture }}
          style={{ height: 128, width: 128 }}
        /&gt;
        &lt;Text&gt;{this.props.title} {this.props.first} {this.props.last}&lt;/Text&gt;
      &lt;/View&gt;
    );
  }
}

ContactDetails.propTypes = {
  title: PropTypes.string.isRequired,
  first: PropTypes.string.isRequired,
  last: PropTypes.string.isRequired,
  picture: PropTypes.string.isRequired,
  thumbnail: PropTypes.string.isRequired,
};
</code></pre>

<p>I set up an toolbarAndroid in my first screen and another in my second screen, it's working well, but I have a feeling that it would be better to define only one toolbarAndroid and update it calling setState. </p>

<p>Is it possible, if so how ?</p>
","3929801","","","","","2016-08-02 07:14:40","react-native - Navigator and toolbarAndroid","<react-native><react-native-android>","2","0","","",""
"38323044","1","","","2016-07-12 07:56:18","","2","606","<p>I'm using php to post data to node.js to render reactjs components server side. </p>

<p>The debug console shows that error <code>Unexpected token ILLEGAL</code> occurs when variable <code>component</code> returns <code>undefined</code>. </p>

<pre><code>React = require('react'),
ReactDOM = require('react-dom/server'),
require('babel-core/register');
app.post('/something', function (req, res) {
    try {
        var view = './src/ItemPage';
        var component = require(view); &lt;&lt;&lt;====== Error
        var props = req.body || null;
        res.status(200).send(
            ReactDOM.renderToString(
                React.createElement(component, props)
            )
        );
    } catch (err) {
        res.status(500).send(err.message);
    }
});
</code></pre>

<p>The problem is due to importing the css script from grommet UI library in order to include css in the <code>bundle.js</code>. If I remove that style import line, the script is running okay. Why does the following class returns undefined in node? Is there a syntax error? It is compiled fine in webpack. </p>

<p>ItemPage Class:</p>

<pre><code>import React from 'react';
import Tabs from 'grommet/components/Tabs';
import Tab from 'grommet/components/Tab';
import 'grommet/grommet.min.css'; &lt;&lt;=== Error !!!!

export default class ItemPage extends React.Component {

    render(){ return &lt;Tabs&gt;
        &lt;Tab title=""First Title""&gt;
            &lt;h3&gt;First Tab&lt;/h3&gt;
            &lt;p&gt;Contents of the first tab !&lt;/p&gt;
        &lt;/Tab&gt;
        &lt;Tab title=""Second Title""&gt;
            &lt;h3&gt;Second Tab&lt;/h3&gt;
            &lt;p&gt;Contents of the second tab&lt;/p&gt;
        &lt;/Tab&gt;
        &lt;Tab title=""Third Title""&gt;
            &lt;h3&gt;Third Tab!&lt;/h3&gt;
            &lt;p&gt;Contents of the third tab&lt;/p&gt;
        &lt;/Tab&gt;
      &lt;/Tabs&gt;
    }
}


module.exports = ItemPage;
</code></pre>
","2598292","","","","","2016-07-12 09:18:14","Unexpected token ILLEGAL error importing css script in reactjs es6 file","<javascript><node.js><reactjs><ecmascript-6><babeljs>","1","6","","",""
"38677555","1","","","2016-07-30 19:05:05","","2","119","<p>I'm trying to do a select by dynamically loading options using React.</p>

<p>my form component:</p>

<pre><code>...
React.DOM.select
  className: 'form-control'
  name: 'user'
  React.createElement UserOptions
</code></pre>

<p>user options component:</p>

<pre><code>@UserOptions = React.createClass
  getInitialState: -&gt;
    connections: []

  componentDidMount: -&gt;
    @getUsers()

  render: -&gt;
    for connection in @state.connections  
      React.DOM.option
        value: connection.id
        label: connection.name

  getUsers: -&gt;
    $.ajax 
      type: 'GET'
      url: '/connections'
      dataType: 'json'
      success: (connections) =&gt;
        @setState(connections: connections)
</code></pre>

<p>When I try the page, javascript breaks (not loading anything) with an error</p>

<pre><code>Uncaught Invariant Violation: Constructor.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.
</code></pre>

<p>When trying to do the loading in <code>componentWillMount</code> callback, I get the same error +</p>

<p><code>Uncaught TypeError: Cannot read property '_currentElement' of null</code></p>

<p>I'm using <code>react-rails</code> gem. </p>

<p>weird thing is that when I debug inside success calllback, call the setState manually and then check the <code>connections</code> they are updated, but I get the <code>Uncaught TypeError: Cannot read property '_currentElement' of null</code> anyways</p>

<p>Any help will be appreciated. I'm new to React so maybe it's something trivial.</p>
","3275308","","","","","2016-07-30 19:05:05","Preloading options for select with reactJS in Rails","<reactjs><react-rails>","0","0","1","",""
"38936019","1","","","2016-08-13 19:01:28","","0","345","<p>I'm facing issues with passing the django render argument as a server response and fetch it using react component and then send it to html.</p>

<p><strong>Below is the Django code :</strong></p>

<pre><code>def view_personal_details (request):
    personal_detail_json = personal_details.objects.all()
    personal_detail = serializers.serialize('json', personal_detail_json)
    return render (request, ""webFiles/reactOutput.html"", {'personal_detail': personal_detail})
</code></pre>

<p><strong>Following is the react code, to fetch the 'personal_detail' sent via django response :</strong></p>

<pre><code>var categories = []; //{ ""model"": ""buglockerApp.authentication_details"", ""pk"": 1, ""fields"": { ""userid"": ""001"", ""password"": ""rajiv@247"", ""sec_que"": ""Pet Name"", ""sec_ans"": ""Jerry"" } }];

var App = _react2.default.createClass({
    displayName: 'App',

    getInitialState: function getInitialState() {
        return {
            data: null
        };
    },
    componentDidMount: function componentDidMount() {
        var self = this;
        //var http = require(""http"");
    var REQUEST_URL = ""/viewPersonalDetails"";
    // var request = http.get(REQUEST_URL, function (response) {
    //  console.log (""react response"" + JSON.stringify(response));
    //  var buffer = """", 
    //         data;
    //     console.log(""categories :"" + JSON.stringify(categories));
    //  response.on(""data"", function (chunk) {
    //         buffer += chunk;
    //  }); 

    //  response.on(""end"", function (err) {
       //      self.setState({
       //          categories: buffer
       //      });
       //      console.log('buffer: ' + buffer);
    //      console.log('categories: ' + JSON.stringify(categories));
    //  }); 
    // });

    fetch(REQUEST_URL, {
          method: 'get',
          dataType: 'json',
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
          }
        })
        .then((response) =&gt; 
          {
            return response.json() // &lt;&lt; This is the problem
          })
        .then((responseData) =&gt; { // responseData = undefined

           return responseData;
         })
        .then((data) =&gt; { 

           console.log(data);
         });
    },
    render: function render() {
        return _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(_griddleReact2.default, { results: categories, tableClassName: 'table', showFilter: true, showSettings: true, columns: [] })
        );
    }
});

_reactDom2.default.render(_react2.default.createElement(App, null), document.getElementById('app'));
</code></pre>

<p><strong>Below is the HTML Content to which the react component will render the output :</strong></p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang = ""en""&gt;
    &lt;head&gt;
      &lt;meta charset = ""UTF-8""&gt;
      &lt;title&gt;React First App&lt;/title&gt;
      {% load static  %}
    &lt;/head&gt;
    &lt;body&gt;
      Django Direct Output: &lt;br /&gt;
      {{ personal_detail }}
      ------------------------ &lt;br /&gt;
      React Output: &lt;br /&gt;
      &lt;div id = ""app""&gt;&lt;/div&gt;
      &lt;script src = ""{% static 'js/reactResponseNoDefaultJson.js' %}""&gt;&lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>The <strong>{{ personal_detail }}</strong> part (in above HTML content) gives the correct json value directly from Django, but the below part in html (i.e. app div and the javascript below) is not returning the content from react. <strong>reactResponseNoDefaultJson.js'</strong> is the minified react js.</p>
","5558037","","5558037","","2016-08-15 08:04:03","2016-08-15 08:43:03","Fetch django render argument in react js component","<javascript><html><django><reactjs>","1","6","","",""
"38904376","1","","","2016-08-11 19:12:15","","0","880","<p>On just about every browser, Javascript appears to be working fine. However, with some older browsers and IE11, it appears broken.</p>

<p>I suspect this is the case because when submitting a form <code>event.preventDefault()</code> isn't firing. And another function isn't being called. However React router seems to work correctly. I'm also using jQuery (yes I know) which doesn't seem to work either when I try to run console commands.</p>

<p>Here is my Webpack config:</p>

<pre><code>var path = require('path');
var webpack = require('webpack');

var config = {
  devtool: 'cheap-module-eval-source-map',
  entry: [
    'webpack-hot-middleware/client',
    './app/main'
  ],
  output: {
    path: path.join(__dirname, 'public', 'js'),
    filename: 'bundle.js',
    publicPath: '/js'
  },
  plugins: [
    new webpack.HotModuleReplacementPlugin(),
    new webpack.NoErrorsPlugin(),
    new webpack.optimize.OccurenceOrderPlugin(),
    new webpack.DefinePlugin({
      'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV)
    })
  ],
  module: {
    loaders: [
      {
        test: /\.js$/,
        exclude: /node_modules/,
        loader: 'babel-loader',
        query: {
          plugins: [
            ['react-transform', {
              transforms: [
                {
                  transform: 'react-transform-hmr',
                  imports: ['react'],
                  locals: ['module']
                }, {
                  transform: 'react-transform-catch-errors',
                  imports: ['react', 'redbox-react']
                }
              ]
            }]
          ]
        }
      }
    ]
  }
};

if (process.env.NODE_ENV === 'production') {
  config.plugins.push(
    new webpack.optimize.UglifyJsPlugin({
      compressor: {
        screw_ie8: true,
        warnings: false
      }
    })
  );
}

module.exports = config;
</code></pre>

<p>What I'm importing in my main file:</p>

<pre><code>import React from 'react';
import { connect } from 'react-redux'
import { Link } from 'react-router';
import { betaRequest } from '../actions/auth'
import Messages from './Messages'
import $ from 'jquery'
</code></pre>

<p>I'm also (unfortunately) using Jade for the ""root"" file:</p>

<pre><code>doctype html
html
  head
    meta(charset='utf-8')
    meta(http-equiv='x-ua-compatible', content='ie=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    title='...'
    link(rel='stylesheet', href='/css/main.css')
    link(rel='stylesheet', href='https://fonts.googleapis.com/css?family=Bungee+Shade')
  body
    #app!= html
    script.
    window.INITIAL_STATE = !{JSON.stringify(initialState)}

    script(src='/js/lib/jquery.js')
    script(src='/js/lib/bootstrap.js')
    script(src='/js/bundle.js')

    // Google Analytics: change UA-XXXXX-X to be your site's ID.
    script.
      (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=
      function(){(b[l].q=b[l].q||[]).push(arguments)});b[l].l=+new Date;
      e=o.createElement(i);r=o.getElementsByTagName(i)[0];
      e.src='https://www.google-analytics.com/analytics.js';
      r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));
      ga('create','...','auto');ga('send','pageview');
</code></pre>

<p>Function for submitting form:</p>

<pre><code>  handleSignup(event) {
    event.preventDefault();
    this.props.dispatch(submit(this.state.name, this.state.email));

  }
</code></pre>

<p>Also not working in production:</p>

<pre><code>  jumpToPlaceOnPage() {
    $('html,body').animate({
          scrollTop: document.getElementById(""requestBetaSection"").offsetTop
        }, 800);
  }
</code></pre>

<p>Getting the following error:
<code>(index):1 EventSource's response has a MIME type (""text/html"") that is not ""text/event-stream"". Aborting the connection.</code></p>
","648865","","648865","","2016-08-11 22:01:33","2016-08-11 22:01:33","Javascript broken in IE11 and old browsers - node+react+webpack production build","<javascript><jquery><node.js><reactjs><webpack>","0","6","","",""
"47149890","1","47150247","","2017-11-07 04:17:34","","0","70","<p>I'm wondering whether its possible to call a method on a component that I import from another file. Basically, my situation is that I have two react classes. One of them is a Sudoku puzzle, which I call Game, and which includes the updateArray() method:</p>

<pre><code>class Game extends React.Component {
    constructor(props) {
        super(props);
        this.state = {arr: [[5,0,4,9,0,0,0,0,2],
                          [9,0,0,0,0,2,8,0,0],
                          [0,0,6,7,0,0,0,0,9],
                          [0,0,5,0,0,6,0,0,3],
                          [3,0,0,0,7,0,0,0,1],
                          [4,0,0,1,0,0,9,0,0],
                          [2,0,0,0,0,9,7,0,0],
                          [0,0,8,4,0,0,0,0,6],
                          [6,0,0,0,0,3,4,0,8]]};

        this.handleSubmit = this.handleSubmit.bind(this);
        this.updateArray = this.updateArray.bind(this);
    }

    componentWillReceiveProps(nextProps) {
        if(nextProps.arr != this.props.arr){
            this.setState({arr: nextProps.value });
        }  
    }

    updateArray(str_arr) {
        this.setState({arr: str_arr});
    }

    handleSubmit(event) {

        ...

        event.preventDefault();
    }

    render() {
        return (
            &lt;form onSubmit={this.handleSubmit}&gt;
                &lt;div className = ""game""&gt;
                    &lt;div className = ""game-board""&gt;
                        &lt;Board value = {this.state.arr} /&gt;
                    &lt;/div&gt;
                    &lt;div className = ""game-info""&gt;
                        &lt;div&gt;&lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;input type=""submit"" value=""Submit"" /&gt;
            &lt;/form&gt;
        );
    }
}

export default Game;
</code></pre>

<p>And then I have a second class that gets a image of a sudoku puzzle and makes a corresponding 9x9 array using computer vision methods. I then try to send the array back to Game using its updateArray function:</p>

<pre><code>import Game from './Sudoku';


export default class ImageInput extends React.Component {


    constructor(props) {
        super(props);
        this.state = {
             uploadedFile: ''
        };

    }

    onImageDrop(files) {
        this.setState({uploadedFile: files[0]});
        this.handleImageUpload(files[0]);
    }

    handleImageUpload(file) {
        var upload = request.post('/')
                            .field('file', file)

        upload.end((err, response) =&gt; {
            if (err) {
              console.error(err);
            }
            else {
                console.log(response);
                console.log(Game);
                //ERROR HAPPENING HERE 
                Game.updateArray(response.text);

            }
        });
    }

    render() {
        return (
            &lt;div&gt;
            &lt;Dropzone
                multiple = {false}
                accept = ""image/jpg, image/png""
                onDrop={this.onImageDrop.bind(this)}&gt;
            &lt;p&gt;Drop an image or click to select file to upload&lt;/p&gt;
            &lt;/Dropzone&gt;
        );
    }
}
</code></pre>

<p>However, when I try to send the array to Game's method, I get a Uncaught TypeError:</p>

<pre><code>Uncaught TypeError: _Sudoku2.default.updateArray is not a function
    at eval (image_input.js?8ad4:43)
    at Request.callback (client.js?8e7e:609)
    at Request.eval (client.js?8e7e:436)
    at Request.Emitter.emit (index.js?5abe:133)
    at XMLHttpRequest.xhr.onreadystatechange (client.js?8e7e:703)
</code></pre>

<p>I want the updateArray() method to update the Game from a separate file, which will then cause the Game to re-render. Is this possible? I've spent a lot of time reading documentation, and it seems as though what I'm suggesting is not the typical workflow of react. Is it dangerous, and if so, can someone explain why?</p>

<p>Also, both classes are rendered in a separate file that looks like this:</p>

<pre><code>import Game from './Sudoku';
import ImageUpload from './image_input';


document.addEventListener('DOMContentLoaded', function() {
    ReactDOM.render(
        React.createElement(ImageUpload),
        document.getElementById('image-upload'),
    );
    ReactDOM.render(
        React.createElement(Game),
        document.getElementById('sudoku_game'),
    );
});
</code></pre>
","8217718","","8217718","","2017-11-07 04:33:42","2017-11-07 05:01:39","Call class method of default import in react","<javascript><reactjs><ecmascript-6>","1","4","","",""
"38415964","1","","","2016-07-16 21:48:54","","0","326","<p>The use of RouteHanlder gives two errors: </p>

<pre><code>VM2805 bundle.js:9597Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components).
Uncaught Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined.
</code></pre>

<p>The structure of my application.</p>

<pre><code>src
-- components
-- -- App.jsx
-- -- LengthModule.jsx
-- index.jsx
-- routes.js
</code></pre>

<p>My routes.js file</p>

<pre><code>var React = require('react');
var Router = require('react-router');
var DefaultRoute = Router.DefaultRoute;
var Route = Router.Route;
var routes = (
    &lt;Route name=""app"" path=""/"" handler={require('./components/app.jsx')}&gt;
        &lt;DefaultRoute handler={require('./components/LengthModule.jsx')} /&gt;
    &lt;/Route&gt;
)
</code></pre>

<p>index.jsx</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import App from './components/App.jsx';    
ReactDOM.render(&lt;div&gt;&lt;App /&gt;&lt;/div&gt;, document.getElementById('app'));
</code></pre>

<p>App.jsx</p>

<pre><code>import React from 'react';
import { Router, RouteHandler } from 'react-router';

export class App extends React.Component {
    render () {
        return &lt;div&gt;
            &lt;RouteHandler /&gt;            
        &lt;/div&gt;;
    }
}
</code></pre>

<p>LengthModule.jsx</p>

<pre><code>import React from 'react';
import Router from 'react-router';

export class LengthModule extends React.Component {        
    render () {
        return &lt;div&gt;""Hello World""&lt;/div&gt;;
    }
}
</code></pre>

<p>Am I using RouteHandler correctly? What am I missing? Are there any alternatives?</p>
","1226612","","","","","2016-12-02 04:51:21","RouteHandler: React.createElement: type should not be null, undefined, boolean, or number","<react-router>","2","0","","",""
"38759893","1","","","2016-08-04 06:24:48","","2","375","<p>I tried to add  tag into react  but componentDidMount always run before render. how do I add script into  and run it together.</p>

<pre><code>componentDidMount () {
    function loadScript() {
        var script= document.createElement('script');
        script.type= 'text/javascript';
        script.textContent = 'var Module = { TOTAL_MEMORY: 536870912, errorhandler: null, compatibilitycheck: null, dataUrl: ""Release/Arctopia_Path_Monopoly_v1.1.1GL.data"", codeUrl: ""Release/Arctopia_Path_Monopoly_v1.1.1GL.js"",memUrl: ""Release/Arctopia_Path_Monopoly_v1.1.1GL.mem"",};';
        document.getElementById(""play"").appendChild(script);

        var script0= document.createElement('script');
        script0.type= 'text/javascript';
        script0.src= 'TemplateData/UnityProgress.js';
        document.getElementById(""play"").appendChild(script0);

        var script2= document.createElement('script');
        script2.src= 'Release/UnityLoader.js';
        document.getElementById(""play"").appendChild(script2);
    }
    loadScript();
    this.setState({ update: true })
    console.log(""insert script"")
},

render () {
    return (
        &lt;div id=""wrapperOthers""&gt;
            &lt;div className=""container text-xs-center"" id=""play""&gt;
                &lt;h4&gt;{ this.data.colCourse.name }&lt;/h4&gt;
                &lt;canvas id=""canvas"" oncontextmenu=""event.preventDefault()"" height=""600px"" width=""960px""&gt;&lt;/canvas&gt;               
            &lt;/div&gt;
        &lt;/div&gt;
    )
}
</code></pre>
","3792482","","","","","2016-08-04 06:45:11","How to add <script> tag into an div id with reactjs","<javascript><reactjs>","1","0","","",""
"47212551","1","","","2017-11-09 22:17:49","","0","48","<p>I am trying to import a simple clock react component (from the react tutorials) in another react project, and it is rendering upon import, even if I don't use the tag. How is this happening, and how can I prevent it?</p>

<p>Clock repo:
<a href=""https://github.com/bobtista/reactJsClock"" rel=""nofollow noreferrer"">https://github.com/bobtista/reactJsClock</a></p>

<p>Tic Tac Toe repo (where I want to show the clock):
<a href=""https://github.com/bobtista/reactJsTickTacToe/tree/feature/clock"" rel=""nofollow noreferrer"">https://github.com/bobtista/reactJsTickTacToe/tree/feature/clock</a></p>

<p>If I try to use a named export, the Clock shows up as undefined in jsconsole. To reproduce:
In clock repo:</p>

<pre><code>module.exports = Clock;
</code></pre>

<p>In tic tac toe repo:</p>

<pre><code>import { Clock } from ""my-clock"";
</code></pre>

<p>If I use default export, I get this error</p>

<blockquote>
  <p>React.createElement: type is invalid -- expected a string (for
  built-in components) or a class/function (for composite components)
  but got: undefined. You likely forgot to export your component from
  the file it's defined in</p>
</blockquote>

<p>And I noticed that if I don't even use the  tag, when debugging, before the  can load, the Clock renders to the window - simply by being imported it shows up.</p>

<p>To reproduce: </p>

<pre><code>export default class Clock extends React.Component {
</code></pre>

<p>and
    import Clock from 'my-clock';</p>

<p>FYI: It works here! How?
<a href=""https://stackblitz.com/edit/react-eteavk?file=index.js"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/react-eteavk?file=index.js</a></p>
","5025679","","5025679","","2017-11-09 23:13:29","2017-11-09 23:13:29","How to import react element without immediately rendering?","<javascript><reactjs>","0","3","","",""
"38807169","1","38807366","","2016-08-06 17:52:37","","0","728","<p>Learning ReactJS with ES6. Trying to implement React-Bootstrap components. I am also using the react router. I am trying to implement the Navbar component. </p>

<p>It will just be a nabber with the brand and a search box. I aim to expand and use the search box component a lot more so I have put it in its own separate component below.</p>

<p>LocationSearchBox.js</p>

<pre><code>import React, {PropTypes} from 'react'
import Form, {FormGroup, FormControl} from 'react-bootstrap'

export default function LocationSearchBox(props) {
    return (
        &lt;FormGroup&gt;
            &lt;FormControl type=""text"" placeholder=""Search"" /&gt;
            &lt;Button bsStyle=""success"" type=""submit""&gt;Submit&lt;/Button&gt;
        &lt;/FormGroup&gt;
    )
}
</code></pre>

<p>The navber will be on all pages so I have put it in the topmost route and its component is the Main.js file shown below along with routes.js to manage client side routes.</p>

<pre><code>import React, {Component} from 'react';
import {Navbar, NavbarHeader, NavbarBrand, NavbarCollapse} from 'react-bootstrap';
import {default as Search} from './LocationSearchBox'

export default class Main extends Component{

    constructor(props) {
        super(props);
        this.props = props;
    }

    render() {
        return(
            &lt;Navbar&gt;
                &lt;NavbarHeader&gt;
                    &lt;NavbarBrand&gt;
                        &lt;a href=""#""&gt;React-Bootstrap&lt;/a&gt;
                    &lt;/NavbarBrand&gt;
                &lt;/NavbarHeader&gt;
                &lt;NavbarCollapse&gt;
                    &lt;Search/&gt;
                &lt;/NavbarCollapse&gt;
            &lt;/Navbar&gt;

        )
    }

}
</code></pre>

<p>routes.js</p>

<pre><code>import React from 'react';
import ReactRouter, {Router, Route, IndexRoute, browserHistory} from 'react-router';
import Main from '../components/Main';

export var routes = (
    &lt;Router history={browserHistory}&gt;
        &lt;Route path='/' component={Main} /&gt;

    &lt;/Router&gt;
);
</code></pre>

<p>Index.js is below and is the entry file to use in Webpack/babel</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import {routes} from './config/routes';

ReactDOM.render(routes, document.getElementById('root'));
</code></pre>

<p>So when i run web pack-dev-server, go to localhost:8080 as the default port the main route should be hitting. I believe it does but I get errors, namely 3 of the same kind.</p>

<pre><code>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of `Main`.
</code></pre>

<p>I believe it might be due to the way I am importing the Navbar components in Main.js, such as NavbarHeader, NavbarCollapse etc but that is a guess. I would really appreciate any help in solving this issue, thank you.</p>
","3216729","","","","","2016-08-06 18:13:15","ES6+React, Error:React.createElement: type should not be null, undefined, boolean, or number","<javascript><reactjs><ecmascript-6><react-bootstrap>","1","4","","",""
"47172434","1","","","2017-11-08 05:50:12","","1","316","<p>I have an asp.net core 2.0 solution using react.js as a frontend. I published my app to Azure (PaaS) some time ago. Everything was ok till I tried to generate pdf.  </p>

<p>On my local machine it works, but on the Azure App Service I got the following exception:</p>

<blockquote>
  <p>Microsoft.AspNetCore.NodeServices.HostingModels.NodeInvocationException"",""Message"":""Attempt to connect to Node timed out after 60000ms</p>
</blockquote>

<p>I tried to set already the 
<code>""engines"":{""node"":version}</code> or 
<code>WEBSITE_NODE_DEFAULT_VERSION</code> (on azure variables)</p>

<p>frontend code: </p>

<pre><code>private generatePdf() {

    let htmlContent = document.getElementById(""dataToPrint"");

    GetDetailsPdf(this.props.prop1, htmlContent.innerHTML).then((data: Blob) =&gt; {
        // Create of hidden anchor for start download in browser
        var a: HTMLAnchorElement = document.createElement(""a"");
        a.hidden = true;
        document.body.appendChild(a);

        var url = window.URL.createObjectURL(data);
        a.href = url;
        a.download = `${this.props.prop1}_${this.props.prop2}.pdf`;
        a.click();

        window.URL.revokeObjectURL(url);
    });
}
</code></pre>

<p>backend: </p>

<pre><code>public async Task&lt;IActionResult&gt; ExportPdf(
        Guid id, 
        [FromBody] JObject jObject, 
        [FromServices] INodeServices nodeServices,
        [FromServices] IHtmlToPdfConverter converter)
{
    var htmlJObject = jObject.First;
    var htmlContent = htmlJObject.First.Value&lt;string&gt;();

    var pdfFile = await converter.GetPdfFile(htmlContent);

    return File(pdfFile, ""application/pdf"", $""MyPDf_{id}.pdf"");
}
</code></pre>

<p>where converter just calls </p>

<pre><code>nodeServices.InvokeAsync&lt;byte[]&gt;(""./pdf"", htmlTemplate);
</code></pre>
","7732163","","7732163","","2017-11-08 06:21:37","2018-05-07 11:55:36","Azure + react js pdf + Microsoft.AspNetCore.NodeServices.HostingModels.NodeInvocationException","<c#><asp.net><node.js><azure><pdf>","0","2","","",""
"38998987","1","","","2016-08-17 14:06:44","","2","3452","<p>I have the following render method:</p>

<pre><code>render: function () {
  return (
    React.createElement('div', {className: 'modal', id: 'errorModal', tabIndex: '-1', role: 'dialog', ariaHidden: 'true', dataBackdrop: 'false', style: {marginTop: '30px'}}, 'text')
  )
}
</code></pre>

<p>That gives me error:</p>

<blockquote>
  <p>react.js:20541 Warning: Unknown props <code>ariaHidden</code>, <code>dataBackdrop</code> on
   tag. Remove these props from the element. For details, see
      in div (created by Constructor)
      in Constructor</p>
</blockquote>

<p>How could I solve this? Documentation says that I can use these attributes. Lowercase does not work either. I don't want to use jsx.</p>
","5479258","","5259164","","2018-03-22 06:10:36","2018-03-22 06:10:36","Using aria attributes on elements in react","<javascript><reactjs>","1","3","1","",""
"39423054","1","39423095","","2016-09-10 05:54:15","","20","9916","<p>I have a file test_stuff.js that I am running with <code>npm test</code></p>

<p>It pretty much looks like this:</p>

<pre><code>import { assert } from 'assert';
import { MyProvider } from '../src/index';
import { React } from 'react';

const myProvider = (
  &lt;MyProvider&gt;
  &lt;/MyProvider&gt;
);

describe('Array', function() {
  describe('#indexOf()', function() {
    it('should return -1 when the value is not present', function() {
      assert.equal(-1, [1,2,3].indexOf(4));
    });
  });
});
</code></pre>

<p>Unfortunately, I get the error</p>

<pre><code>/Users/me/projects/myproj/test/test_stuff.js:11
var myProvider = _react.React.createElement(_index.MyProvider, null);
                             ^

TypeError: Cannot read property 'createElement' of undefined
    at Object.&lt;anonymous&gt; (/Users/me/projects/myproj/test/test_stuff.js:7:7)
</code></pre>

<p>What does that mean? I am importing React from 'react' successfully, so why would React be undefined? It is _react.React, whatever that means...</p>
","3011531","","","","","2016-09-10 12:27:07","React JSX file giving error ""Cannot read property 'createElement' of undefined""","<javascript><reactjs><npm><react-jsx>","1","0","4","",""
"47579116","1","","","2017-11-30 17:19:00","","2","230","<p>I'm trying to get my webpack to filter svg imports and generate react components with the files. </p>

<p>this is my  webpacker configuration: </p>

<pre><code>//config/webpack/development.js
const merge = require(""webpack-merge"");
const environment = require(""./environment"");
const svg_react_loader = require(""./custom/svg-react-loader"");

module.exports = merge(environment.toWebpackConfig(), svg_react_loader);

//config/webpack/custom/svg-react-loader
module.exports = {
  module: {
    loaders: [
      {
        test: /\.svg$/,
        use: [
          {
            loader: ""babel-loader""
          },
          {
            loader: ""react-svg-loader"",
            options: {
              jsx: true // true outputs JSX tags
            }
          }
        ]
      }
    ]
  }
};
</code></pre>

<p>I'm importing the svg file in my component as follows: </p>

<pre><code>import ProjectLogo from ""./images/project.svg"";
</code></pre>

<p>the error I'm getting in the browser console is: </p>

<pre><code>react-dom.development.js?cada:6050 Uncaught DOMException: Failed to execute 'createElement' on 'Document': The tag name provided ('/packs/bundles/Project/components/LogoPage/images/project-f15c8edd029d0f795dd71e3e39079866.svg') is not a valid name.
    at createElement (webpack-internal:///250:6050:36)
    at createInstance (webpack-internal:///250:16908:22)
    at completeWork (webpack-internal:///250:10916:31)
    at completeUnitOfWork (webpack-internal:///250:12481:18)
    at performUnitOfWork (webpack-internal:///250:12580:14)
    at workLoop (webpack-internal:///250:12682:28)
    at HTMLUnknownElement.callCallback (webpack-internal:///250:1299:14)
    at Object.invokeGuardedCallbackDev (webpack-internal:///250:1338:16)
    at invokeGuardedCallback (webpack-internal:///250:1195:27)
    at performWork (webpack-internal:///250:12800:7)
createElement @ react-dom.development.js?cada:6050
createInstance @ react-dom.development.js?cada:16908
completeWork @ react-dom.development.js?cada:10916
completeUnitOfWork @ react-dom.development.js?cada:12481
performUnitOfWork @ react-dom.development.js?cada:12580
workLoop @ react-dom.development.js?cada:12682
callCallback @ react-dom.development.js?cada:1299
invokeGuardedCallbackDev @ react-dom.development.js?cada:1338
invokeGuardedCallback @ react-dom.development.js?cada:1195
performWork @ react-dom.development.js?cada:12800
scheduleUpdateImpl @ react-dom.development.js?cada:13185
scheduleUpdate @ react-dom.development.js?cada:13124
scheduleTopLevelUpdate @ react-dom.development.js?cada:13395
updateContainer @ react-dom.development.js?cada:13425
(anonymous) @ react-dom.development.js?cada:17105
unbatchedUpdates @ react-dom.development.js?cada:13256
renderSubtreeIntoContainer @ react-dom.development.js?cada:17104
render @ react-dom.development.js?cada:17129
render @ clientStartup.js?eb41:154
forEach @ clientStartup.js?eb41:64
forEachComponent @ clientStartup.js?eb41:76
reactOnRailsPageLoaded @ clientStartup.js?eb41:177
(anonymous) @ clientStartup.js?eb41:232
</code></pre>
","1089494","","","","","2017-11-30 17:19:00","react loading SVG as a module using webpack","<javascript><svg><webpack><webpacker>","0","6","","",""
"46697040","1","","","2017-10-11 20:31:53","","1","103","<p>I'm creating a website using Angular 2+ but I'd like to also utilise a library of certain React components. That shouldn't really be that hard; however, the catch is that these components require a <a href=""https://github.com/reactjs/react-redux/blob/master/docs/api.md#provider-store"" rel=""nofollow noreferrer"">react-redux Provider</a> with a Redux store at the root level to work. Basically the document tree should look like:</p>

<pre><code>&lt;body&gt;
  ...
  &lt;Provider store={store}&gt;
    &lt;span&gt;
       &lt;app-contents&gt;&lt;/app-contents&gt;
       &lt;TopLevelComponent/&gt;
    &lt;/span&gt;
  &lt;/Provider&gt;
  ...
&lt;/body&gt;
</code></pre>

<p>...where <code>&lt;app-contents&gt;</code> is an Angular component with most of the website contents, inside of which would be usages of the various React components; and TopLevelComponent is another one of those.</p>

<hr>

<p>First, I tried using <a href=""https://github.com/ng2-ui/react"" rel=""nofollow noreferrer"">@ngui/react</a> to render the React components. This seems like it could work for the small components, although they (correctly) complain about the lack of access to a store. But when used for the Provider, like this:</p>

<pre><code>@Component({
  selector: 'app-provider',
  template: `
    &lt;ngui-react [reactComponent]=""provider"" [reactProps]=""{store: theStore}""&gt;
      &lt;span&gt;
        &lt;app-provider-contents&gt;&lt;/app-provider-contents&gt;
        &lt;ngui-react [reactComponent]=""topLevelComponent""&gt;&lt;/ngui-react&gt;
      &lt;/span&gt;
    &lt;/ngui-react&gt;`
})
export class ProviderComponent {

  provider = Provider;
  topLevelComponent = TopLevelComponent;

  constructor(@Inject(TheStore) public theStore: Redux.Store&lt;any&gt;) {}
}
</code></pre>

<p>...it result in errors:</p>

<pre><code>Warning: Failed prop type: Invalid prop `children` of type `array` supplied to `Provider`, expected a single ReactElement.
    in Provider
</code></pre>

<p>and</p>

<pre><code>ERROR Error: React.Children.only expected to receive a single React element child.
</code></pre>

<hr>

<p>It seems to me like the cause could be @ngui/react being outdated, so I tried to create the Provider dynamically in code:</p>

<pre><code>  constructor(@Inject(TheStore) private theStore: Redux.Store&lt;any&gt;,
              private elementRef: ElementRef) {}

  ngAfterViewInit() {
    const contents = React.createElement('app-contents', {key: this.randomKey}, null);
    const provider = React.createElement(Provider, {store: this.theStore, key: this.randomKey}, contents);
    ReactDOM.render(provider, this.elementRef.nativeElement, () =&gt; {});
  }

  get randomKey() { /* returns a pseudorandom string */ }
</code></pre>

<p>This results in:</p>

<pre><code>&lt;app-provider _ngcontent-c0="""" _nghost-c1=""""&gt;
   &lt;app-contents&gt;&lt;/app-contents&gt;
&lt;/app-provider&gt;
</code></pre>

<p>...but <code>&lt;app-contents&gt;</code> isn't loaded as an Angular component and it stays empty.</p>

<hr>

<p>Finally, I tried to use this situation and load the Angular component dynamically. There appear to be a lot of solutions for that, but many require the parent element to exist statically, through various directives, @ViewChild and whatnot. When I then found a solution that could insert under a given DOM element:</p>

<pre><code>const factory = this.factoryResolver.resolveComponentFactory(ProviderContentComponent);
const node = this.viewContainerRef.element.nativeElement.lastChild;
const component = factory.create(this.viewContainerRef.parentInjector, [], node);
this.viewContainerRef.insert(component.hostView);
</code></pre>

<p>...it renders the components, but it pops the node out to a higher level and the React components inside it complain about no access to a store once again:</p>

<pre><code>&lt;app-provider _ngcontent-c0="""" _nghost-c1=""""&gt;&lt;/app-provider&gt;
&lt;app-content _nghost-c2="""" ng-version=""4.4.4""&gt;
  content works!
  &lt;!-- react component missing the store --&gt;
&lt;/app-content&gt;
</code></pre>

<hr>

<p>So, now I wonder, is it actually possible to switch from Angular context, to React Provider, to Angular context, to React components, so that it works? Or will I have to get rid of the React library and make the components natively in Angular?</p>
","8761228","","","","","2017-10-11 20:31:53","Using react-redux Provider for React components in Angular 2+","<angular><reactjs><react-redux>","0","0","","",""
"46708599","1","46718142","","2017-10-12 11:37:12","","0","190","<p>I am running an enzyme test on my whole app using mount. I want to test all child components so believe this is the best method. I will also test individual components with other tests.</p>

<p>My app.test.js is as follows:</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';
import { BrowserRouter } from 'react-router-dom';
import { Provider } from 'react-redux';
import Store from '../../store';
import { shallow, mount } from 'enzyme';

const StoreInstance = Store();

it('renders without crashing', () =&gt; {
  const div = document.createElement('div');

  mount(
    &lt;Provider store={StoreInstance}&gt;
            &lt;BrowserRouter&gt;
            &lt;App /&gt;
          &lt;/BrowserRouter&gt;
        &lt;/Provider&gt;
    );
});
</code></pre>

<p>and when I run my test I get the following error </p>

<pre><code>console.error node_modules/react-dom/cjs/react-dom.development.js:8305
      The above error occurred in the &lt;HighchartsChart&gt; component:
          in HighchartsChart (at Graph.js:42)
          in div (at Graph.js:41)
          in div (at Graph.js:37)
          in Graph (at Dashboard.js:39)
          in div (at Card.js:24)
          in div (at Card.js:10)
          in Card (at Dashboard.js:38)
          in div (at Dashboard.js:20)
          in Dashboard (created by Route)
          in Route (at App.js:59)
          in Switch (at App.js:58)
          in main (at App.js:57)
          in div (at App.js:54)
          in App (created by Connect(App))
          in Connect(App) (created by Route)
          in Route (created by withRouter(Connect(App)))
          in withRouter(Connect(App)) (at App.test.js:17)
          in Router (created by BrowserRouter)
          in BrowserRouter (at App.test.js:16)
          in Provider (created by WrapperComponent)
          in WrapperComponent

      Consider adding an error boundary to your tree to customize error handling behavior.
      You can learn more about error boundaries at react docs (fb.me/react-error-boundaries).
</code></pre>

<p>It doesn't actually say what the error is so I am struggling to debug.</p>

<p>I do know that it is complaining about the <code>&lt;ReactHighcharts /&gt;</code> component which I am using in my graph.js:</p>

<pre><code>class Graph extends Component {

  render() {

    return (
        &lt;div className=""graph-container""&gt;

          &lt;div className=""graph""&gt;
                &lt;ReactHighcharts config={this.props.config ? this.props.config : config} /&gt; // config var is defined but I haven't included it
            &lt;/div&gt;

      &lt;/div&gt;
    );
  }
}

export default Graph;
</code></pre>

<p>Would appreciate any assistance.</p>

<p>Thanks</p>

<p>EDIT:</p>

<p>I have added the error boundary component as per the suggestion and am now getting the follow error</p>

<p>InvalidCharacterError
        at exports.name (/node_modules/jsdom/lib/jsdom/living/helpers/validate-names.js:10:11)
        at DocumentImpl.createElement (/node_modules/jsdom/lib/jsdom/living/nodes/Document-impl.js:686:5)
        at Document.createElement (/node_modules/jsdom/lib/jsdom/living/generated/Document.js:92:59)
        at a.createElement (/node_modules/highcharts/highcharts.js:18:45)
        at init (/node_modules/highcharts/highcharts.js:95:411)
        at Object.createElement (/node_modules/highcharts/highcharts.js:65:261)
        at Object.createElement (/node_modules/highcharts/highcharts.js:111:222)
        at Object.init (/node_modules/highcharts/highcharts.js:104:305)
        at Object.C (/node_modules/highcharts/highcharts.js:113:48)
        at getContainer (/node_modules/highcharts/highcharts.js:259:80) { componentStack: '\n    in HighchartsChart (at Graph.js:45)\n    in ErrorBoundary (at Graph.js:44)\n    in div (at Graph.js:43)\n    in div (at Graph.js:39)\n    in Graph (at Dashboard.js:39)\n    in div (at Card.js:24)\n    in div (at Card.js:10)\n    in Card (at Dashboard.js:38)\n    in div (at Dashboard.js:20)\n    in Dashboard (created by Route)\n    in Route (at App.js:59)\n    in Switch (at App.js:58)\n    in main (at App.js:57)\n    in div (at App.js:54)\n    in App (created by Connect(App))\n    in Connect(App) (created by Route)\n    in Route (created by withRouter(Connect(App)))\n    in withRouter(Connect(App)) (at App.test.js:17)\n    in Router (created by BrowserRouter)\n    in BrowserRouter (at App.test.js:16)\n    in Provider (created by WrapperComponent)\n    in WrapperComponent' }</p>
","3528590","","379008","","2017-10-13 12:58:42","2017-10-13 12:58:42","Why is enzyme failing to test react highcharts?","<javascript><reactjs><highcharts><enzyme>","1","0","","",""
"38796530","1","38797762","","2016-08-05 19:27:18","","1","1695","<p>I'm using <code>react.js</code> to render a <code>&lt;script&gt;</code> on an html page. Within this script, there is a javascript function that I need to call from within my react class.</p>

<p>This is what I have...</p>

<pre><code>class Example extends React.Component {

    componentWillMount() { 

        //render a script 
        const script = document.createElement(""script"");
        script.src = ""http//random_source.js"";

    render(){

         //call method from the script rendered
         window.someMethod();
         return(
             &lt;div&gt;{this.componentWillMount}&lt;/div&gt;

              );
         }
     }
</code></pre>

<p>So <code>componentWillMount()</code> is rendering my script on the html page, and within the <code>render()</code> I'm calling <code>window.someMethod()</code> where <code>someMethod</code> is located inside the rendered script.</p>

<p>Is this possible using react? If not is there any work around?</p>
","4333347","","","","","2016-08-05 21:05:58","How to call a javascript function defined externally using react?","<javascript><reactjs>","2","4","1","",""
"39511207","1","","","2016-09-15 12:35:23","","0","236","<p>I have small HTML block on server which is loaded via Ajax call. It has <code>&lt;Link&gt;</code> tag from react router. I want to render this block so that <code>&lt;Link&gt;</code> tag converts to <code>&lt;a&gt;</code>.</p>

<p>I tried to create a temporary react component and pass the HTML block and render it. But the returned HTML is still has the <code>&lt;Link</code>> tag.</p>

<p>Here is HTML block. <code>&lt;Link&gt;</code> tag is on the fourth line.</p>



<pre class=""lang-html prettyprint-override""><code>    &lt;div id=""mobile-home-categories""&gt;
      &lt;div class=""row feature-categories""&gt;
        &lt;div class=""col-md-6 col-xm-6 col-sm-6 col-xs-6""&gt;
          &lt;Link to=""/bedroom-furniture.htm"" state=""{ catId: 3 }""&gt; 
          &lt;img src=""{{media url=""wysiwyg/furniture.png""}}"" alt=""furniture"" /&gt;
          FURNITURE&lt;/Link&gt;
        &lt;/div&gt;
        &lt;div class=""col-md-6 col-xm-6 col-sm-6 col-xs-6""&gt;
          &lt;a href=""decor.htm""&gt;&lt;img src=""{{media url=""wysiwyg/decor.png""}}""     alt=""decor"" /&gt;
          DECOR&lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
</code></pre>

<pre class=""lang-js prettyprint-override""><code>    promise.done(function(data){
        const content = jQuery(""&lt;div/&gt;"").html(data.firstElementChild.firstElementChild.textContent).html();
        const comp = React.createClass({
          render: function() {
            return &lt;div&gt;{this.props.content}&lt;/div&gt;;
          }
        });
        const renderedComponent = ReactDOM.render(&lt;comp content={content}/&gt;, document.createElement('div'));
    });
</code></pre>
","916349","","","","","2016-09-15 12:35:23","how to render dynamic react component from server","<reactjs><react-router>","0","2","1","",""
"47600368","1","","","2017-12-01 19:39:11","","0","49","<p>I am trying to render a component from other component, but failing miserable, Can someone please help me with code and help me understand what i am doing wrong? 
Also, using the following example, can someone help me understand when to use type=text/jsx or type=text/babel?</p>

<pre><code>&lt;body&gt;
&lt;div class=""container""&gt;
  &lt;h1&gt;Flask React&lt;/h1&gt;
  &lt;br&gt;
  &lt;div id=""content""&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;!-- scripts --&gt;
&lt;script src=""http://cdnjs.cloudflare.com/ajax/libs/react/0.13.3/JSXTransformer.js""&gt;&lt;/script&gt;
&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react.min.js""&gt;&lt;/script&gt;
&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react-dom.min.js""&gt;&lt;/script&gt;

&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/babel-core/6.1.19/browser.js""&gt;&lt;/script&gt;
&lt;script type=""text/jsx""&gt;

  /*** @jsx React.DOM */

  var realPython = React.createClass({
    render: function() {
      return (&lt;realPython1 /&gt;);
    }
  });

  var realPython1 = React.createClass({
    render: function() {
      return (&lt;h2&gt;Greetings, from Real Python!&lt;/h2&gt;);
    }
  });


  ReactDOM.render(
    React.createElement(realPython, null),
    document.getElementById('content')
  );

&lt;/script&gt;
&lt;/body&gt;
</code></pre>
","4960656","","","","","2017-12-01 20:06:56","Unable to render a component from other component in react","<javascript><reactjs><jsx><babel>","2","2","","2017-12-01 20:15:58",""
"46629977","1","","","2017-10-08 10:18:28","","1","221","<p>How do you add components such as charts in google trends in reactjs?</p>

<pre><code>componentDidUpdate() {
    const that = this
    const keyword = ""your keyword""

    conts script = document.createElement(""script"")
    script.src = ""https://ssl.gstatic.com/trends_nrtr/760_RC08/embed_loader.js""
    script.async = true

    ReactDOM.findDOMNode(this.refs.trendsWrapper1).appendChild(script)

    script.onload = function () {
       trends.embed.renderExploreWidgetTo(ReactDOM.findDOMNode(that.refs.trendsWrapper1), ""TIMESERIES"", {""comparisonItem"":[{""keyword"":keyword,""geo"":"""",""time"":""today 5-y""}],""category"":0,""property"":""""}, {""exploreQuery"":""q=%2Fm%2F0rfgxy2"",""guestPath"":""https://www.google.co.uk:443/trends/embed/""})
    }

}
</code></pre>

<p>I tried this and didn't work. Please try to suggest a much easier method than this as well.</p>
","6208328","","7248342","","2017-10-08 10:24:20","2018-01-23 07:22:13","Add google trends in react","<reactjs><google-trends>","1","0","","",""
"29823273","1","","","2015-04-23 12:19:17","","1","3499","<p>I know this has been asked before but the suggested solutions don't help me, so, here's my code which for some reason fails.</p>

<p>app.js:</p>

<pre><code>(function(React, _) {
    var App = require('./components/App.react');

_.mixin(_.string.exports());

var render = function() {
    React.render(
        React.createElement(App),
        document.getElementById('reactContent')
    );
};
render();
}(React, _));
</code></pre>

<p>And then, App.react.js:</p>

<pre><code>var React = require('react');
var Test = React.createClass({
render: function() {
    return &lt;div&gt;Hello world&lt;/div&gt;
}
})

module.exports = Test;
</code></pre>

<p>Now, my console says:</p>

<pre><code>Warning: This JSX uses a plain function. Only React components are valid in     React's JSX transform.
app.js:20281 Warning: Something is calling a React component directly. Use a     factory or JSX instead. See: http://fb.me/react-legacyfactory
app.js:6475 Uncaught TypeError: Cannot read property '__reactAutoBindMap' of null
</code></pre>

<p>Feels like the simplest thing... I'll include my package.json just incase it's needed.</p>

<pre><code>{
  ""name"": ""app"",
  ""version"": ""0.0.1"",
  ""devDependencies"": {
""gulp"": ""3.8.10"",
""gulp-run"": ""1.6.5"",
""gulp-less"": ""2.0.1"",
""gulp-concat"": ""2.4.3"",
""gulp-uglify"": ""1.0.2"",
""gulp-minify-css"": ""0.3.11"",
""gulp-jshint"": ""1.9.0"",
""browser-sync"": ""1.8.2"",
""browserify"": ""3.44.2"",
""vinyl-source-stream"": ""1.0.0"",
""vinyl-buffer"": ""1.0.0"",
""reactify"": ""latest"",
""underscore"": ""^1.7.0"",
""del"": ""1.1.1"",
""envify"": ""~3.0.0""
  },
  ""paths"": {
""less"": ""assets/less/*.less"",
""js"": ""./app/**/*.js"",
""jsx"": ""./app/**/*.jsx"",
""app"": ""./app/app.js"",
""html"": ""*.html""
  },
  ""dest"": {
    ""style"": ""style.css"",
    ""app"": ""app.js"",
    ""dist"": ""dist""
  },
  ""dependencies"": {
""react"": ""latest"",
""underscore"": ""^1.7.0"",
""flux"": ""^2.0.0""
  }
}
</code></pre>

<p>There's a lot more in here as you can see from the .json file, I just rebuilt the code to make a really simple case and to isolate the issue.</p>

<p>Any ideas?</p>
","2584271","","2584271","","2015-04-23 12:26:11","2015-04-23 12:48:21","React.js Cannot read property '__reactAutoBindMap' of null","<javascript><reactjs>","1","0","","",""
"47606784","1","","","2017-12-02 10:15:42","","0","367","<p>i've static website using react selly-midtrans.herokuapp.com but as you can see there is some eksternal js that located in index.html, but the probelm is when we change the route to another menu the those external do not load as we first visit the page.</p>

<p>i've read some my friend advice using <code>componentDidMount/ComponentWillMount</code> and <code>componentWillUnmount</code> but i'm still bit confused to use that method for append my js and fix my problem</p>

<p>here'is my index.html code </p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=""en""&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no""&gt;
    &lt;meta name=""theme-color"" content=""#000000""&gt;
    &lt;link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/latest/css/bootstrap.min.css""&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt;
    &lt;script type=""application/x-javascript""&gt; addEventListener(""load"", function() { setTimeout(hideURLbar, 0); }, false); function hideURLbar(){ window.scrollTo(0,1); } &lt;/script&gt;
    &lt;link href='https://fonts.googleapis.com/css?family=Lato:100,300,400,700,900' rel='stylesheet' type='text/css'&gt;
    &lt;!--
      manifest.json provides metadata used when your web app is added to the
      homescreen on Android. See https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/
    --&gt;
    &lt;link rel=""manifest"" href=""%PUBLIC_URL%/manifest.json""&gt;
    &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
    &lt;script async="""" defer="""" src=""https://apis.google.com/js/platform.js?publisherid=105038212373502490985"" type=""text/javascript""&gt;&lt;/script&gt;
    &lt;!--Google analytic--&gt;
    &lt;script&gt;
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','https://www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-106169293-1', 'auto'); ga('send', 'pageview');
    &lt;/script&gt;
    &lt;title&gt;Sell Easily With Selly | Selly&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;noscript&gt;
      You need to enable JavaScript to run this app.
    &lt;/noscript&gt;
    &lt;div id=""root""&gt;&lt;/div&gt;
    &lt;script src=""%PUBLIC_URL%/js/jquery.min.js""&gt;&lt;/script&gt;
    &lt;script src=""%PUBLIC_URL%/js/bootstrap.min.js""&gt;&lt;/script&gt;
    &lt;script src=""%PUBLIC_URL%/js/owl.carousel.js""&gt;&lt;/script&gt;
    &lt;script src=""%PUBLIC_URL%/js/main.js""&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
","5241456","","","","","2017-12-02 15:46:47","why external javascript in react do not load after first page change / redirect to another route","<javascript><reactjs><react-router>","1","2","","",""
"47516297","1","47517957","","2017-11-27 17:07:39","","1","169","<p>I am following this tutorial - <a href=""https://www.youtube.com/watch?v=Smk2FusU_70"" rel=""nofollow noreferrer"">https://www.youtube.com/watch?v=Smk2FusU_70</a> (Right at the 28:38 mark)</p>

<p>However it came out before v4 and I'm getting an error: </p>

<pre><code>/Users/morganallen/Desktop/react_ssr/myapp/server/index.js:55
            match({routes, location: req.url}, (error, redirect, ssrData) =&gt; {
            ^

TypeError: match is not a function
    at fs.readFile (/Users/morganallen/Desktop/react_ssr/myapp/server/index.js:55:13)
    at tryToString (fs.js:455:3)
    at FSReqWrap.readFileAfterClose [as oncomplete] (fs.js:442:12)
</code></pre>

<p>I saw in this answer it looks like he's having a similar issue - <a href=""https://stackoverflow.com/questions/42797543/whats-wrong-with-this-reactrouter-match-implementation"">What&#39;s wrong with this ReactRouter.match() implementation?</a></p>

<p>Although I'm not quite sure make the change in the <code>else{}</code> statement for <code>match({})</code></p>

<p>What should I do to make it work? </p>

<pre><code>require('import-export')
require('babel-core/register')({presets: ['es2015', 'react']})

const http = require('http')
const path = require('path')
const fs = require('fs')
const express = require('express')
const react = require('react')
const reactRouter = require('react-router')
const reactDomServer = require('react-dom/server')


const renderToString = reactDomServer.renderToString


const match = reactRouter.match

const RouterContext = reactRouter.RouterContext

const staticFiles = [
    '/static/*',
    '/logo.svg',
    '/asset-manifest.json',
    '/favicon.ico'
]

const app = express()

app.server = http.createServer(app)

app.use(express.static('../build'))


staticFiles.forEach(file =&gt; {
    app.get(file, (req, res) =&gt; {
        const filePath = path.join(__dirname, '../build', req.url)
        res.sendFile(filePath)
    })
})

const routes = require('../src/routes').default()

app.get('*', (req, res) =&gt; {

    const error = () =&gt; res.status(404).send('404')

    const htmlFilePath = path.join(__dirname, '../build', 'index.html')

    fs.readFile(htmlFilePath, 'utf8', (err, htmlData) =&gt; {

        if(err) {
            error()
        }
        else{
            match({routes, location: req.url}, (error, redirect, ssrData) =&gt; {
                if(error){
                    error()
                }
                else if(redirect){
                    res.redirect(302, redirect.pathname + redirect.search)
                }
                else if(ssrData){
                    const ReactApp = renderToString(react.createElement(RouterContext, srrData) )
                    const RenderApp = htmlData.replace('{{SSR}}', ReactApp)
                    res.status(200).send(RenderApp)
                }
                else{
                    error()
                }
            })
        }
    })
})

app.server.listen( process.env.PORT || 8080)
console.log(app.server.address().port)
</code></pre>

<p>My package.json file</p>

<pre><code>{
  ""name"": ""myapp"",
  ""version"": ""0.1.0"",
  ""private"": true,
  ""dependencies"": {
    ""babel-core"": ""^6.26.0"",
    ""babel-preset-es2015"": ""^6.24.1"",
    ""babel-preset-react"": ""^6.24.1"",
    ""import-export"": ""^1.0.1"",
    ""react"": ""^16.1.1"",
    ""react-dom"": ""^16.1.1"",
    ""react-router"": ""^4.2.0"",
    ""react-router-dom"": ""^4.2.2"",
    ""react-scripts"": ""1.0.17""
  },
  ""scripts"": {
    ""start"": ""react-scripts start"",
    ""build"": ""react-scripts build"",
    ""test"": ""react-scripts test --env=jsdom"",
    ""eject"": ""react-scripts eject""
  }
}
</code></pre>
","9015965","","9015965","","2017-11-27 17:15:38","2017-11-27 20:07:47","react + SSR: TypeError: match is not a function","<javascript><node.js><reactjs>","1","7","","",""
"39528850","1","","","2016-09-16 10:08:24","","1","524","<p>I am new in react and I follow this article <a href=""https://www.airpair.com/reactjs/posts/reactjs-a-guide-for-rails-developers"" rel=""nofollow"">https://www.airpair.com/reactjs/posts/reactjs-a-guide-for-rails-developers</a>
 to use react in rails app and everything was fine. But later I wanted include in <code>records.html</code> page <a href=""http://summernote.org/"" rel=""nofollow"">summernote</a> (WYSIWYG html editor). I found this npm module <a href=""https://github.com/Vnkitaev/react-summernote"" rel=""nofollow"">react-summernote</a> and can't make editor works.</p>

<p>This is my code (try 1):</p>

<ul>
<li>application.js</li>
</ul>

<pre><code>var ReactSummernote= window.ReactSummernote = global.ReactSummernote = require('react-summernote');
</code></pre>

<ul>
<li>index.html.erb</li>
</ul>

<pre><code>&lt;%= react_component 'ReactSummernote'%&gt;
</code></pre>

<p>This is my code (try 2):</p>

<ul>
<li>summernote.js.coffee</li>
</ul>

<pre><code>@RichTextEditor = React.createClass
  render: -&gt;
    React.createElement ReactSummernote
</code></pre>

<ul>
<li>index.html.erb</li>
</ul>

<pre><code>&lt;%= react_component 'RichTextEditor'%&gt;
</code></pre>

<p>and got this error</p>

<blockquote>
  <p>react.self-e3251ec….js?body=1:1285 Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of <code>Constructor</code>.</p>
</blockquote>
","4320295","","","","","2016-09-16 23:44:11","How use react components from npm in rails","<ruby-on-rails><reactjs><npm><summernote>","1","0","","",""
"47603937","1","","","2017-12-02 02:23:41","","0","81","<p>I have just created a React application built on Electron and am trying to implement <code>react-router</code>. After much research and a couple hours of headache I am unable to correct this error the Electron Chrome console is presenting me with: </p>

<blockquote>
  <p>bundle.js:1426 Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.</p>
</blockquote>

<p>Without <code>react-router</code> I am able to render components just like any other React application. Here is my code:</p>

<p><strong>index.js</strong></p>

<pre><code>import React, { Component } from 'react';
import { render } from 'react-dom';
import { Router, Route, IndexRoute } from 'react-router';
import createHashHistory from 'history/createHashHistory';

import App from './containers/App';
import Login from './containers/Login';

const routes = (
  &lt;Route path=""/"" component={App}&gt;
    &lt;IndexRoute component={Login} /&gt;
  &lt;/Route&gt;
);

const MOUNT_NODE = document.getElementById('app');

render(
  &lt;Router history={createHashHistory()} routes={routes} /&gt;,
  MOUNT_NODE
);
</code></pre>

<p><strong>containers/App.js</strong></p>

<pre><code>import React, { Component, PropTypes } from 'react';

export default class AppContainer extends Component {
  constructor(props) {
    super(props);
    this.props.children = PropTypes.element.isRequired;
  }

  render() {
    return (
      &lt;div&gt;
        {this.props.children}
      &lt;/div&gt;
    );
  }
}
</code></pre>

<p><strong>containers/Login.js</strong></p>

<pre><code>import React, { Component } from 'react';
import Login from '../components/Login';

export default class LoginContainer extends Component {
  render() {
    return (
      &lt;Login /&gt;
    );
  }
}
</code></pre>

<p><strong>components/Login.js</strong></p>

<pre><code>import React, { Component } from 'react';

export default class Login extends Component {
  render() {
    return (
      &lt;div&gt;
        &lt;h1&gt;Login Component&lt;/h1&gt;
      &lt;/div&gt;
    );
  }
}
</code></pre>

<p>Any ideas on how to remove the quoted error? Thanks in advance.</p>
","3344544","","","","","2017-12-02 02:41:46","Electron - React.createElement: type is invalid error","<javascript><reactjs><react-router><electron>","1","0","","",""
"31653280","1","","","2015-07-27 12:36:10","","1","253","<p>I want to add custom react components (<a href=""http://nikgraf.github.io/belle/#/"" rel=""nofollow"">belle</a>) to my rails app.
I'm using react-rails 1.0.0 for my view layer which i write it with coffeescript.</p>

<p>First of all i am new to Reactjs and my steps thanks to this site <a href=""http://blog.arkency.com/2015/04/bring-commonjs-to-your-asset-pipeline/"" rel=""nofollow"">Bring CommonJS to your asset pipeline </a>moves to <a href=""https://github.com/browserify-rails/browserify-rails"" rel=""nofollow"">browserify-rails</a>
I installed browserify as is on the github page and arkency blog.
Then i run <code>npm install --save belle</code> in the console, i added to my application.js :</p>

<pre><code>var belle = require('belle');
TextInput = belle.TextInput;
</code></pre>

<p>At the end i added to my main component simple component from Belle</p>

<p><code>'&lt;TextInput defaultValue={Update here and see how the input grows} /&gt;'</code></p>

<p>Below my sites.js.coffee file:</p>

<pre><code>@Sites = React.createClass
  getInitialState: -&gt;
    sites: @props.data
  getDefaultState: -&gt;
    sites: []
  render: -&gt;
    React.DOM.div
      className: 'sites_wrapper'
      '&lt;TextInput defaultValue={Update here and see how the input grows} /&gt;'
      for site in @state.sites       
        React.DOM.div
          className: 'col-md-4 text-center'
          React.createElement Site, key: site.id, site: site, articles: site.articles
</code></pre>

<p>The result is that, now i have blank, white page.
This way - add custom component to my rails app, is good?
or is any better way to do this? If for the first question, answer is 'yes', what i make wrong?</p>

<p>Thanks for help.</p>
","3347702","","","","","2015-08-23 17:47:17","How to add custom reactjs components (belle) to my rails app","<ruby-on-rails><reactjs>","1","0","1","",""
"38482701","1","","","2016-07-20 13:29:10","","-1","104","<p>I am new to reactJs and was going through the <a href=""https://github.com/kirupa/kirupa/blob/master/react/todo.htm"" rel=""nofollow"">code</a>. I want the babel format to be converted to javascript. So, I went to the <a href=""https://babeljs.io/repl/"" rel=""nofollow"">site</a> and converted JXS elements to its corresponding element in javascript for react. Now if using the javascript version of the code </p>

<pre><code>render: function render() {
            var _this = this;

            return React.createElement(""div"",{ className: ""todoListMain"" },
              React.createElement(""div"",{ className: ""header"" },
                React.createElement(
                  ""form"",
                  { onSubmit: this.addItem },
                  React.createElement(""input"", { ref: function ref(a) {
                      return _this._inputElement = a;
                    },
                    placeholder: ""enter task"" }),
                  React.createElement(""button"",{ type: ""submit"" },""add""
                  )
                )
              ),
              React.createElement(TodoItems, { entries: this.state.items })
            );
          }
</code></pre>

<p>getting error <code>Uncaught TypeError: Cannot set property '_inputElement' of undefined</code> in the browser console. But when I use the babel version of the same code which is </p>

<pre><code> render: function() {
        return (
          &lt;div className=""todoListMain""&gt;
            &lt;div className=""header""&gt;
              &lt;form onSubmit={this.addItem}&gt;
                &lt;input ref={(a) =&gt; this._inputElement = a}
                       placeholder=""enter task""&gt;
                &lt;/input&gt;
                &lt;button type=""submit""&gt;add&lt;/button&gt;
              &lt;/form&gt;
            &lt;/div&gt;
            &lt;TodoItems entries={this.state.items}/&gt;
          &lt;/div&gt;
        );
      }
</code></pre>

<p>it is working fine. What is creating problem in javascript code which is not happening in babel version ? Is the way of referencing is wrong in javascript version or something else is wrong ?</p>

<p>Javascript converted code added.</p>

<pre><code>var destination = document.querySelector(""#container"");

    var TodoItems = React.createClass({
      displayName: ""TodoItems"",

      render: function render() {
        var todoEntries = this.props.entries;

        function createTasks(item) {
          return React.createElement(""li"",{ key: item.key },item.text
          );
        }

        var listItems = todoEntries.map(createTasks);

        return React.createElement(""ul"",{ className: ""theList"" },listItems
        );
      }
    });

    var TodoList = React.createClass({
          displayName: ""TodoList"",

          getInitialState: function getInitialState() {
            return {
              items: []
            };
          },
          addItem: function addItem(e) {
            var itemArray = this.state.items;

            itemArray.push({
              text: this._inputElement.value,
              key: Date.now()
            });

            this.setState({
              items: itemArray
            });

            this._inputElement.value = """";

            e.preventDefault();
          },

          render: function render() {
            var _this = this;

            return React.createElement(""div"",{ className: ""todoListMain"" },
              React.createElement(""div"",{ className: ""header"" },
                React.createElement(
                  ""form"",
                  { onSubmit: this.addItem },
                  React.createElement(""input"", { ref: function ref(a) {
                      return _this._inputElement = a;
                    },
                    placeholder: ""enter task"" }),
                  React.createElement(""button"",{ type: ""submit"" },""add""
                  )
                )
              ),
              React.createElement(TodoItems, { entries: this.state.items })
            );
          }
    });

    ReactDOM.render(React.createElement(""div"",null,React.createElement(TodoList, null)), destination);
</code></pre>
","6603038","","6603038","","2016-07-20 13:39:47","2016-07-21 15:10:09","Difference between referencing in javascript and babel in reactJS","<javascript><reactjs><jsx>","1","5","","",""
"39501289","1","","","2016-09-14 23:52:18","","23","20753","<p>I'm using ReactJS and when a user clicks a link I want to copy some text to the clipboard.</p>

<p>I am using Chrome 52 and I do not need to support any other browsers.</p>

<p>I can't see why this code does not result in the data being copied to the clipboard. (the origin of the code snippet is from a Reddit post).</p>

<p>Am I doing this wrong? Can anyone suggest is there a ""correct"" way to implement copy to clipboard using reactjs?</p>

<pre><code>copyToClipboard = (text) =&gt; {
  console.log('text', text)
  var textField = document.createElement('textarea')
  textField.innerText = text
  document.body.appendChild(textField)
  textField.select()
  document.execCommand('copy')
  textField.remove()
}
</code></pre>
","627492","","5029266","","2016-09-15 00:49:47","2018-04-17 23:52:14","In reactJS, how to copy text to clipboard?","<javascript><reactjs><clipboard>","6","4","3","",""
"46906703","1","","","2017-10-24 09:21:05","","0","68","<p>I am using <a href=""https://www.npmjs.com/package/react-bootstrap-select"" rel=""nofollow noreferrer"">react-bootstrap-select</a>. But when i run my project, i get an error:</p>

<blockquote>
  <p>TypeError: React.__spread is not a function</p>
</blockquote>

<pre><code> TypeError: React.__spread is not a function
render
d:/PROJECTS/REACT_APP/bsapp/node_modules/react-bootstrap-select/dist/Select.js:58
  55 |   },
  56 |   render: function () {
  57 |     return (
&gt; 58 |       React.createElement(Input, React.__spread({},  this.props, {type: ""select""}))
  59 |     );
  60 |   }
  61 | });
</code></pre>

<p>How to resolve this?</p>
","4384573","","2197181","","2017-10-24 09:23:47","2017-10-24 09:44:05","Bootstrap in react","<reactjs><react-bootstrap>","2","1","","",""
"40189508","1","","","2016-10-22 07:29:45","","0","159","<p>it can Compile  and node successful.  But when open in chrome,crash and warning :React.createElement: type should not be null
, undefined, boolean, or number. It should be a strin
g (for DOM elements) or a ReactClass (for composite c
omponents).</p>

<p>here some files , and exactly  code has no bug. Can anyone help me ?  My OS is winX64</p>

<p>package.json</p>

<pre><code>{
  ""name"": ""babel"",
  ""version"": ""1.0.0"",
  ""description"": ""babel test"",
  ""main"": ""server.js"",
  ""scripts"": {
    ""build"": ""babel -d . src/"",
    ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1""
  },
  ""author"": ""taohx"",
  ""license"": ""ISC"",
  ""dependencies"": {
    ""react"": ""^15.3.2"",
    ""react-dom"": ""^15.3.2""
  },
  ""devDependencies"": {
    ""babel-cli"": ""^6.16.0"",
    ""babel-preset-es2015"": ""^6.16.0"",
    ""babel-preset-react"": ""^6.16.0"",
    ""babel-preset-stage-2"": ""^6.17.0""
  }
}
</code></pre>

<p>here is crash info </p>

<pre><code>Warning: React.createElement: type should not be null, unde
fined, boolean, or number. It should be a string (for DOM e
lements) or a ReactClass (for composite components).
D:\nodeJS\JS\2016-10-21\react_demo\reactBabel\node_modules\
react\node_modules\fbjs\lib\invariant.js:45
    throw error;
    ^

Invariant Violation: Element type is invalid: expected a st
ring (for built-in components) or a class/function (for com
posite components) but got: object.
    at invariant (D:\nodeJS\JS\2016-10-21\react_demo\reactB
abel\node_modules\react\node_modules\fbjs\lib\invariant.js:
38:15)
    at instantiateReactComponent (D:\nodeJS\JS\2016-10-21\r
eact_demo\reactBabel\node_modules\react\lib\instantiateReac
tComponent.js:70:134)
    at D:\nodeJS\JS\2016-10-21\react_demo\reactBabel\node_m
odules\react\lib\ReactServerRendering.js:45:31
    at ReactServerRenderingTransaction.Mixin.perform (D:\no
deJS\JS\2016-10-21\react_demo\reactBabel\node_modules\react
\lib\Transaction.js:138:20)
    at renderToStringImpl (D:\nodeJS\JS\2016-10-21\react_de
mo\reactBabel\node_modules\react\lib\ReactServerRendering.j
s:44:24)
    at Object.renderToString (D:\nodeJS\JS\2016-10-21\react
_demo\reactBabel\node_modules\react\lib\ReactServerRenderin
g.js:74:10)
    at Server.&lt;anonymous&gt; (D:\nodeJS\JS\2016-10-21\react_de
mo\reactBabel\server.js:20:101)
    at emitTwo (events.js:87:13)
    at Server.emit (events.js:172:7)
    at HTTPParser.parserOnIncoming [as onIncoming] (_http_s
erver.js:533:12)
</code></pre>
","7046918","","7046918","","2016-10-24 02:51:52","2016-10-24 02:51:52","Warning: React.createElement: type should not be null , undefined, boolean, or number","<javascript><node.js><reactjs>","1","4","","",""
"38819437","1","","","2016-08-07 23:16:14","","0","58","<p>For some reason I get a complaint in chrome from</p>

<pre><code>import React from 'react';
import {Route, DefaultRoute} from 'react-router';
import App from ""components/app""
import FindView from ""components/find"";
import RememberView from ""components/remember"";
import MetaView from ""components/meta"";
import ExploreView from ""components/explore"";

export default (
  &lt;Route name='pkm' path='/' handler={App}&gt;
   &lt;DefaultRoute handler={RememberView} /&gt;
   &lt;Route name=""remember"" handler={RememberView} /&gt;
   &lt;Route name=""find"" handler={FindView} /&gt;
   &lt;Route name=""meta"" handler={MetaView} /&gt;
   &lt;Route name=""explore"" handler={ExploreView} /&gt;
 &lt;/Route&gt;
);
</code></pre>

<p>at the DefaultRoute line that looks like 
React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components.</p>

<p>I don't see why this is.  All the router examples I have seen for ES6 usage look similar to this.  What am I missing? </p>

<p>And when I attempt to run it I get that it doesn't know what Router is?</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom'
import Router from 'react-router';
import routes from './routes';
import App from 'components/app'

Router.run(routes, Router.HistoryLocation, (App, state) =&gt; {
  ReactDOM.render(&lt;App {...state}/&gt;,      document.getElementById('content'));
});
</code></pre>

<p>module.js:8Uncaught TypeError: Cannot read property 'run' of undefined. </p>

<p>So I am obviously not getting something.  </p>
","","user1969453","","","","2016-08-09 23:36:34","react-router gives warning and then doesn't work","<react-router>","2","1","","",""
"47218671","1","","","2017-11-10 08:40:26","","0","186","<p>I'm unable to initiate a simple onClick event through reactjs with react.net in a MVC 5 View. The data binding and other functions I have written seem to work fine.
I keep getting an error stating alert is undefined, but its just a simple javascript alert which doesn't make any sense. Please see my code below :</p>

<pre><code>class ClickTest extends React.Component {
    ClickMe(){
        alert('the button was clicked');
    };
    render() {
        return (
            &lt;div onClick={this.ClickMe()}&gt;
                Click Me
          &lt;/div&gt;
        );
    }
}
</code></pre>

<p>The code that is generated for my component is below :</p>

<pre><code>// @hash v3-241CABCC1541735262CAFE84D809779D00FA7D7B
// Automatically generated by ReactJS.NET. Do not edit, your changes will be overridden.
// Version: 3.2.0 (build 0e1da66) with Babel 6.7.7
// Generated at: 2017/11/10 12:00:58 PM
///////////////////////////////////////////////////////////////////////////////
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (""value"" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(""Cannot call a class as a function""); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(""this hasn't been initialised - super() hasn't been called""); } return call &amp;&amp; (typeof call === ""object"" || typeof call === ""function"") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== ""function"" &amp;&amp; superClass !== null) { throw new TypeError(""Super expression must either be null or a function, not "" + typeof superClass); } subClass.prototype = Object.create(superClass &amp;&amp; superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HomeComp = function (_React$Component) {
    _inherits(HomeComp, _React$Component);

    function HomeComp() {
        var _Object$getPrototypeO;

        var _temp, _this, _ret;

        _classCallCheck(this, HomeComp);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key &lt; _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(HomeComp)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
            pc: _this.props.pc
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(HomeComp, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                null,
                'Hello ',
                this.state.pc
            );
        }
    }]);

    return HomeComp;
}(React.Component);

var ClickTest = function (_React$Component2) {
    _inherits(ClickTest, _React$Component2);

    function ClickTest() {
        _classCallCheck(this, ClickTest);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ClickTest).apply(this, arguments));
    }

    _createClass(ClickTest, [{
        key: 'ClickMe',
        value: function ClickMe() {
            alert('the button was clicked');
        }
    }, {
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                null,
                React.createElement(
                    'div',
                    { onClick: this.ClickMe },
                    ' Click Me '
                )
            );
        }
    }]);

    return ClickTest;
}(React.Component);
</code></pre>
","7790600","","7790600","","2017-11-10 10:04:24","2017-11-10 10:04:24","react.net onclick function failing","<reactjs><asp.net-mvc-5><reactjs.net>","2","0","","2017-11-10 16:15:24",""
"38355269","1","","","2016-07-13 14:59:20","","1","234","<p>I am trying to use react-leaflet from ClojureScript but I have  problem with the way tiles render:</p>

<ul>
<li>some tiles do not display</li>
<li>there are tile showing next to each other in different cities</li>
</ul>

<p>Here is the code I have:</p>

<pre class=""lang-clj prettyprint-override""><code>(ns carder-devcards.map
  (:require [taoensso.timbre :as timbre]
            [cljsjs.react-leaflet] ;; js/ReactLeaflet
            )
  (:require-macros [devcards.core :as dc :refer [defcard]]))


(defn build
  ([component props]
   (build component props (array)))
  ([component props &amp; children]
   (.createElement js/React
                   component
                   (clj-&gt;js props)
                   (array children))))


(def tile-layer (partial build js/ReactLeaflet.TileLayer))
(def leaflet-map (partial build js/ReactLeaflet.Map))
(def marker (partial build js/ReactLeaflet.Marker))
(def popup (partial build js/ReactLeaflet.Popup))



(defcard simple-leaflet
  (fn [state]
    (let [{:keys [pos zoom] :as st} @state
          tl (tile-layer {:url ""http://{s}.tile.osm.org/{z}/{x}/{y}.png""
                          :attribution ""&amp;copy; &lt;a href=\""http://osm.org/copyright\""&gt;OpenStreetMap&lt;/a&gt; contributors""})
          mk (marker {:position pos})]
      (leaflet-map {:center pos :zoom zoom}
                   tl
                   mk
                   )))
  {:pos [51.505, -0.09]
   :zoom 13}
  {:header true})
</code></pre>

<p>And here is the result I have locally.</p>

<p><a href=""https://i.stack.imgur.com/ztzms.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ztzms.jpg"" alt=""messed tiles""></a></p>

<p>Note: resizing the browser seems to have an effect, so this could be a css problem as well (?). I have tried including the following without effect:</p>

<pre><code>.leaflet-container {
  height: 400px;
  width: 100%;
}
</code></pre>
","1327651","","52509","","2016-07-14 16:36:23","2016-07-14 23:31:54","Clojurescript react-leaflet does not display tiles properly","<clojurescript><react-leaflet>","2","0","","",""
"30415449","1","30415576","","2015-05-23 17:09:57","","0","166","<p>I'm currently working on a site on freelance, and the client is requesting form verification via react.js. I've never used it before, so I'm trying to learn, and of course, my first goal is to get the content on the page. After some fiddling, and finding my mistakes, I finally received no errors, but the content isn't loading on the page. I'm also using bootstrap. File structure is all correct.</p>

<p>Here's my HTML:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=""en""&gt;

&lt;head&gt;
&lt;meta charset=""utf-8""&gt;
&lt;meta http-equiv=""X-UA-Compatible"" content=""IE=edge""&gt;
&lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt;

&lt;title&gt;Site Name&lt;/title&gt;

&lt;!-- Bootstrap --&gt;
&lt;link href=""css/font-awesome.css"" rel=""stylesheet""&gt;
&lt;link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css""&gt;
&lt;link href=""css/styles.css"" rel=""stylesheet""&gt;

&lt;/head&gt;

&lt;body&gt;
&lt;header&gt;
    &lt;nav class=""navbar navbar-defualt dc-navbar navbar-static-top""&gt;
        &lt;div class=""container""&gt;
            &lt;div class=""navbar-header""&gt;
                &lt;button type=""button"" class=""navbar-toggle dc-navbutton collapsed"" data-toggle=""collapse"" data-target=""#navbar"" aria-expanded=""false"" aria-controls=""navbar""&gt;
                    &lt;span class=""sr-only""&gt;
                        Toggle navigation
                    &lt;/span&gt;
                    &lt;span class=""toggle-bar icon-bar""&gt;&lt;/span&gt;
                    &lt;span class=""toggle-bar icon-bar""&gt;&lt;/span&gt;
                    &lt;span class=""toggle-bar icon-bar""&gt;&lt;/span&gt;
                &lt;/button&gt;
                &lt;a class=""navbar-brand unfloat"" href=""#""&gt;
                    &lt;img id=""logo"" src=""img/Service2Rev2.png"" alt=""DockChain""&gt;
                &lt;/a&gt;
            &lt;/div&gt;
            &lt;div id=""navbar"" class=""dc-navbar collapse navbar-collapse""&gt;
                &lt;ul class=""fnt-sec nav-pad nav navbar-nav navbar-left""&gt;
                    &lt;li class=""active""&gt;
                        &lt;a href=""#""&gt;
                            Home
                        &lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li&gt;
                        &lt;a href=""#""&gt;
                          Settings
                        &lt;/a&gt;
                    &lt;/li&gt;
                    &lt;li&gt;
                        &lt;a href=""#""&gt; 
                            About
                        &lt;/a&gt;
                    &lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
            &lt;!--/.nav-collapse --&gt;
        &lt;/div&gt;
    &lt;/nav&gt;
&lt;/header&gt;

&lt;section&gt;
    &lt;div class=""container-fluid""&gt;
        &lt;div class=""main jumbotron""&gt;
            &lt;center class=""fnt-secondary""&gt;
                &lt;h1&gt;Client's Service&lt;/h1&gt;
                &lt;p&gt;Lorem Ipsum Dolor&lt;/p&gt;
                &lt;a href=""#""&gt;
                    &lt;button class=""btn btn-default""&gt;Learn More&lt;/button&gt;
                &lt;/a&gt;
            &lt;/center&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/section&gt;

&lt;section class=""sections""&gt;
    &lt;div class=""container""&gt;
        &lt;div class=""center row""&gt;
            &lt;div class=""col-sm-4""&gt;
                &lt;h2&gt;Safe&lt;/h2&gt;
                &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla non accumsan nulla. Quisque rutrum rutrum condimentum. Aenean lacinia semper egestas. Pellentesque nec tortor eu erat ullamcorper lobortis vitae ut leo. Aliquam ipsum mi, ultrices et posuere id, ornare non quam. Fusce nec augue bibendum, eleifend ipsum viverra, maximus urna. Nullam tincidunt quam id faucibus suscipit.&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class=""col-sm-4""&gt;
                &lt;h2&gt;Secure&lt;/h2&gt;
                &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla non accumsan nulla. Quisque rutrum rutrum condimentum. Aenean lacinia semper egestas. Pellentesque nec tortor eu erat ullamcorper lobortis vitae ut leo. Aliquam ipsum mi, ultrices et posuere id, ornare non quam. Fusce nec augue bibendum, eleifend ipsum viverra, maximus urna. Nullam tincidunt quam id faucibus suscipit.&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class=""col-sm-4""&gt;
                &lt;h2&gt;Verified&lt;/h2&gt;
                &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla non accumsan nulla. Quisque rutrum rutrum condimentum. Aenean lacinia semper egestas. Pellentesque nec tortor eu erat ullamcorper lobortis vitae ut leo. Aliquam ipsum mi, ultrices et posuere id, ornare non quam. Fusce nec augue bibendum, eleifend ipsum viverra, maximus urna. Nullam tincidunt quam id faucibus suscipit.&lt;/p&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/section&gt;

&lt;section class=""sections info-section""&gt;
    &lt;div class=""container""&gt;
        &lt;div class=""some-room row""&gt;
            &lt;div class=""col-md-6""&gt;
                &lt;img class=""center"" src=""img/Service3.png"" alt=""flow chart""&gt;
            &lt;/div&gt;
            &lt;div class=""info-text col-md-6""&gt;
                &lt;h2&gt;This is how we work&lt;/h2&gt;
                &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla non accumsan nulla. Quisque rutrum rutrum condimentum. Aenean lacinia semper egestas. Pellentesque nec tortor eu erat ullamcorper lobortis vitae ut leo. Aliquam ipsum mi, ultrices et posuere id, ornare non quam. Fusce nec augue bibendum, eleifend ipsum viverra, maximus urna. Nullam tincidunt quam id faucibus suscipit. Aenean in enim at est porttitor vestibulum eu quis ipsum. Morbi ac tortor tempus, pulvinar nisi at, sodales urna. In facilisis ut diam vel aliquam. Mauris tempor, nulla non hendrerit rhoncus, leo diam dictum elit, nec molestie ex arcu ac erat. Vivamus malesuada libero eget erat bibendum rutrum. Nunc tempus posuere ornare. Sed eleifend, nisl non ultricies pretium, elit diam dictum orci, in aliquet nisi neque luctus lacus. &lt;/p&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/section&gt;

&lt;div id=""formDiv""&gt;

&lt;/div&gt;

&lt;section&gt;
    &lt;div class=""container-fluid""&gt;
        &lt;div class=""main jumbotron""&gt;
            &lt;center&gt;
                &lt;h1&gt;Here's another focal point&lt;/h1&gt;
                &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla non accumsan nulla. Quisque rutrum rutrum condimentum. Aenean lacinia semper egestas. Pellentesque nec tortor eu erat ullamcorper lobortis vitae ut leo. &lt;/p&gt;
                &lt;a href=""#""&gt;
                    &lt;button class=""btn btn-default""&gt;Call to Action&lt;/button&gt;
                &lt;/a&gt;
            &lt;/center&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/section&gt;

&lt;footer class=""footer""&gt;
    &lt;div class=""container""&gt;
        &lt;div class=""fnt-sec pull-left""&gt;
            &lt;p&gt;&lt;i class=""fa fa-copyright""&gt;&lt;/i&gt; 2015 Client&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=""fnt-sec pull-right""&gt;
            &lt;p&gt;You can have some stuff here too.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/footer&gt;

&lt;script src=""js/jquery.js""&gt;&lt;/script&gt;
&lt;script src=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js""&gt;&lt;/script&gt;
&lt;!-- React.js --&gt;
&lt;script src=""https://fb.me/react-0.13.3.js""&gt;&lt;/script&gt;
&lt;script src=""https://fb.me/JSXTransformer-0.13.3.js""&gt;&lt;/script&gt;

&lt;!-- Form jsx --&gt;
&lt;script src=""comp/Form.jsx"" type=""text/jsx""&gt;&lt;/script&gt;
&lt;script type=""text/jsx""&gt;
    var form = React.createElement(Form);
    function run() {
        React.render(form, document.getElementById('formDiv'));
    }

    if (window.addEventListener) {
        window.addEventListener('DOMContentLoaded', run);
    } else {
        window.attachEvent('onload', run);
    }

&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre>

<p>And here's Form.jsx:</p>

<pre><code>var Form = React.createClass({
render: function () {
    return(
        &lt;div className=""container form-border""&gt;
        &lt;h2&gt;Enter your info to subscribe.&lt;/h2&gt;
        &lt;form&gt;
            &lt;div classNameName=""form-group has-success has-feedback""&gt;
                &lt;label className=""control-label"" for=""name""&gt;Name&lt;/label&gt;
                &lt;input type=""text"" className=""form-control"" id=""nameInput"" placeholder=""Name"" /&gt;
                &lt;span className=""glyphicon glyphicon-ok form-control-feedback""&gt;&lt;/span&gt;
            &lt;/div&gt;
            &lt;div className=""form-group has-warning has-feedback""&gt;
                &lt;label className=""control-label"" for=""emailInput""&gt;Email address&lt;/label&gt;
                &lt;input type=""email"" className=""form-control"" id=""emailInput"" placeholder=""Enter email"" /&gt;
                &lt;span className=""glyphicon glyphicon-warning-sign form-control-feedback""&gt;&lt;/span&gt;
            &lt;/div&gt;
            &lt;div className=""form-group has-error has-feedback""&gt;
                &lt;label className=""control-label"" for=""passInput""&gt;Password&lt;/label&gt;
                &lt;input type=""password"" className=""form-control"" id=""passInput"" placeholder=""Password"" /&gt;
                &lt;span className=""glyphicon glyphicon-remove form-control-feedback""&gt;&lt;/span&gt;
            &lt;/div&gt;
            &lt;div className=""form-group""&gt;
                &lt;label for=""comments""&gt;Comments&lt;/label&gt;
                &lt;textarea className=""form-control"" id=""commentInput"" rows=""3"" placeholder=""Enter comments here""&gt;&lt;/textarea&gt;
            &lt;/div&gt;
            &lt;div className=""row""&gt;
                &lt;div className=""col-xs-6""&gt;
                    &lt;div className=""form-group""&gt;
                        &lt;div className=""checkbox-inline""&gt;
                            &lt;label&gt;
                                &lt;input type=""checkbox"" value="""" checked /&gt; Option one
                            &lt;/label&gt;
                        &lt;/div&gt;
                        &lt;div className=""checkbox-inline""&gt;
                            &lt;label&gt;
                                &lt;input type=""checkbox"" value="""" /&gt;Option two
                            &lt;/label&gt;
                        &lt;/div&gt;
                        &lt;div className=""checkbox disabled""&gt;
                            &lt;label&gt;
                                &lt;input type=""checkbox"" value="""" disabled /&gt; Option three (disabled)
                            &lt;/label&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                    &lt;div className=""form-group""&gt;
                        &lt;div className=""radio-inline""&gt;
                            &lt;label&gt;
                                &lt;input type=""radio"" name=""optionsRadios"" id=""optionsRadios1"" value=""option1"" checked /&gt;Option one
                            &lt;/label&gt;
                        &lt;/div&gt;
                        &lt;div className=""radio-inline""&gt;
                            &lt;label&gt;
                                &lt;input type=""radio"" name=""optionsRadios"" id=""optionsRadios2"" value=""option2"" /&gt;Option two
                            &lt;/label&gt;
                        &lt;/div&gt;
                        &lt;div className=""radio disabled""&gt;
                            &lt;label&gt;
                                &lt;input type=""radio"" name=""optionsRadios"" id=""optionsRadios3"" value=""option3"" disabled /&gt; Option three (disabled)
                            &lt;/label&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;div className=""col-xs-6""&gt;
                   &lt;div className=""form-group""&gt;
                   &lt;label for=""jobForm""&gt;How would you describe yourself?&lt;/label&gt;
                    &lt;select name=""profession"" id=""profession"" className=""form-control""&gt;
                        &lt;option value=""default""&gt;Select an option...&lt;/option&gt;
                        &lt;option value=""developer""&gt;Developer&lt;/option&gt;
                        &lt;option value=""designer""&gt;Designer&lt;/option&gt;
                        &lt;option value=""director""&gt;Director/Manager&lt;/option&gt;
                        &lt;option value=""joke""&gt;Puppet Maker&lt;/option&gt;
                    &lt;/select&gt;
                    &lt;/div&gt;
                    &lt;div className=""form-group""&gt;
                        &lt;label for=""useForm""&gt;How will you be using this service?&lt;/label&gt;
                        &lt;select name=""use"" id=""use"" className=""form-control"" multiple&gt;
                            &lt;option value=""personal""&gt;Personal&lt;/option&gt;
                            &lt;option value=""production""&gt;Production&lt;/option&gt;
                            &lt;option value=""corporate""&gt;Corporate&lt;/option&gt;
                            &lt;option value=""joke""&gt;With gusto&lt;/option&gt;
                        &lt;/select&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;button type=""submit"" className=""center btn btn-default""&gt;Submit&lt;/button&gt;
        &lt;/form&gt;
    &lt;/div&gt;
        );        
  }
});
</code></pre>

<p>I removed references to the client's service in file names and headers for confidentiality. I can't find why it isn't loading. Can anyone see something I can't?</p>
","2733819","","","","","2015-05-23 17:21:43","Using react.js, I receive no errors, but content doesn't load","<javascript><twitter-bootstrap><reactjs>","1","4","","",""
"40209935","1","","","2016-10-24 02:32:27","","2","156","<p>I have <code>Login.js</code> and this is the code:</p>

<pre><code>import React, {Component} from 'react';
import {FormGroup, FormControl} from 'react-bootstrap';
class Login extends Component {
render() {
    return (
        &lt;div className=""middle-box text-center loginscreen animated fadeInDown""&gt;
            &lt;div&gt;
                &lt;h1 className=""logo-name""&gt;Pz&lt;/h1&gt;                    
            &lt;/div&gt;
            &lt;form&gt;
                &lt;FormGroup bsSize=""large""&gt;
                    &lt;FormControl type=""text"" placeholder=""Large text"" /&gt;
                &lt;/FormGroup&gt;
            &lt;/form&gt;
        &lt;/div&gt;
    )
  }
}
export default Login
</code></pre>

<p>This is my routes.js</p>

<pre><code>import React from 'react'
import Main from '../components/layouts/Main';
import Blank from '../components/layouts/Blank';

import LoginView from '../views/Login';
import MainView from '../views/Main';
import MinorView from '../views/Minor';

import { Route, Router, IndexRedirect, browserHistory} from 'react-router';

export default (
    &lt;Router history={browserHistory}&gt;
        &lt;Route path=""/"" component={Main}&gt;
            &lt;IndexRedirect to=""/main"" /&gt;
            &lt;Route path=""main"" component={MainView}&gt; &lt;/Route&gt;
            &lt;Route path=""minor"" component={MinorView}&gt; &lt;/Route&gt;
            &lt;Route path=""login"" component={LoginView}&gt; &lt;/Route&gt;
        &lt;/Route&gt;
    &lt;/Router&gt;

);
</code></pre>

<p>The error is :</p>

<p><strong>warning.js:45 Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of <code>Login</code>.</strong></p>

<p><strong>invariant.js:39 Uncaught Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. Check the render method of <code>Login</code>.</strong></p>

<p>Whats wrong with the code? please help</p>
","3470162","","3470162","","2016-10-24 02:49:42","2016-10-24 03:44:34","Reactjs error when importing react-bootstrap","<reactjs><react-router><react-jsx><jsx><react-bootstrap>","1","0","","",""
"39125139","1","","","2016-08-24 13:48:08","","2","376","<p>I'm trying to create a custom Typescript definition for <a href=""https://www.npmjs.com/package/react-bootstrap-typeahead"" rel=""nofollow"">react-bootstrap-typeahead</a>. So far, here's what I have based on the documentation:</p>

<pre><code>// Custom made typings based on exampes: https://github.com/ericgio/react-bootstrap-typeahead

declare namespace ReactBootstrapTypeahead {
    import React = __React;

    // Input
    class ReactBootstrapTypeahead extends React.Component&lt;ReactBootstrapTypeaheadProps, any&gt; {

    }

    interface ReactBootstrapTypeaheadProps extends React.HTMLProps&lt;ReactBootstrapTypeahead&gt; {
        align?: string;
        allowNew?: boolean;
        defaultSelected?: any[];
        disabled?: boolean;
        emptyLabel?: string;
        labelKey?: string;
        maxHeight?: number;
        minLength?: number;
        multiple?: boolean;
        name?: string;
        newSelectionPrefix?: string;
        onBlur?(): any;
        onChange?(): any;
        onInputChange?(): any;
        options: any[];
        paginateResults?: number;
        paginationText?: string;
        placeholder?: string;
        renderMenuItemChildren?(): any;
    }
}

declare module 'react-bootstrap-typeahead' {
    export = ReactBootstrapTypeahead;
}
</code></pre>

<p>I'm getting a couple errors when I try to use the component:</p>

<pre><code>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components).

Uncaught Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined.
</code></pre>

<p>I'm new to this whole Typescript definitions thing so any help would be appreciated.</p>
","2392174","","","","","2016-08-24 14:22:44","Custom Typescript Definition for react-boostrap-typeahead","<javascript><reactjs><typescript>","1","1","","",""
"47115896","1","47150494","","2017-11-04 21:39:55","","1","341","<p>Exact Error:</p>

<pre><code>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for co
mposite components) but got: object.
    in Posts
    in Connect(Posts)
    in Route
    in Switch
    in div
    in App
    in Route
    in Switch
    in div
    in Router
    in StaticRouter
    in Provider
</code></pre>

<p>I am getting error with doing server side rendering with react router 4. The error doesn't really point to anything in particular, but I think this comes from how I use the routes and exporting the components. I will post relevant code to this problem.</p>

<p>For client code I will post one component container since I <code>export</code> all of them in the same way. I just want you to get a since on how this is done. The component itself works just fine so I will be posting the export code at the bottom. </p>

<p>Note: this is a full working demo project (<a href=""https://github.com/tbaustin/demo-SSR-RR4"" rel=""nofollow noreferrer"">https://github.com/tbaustin/demo-SSR-RR4</a>) and I use this same technique. I am also using turbo which is a scaffold type of system for react/redux. You will see that the <code>app.js</code> looks a little different than a normal express application, but I ensure you it works the same.</p>

<p><strong>SERVER:</strong> </p>

<p>app.js:</p>

<pre><code>require('babel-core/register')({
  presets: ['env', 'react', 'stage-0', 'stage-1']
});

const pkg_json = require('./package.json');
const vertex = require('vertex360')({ site_id: pkg_json.app });
var renderer = require('./renderer.js');

// initialize app
const app = vertex.app();

// import routes
const index = require('./routes/index');
const api = require('./routes/api');

// hopefully will be used on every Route, this should handle SSR RR4
app.use(renderer);

// set routes
app.use('/', index);
app.use('/api', api); // sample API Routes

module.exports = app;
</code></pre>

<p>renderer.js:</p>

<pre><code>import React from 'react';
import { renderToString } from 'react-dom/server';
import { StaticRouter } from 'react-router-dom';
import { Provider } from 'react-redux';
import { renderRoutes } from 'react-router-config';
import serialize from 'serialize-javascript';
import { Helmet } from 'react-helmet';
import { matchRoutes } from 'react-router-config';

import routes from './src/routes';
import createStore from './src/stores';

function handleRender(res, req) {
  const store = createStore.configure(null); // create Store in order to get data from redux

  const promises = matchRoutes(routes, req.path)
    .map(({ route }) =&gt; {
      // Matches the route and loads data if loadData function is there
      return route.loadData ? route.loadData(store) : null;
    })
    .map(promise =&gt; {
      if (promise) {
        return new Promise((resolve, reject) =&gt; {
          promise.then(resolve).catch(resolve); // lets all data load even if route fails
        });
      }
    });

  Promise.all(promises).then(() =&gt; {
    const context = {};
    if (context.url) {
      return res.redirect(301, context.url); // redirect for non auth users
    }

    if (context.notFound) {
      res.status(404); // set status to 404 for unknown route
    }

    const content = renderToString(
      &lt;Provider store={store}&gt;
        &lt;StaticRouter location={req.path} context={context}&gt;
          &lt;div&gt;{renderRoutes(routes)}&lt;/div&gt;
        &lt;/StaticRouter&gt;
      &lt;/Provider&gt;
    );

    const initialState = serialize(store.getState());

    const helmet = Helmet.renderStatic();

    res.render('index', { content, initialState, helmet });
  });
}

module.exports = handleRender;
</code></pre>

<p>index.mustache:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html dir=""ltr"" lang=""en-US""&gt;
&lt;head&gt;
    {{{ helmet.title }}}
    {{{ helmet.meta }}}
  &lt;meta http-equiv=""content-type"" content=""text/html; charset=utf-8"" /&gt;
  &lt;link href=""https://fonts.googleapis.com/css?family=Pathway+Gothic+One:300,400,500,600,700|Lato:300,400,400italic,600,700|Raleway:300,400,500,600,700|Crete+Round:400italic"" rel=""stylesheet"" type=""text/css"" /&gt;
    &lt;link href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M"" crossorigin=""anonymous""&gt;
    &lt;link rel=""stylesheet"" href=""/dist/css/style.min.css"" type=""text/css"" /&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div id=""root""&gt;{{{ content }}}&lt;/div&gt;


    &lt;!-- Turbo library imports: jQuery, Turbo CDN, sample app.js --&gt;
    &lt;script&gt;
        window.INITIAL_STATE = {{{ initialState }}}
    &lt;/script&gt;
    &lt;script type=""text/javascript"" src=""/dist/js/vendor.min.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript"" src=""https://cdn.turbo360-dev.com/dist/turbo.min.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript"" src=""/dist/bundle/commons.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript"" src=""/dist/bundle/app.js""&gt;&lt;/script&gt; &lt;!-- React code bundle --&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p><strong>CLIENT:</strong></p>

<p>index.js:</p>

<pre><code>import React, { Component } from 'react';
import ReactDOM from 'react-dom';
import { Provider } from 'react-redux';
import { BrowserRouter } from 'react-router-dom';
import { renderRoutes } from 'react-router-config';

import store from './stores';
import routes from './routes';

const initialState = window.INITIAL_STATE;

ReactDOM.hydrate(
  &lt;Provider store={store.configure(initialState)}&gt;
    &lt;BrowserRouter&gt;
      &lt;div&gt;{renderRoutes(routes)}&lt;/div&gt;
    &lt;/BrowserRouter&gt;
  &lt;/Provider&gt;,
  document.getElementById('root')
);
</code></pre>

<p>Root App component:</p>

<pre><code>import React from 'react';
import { renderRoutes } from 'react-router-config';

import Header from './partials/Header';
import actions from '../actions';

const App = ({ route }) =&gt; {
  return (
    &lt;div&gt;
      &lt;Header /&gt;
      {renderRoutes(route.routes)}
    &lt;/div&gt;
  );
};

export default {
  component: App,
  loadData: ({ dispatch }) =&gt; dispatch(actions.currentUser())
};
</code></pre>

<p>Posts.js:</p>

<pre><code>import React, { Component } from 'react';
import { connect } from 'react-redux';
import swal from 'sweetalert';
import { Link } from 'react-router-dom';

import { CreatePost } from '../view';
import { Account } from '../containers';
import actions from '../../actions';
import { DateUtils } from '../../utils';

class Posts extends Component {
  componentDidMount() {
    if (this.props.post.all == null) {
      this.props
        .fetchPosts({})
        .then(response =&gt; {
          return null;
        })
        .catch(err =&gt; {
          console.log(err);
        });
    }
    if (this.props.reply.all == null) {
      this.props
        .getReplies({})
        .then(() =&gt; {
          return null;
        })
        .catch(err =&gt; {
          console.log(err);
        });
    }
  }

  createPost(params) {
    const { currentUser } = this.props.user;
    if (currentUser == null) {
      swal({
        title: 'Oops...',
        text: 'Please Login or Register before posting',
        type: 'error'
      });
      return;
    }

    const updated = Object.assign({}, params, { profile: currentUser });

    this.props
      .createPost(updated)
      .then(data =&gt; {
        swal({
          title: 'Post Created',
          text: `Title: ${data.title}`,
          type: 'success'
        });
      })
      .catch(err =&gt; {
        console.log(err);
      });
  }

  render() {
    const posts = this.props.post.all;
    const { currentUser } = this.props.user;
    return (
      &lt;div&gt;
        &lt;div className=""row""&gt;
          &lt;div className=""col-sm-8""&gt;
            &lt;div className=""card-columns""&gt;
              {posts == null
                ? null
                : posts.map(post =&gt; {
                    return (
                      &lt;div
                        key={post.id}
                        className=""card text-white bg-dark mb-3""
                        style={{ maxWidth: '20rem' }}
                      &gt;
                        &lt;div className=""card-header""&gt;
                          &lt;Link to={`/post/${post.id}`}&gt;
                            &lt;img className=""card-img-top"" src={post.image} alt=""Card image cap"" /&gt;
                          &lt;/Link&gt;
                        &lt;/div&gt;
                        &lt;div className=""card-body text-white""&gt;
                          &lt;h4 className=""card-title"" style={{ color: 'white' }}&gt;
                            {post.title.length &gt; 17 ? post.title.substr(0, 17) + '...' : post.title}
                          &lt;/h4&gt;
                          &lt;p className=""card-text""&gt;
                            {post.text.length &gt; 30 ? post.text.substr(0, 30) + '...' : post.text}
                          &lt;/p&gt;
                          &lt;span&gt;
                            ~{' '}
                            &lt;Link to={`/profile/${post.profile.id}`} style={{ color: 'white' }}&gt;
                              &lt;strong&gt;{post.profile.username || 'Anonymous'}&lt;/strong&gt;
                            &lt;/Link&gt;
                          &lt;/span&gt;
                        &lt;/div&gt;
                        &lt;div className=""card-footer""&gt;
                          &lt;small className=""text-muted""&gt;
                            {DateUtils.relativeTime(post.timestamp)}
                          &lt;/small&gt;
                        &lt;/div&gt;
                      &lt;/div&gt;
                    );
                  })}
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div className=""col-sm-4""&gt;
            &lt;div className=""row""&gt;
              &lt;div className=""col-sm-12""&gt;
                &lt;Account /&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            {currentUser == null ? null : (
              &lt;div className=""row"" style={{ marginTop: '25px' }}&gt;
                &lt;div className=""row""&gt;
                  &lt;div className=""col-sm-12""&gt;
                    &lt;h3&gt;Create a Post&lt;/h3&gt;
                  &lt;/div&gt;
                &lt;/div&gt;
                &lt;div className=""row""&gt;
                  &lt;div className=""col-sm-12""&gt;
                    &lt;CreatePost onCreate={this.createPost.bind(this)} /&gt;
                  &lt;/div&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            )}
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    );
  }
}

const stateToProps = state =&gt; {
  return {
    post: state.post,
    user: state.user,
    reply: state.reply
  };
};

const dispatchToProps = dispatch =&gt; {
  return {
    createPost: params =&gt; dispatch(actions.createPost(params)),
    fetchPosts: params =&gt; dispatch(actions.fetchPosts(params)),
    getReplies: params =&gt; dispatch(actions.getReplies(params))
  };
};

const loadData = store =&gt; {
  return store.dispatch(actions.fetchPosts());
};

export default {
  loadData: loadData,
  component: connect(stateToProps, dispatchToProps)(Posts)
};
</code></pre>

<p><strong>CLIENT/SERVER ROUTES:</strong></p>

<pre><code>import React from 'react';

import { Post, Posts, Profile, NotFound } from './components/containers';
import App from './components/App';

export default [
  {
    ...App,
    routes: [
      {
        ...Posts,
        path: '/',
        exact: true
      },
      {
        ...Post,
        path: '/post/:id'
      },
      {
        ...Profile,
        path: '/profile/:id'
      },
      {
        ...NotFound
      }
    ]
  }
];
</code></pre>
","8551819","","8551819","","2017-11-07 02:07:54","2017-11-07 05:25:15","Server Side Rendering with React Router Dom getting error: Warning: React.createElement: type is invalid -- expected a string","<javascript><reactjs><redux><serverside-rendering>","1","3","","",""
"38954298","1","","","2016-08-15 11:34:14","","0","432","<p>I'm trying to make a simple react web apps with facebook auth for login and the authorization using react-facebook-login from the npmjs package, but it's always blocked by a popup-blocker. My code is thus:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>  static defaultProps = {
    textButton: 'Login with Facebook',
    scope: 'public_profile, email',
    xfbml: false,
    cookie: false,
    size: 'metro',
    fields: 'name',
    cssClass: 'kep-login-facebook',
    version: '2.3',
    language: 'en_US',
    uri: encodeURI('http://myapps.com');
  };

    document.body.appendChild(fbRoot);

    window.fbAsyncInit = () =&gt; {
      FB.init({
        appId: this.props.appId,
        xfbml: this.props.xfbml,
        cookie: this.props.cookie,
        version: 'v' + this.props.version,
      });

      if (this.props.autoLoad) {
        FB.getLoginStatus(this.checkLoginState);
      }
    };

    ((d, s, id) =&gt; {
      const element = d.getElementsByTagName(s)[0];
      const fjs = element;
      let js = element;
      if (d.getElementById(id)) {return;}
      js = d.createElement(s); js.id = id;
      js.src = '//connect.facebook.net/' + this.props.language + '/all.js';
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
  }

  responseApi = (authResponse) =&gt; {
    FB.api('/me', { fields: this.props.fields }, (me) =&gt; {
      Object.assign(me, authResponse)
      this.props.callback(me);
    });
  };

  checkLoginState = (response) =&gt; {
    if (response.authResponse) {
      this.responseApi(response.authResponse);
    } else {
      if (this.props.callback) {
        this.props.callback({ status: response.status });
      }
    }
  };

  click = () =&gt; {
    FB.login(this.checkLoginState, { scope: this.props.scope });
  };</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react.min.js""&gt;&lt;/script&gt;
&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react-dom.min.js""&gt;&lt;/script&gt;</code></pre>
</div>
</div>
</p>
","2118636","","757508","","2016-08-15 12:44:08","2016-08-15 12:44:57","How to disable react-facebook-login pop-up?","<reactjs><facebook-javascript-sdk><facebook-login>","1","2","","",""
"47590559","1","","","2017-12-01 09:43:10","","0","243","<p>I have downloaded one theme and wanted to integrate with Rails + react using <a href=""https://github.com/rails/webpacker"" rel=""nofollow noreferrer"">webpacker gem</a>. I am able to load css files of theme to my react component in new application but JS files are not working i.e. scrolling is not working and contact me form validations are also not working. <a href=""https://react-webpacker-rails.herokuapp.com"" rel=""nofollow noreferrer"">Demo Site</a>.</p>

<p><strong>app/views/layouts/application.html.erb</strong></p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt;
    &lt;title&gt;Optics&lt;/title&gt;
    &lt;meta name=""description"" content=""""&gt;
    &lt;meta name=""author"" content=""""&gt;

    &lt;%= csrf_meta_tags %&gt;

    &lt;link href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"" crossorigin=""anonymous""&gt;
    &lt;link href=""https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"" rel=""stylesheet"" integrity=""sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN"" crossorigin=""anonymous""&gt;
    &lt;%= stylesheet_pack_tag 'stylesheets/style' %&gt;
    &lt;%= stylesheet_pack_tag 'stylesheets/prettyPhoto' %&gt;
    &lt;%= stylesheet_pack_tag 'stylesheets/public' %&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;%= javascript_pack_tag 'app' %&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p><strong>app/javascript/packs/app.js</strong></p>

<pre><code>import Modernizr from 'modernizr';
import React from 'react';
import ReactDOM from 'react-dom';
import WelcomePage from './components/welcomes/WelcomePage';
import ""jquery"";
import ""bootstrap"";
import ""SmoothScroll"";
import ""jquery.prettyPhoto"";
import ""jquery.isotope.js"";
import ""jqBootstrapValidation"";
import ""contact_me"";
import ""main"";

document.addEventListener('DOMContentLoaded', () =&gt; {
  ReactDOM.render(
    &lt;WelcomePage/&gt;,
    document.body.appendChild(document.createElement('div')),
  )
})
</code></pre>

<p><strong>config/webpack/environment.js</strong></p>

<pre><code>const { environment } = require('@rails/webpacker')

const webpack = require('webpack')

environment.plugins.set('Provide',  new webpack.ProvidePlugin({
    $: 'jquery',
    jQuery: 'jquery',
    jquery: 'jquery',
    bootstrap: 'bootstrap/dist/js/bootstrap'
  })
)

const config = environment.toWebpackConfig()

config.resolve.alias = {
  $: 'jquery',
  jQuery: 'jquery',
  jquery: 'jquery',
  bootstrap: 'bootstrap/dist/js/bootstrap'
}
module.exports = environment
</code></pre>

<p><strong>config/webpacker.yml</strong></p>

<pre><code>  default: &amp;default
  source_path: app/javascript
  source_entry_path: packs
  public_output_path: packs
  cache_path: tmp/cache/webpacker

  resolved_paths: ['app/javascript/packs/scripts']

  cache_manifest: false

  extensions:
    - .erb
    - .js
    - .jsx
    - .css
    - .png
    - .jpeg

development:
  &lt;&lt;: *default
  compile: true

  dev_server:
    https: false
    host: localhost
    port: 3035
    public: localhost:3035
    hmr: false
    # Inline should be set to true if using HMR
    inline: true
    overlay: true
    disable_host_check: true
    use_local_ip: false

production:
  &lt;&lt;: *default
  compile: false
  cache_manifest: true
</code></pre>

<p><strong>config/webpack/custom.js</strong></p>

<pre><code>const path = require('path');

module.exports = {
  module: {
    rules: [
      {
        test: /\.modernizrrc.js$/,
        use: [ 'modernizr-loader' ]
      },
      {
        test: /\.modernizrrc(\.json)?$/,
        use: [ 'modernizr-loader', 'json-loader' ]
      }
    ]
  },
  resolve: {
    alias: {
      modernizr$: path.resolve(__dirname, ""../../app/javascript/packs/.modernizrrc"")
    }
  }
}
</code></pre>

<p>I have tried so many options but not get any solution. </p>

<p>Thanks in advance :-)</p>
","4797110","","","","","2017-12-01 09:43:10","Theme JS files are not working with webpacker 3 + react + rails 5.1.4","<javascript><ruby-on-rails><reactjs><ruby-on-rails-5><webpacker>","0","0","","",""
"38483936","1","","","2016-07-20 14:23:24","","1","394","<p>I have a problem while integrating react-draggable-tab (<a href=""https://github.com/georgeOsdDev/react-draggable-tab"" rel=""nofollow noreferrer"">https://github.com/georgeOsdDev/react-draggable-tab</a>) into my React JS/Play Framework application.</p>

<p>I have rewrite code example from the app.js (<a href=""https://github.com/georgeOsdDev/react-draggable-tab/blob/develop/example/app.js"" rel=""nofollow noreferrer"">https://github.com/georgeOsdDev/react-draggable-tab/blob/develop/example/app.js</a>) in the project example directory into my .jsx component:</p>

<pre><code>'use strict';

import _ from 'lodash';
import React from 'react';
import ContentWrapper from '../Layout/ContentWrapper';
import { Grid, Row, Col, Dropdown, Panel} from 'react-bootstrap';

import spdf from ""simple-react-pdf"";

import PanelsRun from './Panels.run';

import injectTapEventPlugin from 'react-tap-event-plugin';
injectTapEventPlugin();
import getMuiTheme from 'material-ui/styles/getMuiTheme';
import {Dialog, FlatButton, Menu, MenuItem, TextField} from 'material-ui';


import Tabs from 'react-draggable-tab';
import Tab from 'react-draggable-tab';


import DynamicTabContent from 'react-draggable-tab';
import DynamicTabBadge from 'react-draggable-tab';


//allow react dev tools work
window.React = React;


const tabsClassNames = {
    tabWrapper: 'myWrapper',
    tabBar: 'myTabBar',
    tabBarAfter: 'myTabBarAfter',
    tab:      'myTab',
    tabTitle: 'myTabTitle',
    tabCloseIcon: 'tabCloseIcon',
    tabBefore: 'myTabBefore',
    tabAfter: 'myTabAfter'
};

const tabsStyles = {
    tabWrapper: {marginTop: '10px'},
    tabBar: {},
    tab:{},
    tabTitle: {},
    tabCloseIcon: {},
    tabBefore: {},
    tabAfter: {}
};


class CVs extends React.Component {
    constructor(props) {
        super(props);
        let icon = (&lt;image src='icon.png' style={{height:'13px'}}/&gt;);
        let fonticon = (&lt;icon className='icon-html5'/&gt;);
        let badge = (&lt;DynamicTabBadge /&gt;);

        this.state = {
            tabs:[
                (&lt;Tab key={'tab0'} title={'unclosable tab'} disableClose={true} &gt;
                    &lt;div&gt;
                        &lt;h1&gt;This tab cannot close&lt;/h1&gt;
                    &lt;/div&gt;
                &lt;/Tab&gt;),
                (&lt;Tab key={'tab1'} title={'1stTab'} beforeTitle={icon} &gt;
                    &lt;div&gt;
                        &lt;h1&gt;This is tab1&lt;/h1&gt;
                    &lt;/div&gt;
                &lt;/Tab&gt;),
                (&lt;Tab key={'tab2'} title={'2ndTab Too long Toooooooooooooooooo long'} beforeTitle={fonticon} &gt;
                    &lt;div&gt;
            &lt;pre&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit,
            &lt;/pre&gt;
                    &lt;/div&gt;
                &lt;/Tab&gt;),
                (&lt;Tab key={'tab3'} title={'Dynamic tab'} afterTitle={badge}&gt;
                    &lt;DynamicTabContent/&gt;
                &lt;/Tab&gt;)
            ],
            badgeCount: 0
        };
    }

    handleTabSelect(e, key, currentTabs) {
        console.log('handleTabSelect key:', key);
        this.setState({selectedTab: key, tabs: currentTabs});
    }

    handleTabClose(e, key, currentTabs) {
        console.log('tabClosed key:', key);
        this.setState({tabs: currentTabs});
    }

    handleTabPositionChange(e, key, currentTabs) {
        console.log('tabPositionChanged key:', key);
        this.setState({tabs: currentTabs});
    }

    handleTabAddButtonClick(e, currentTabs) {
        // key must be unique
        const key = 'newTab_' + Date.now();
        let newTab = (&lt;Tab key={key} title='untitled'&gt;
            &lt;div&gt;
                &lt;h1&gt;New Empty Tab&lt;/h1&gt;
            &lt;/div&gt;
        &lt;/Tab&gt;);
        let newTabs = currentTabs.concat([newTab]);

        this.setState({
            tabs: newTabs,
            selectedTab: key
        });
    }

    render() {

        return (
            &lt;ContentWrapper&gt;
                    &lt;Tabs
                        tabsClassNames={tabsClassNames}
                        tabsStyles={tabsStyles}
                        selectedTab={this.state.selectedTab ? this.state.selectedTab : ""tab2""}
                        onTabSelect={this.handleTabSelect.bind(this)}
                        onTabClose={this.handleTabClose.bind(this)}
                        onTabAddButtonClick={this.handleTabAddButtonClick.bind(this)}
                        onTabPositionChange={this.handleTabPositionChange.bind(this)}
                        tabs={this.state.tabs}
                        shortCutKeys={
                  {
                    'close': ['alt+command+w', 'alt+ctrl+w'],
                    'create': ['alt+command+t', 'alt+ctrl+t'],
                    'moveRight': ['alt+command+tab', 'alt+ctrl+tab'],
                    'moveLeft': ['shift+alt+command+tab', 'shift+alt+ctrl+tab']
                  }
                }
                    /&gt;
            &lt;/ContentWrapper&gt;
        );
    }
};



CVs.childContextTypes = {
    muiTheme: React.PropTypes.object
};

export default CVs;
</code></pre>

<p>The render method of the component above causes following exception:</p>

<pre><code>app.js:1 Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of `CVs`.warning @ app.js:1

app.js:1 Uncaught Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. Check the render method of `CVs`.
</code></pre>

<p>None of the following seem to apply to my case:
<a href=""https://stackoverflow.com/questions/34130539/uncaught-error-invariant-violation-element-type-is-invalid-expected-a-string"">Uncaught Error: Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function but got: object</a></p>

<p>Additionaly I provide files which may be helpful.</p>

<p>Main view:</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import { Router, Route, Link, hashHistory, browserHistory, IndexRoute } from 'react-router';

import initTranslation from './components/Common/localize';
import initLoadCss from './components/Common/load-css';

import Base from './components/Layout/Base';
import BasePage from './components/Layout/BasePage';
import BaseHorizontal from './components/Layout/BaseHorizontal';

import SingleView from './components/SingleView/SingleView';
import SubMenu from './components/SubMenu/SubMenu';
import Candidates from './components/Candidates/Candidates';
import CVs from './components/CVs/CVs';


// Init translation system
initTranslation();
// Init css loader (for themes)
initLoadCss();


ReactDOM.render(
    &lt;Router history={browserHistory}&gt;

        &lt;Route path=""/"" component={Base}&gt;

            {/* Default route*/}
            &lt;IndexRoute component={SingleView} /&gt;

            &lt;Route path=""singleview"" component={SingleView}/&gt;
            &lt;Route path=""submenu"" component={SubMenu}/&gt;
            &lt;Route path=""candidates"" component={Candidates}/&gt;
            &lt;Route path=""cvs"" component={CVs}/&gt;

        &lt;/Route&gt;

        {/* Not found handler */}
        {/*&lt;Route path=""*"" component={NotFound}/&gt;*/}

    &lt;/Router&gt;,
    document.getElementById('app')
);
</code></pre>

<p>package.json</p>

<pre><code>{
  ""name"": ""play-react-webpack"",
  ""version"": ""1.0.0"",
  ""description"": ""Playframework + React Js + webpack"",
  ""main"": ""index.js"",
  ""author"": ""Nouhoum Traoré"",
  ""license"": ""BSD-2-Clause"",
  ""directories"": {
    ""test"": ""test""
  },
  ""scripts"": {
    ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1"",
    ""prestart"": ""bower install"",
    ""start"": ""npm install"",
    ""poststart"": ""gulp""
  },
  ""repository"": {
    ""type"": ""git"",
    ""url"": ""git+https://github.com/nouhoum/play-react-webpack.git""
  },
  ""keywords"": [
    ""play"",
    ""reactjs"",
    ""webpack""
  ],
  ""bugs"": {
    ""url"": ""https://github.com/nouhoum/play-react-webpack/issues""
  },
  ""homepage"": ""https://github.com/nouhoum/play-react-webpack#readme"",
  ""dependencies"": {
    ""alt"": ""^0.18.4"",
    ""classnames"": ""2.2.5"",
    ""history"": ""^2.0.0-rc2"",
    ""pubsub-js"": ""^1.5.3"",
    ""react"": ""15.2.1"",
    ""react-addons-css-transition-group"": ""15.2.1"",
    ""react-bootstrap"": ""^0.28.2"",
    ""react-bootstrap-table"": ""^2.3.6"",
    ""react-dom"": ""15.2.1"",
    ""react-draggable-tab"": ""^0.7.0"",
    ""react-router"": ""2.5.2 "",
    ""react-router-bootstrap"": ""0.23.0"",
    ""simple-react-pdf"": ""1.0.6""
  },
  ""devDependencies"": {
    ""babel-core"": ""6.10.4"",
    ""babel-loader"": ""6.2.4"",
    ""babel-plugin-react-require"": ""2.1.0"",
    ""babel-plugin-transform-react-jsx"": ""6.8.0"",
    ""babel-plugin-add-module-exports"": ""0.2.1"",
    ""babel-preset-es2015"": ""6.9.0"",
    ""babel-preset-react"": ""6.11.1"",
    ""babel-preset-stage-0"": ""6.0.15"",
    ""browser-sync"": ""^2.11.0"",
    ""css-loader"": ""^0.23.1"",
    ""eslint"": ""^2.12.0"",
    ""eslint-loader"": ""^1.3.0"",
    ""gulp-bundle-assets"": ""^2.27.1"",
    ""gulp-changed"": ""^1.1.0"",
    ""gulp-concat"": ""^2.4.1"",
    ""gulp-cssnano"": ""^2.1.1"",
    ""gulp-expect-file"": ""0.0.7"",
    ""gulp-filter"": ""^1.0.2"",
    ""gulp-watch"": ""^4.3.8"",
    ""gulp-plumber"": ""1.1.0"",
    ""gulp-flatten"": ""^0.2.0"",
    ""gulp-html-prettify"": ""0.0.1"",
    ""gulp-if"": ""^1.2.5"",
    ""gulp-ignore"": ""^1.2.1"",
    ""gulp-jade"": ""^0.10.0"",
    ""gulp-jsvalidate"": ""^2.0.0"",
    ""gulp-less"": ""^1.3.9"",
    ""gulp-load-plugins"": ""^0.10.0"",
    ""gulp-rename"": ""^1.2.0"",
    ""gulp-rtlcss"": ""^0.1.4"",
    ""gulp-sass"": ""^2.1.1"",
    ""gulp-sourcemaps"": ""^1.3.0"",
    ""gulp-sync"": ""^0.1.4"",
    ""gulp-uglify"": ""^1.1.0"",
    ""gulp-util"": ""^3.0.1"",
    ""jsx-loader"": ""^0.13.2"",
    ""node-sass"": ""^3.7.0"",
    ""sass-loader"": ""^3.2.0"",
    ""style-loader"": ""^0.13.1"",
    ""webpack"": ""^1.13.1"",
    ""webpack-dev-middleware"": ""^1.5.1"",
    ""webpack-hot-middleware"": ""^2.7.1"",
    ""webpack-stream"": ""^3.2.0"",
    ""react-tap-event-plugin"": ""^1.0.0"",
    ""material-ui"": ""0.15.2""
  }
}
</code></pre>

<p>I would appreciate any help!</p>
","4123171","","-1","","2017-05-23 12:32:36","2016-07-20 14:23:24","Resct JS react-draggable-tab - Uncaught Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function","<reactjs><playframework><draggable>","0","0","1","",""
"39204223","1","39212539","","2016-08-29 10:39:06","","0","233","<p>I'm trying to create a click handler for a react component using <a href=""https://github.com/chandu0101/sri"" rel=""nofollow"">sri</a> &amp; scala-react/scala-js.</p>

<p>In the following code, the <code>onClick</code> handler can't be resolved. I suspect it takes a type annotation or something, but I've copied it from an example (search for <code>tick</code> on this <a href=""https://github.com/chandu0101/sri/blob/b965e97583f0ee4fb72f3303bdeb7b09d0f322dc/docs/DefiningComponents.md"" rel=""nofollow"">page</a>).</p>

<p>Here's my code:</p>

<pre><code>package demo.web.screens

import org.scalajs.dom
import demo.web.styles.GlobalStyle
import shared.contactform.ContactForm
import sri.core._
import sri.scalacss.Defaults._
import sri.web.all._
import sri.web.vdom.htmltags._

import scala.scalajs.js
import scala.scalajs.js.annotation.ScalaJSDefined

object ContactScreen {

  @ScalaJSDefined
  class Component extends ReactComponent[Unit, Unit] {

    var bodyRef: dom.html.Input
    var nameRef: dom.html.Input
    var emailRef: dom.html.Input

    def handleClick(e: ReactMouseEventI) = {
      Option(bodyRef).foreach { body =&gt;
        val form = ContactForm(body = body.value,
          name = Option(nameRef).map(_.value),
          email = Option(emailRef).map(_.value))

        println(s""Inside click handler with form: $form"")
      }
    }

    def render() = {
      dom.console.log(""In contact screen"")

      val contactForm = ContactForm(body = ""static body"", name = None, email = None)
      println(s""contact form = $contactForm"")

      form()(
        div(className = GlobalStyle.flexOneAndCenter)(
          span(className = GlobalStyle.bigText)(""Contact us""),
          label()(""Your name"",
            input(id = ""name"", ref = (e: dom.html.Input) =&gt; nameRef = e)),
          label()(""Your email address"",
            input(`type`=""email"", id = ""email"",
              ref = (e: dom.html.Input) =&gt; emailRef = e)),
          label()(""Comments"",
            textarea(id = ""body"", ref = (e: dom.html.Input) =&gt; bodyRef = e)()),
          button(id = ""submit"", onClick = handleClick _)(""Submit"")
        )
      )
    }
  }

  val constructor = getTypedConstructor(js.constructorOf[Component], classOf[Component])

  def apply(key: js.UndefOr[String] = js.undefined,
            ref: js.Function1[Component, _] = null) = {
    createElementNoProps(constructor, key = key, ref = ref)
  }
}
</code></pre>
","2400966","","","","","2016-08-29 18:11:16","How to create a click callback with sri / scala-react?","<scala><scala.js><scalajs-react>","1","3","1","",""
"39888623","1","39888692","","2016-10-06 06:03:18","","2","1504","<p>I am very new to reactJs and just started to learn the features of reactJS. I am trying to figure out a way to pass the value from nodeJS to reactJS via server side rendering concept.</p>

<p>In the below example, I was able to define a react component and add it in server and render it in UI but I am not sure how to pass the data to the component that can be used inside the component render function.</p>

<p><strong>client.js</strong></p>

<pre><code>var React=require('react');
var ReactDOM=require('react-dom');
var Component=require('./Component.jsx');


ReactDOM.render(
    React.createElement(Component),document
);
</code></pre>

<p><strong>Component.jsx</strong></p>

<pre><code>var React=require('react'),
Request=require('superagent')


module.exports = React.createClass({
getInitialState: function () {
    return {

    };
  },
  componentWillMount: function () {

  },

  componentDidMount: function() {
    clearInterval(this.intervalID)
  },

  _handleClick: function () {
    alert('You clicked!')
  },

    render:function(){
    return(
        &lt;html&gt;
        &lt;head&gt;
            &lt;title&gt; ReactJS - demo &lt;/title&gt;
            &lt;link rel='stylesheet' href='/style.css'/&gt;
        &lt;/head&gt;
        &lt;body&gt;
        &lt;div&gt;
            &lt;h1&gt;react js testing&lt;/h1&gt;
            &lt;p&gt;This is so cool&lt;/p&gt;
            &lt;button onClick={this._handleClick}&gt;Click Me!&lt;/button&gt;
        &lt;/div&gt;
        &lt;script src='/bundle.js'/&gt;
        &lt;/body&gt;
        &lt;/html&gt;
        );
    }

});
</code></pre>

<p><strong>Server.js</strong></p>

<pre><code>require('babel-register')({
    presets:['react']
});
var express = require('express');
var app=express();
var React=require('react');
var ReactDOMServer=require('react-dom/server');
var Component=require('./Component.jsx');

app.use(express.static('public'));
app.get('/',function(request,response){
    var html=ReactDOMServer.renderToString(
        React.createElement(Component)
    )
    response.send(html)
});

var PORT=4444;
app.listen(PORT,function(){
    console.log(""Node js listening in port:""+ PORT);
})
</code></pre>

<p><strong>Update 1:</strong></p>

<p>I am now able to pass the value to the server side rendered component as below</p>

<pre><code>React.createElement(Component,{object:...})
</code></pre>

<p>Now the server side setup works fine. </p>

<p>I need to make this <code>{object:...}</code> available in my client.js also for client side functionality to work. Any idea how to get this value in client.js?</p>
","955140","","955140","","2016-10-06 17:51:50","2016-10-06 17:51:50","How to pass data in server side rendering to reactjs component from node","<node.js><reactjs><babel><serverside-rendering>","1","0","1","",""
"47329520","1","","","2017-11-16 12:19:36","","5","584","<p>I am very new to react and I have written a code using React 14 without any transpiler. Now I want to use Karma-Jasmine for unit testing but it seems that my test is failing rendering the app.</p>

<p>I have the following structure:</p>

<pre><code>node_modules
MyApp/
    /js/ *.js
    /test/*.js
Karma.conf.js
package.json
index.html
</code></pre>

<p>My index.html:</p>

<pre><code>&lt;html&gt;
&lt;div id=""content""&gt;&lt;/div&gt;
&lt;script src=""js/react-0.14.7.js""&gt;&lt;/script&gt;
&lt;script src=""js/react-dom-0.14.7.js""&gt;&lt;/script&gt;

&lt;script src=""js/App.js""&gt;&lt;/script&gt;
&lt;script src=""js/main.js""&gt;&lt;/script&gt;
&lt;link rel=""stylesheet"" href=""style.css""&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>My main.js:</p>

<pre><code>ReactDOM.render(React.createElement(App), document.getElementById('content'))
</code></pre>

<p>My App then is like below:</p>

<pre><code>var h = React.createElement;

var Command = React.createClass({
   render: function(){
   return h(....)
  }
})
</code></pre>

<p>my test code is as follows:</p>

<pre><code>describe('App', function() {
beforeEach(function() {
fixture.load('index.htm');
});

beforeEach(function () {
ReactDOM.render(React.createElement(App),  document.getElementById('content'));
});

it('accepts elements', function() {
  document.getElementById('x').value = 1;
  document.getElementById('y').value = 2;
  document.getElementById('setbtn').click();
});

});
</code></pre>

<p>And here is the error: </p>

<pre><code>Uncaught ReferenceError: App is not defined
at main.js:2
(anonymous) @ main.js:2
debug.html:1 (WEB_PAGE context) Lazy require of app.binding did not set the binding field
.
.
.
ReferenceError: fixture is not defined
at UserContext.&lt;anonymous&gt; (main.test.js:6)
</code></pre>

<p>Debugging Karma shows my files have been loaded as I can see the functions in my components. I installed Html2js and added to my Karma.conf.js. I have read most of the documents on the web but they didn't help.</p>

<p>What am I doing wrong? I  </p>
","1388084","","704661","","2017-11-16 13:19:04","2017-11-25 15:32:30","Unit testing react using Karma and Jasmine","<javascript><reactjs><unit-testing><jasmine><karma-jasmine>","2","1","1","",""
"39557999","1","39560233","","2016-09-18 13:12:18","","4","11843","<p>I'm attempting to integrate React into an existing web page. At this time, I'm unable to get my React app loaded. My React app has two files. At this time, they look like this:</p>

<p><strong>myApp.js</strong></p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';

import MyComponent from './components/myComponent';

ReactDOM.render(&lt;MyComponent /&gt;, document.getElementById('root'));
</code></pre>

<p><strong>myComponent.js</strong></p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';

class MyComponent extends React.Component {
  render() {
    console.log('here');
    return (
      &lt;div&gt;
        &lt;h2&gt;Hello (from React)&lt;/h2&gt;
        &lt;br /&gt;          
      &lt;/div&gt;
    );
  }
}

export default MyComponent;
</code></pre>

<p>As you can see, I'm using ES6. I'm determined to use ES6 on this project. For that reason, I'm using Babel in my Gulp file to bundle my React app. I'm using Gulp instead of Webpack because my site is already using Gulp. Still, the relevant details in my package.json file look like this:</p>

<p><strong>package.json</strong></p>

<pre><code>...
""devDependencies"": {
  ""babel-preset-es2015"": ""^6.14.0"",
  ""babel-preset-react"": ""^6.11.1"",
  ""babelify"": ""^7.3.0"",
  ""browserify"": ""^13.1.0"",
  ""gulp"": ""^3.9.1"",
  ""gulp-babel"": ""^6.1.2"",
  ""gulp-clean-css"": ""^2.0.11"",
  ""gulp-uglify"": ""^1.5.4"",
  ""vinyl-source-stream"": ""^1.1.0""
}
</code></pre>

<p>I then bundle my React app using the following task:</p>

<p><strong>gulpfile.js</strong></p>

<pre><code>gulp.task('buildApp', function() {
    return browserify({ entries: ['./app/myApp.js', './app/components/myComponent.js'] })
        .transform(""babelify"", {presets: ['es2015', 'react']})
        .bundle()
        .pipe(source('bundle.js'))
        .pipe(gulp.dest('./app'))        
    ;
});
</code></pre>

<p>When the above task is ran, the bundle.js file gets generated. It looks like this:</p>

<pre><code>(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==""function""&amp;&amp;require;if(!u&amp;&amp;a)return a(o,!0);if(i)return i(o,!0);var f=new Error(""Cannot find module '""+o+""'"");throw f.code=""MODULE_NOT_FOUND"",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==""function""&amp;&amp;require;for(var o=0;o&lt;r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _myComponent = require('./components/myComponent');

var _myComponent2 = _interopRequireDefault(_myComponent);

function _interopRequireDefault(obj) { return obj &amp;&amp; obj.__esModule ? obj : { default: obj }; }

_reactDom2.default.render(_react2.default.createElement(NyComponent, null), document.getElementById('root'));

},{""./components/myComponent"":2,""react"":""react"",""react-dom"":""react-dom""}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, ""__esModule"", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (""value"" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj &amp;&amp; obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(""Cannot call a class as a function""); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(""this hasn't been initialised - super() hasn't been called""); } return call &amp;&amp; (typeof call === ""object"" || typeof call === ""function"") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== ""function"" &amp;&amp; superClass !== null) { throw new TypeError(""Super expression must either be null or a function, not "" + typeof superClass); } subClass.prototype = Object.create(superClass &amp;&amp; superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MyComponent = function (_React$Component) {
  _inherits(MyComponent, _React$Component);

  function MyComponent() {
    _classCallCheck(this, MyComponent);

    return _possibleConstructorReturn(this, (MyComponent.__proto__ || Object.getPrototypeOf(MyComponent)).apply(this, arguments));
  }

  _createClass(MyComponent, [{
    key: 'render',
    value: function render() {
      console.log('here');
      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'h2',
          null,
          'Hello (from React)'
        ),
        _react2.default.createElement('br', null)
      );
    }
  }]);

  return MyComponent;
}(_react2.default.Component);

exports.default = MyComponent;

},{""react"":""react"",""react-dom"":""react-dom""}]},{},[1]);
</code></pre>

<p>Then, in the web page that I'm trying to load this app into, I have the following:</p>

<pre><code>...
&lt;div id=""root""&gt;&lt;/div&gt;

&lt;script type=""text/javascript"" src=""https://unpkg.com/react@15.3.1/dist/react.js""&gt;&lt;/script&gt;
&lt;script type=""text/javascript"" src=""https://unpkg.com/react-dom@15.3.1/dist/react-dom.js""&gt;&lt;/script&gt;
&lt;script type=""text/javascript"" src=""/app/bundle.js""&gt;&lt;/script&gt;
...
</code></pre>

<p>When I load attempt to load this in the browser, my React app does not load. I can see in the console window the following error message:</p>

<pre><code>Uncaught Error: Cannot find module 'react'
</code></pre>

<p>I don't understand why react isn't getting loaded.</p>
","687554","","687554","","2016-09-18 13:23:27","2017-03-19 12:00:02","Cannot find module 'react'","<javascript><reactjs><gulp>","2","1","1","",""
"30624670","1","30627400","","2015-06-03 15:37:37","","1","896","<p>I have angular application and we start using react as render data.we have one problem is how can we call $scope.showUserDetails from directive react component
.I tried using this.props.scope.$parent.showUserDetails(); <code>I have Uncaught TypeError: Cannot read property '$parent' of undefined</code> </p>

<p>react component</p>

<pre><code> /** @jsx React.DOM */
var MYCOMPONENT = React.createClass({
    displayName: 'MYCOMPONENT',
    handleClick: function (e) {
        console.log('You clicked');
        this.props.scope.$parent.showUserDetails();
    },
    render: function (){     
        var listUser = this.props.data.map(function(item){

            return(
                React.DOM.div(
                    {
                        className: 'panel panel-default staff-reception ' + item.statusType.toLocaleLowerCase() + 'Office',
                        'ng-click': 'showUserDetails(' + item + ')',
                        onClick: this.handleClick
                    },
                    React.DOM.div(
                        {
                             className: 'panel-body'
                        },
                        React.DOM.span(null, item.firstName + ' ' + item.lastName + ' ' + item.directDial + ' Ext:' + item.voiceMailExt)
             )
             )
             );
        },this);

        return (React.DOM.div({className:'col-xs-12 col-md-6 col-lg-4'}, listUser));
    }
});
</code></pre>

<p>controller </p>

<pre><code>(function () {

    'use strict';
    var app = angular.module('app');

    var ReceptionReactController = function ($scope, ReceptionReactService, $modal) {


        $scope.showUserDetails = function (user, index) {
            var modalInstance = $modal.open({
                templateUrl: 'UserDetails.html',
                controller: UserDetailsController,
                size: 'lg',
                resolve: {
                    user: function () {
                        return user;
                    }
                }
            });
            modalInstance.result.then(function (userUpdatedStatus) {
                updateUserStatus(userUpdatedStatus);

            }, function () {

            });
        };




    };

    app.controller('ReceptionReactController', ['$scope', 'ReceptionReactService', '$modal', '$window', ReceptionReactController]).directive('fastNg', function () {
        return {
            restrict: 'E',
            scope: {
                data: '='
            },
            link: function (scope, el, attrs){
                scope.$watch('data', function(newValue, oldValue){
                    React.render(React.createElement(
                          MYCOMPONENT, {
                              data: newValue
                          }),
                          el[0]
                        );
                });
            }
        }
    });

}());
</code></pre>

<p>view </p>

<pre><code> &lt;fast-ng data=""ListTitleUsers.users""&gt;&lt;/fast-ng&gt;
</code></pre>
","","user474901","","user474901","2015-06-03 19:02:43","2015-06-03 19:02:43","how to call parent function controller from directive react component angularjs + reactjs?","<angularjs><angularjs-directive><angularjs-scope><reactjs>","1","0","","",""
"31000451","1","31000701","","2015-06-23 10:34:26","","1","269","<p>I am just fiddling with react to make a simple website. So here's the code</p>

<pre><code>&lt;html&gt;
&lt;head&gt;
  &lt;script src=""https://fb.me/react-0.13.3.js""&gt;&lt;/script&gt;
  &lt;!-- In-browser JSX transformer, remove when pre-compiling JSX. --&gt;
  &lt;script src=""https://fb.me/JSXTransformer-0.13.3.js""&gt;&lt;/script&gt;
  &lt;link rel=""stylesheet""
    href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css""&gt;    
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=""container""&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;script type=""text/jsx""&gt;

    var Header = React.createClass({
        render: function(){

            return (&lt;div &gt;
                    &lt;div className=""page-header""&gt;
                        &lt;h1&gt;{this.props.big} &lt;small&gt;{this.props.small}&lt;/small&gt;&lt;/h1&gt;
                    &lt;/div&gt;
                &lt;/div&gt;);
        }
    });

var options = {
    big: ""React.js is awesome"",
    small: ""It's strict""
};


var headerComponent = React.createElement(Header, options);
React.render(headerComponent, document.querySelector('.container'));

&lt;/script&gt;
</code></pre>

<p>This works fine. When ever I try to add a new component, there would be a parsing error at line 39. I don't understand why</p>

<p>Here's my added component code</p>

<pre><code>&lt;script type=""text/jsx""&gt;
    var Vamsi = React.createClass({
        render: function(){
            return ({
                    &lt;div&gt; 
                        Hi 
                    &lt;/div&gt;
            });
        };
    });

    var Header = React.createClass({
        render: function(){

            return (&lt;div &gt;

                    &lt;div className=""page-header""&gt;
                        &lt;h1&gt;{this.props.big} &lt;small&gt;{this.props.small}&lt;/small&gt;&lt;/h1&gt;
                    &lt;/div&gt;
                    &lt;Vamsi /&gt;

                &lt;/div&gt;);
        }
    });

var options = {
    big: ""React.js is awesome"",
    small: ""It's strict""
};


var headerComponent = React.createElement(Header, options);
React.render(headerComponent, document.querySelector('.container'));

&lt;/script&gt;
&lt;/html&gt;
</code></pre>

<p>ps: I added a component called Vamsi, and I'm getting parse error un expected token at line 8</p>
","4540175","","1831781","","2015-06-23 15:20:18","2015-06-23 15:20:18","Unable to render second react component","<reactjs>","1","0","","",""
"38368349","1","38368595","","2016-07-14 07:44:31","","3","953","<p>I'm trying to implement <code>react-grid-layout</code>. All of the examples pass the grid item configuration through a <code>_grid</code> div property:</p>

<pre><code>createElement(el) {
  ...
  return (
    &lt;div key={i} _grid={el}&gt;
      ...
    &lt;/div&gt;
  );
},
</code></pre>

<p>In my implementation:</p>

<pre><code>return (
  &lt;div key={i} _grid={el}&gt;
    &lt;DashboardTestWidget widgetName={el.name} menuName={this.props.menuName}/&gt;
    &lt;span className=""remove"" style={removeStyle} onClick={this.onRemoveItem.bind(this, i)}&gt;x&lt;/span&gt;
  &lt;/div&gt;
)
</code></pre>

<p>I get an error:</p>

<pre><code>dashboard_view.browserify.browserified.js:1216 Warning: Unknown prop `_grid` on &lt;div&gt; tag. Remove this prop from the element. For details, see &lt;URL ommitted because SO complained about URL shorteners&gt;
  in div (created by DashboardLayout)
  in Resizable (created by GridItem)
  in DraggableCore (created by GridItem)
  in GridItem (created by ReactGridLayout)
  in div (created by ReactGridLayout)
  in ReactGridLayout (created by ResponsiveReactGridLayout)
  in ResponsiveReactGridLayout (created by _class)
  in _class (created by DashboardLayout)
  in div (created by DashboardLayout)
  in DashboardLayout
</code></pre>

<p>I'm fairly new to React. What am I doing wrong?</p>

<hr>

<p>Relevant <code>npm</code> package versions I use:</p>

<pre><code>""react"": ""^15.2.1"",
""react-dom"": ""^15.2.1"",
""react-grid-layout"": ""^0.12.7"",
</code></pre>
","292502","","292502","","2016-07-14 16:07:26","2016-07-14 16:07:26","react-grid-layout example Unknown prop `_grid` on <div> tag","<reactjs>","1","1","1","",""
"47303232","1","47303730","","2017-11-15 09:05:43","","3","195","<p>I've got some problems setting up React-Router-Redux.
I'm just following the basic example on <a href=""https://github.com/ReactTraining/react-router/tree/master/packages/react-router-redux#usage"" rel=""nofollow noreferrer"">https://github.com/ReactTraining/react-router/tree/master/packages/react-router-redux#usage</a>.</p>

<p>My App.jsx looks like this:</p>

<pre><code>import React, { Component } from 'react';
import { Route, Switch } from 'react-router-dom';
import { Provider } from 'react-redux';
import { ConnectedRouter } from 'react-router-redux';
import createHistory from 'history/createBrowserHistory';

import Home from './containers/Home';
import About from './containers/About';
import store from './store';

const history = createHistory();

class App extends Component {
  render() {
    return (
      &lt;Provider store={store}&gt;
        &lt;ConnectedRouter history={history}&gt;
          &lt;div&gt;
            &lt;Route exact path=""/"" component={Home}/&gt;
            &lt;Route path=""/about"" component={About}/&gt;
          &lt;/div&gt;
        &lt;/ConnectedRouter&gt;
      &lt;/Provider&gt;
    );
  }
}

export default App;
</code></pre>

<p>When I save this, I get the following error:</p>

<blockquote>
  <p>React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in.</p>
  
  <p>Check your code at App.js:25.</p>
</blockquote>

<p>And line 25 is:
<code>&lt;ConnectedRouter history={history}&gt;</code></p>

<p>Can someone help me out?</p>

<p>These are my dependencies:</p>

<pre><code>""react"": ""^15.6.1"",
""react-dom"": ""^15.6.1"",
""react-redux"": ""^5.0.6"",
""react-router"": ""^4.2.0"",
""react-router-dom"": ""^4.2.2"",
""react-router-redux"": ""^4.0.8"",
""history"": ""^4.7.2"",
""redux"": ""^3.7.2"",
</code></pre>
","5449101","","5806646","","2017-11-16 05:22:16","2017-11-16 05:22:16","Problems with React Router Redux (""React.createElement: type is invalid"" error)","<reactjs><react-router><react-redux>","1","0","","",""
"38456112","1","","","2016-07-19 10:37:02","","0","98","<p>I am new to react, first app. I am trying to create a custom element with attributes of data. For the time being I am writing in plain ES5 so no JSX, Babel or ES6 yet. That will be next.</p>

<pre><code>var myEl = React.createClass({
    displayName : 'elCont',
    render: function() {
        return(
            React.createElement('My-Shiney-Element', {
                data: data,
                conf: conf
            })
         );
     )}


var data = [1,2,3,4,5,6];
var conf = {""show"": true};
</code></pre>

<p>I can see in the html <code>&lt;my-shiney-element&gt;&lt;\my-shiney-element&gt;</code> But not the attributes?</p>
","2244072","","2244072","","2016-07-19 10:55:58","2016-07-19 11:03:31","Creating react element with custom attributes","<javascript><reactjs>","1","0","","",""
"39613455","1","39613893","","2016-09-21 10:05:12","","0","208","<p>I'm writing reactjs (coffescript+JSX syntax). If user writes something into input and then  clicks on the button, get ajax request is sent and the result in callback function (json object) isn't inserted into the state <strong>names</strong> using setState and I get following error: <strong>cannot read property ""names"" of undefined</strong></p>

<p>I don't know where should be a problem </p>

<pre><code>$ -&gt;
# first component
 MainComponent = React.createClass
  getInitialState: -&gt;
   names:[]

  _getSpecificCard: (card_name) -&gt;
   $.get ""home/users/#{card_name}"", (newuser) -&gt; @setState names:@state.names.concat([newuser])                                               

  _getAllcards: -&gt;
   @state.names.map((user) -&gt;
    &lt;Card key={user.id} name={user.login} avatarurl={user.avatar_url}  /&gt;)

  render: -&gt;
   cards= @_getAllcards
   &lt;div&gt;
    &lt;SimpleForm addCard={@_getSpecificCard} /&gt;
     {cards}
   &lt;/div&gt;

# second component
 SimpleForm= React.createClass

  _handleSubmit: (e) -&gt;
   e.preventDefault()
   textInput= @refs.login
   @props.addCard(textInput.value)

  render: -&gt;
   &lt;form onSubmit={@_handleSubmit}&gt;
    &lt;input placeholder=""github login"" ref=""login"" /&gt;
    &lt;button&gt;Show user&lt;/button&gt;
   &lt;/form&gt;

# third component
 Card = React.createClass
  render: -&gt;
   &lt;div&gt;
    &lt;h3&gt;{@props.name}&lt;/h3&gt;
     &lt;img src={@props.avatarurl} width=80 /&gt;
   &lt;/div&gt;

 ReactDOM.render(&lt;MainComponent /&gt;,document.getElementById(""pluralsight""))
</code></pre>

<p>// compiled version </p>

<pre><code>$(function() {
  var Card, MainComponent, SimpleForm;
  MainComponent = React.createClass({displayName: ""MainComponent"",
    getInitialState: function() {
      return {
        names: []
      };
    },
    _getSpecificCard: function(card_name) {
      return $.get(""home/users/"" + card_name, function(newuser) {
        return this.setState({
          names: this.state.names.concat([newuser])
        });
      });
    },
    _getAllcards: function() {
      return this.state.names.map(function(user) {
        return React.createElement(Card, {
          ""key"": user.id,
          ""name"": user.login,
          ""avatarurl"": user.avatar_url
        });
      });
    },
    render: function() {
      var cards;
      cards = this._getAllcards;
      return React.createElement(""div"", null, React.createElement(SimpleForm, {
        ""addCard"": this._getSpecificCard
      }), cards);
    }
  });
  SimpleForm = React.createClass({displayName: ""SimpleForm"",
    _handleSubmit: function(e) {
      var textInput;
      e.preventDefault();
      textInput = this.refs.login;
      return this.props.addCard(textInput.value);
    },
    render: function() {
      return React.createElement(""form"", {
        ""onSubmit"": this._handleSubmit
      }, React.createElement(""input"", {
        ""placeholder"": ""github login"",
        ""ref"": ""login""
      }), React.createElement(""button"", null, ""Show user""));
    }
  });
  Card = React.createClass({displayName: ""Card"",
    render: function() {
      return React.createElement(""div"", null, React.createElement(""h3"", null, this.props.name), React.createElement(""img"", {
        ""src"": this.props.avatarurl,
        ""width"": 80
      }));
    }
  });
  return ReactDOM.render(React.createElement(MainComponent, null), document.getElementById(""pluralsight""));
});
</code></pre>
","3055526","","3055526","","2016-09-21 12:57:38","2016-09-21 12:57:38","cannot read property ""names"" of undefined in react","<javascript><reactjs><coffeescript><jsx>","2","1","","",""
"47823748","1","","","2017-12-14 23:36:37","","0","159","<p>I am trying to test React-intl using enzyme. 
I have 1 languages french and english
My App.js is as follows</p>

<pre><code>import React from 'react'
import PropTypes from 'prop-types'
import LocaleDropDown from './components/LocaleDropDown'
import {FormattedDate, FormattedTime, FormattedNumber, injectIntl} from 'react-intl'
function App ({children}) {
  return (
    &lt;div className=""container-fluid""&gt;
      {children}
      &lt;div className = ""date-time-wrapper""&gt;
        &lt;span&gt;Date: &lt;/span&gt;&lt;FormattedDate value={new Date()}/&gt;&lt;br/&gt;
        &lt;span&gt;Time: &lt;/span&gt;&lt;FormattedTime value={new Date()}/&gt;&lt;br/&gt;
        &lt;span&gt;Number: &lt;/span&gt;&lt;FormattedNumber value={1000}/&gt;&lt;br/&gt;&lt;br/&gt;
      &lt;/div&gt;
      &lt;LocaleDropDown/&gt;
    &lt;/div&gt;
  )
}

App.propTypes = {
  children: PropTypes.node.isRequired
}

export default injectIntl(App)
</code></pre>

<p>My app.spec.js is</p>

<pre><code>    import React from 'react'
    import ReactDOM from 'react-dom'
    import { shallow } from 'enzyme'
    import sinon from 'sinon'
    import { addLocaleData, IntlProvider } from 'react-intl'
    import App from './App'
    import RecipeList from './recipes/RecipeList/RecipeList'
    import {shallowWithIntlForApp} from './recipes/helpers/intl-test'
    import fr from './locales/fr.json'

    describe('App', () =&gt; {
      it('renders without crashing', () =&gt; {
        const div = document.createElement('div')
        ReactDOM.render(&lt;IntlProvider locale=""en""&gt;&lt;App/&gt;&lt;/IntlProvider&gt;, div)
      })

  it('renders french text when locale is french', () =&gt; {

    const locale = 'fr'
    const langData = {'fr': fr}
    const messages = langData[locale]
    const intlProvider = new IntlProvider({ locale: 'fr', messages}, {})
    const { intl } = intlProvider.getChildContext()
    const wrapper = shallowWithIntlForApp(&lt;App/&gt;, { intl }).first().shallow()
    const date1 = wrapper.find('div.date-time-wrapper').childAt(1)
    console.log(date1.render().text())
    })
  })
</code></pre>

<p>My helper function is
intl-test.js</p>

<pre><code>import React from 'react'
import { IntlProvider, intlShape } from 'react-intl'
import { mount, shallow } from 'enzyme'
import Cookie from 'js-cookie'
import en from '../../locales/en.json'
const locale = Cookie.get('locale') || 'en'
const messages = en[locale]
const intlProvider = new IntlProvider({ locale: 'en', messages }, {})
const { intl } = intlProvider.getChildContext()

/**
 * When using React-Intl `inject    Intl` on components, props.intl is required.
 */
function nodeWithIntlProp (node) {
  return React.cloneElement(node, { intl })
}

export function shallowWithIntl (node) {
  return shallow(nodeWithIntlProp(node), { context: { intl } })
}

export function shallowWithIntlForApp (node, {intl}) {
  return shallow(nodeWithIntlProp(node), { context: { intl } })
}

export function mountWithIntl (node) {
  return mount(nodeWithIntlProp(node), {
    context: { intl },
    childContextTypes: { intl: intlShape }
  })
}
</code></pre>

<p>I am expecting the line console.log(date1.render().text()) to give me the date in ""fr"" format but it fails. it says"" Invariant Violation: [React Intl] Could not find required <code>intl</code> object.  needs to exist in the component ancestry."" 
What is wrong here? I was assuming that adding ""first().shallow()"" would fix this particular error but it did not</p>
","4743297","","","","","2017-12-14 23:36:37","react-intl testing using enzyme","<reactjs><enzyme><react-intl>","0","0","","",""
"47271416","1","47442114","","2017-11-13 18:45:46","","4","437","<p>I have the following Sharepoint Framework webpart, which basically renders a grid depending on a dropdown property which has the list names.</p>

<pre class=""lang-tsx prettyprint-override""><code>import * as React from ""react"";
import * as ReactDom from ""react-dom"";
import { Version } from ""@microsoft/sp-core-library"";
import {
  BaseClientSideWebPart,
  IPropertyPaneConfiguration,
  PropertyPaneTextField,
  PropertyPaneDropdown,
  IPropertyPaneDropdownOption,
  IPropertyPaneField,
  PropertyPaneLabel
} from ""@microsoft/sp-webpart-base"";

import * as strings from ""FactoryMethodWebPartStrings"";
import FactoryMethod from ""./components/FactoryMethod"";
import { IFactoryMethodProps } from ""./components/IFactoryMethodProps"";
import { IFactoryMethodWebPartProps } from ""./IFactoryMethodWebPartProps"";
import * as lodash from ""@microsoft/sp-lodash-subset"";
import List from ""./components/models/List"";
import { Environment, EnvironmentType } from ""@microsoft/sp-core-library"";
import IDataProvider from ""./components/dataproviders/IDataProvider"";
import MockDataProvider from ""./test/MockDataProvider"";
import SharePointDataProvider from ""./components/dataproviders/SharepointDataProvider"";

export default class FactoryMethodWebPart extends BaseClientSideWebPart&lt;IFactoryMethodWebPartProps&gt; {
  private _dropdownOptions: IPropertyPaneDropdownOption[];
  private _selectedList: List;
  private _disableDropdown: boolean;
  private _dataProvider: IDataProvider;
  private _factorymethodContainerComponent: FactoryMethod;

  protected onInit(): Promise&lt;void&gt; {
    this.context.statusRenderer.displayLoadingIndicator(this.domElement, ""Todo"");

    /*
    Create the appropriate data provider depending on where the web part is running.
    The DEBUG flag will ensure the mock data provider is not bundled with the web part when you package the
     solution for distribution, that is, using the --ship flag with the package-solution gulp command.
    */
    if (DEBUG &amp;&amp; Environment.type === EnvironmentType.Local) {
      this._dataProvider = new MockDataProvider();
    } else {
      this._dataProvider = new SharePointDataProvider();
      this._dataProvider.webPartContext = this.context;
    }

    this.openPropertyPane = this.openPropertyPane.bind(this);

    /*
    Get the list of tasks lists from the current site and populate the property pane dropdown field with the values.
    */
    this.loadLists()
      .then(() =&gt; {
        /*
         If a list is already selected, then we would have stored the list Id in the associated web part property.
         So, check to see if we do have a selected list for the web part. If we do, then we set that as the selected list
         in the property pane dropdown field.
        */
        if (this.properties.spListIndex) {
          this.setSelectedList(this.properties.spListIndex.toString());
          this.context.statusRenderer.clearLoadingIndicator(this.domElement);
        }
      });

    return super.onInit();
  }

  // render method of the webpart, actually calls Component
  public render(): void {
    const element: React.ReactElement&lt;IFactoryMethodProps &gt; = React.createElement(
      FactoryMethod,
      {
        spHttpClient: this.context.spHttpClient,
        siteUrl: this.context.pageContext.web.absoluteUrl,
        listName: this._dataProvider.selectedList === undefined ? ""GenericList"" : this._dataProvider.selectedList.Title,
        dataProvider: this._dataProvider,
        configureStartCallback: this.openPropertyPane
      }
    );

    // reactDom.render(element, this.domElement);
    this._factorymethodContainerComponent = &lt;FactoryMethod&gt;ReactDom.render(element, this.domElement);

  }

  // loads lists from the site and fill the dropdown.
  private loadLists(): Promise&lt;any&gt; {
    return this._dataProvider.getLists()
      .then((lists: List[]) =&gt; {
        // disable dropdown field if there are no results from the server.
        this._disableDropdown = lists.length === 0;
        if (lists.length !== 0) {
          this._dropdownOptions = lists.map((list: List) =&gt; {
            return {
              key: list.Id,
              text: list.Title
            };
          });
        }
      });
  }

  protected get dataVersion(): Version {
    return Version.parse(""1.0"");
  }

  protected onPropertyPaneFieldChanged(propertyPath: string, oldValue: any, newValue: any): void {
    /*
    Check the property path to see which property pane feld changed. If the property path matches the dropdown, then we set that list
    as the selected list for the web part.
    */
    if (propertyPath === ""spListIndex"") {
      this.setSelectedList(newValue);
    }

    /*
    Finally, tell property pane to re-render the web part.
    This is valid for reactive property pane.
    */
    super.onPropertyPaneFieldChanged(propertyPath, oldValue, newValue);
  }

  // sets the selected list based on the selection from the dropdownlist
  private setSelectedList(value: string): void {
    const selectedIndex: number = lodash.findIndex(this._dropdownOptions,
      (item: IPropertyPaneDropdownOption) =&gt; item.key === value
    );

    const selectedDropDownOption: IPropertyPaneDropdownOption = this._dropdownOptions[selectedIndex];

    if (selectedDropDownOption) {
      this._selectedList = {
        Title: selectedDropDownOption.text,
        Id: selectedDropDownOption.key.toString()
      };

      this._dataProvider.selectedList = this._selectedList;
    }
  }


  // we add fields dynamically to the property pane, in this case its only the list field which we will render
  private getGroupFields(): IPropertyPaneField&lt;any&gt;[] {
    const fields: IPropertyPaneField&lt;any&gt;[] = [];

    // we add the options from the dropdownoptions variable that was populated during init to the dropdown here.
    fields.push(PropertyPaneDropdown(""spListIndex"", {
      label: ""Select a list"",
      disabled: this._disableDropdown,
      options: this._dropdownOptions
    }));

    /*
    When we do not have any lists returned from the server, we disable the dropdown. If that is the case,
    we also add a label field displaying the appropriate message.
    */
    if (this._disableDropdown) {
      fields.push(PropertyPaneLabel(null, {
        text: ""Could not find tasks lists in your site. Create one or more tasks list and then try using the web part.""
      }));
    }

    return fields;
  }

  private openPropertyPane(): void {
    this.context.propertyPane.open();
  }

  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {
    return {
      pages: [
        {
          header: {
            description: strings.PropertyPaneDescription
          },
          groups: [
            {
              groupName: strings.BasicGroupName,
              /*
              Instead of creating the fields here, we call a method that will return the set of property fields to render.
              */
              groupFields: this.getGroupFields()
            }
          ]
        }
      ]
    };
  }
}
</code></pre>

<p>my component.tsx</p>

<pre><code>//#region Imports
import * as React from ""react"";
import styles from ""./FactoryMethod.module.scss"";
import  { IFactoryMethodProps } from ""./IFactoryMethodProps"";
import {
  IDetailsListItemState,
  IDetailsNewsListItemState,
  IDetailsDirectoryListItemState,
  IDetailsAnnouncementListItemState,
  IFactoryMethodState
} from ""./IFactoryMethodState"";
import { IListItem } from ""./models/IListItem"";
import { IAnnouncementListItem } from ""./models/IAnnouncementListItem"";
import { INewsListItem } from ""./models/INewsListItem"";
import { IDirectoryListItem } from ""./models/IDirectoryListItem"";
import { escape } from ""@microsoft/sp-lodash-subset"";
import { SPHttpClient, SPHttpClientResponse } from ""@microsoft/sp-http"";
import { ListItemFactory} from ""./ListItemFactory"";
import { TextField } from ""office-ui-fabric-react/lib/TextField"";
import {
  DetailsList,
  DetailsListLayoutMode,
  Selection,
  buildColumns,
  IColumn
} from ""office-ui-fabric-react/lib/DetailsList"";
import { MarqueeSelection } from ""office-ui-fabric-react/lib/MarqueeSelection"";
import { autobind } from ""office-ui-fabric-react/lib/Utilities"";
import PropTypes from ""prop-types"";
//#endregion


export default class FactoryMethod extends React.Component&lt;IFactoryMethodProps, IFactoryMethodState&gt; {
  constructor(props: IFactoryMethodProps, state: any) {
    super(props);
    this.setInitialState();
  }

  // lifecycle help here: https://staminaloops.github.io/undefinedisnotafunction/understanding-react/

  //#region Mouting events lifecycle

  // the data returned from render is neither a string nor a DOM node.
  // it's a lightweight description of what the DOM should look like.
  // inspects this.state and this.props and create the markup.
  // when your data changes, the render method is called again.
  // react diff the return value from the previous call to render with
  // the new one, and generate a minimal set of changes to be applied to the DOM.
  public render(): React.ReactElement&lt;IFactoryMethodProps&gt; {
    switch(this.props.listName) {
        case ""GenericList"":
          // tslint:disable-next-line:max-line-length
          return &lt;this.ListMarqueeSelection items={this.state.DetailsListItemState.items} columns={this.state.columns} /&gt;;
        case ""News"":
          // tslint:disable-next-line:max-line-length
          return &lt;this.ListMarqueeSelection items={this.state.DetailsNewsListItemState.items} columns={this.state.columns}/&gt;;
        case ""Announcements"":
          // tslint:disable-next-line:max-line-length
          return &lt;this.ListMarqueeSelection items={this.state.DetailsAnnouncementListItemState.items} columns={this.state.columns}/&gt;;
        case ""Directory"":
          // tslint:disable-next-line:max-line-length
          return &lt;this.ListMarqueeSelection items={this.state.DetailsDirectoryListItemState.items} columns={this.state.columns}/&gt;;
        default:
          return null;
    }
  }

   // invoked once, only on the client (not on the server), immediately AFTER the initial rendering occurs.
   public componentDidMount(): void {
    // you can access any refs to your children
    // (e.g., to access the underlying DOM representation - ReactDOM.findDOMNode).
    // the componentDidMount() method of child components is invoked before that of parent components.
    // if you want to integrate with other JavaScript frameworks,
    // set timers using setTimeout or setInterval,
    // or send AJAX requests, perform those operations in this method.
    this._configureWebPart = this._configureWebPart.bind(this);
    this.readItemsAndSetStatus("""");
  }

  //#endregion

  //#region Props changes lifecycle events (after a property changes from parent component)
  public componentWillReceiveProps(nextProps: IFactoryMethodProps): void {
    if(nextProps.listName !== this.props.listName) {
      this.readItemsAndSetStatus(nextProps.listName);
    }
  }

  //#endregion

  //#region private methods
  private _configureWebPart(): void {
    this.props.configureStartCallback();
  }

  public setInitialState(): void {
    this.state = {
      type: ""ListItem"",
      status: this.listNotConfigured(this.props)
        ? ""Please configure list in Web Part properties""
        : ""Ready"",
      columns:[],
      DetailsListItemState:{
        items:[]
      },
      DetailsNewsListItemState:{
        items:[]
      },
      DetailsDirectoryListItemState:{
        items:[]
      },
      DetailsAnnouncementListItemState:{
        items:[]
      },
    };
  }

  // reusable inline component
  private ListMarqueeSelection = (itemState: {columns: IColumn[], items: IListItem[] }) =&gt; (
      &lt;div&gt;
          &lt;DetailsList
            items={ itemState.items }
            columns={ itemState.columns }
            setKey=""set""
            layoutMode={ DetailsListLayoutMode.fixedColumns }
            selectionPreservedOnEmptyClick={ true }
            compact={ true }&gt;
          &lt;/DetailsList&gt;
      &lt;/div&gt;
  )

  // read items using factory method pattern and sets state accordingly
  private readItemsAndSetStatus(nextListName: string): void {
    this.setState({
      status: ""Loading all items...""
    });

    const factory: ListItemFactory = new ListItemFactory();
    factory.getItems(this.props.spHttpClient, this.props.siteUrl, nextListName)
    .then((items: any[]) =&gt; {
      const keyPart: string = this.props.listName === ""GenericList"" ? """" : nextListName;
        // the explicit specification of the type argument `keyof {}` is bad and
        // it should not be required.
        this.setState&lt;keyof {}&gt;({
          status: `Successfully loaded ${items.length} items`,
          [""Details"" + keyPart + ""ListItemState""] : {
            items
          },
          columns: buildColumns(items)
        });
    });
  }

  private listNotConfigured(props: IFactoryMethodProps): boolean {
    return props.listName === undefined ||
      props.listName === null ||
      props.listName.length === 0;
  }

  //#endregion
}
</code></pre>

<p>and my factory object</p>

<pre><code>import { SPHttpClient, SPHttpClientResponse } from ""@microsoft/sp-http"";
import { IWebPartContext } from ""@microsoft/sp-webpart-base"";
import { IListItem} from ""./models/IListItem"";
import { IFactory } from ""./IFactory"";
import { INewsListItem } from ""./models/INewsListItem"";
import { IDirectoryListItem } from ""./models/IDirectoryListItem"";
import { IAnnouncementListItem } from ""./models/IAnnouncementListItem"";

export class ListItemFactory implements IFactory {
    private _listItems: IListItem[];
    public getItems(requester: SPHttpClient, siteUrl: string, listName: string): Promise&lt;IListItem[]&gt; {
        if(listName === """"){
            listName = ""GenericList"";
        }
        switch(listName) {
            case ""GenericList"":
                let items: IListItem[];
                // tslint:disable-next-line:max-line-length
                return requester.get(`${siteUrl}/_api/web/lists/getbytitle('${listName}')/items?$select=Title,Id,Modified,Created,Author/Title,Editor/Title&amp;$expand=Author,Editor`,
                SPHttpClient.configurations.v1,
                {
                    headers: {
                        ""Accept"": ""application/json;odata=nometadata"",
                        ""odata-version"": """"
                    }
                })
                .then((response: SPHttpClientResponse): Promise&lt;{ value: IListItem[] }&gt; =&gt; {
                    return response.json(); 
                })
                .then((json: { value: IListItem[] }) =&gt; {
                    console.log(JSON.stringify(json.value));
                    return items=json.value.map((v,i)=&gt;(
                        { 
                            //key: v.id,
                            id: v.Id,
                            title: v.Title,
                            created: v.Created,
                            createdby: v.Author.Title,
                            modified: v.Modified,
                            modifiedby: v.Editor.Title                        
                        }
                    ));
                });  
            case ""News"":
                let newsitems: INewsListItem[];
                // tslint:disable-next-line:max-line-length
                return requester.get(`${siteUrl}/_api/web/lists/getbytitle('${listName}')/items?$select=Title,Id,Modified,Created,Created By,Modified By,newsheader,newsbody,expiryDate`,
                SPHttpClient.configurations.v1,
                {
                    headers: {
                        ""Accept"": ""application/json;odata=nometadata"",
                        ""odata-version"": """"
                    }
                })
                .then((response: SPHttpClientResponse): Promise&lt;{ value: INewsListItem[] }&gt; =&gt; {
                    return response.json();
                })
                .then((json: { value: INewsListItem[] }) =&gt; {
                    return items=json.value.map((v,i)=&gt;(
                        { 
                            id: v.Id,
                            title: v.Title,
                            created: v.Created,
                            createdby: v.Author.Title,
                            modified: v.Modified,
                            modifiedby: v.Editor.Title,
                            newsheader: v.newsheader,
                            newsbody: v.newsbody,
                            expiryDate: v.expiryDate
                        }
                    ));
                });
            case ""Announcements"":
                let announcementitems: IAnnouncementListItem[];
                return requester.get(`${siteUrl}/_api/web/lists/getbytitle('${listName}')/items?$select=Title,Id`,
                SPHttpClient.configurations.v1,
                {
                    headers: {
                        ""Accept"": ""application/json;odata=nometadata"",
                        ""odata-version"": """"
                    }
                })
                .then((response: SPHttpClientResponse): Promise&lt;{ value: IAnnouncementListItem[] }&gt; =&gt; {
                    return response.json();
                })
                .then((json: { value: IAnnouncementListItem[] }) =&gt; {
                    return items=json.value.map((v,i)=&gt;(
                        { 
                            id: v.Id,
                            title: v.Title,
                            created: v.Created,
                            createdby: v.Author.Title,
                            modified: v.Modified,
                            modifiedby: v.Editor.Title,
                            announcementBody: v.announcementBody,
                            expiryDate: v.expiryDate
                        }
                    ));
                });
            case ""Directory"":
                let directoryitems: IDirectoryListItem[];
                return requester.get(`${siteUrl}/_api/web/lists/getbytitle('${listName}')/items?$select=Title,Id`,
                SPHttpClient.configurations.v1,
                {
                    headers: {
                        ""Accept"": ""application/json;odata=nometadata"",
                        ""odata-version"": """"
                    }
                })
                .then((response: SPHttpClientResponse): Promise&lt;{ value: IDirectoryListItem[] }&gt; =&gt; {
                    return response.json();
                })
                .then((json: { value: IDirectoryListItem[] }) =&gt; {
                    return items=json.value.map((v,i)=&gt;(
                        { 
                            id: v.Id,
                            title: v.Title,
                            created: v.Created,
                            createdby: v.Author.Title,
                            modified: v.Modified,
                            modifiedby: v.Editor.Title,
                            firstName: v.firstName,
                            lastName: v.lastName,
                            mobileNumber: v.mobileNumber,
                            internalNumber: v.internalNumber
                        }
                    ));
                });
            default:
            // tslint:disable-next-line:max-line-length
                return requester.get(`${siteUrl}/_api/web/lists/getbytitle('${listName}')/items?$select=Title,Id,Modified,Created,Author/Title,Editor/Title&amp;$expand=Author,Editor`,
                SPHttpClient.configurations.v1,
                {
                    headers: {
                        ""Accept"": ""application/json;odata=nometadata"",
                        ""odata-version"": """"
                    }
                })
                .then((response: SPHttpClientResponse): Promise&lt;{ value: IListItem[] }&gt; =&gt; {
                    return response.json(); 
                })
                .then((json: { value: IListItem[] }) =&gt; {
                    console.log(JSON.stringify(json.value));
                    return items=json.value.map((v,i)=&gt;(
                        { 
                            //key: v.id,
                            id: v.Id,
                            title: v.Title,
                            created: v.Created,
                            createdby: v.Author.Title,
                            modified: v.Modified,
                            modifiedby: v.Editor.Title                        
                        }
                    ));
                }); 
            }
      }
}
</code></pre>

<p>The problem is that the first time it renders, the listname is undefined, so it reads data from the GenericList and I can see the grid rendered which is desired behavior</p>

<p>But whenever I select another list, I get an empty string as parameter on the getlistitems parameter, its not taking either Announcements, News, etc</p>

<p>What am I missing here?</p>
","1014217","","815507","","2017-11-23 00:10:14","2017-11-23 00:10:14","confused about reactjs lifecycle","<javascript><reactjs><typescript>","1","4","","",""
"39743116","1","","","2016-09-28 09:20:28","","1","547","<p>I'm trying to use rollup to bundle my React app, and I'm currently getting this error:</p>

<blockquote>
  <p>Uncaught TypeError: Cannot assign to read only property 'history' of object '[object Window]'(anonymous function) @ bundle.js:6115</p>
</blockquote>

<p>which is in <a href=""http://i.stack.imgur.com/kDCyf.png"" rel=""nofollow"">this</a> location.</p>

<p>My rollup config:</p>

<pre><code>import json from 'rollup-plugin-json';
import postcss from 'rollup-plugin-postcss';
import cjs from 'rollup-plugin-commonjs';
import resolve from 'rollup-plugin-node-resolve';
import replace from 'rollup-plugin-replace';
import jsx from 'rollup-plugin-jsx';
import buble from 'rollup-plugin-buble';

export default {
    entry: 'app/main.js',
    format: 'cjs',
    plugins: [
        json(),
        postcss(),
        cjs({
            include: 'node_modules/**',
            namedExports: {
                'node_modules/react/react.js': [ 'createElement', 'Component' ],
                'node_modules/react-dom/index.js': [ 'render' ]
            }
        }),
        resolve({ jsnext: true, main: true }),
        replace({ 'process.env.NODE_ENV': JSON.stringify('development') }),
        jsx({ factory: 'React.createElement' }),
        buble(),
    ],
    dest: 'public/bundle.js'
};
</code></pre>

<p>What am I missing?</p>
","3924022","","","","","2016-09-28 09:20:28","react-dom and rollupjs: Cannot assign to read only property 'history' of object","<javascript><reactjs><react-dom><rollupjs>","0","2","","",""
"47939765","1","47939935","","2017-12-22 10:17:57","","1","137","<p>I'm trying to use <code>flow</code>, <code>babel</code> and <code>rollup</code>, but my code breaks when adding flow. I have tried the <code>rollup-plugin-flow</code> and the different <code>babel-..-..</code> flow plugins (current implementation), but I'm still getting the same error.</p>

<p>When I check the console. I get the following: ()I can't figure out what I'm missing)</p>

<p>Thanks in advanced.</p>

<pre class=""lang-bash prettyprint-override""><code>(!) Missing exports
https://github.com/rollup/rollup/wiki/Troubleshooting#name-is-not-exported-by-module
src/components/ErrorBoundary/ErrorBoundary.js
createElement is not exported by node_modules/react/index.js
26:       if (this.state.errorInfo) {
27:
28:         return React.createElement(
                         ^
29:           'div',
30:           null,
</code></pre>

<p><strong>rollup.config.dev.js</strong></p>

<pre class=""lang-js prettyprint-override""><code>import babel from 'rollup-plugin-babel';
import cjs from 'rollup-plugin-commonjs';
import livereload from 'rollup-plugin-livereload';
import replace from 'rollup-plugin-replace';
import resolve from 'rollup-plugin-node-resolve';
import serve from 'rollup-plugin-serve';
import scss from 'rollup-plugin-scss';
import visualize from 'rollup-plugin-visualizer';

export default {
  input: 'src/index.js',
  output: {
    file: 'dist/bundle.js',
    format: 'cjs',
    sourcemap: true
  },
  plugins: [
    babel({
      babelrc: false,
      exclude: [
      'node_modules/**',
      '**/*.scss'
      ],
      presets: [
        [ ""env"", { ""modules"": false } ],
        ""react""
      ],
      ""plugins"": [ [""external-helpers""], [""transform-flow-strip-types""], [""syntax-flow""] ]
    }),
    replace({ 'process.env.NODE_ENV': JSON.stringify('development') }),
    scss({
      output: 'dist/style.css'
    }),
    resolve(),
    cjs({
      include: 'node_modules/**',
    }),
...ommited_code
}
</code></pre>

<p><strong>ErrorBoundary.js</strong></p>

<pre class=""lang-jsx prettyprint-override""><code>// @flow
import * as React from 'react';

class ErrorBoundary extends React.Component { //&lt;= it breaks here
  constructor(props) {
    super(props);
    this.state = { error: null, errorInfo: null };
  }

  componentDidCatch(error, errorInfo) {
    this.setState({ error: error, errorInfo: errorInfo })
  }

  render() {
    const { children } = this.props;

    if (this.state.errorInfo) {

      return (
        &lt;div&gt;
          &lt;h2&gt;Oops something crashed 😢&lt;/h2&gt;
            &lt;details style={{whiteSpace: 'pre-wrap', color: 'red' }}&gt;
              {this.state.error &amp;&amp; this.state.error.toString()}
              &lt;br /&gt;
              {this.state.errorInfo.componentStack}
            &lt;/details&gt;
        &lt;/div&gt;
      );
    }
    return children;
  }
}

export default ErrorBoundary;
</code></pre>
","4367242","","2622314","","2018-03-17 12:27:16","2018-03-17 12:27:16","Flow rollup, react and babel TypeError: Super expression must either be null or a function, not undefined","<reactjs><babel><flowtype><rollup>","1","0","","",""
"47830891","1","","","2017-12-15 10:57:16","","0","283","<p><strong>What i am trying to do:</strong>
Adding <code>vidyoConnector.js</code> script to a react component in order to create a <code>WebRTC</code> instance with vidyo.</p>

<p><strong>What is happening:</strong>
Instead of adding the particular <code>vidyoConnector.js</code> it loads <code>index.html</code> because of which i get an <strong>unexpected token error</strong> in console.</p>

<p>I am using <code>react-async-script-loader</code> to load this vidyoConnector script.
Also tried to add the script using <strong>Weback addAssetPlugin</strong> but ended up breaking the Build.</p>

<p><strong>What i am expecting :</strong>
Any best approach to load a library file into the component which has its dependency.</p>

<p>Note - The Vidyo library has been written in <code>jquery</code> and hence do not support the ES6 modular pattern. </p>

<p>Please help me with any best approach to achieve the same.</p>

<pre><code>import React from ""react"";
import { FormattedMessage } from ""react-intl"";
import scriptLoader from ""react-async-script-loader"";
import messages from ""./messages"";
import $ from ""jquery"";

class HomePage extends React.Component {

  componentDidMount() {
      const script = document.createElement(""script"");
      const webrtcLogLevel = ""&amp;webrtcLogLevel=info"";
      const webrtc = true;
      const plugin = false;

      script.src = ""https://static.vidyo.io/4.1.15.7/javascript/VidyoClient/VidyoClient.js?onload=onVidyoClientLoaded&amp;webrtc="" +
  webrtc +
  ""&amp;plugin="" +
  plugin +
  webrtcLogLevel;
script.async = true;

script.onload = () =&gt; {
  VidyoClientInitialize($);
  console.log(VC);
};

   document.getElementsByTagName(""head"")[0].appendChild(script);
}

render() {
   return (
      &lt;div&gt;
        &lt;h1&gt;
          &lt;FormattedMessage {...messages.header} /&gt;
        &lt;/h1&gt;
        &lt;button onClick={this.joinCall}&gt;Connect&lt;/button&gt;
         &lt;div id=""renderer"" /&gt;
       &lt;/div&gt;
      );
   }

  onVidyoClientLoaded(status) {
     console.log(
         ""Status: "" + status.state + ""Description: "" + status.description
     );
     switch (status.state) {
         case ""READY"": // The library is operating normally
             $(""#connectionStatus"").html(""Ready to Connect"");
             $(""#helper"").addClass(""hidden"");
             StartVidyoConnector(VC, VCUtils.params.webrtc);
           break;
         case ""RETRYING"": 
             $(""#connectionStatus"").html(
      ""Temporarily unavailable retrying in "" +
        status.nextTimeout / 1000 +
        "" seconds""
    );
    break;
  case ""FAILED"": // The library operating has stopped
    ShowFailed(status);
    $(""#connectionStatus"").html(""Failed: "" + status.description);
    break;
  case ""FAILEDVERSION"": // The library operating has stopped
    UpdateHelperPaths(status);
    ShowFailedVersion(status);
    $(""#connectionStatus"").html(""Failed: "" + status.description);
    break;
  case ""NOTAVAILABLE"": // The library is not available
    UpdateHelperPaths(status);
    $(""#connectionStatus"").html(status.description);
    break;
  }
  return true;
}

joinCall() {
  vidyoConnector.Connect({
  host: ""prod.vidyo.io"", 
  token: ""XXXX"", 
  displayName: ""Sachin"", 
  resourceId: ""demoRoom"", 
  onSuccess: function() {
    console.log(""Connected!! YAY!"");
  },
  onFailure: function(reason) {
    console.error(""Connection failed"");
  },
  onDisconnected: function(reason) {
    console.log("" disconnected - "" + reason);
  }
 });
 }
}

export default scriptLoader([
  ""./vidyoConnector.js"",
])(HomePage);
</code></pre>

<p><a href=""https://i.stack.imgur.com/m8z7a.png"" rel=""nofollow noreferrer"">console view of loaded js file</a></p>
","9103136","","6359835","","2017-12-15 13:14:06","2017-12-15 13:14:06","unable to load a local js file in react component ( Using React-Biolerplate )","<javascript><jquery><reactjs>","0","2","","",""
"47980042","1","47980463","","2017-12-26 14:38:35","","0","46","<p>By the will of fate I have to work with react.js using only ES3 standrad. So, jsx, class and other things.<br>
Using React.createClass and React.createElement I managed to crate a interactive input component that reflects input text to the label above input field.
<a href=""https://i.stack.imgur.com/UOzv0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/UOzv0.png"" alt=""enter image description here""></a>
<br> The code for this is following:</p>

<pre><code>requirejs.config({
    // module name mapped to CDN url
    paths: {
        // Require.js appends `.js` extension for you
        'react': 'https://unpkg.com/react@15.3.2/dist/react',
        'react-dom': 'https://unpkg.com/react-dom@15.3.2/dist/react-dom'
    }
});

requirejs(['react', 'react-dom'], function(React, ReactDOM) {
      'use strict';
      var Input;
      var cr, root;
      cr = React.createElement;

      Input = React.createClass({
        displayName: 'Input',

        getInitialState: function getInitialState() {return {typed: ''};},

        onChange: function onChange(event) {
          this.setState({typed: event.target.value});
        },

        render: function render() {
          return cr('div', null,
            cr('div', null, '=&gt;' + this.state.typed),
            cr('input', { type: 'text', onChange: this.onChange.bind(this)})
            );
          }
        });

        root = Input;
        var app = document.getElementById('app');
        ReactDOM.render(cr(root, null), app);
});
</code></pre>

<p>but now I'm trying to create a new component with two Input components inside:</p>

<pre><code>    InputBlock = React.createClass({
    displayName: 'InputBlock',
    render: function render() {
      return cr('div', null, 
        cr('Input', null), 
        cr('Input', null)
        );
      }
    });
</code></pre>

<p>And I expected to see two element with dynamic behavior, but get only two simple input fields:
<a href=""https://i.stack.imgur.com/bdZKx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bdZKx.png"" alt=""enter image description here""></a></p>

<p>I understand that I miss something obvious, but I'm very new to react.js and can't see the whole picture yet.
Please, help.</p>

<p>Full implementation of final code</p>

<pre><code>requirejs.config({
    // module name mapped to CDN url
    paths: {
        // Require.js appends `.js` extension for you
        'react': 'https://unpkg.com/react@15.3.2/dist/react',
        'react-dom': 'https://unpkg.com/react-dom@15.3.2/dist/react-dom'
    }
});

requirejs(['react', 'react-dom'], function(React, ReactDOM) {
      'use strict';
      var Input, InputBlock;
      var cr, root;
      cr = React.createElement;

      Input = React.createClass({
        displayName: 'Input',

        getInitialState: function getInitialState() {return {typed: ''};},

        onChange: function onChange(event) {
          this.setState({typed: event.target.value});
        },

        render: function render() {
          return cr('div', null,
            cr('div', null, '=&gt;' + this.state.typed),
            cr('input', { type: 'text', onChange: this.onChange.bind(this)})
            );
          }
        });

        InputBlock = React.createClass({
        displayName: 'InputBlock',
        render: function render() {
          return cr('div', null, 
            cr('Input', null), 
            cr('Input', null)
            );
          }
        });

        root = InputBlock;
        var app = document.getElementById('app');
        ReactDOM.render(React.createElement(root, null), app);
});
</code></pre>
","714873","","7461381","","2017-12-26 14:39:26","2017-12-26 15:14:55","components inside components in react with vanilla JS","<javascript><reactjs>","1","0","","",""
"30948033","1","30956201","","2015-06-19 22:15:00","","1","781","<p>I have a table cell that the user can click on which will launch a react-bootstrap modal that displays additional details.  The modal displays a component that has its own state and may trigger an action to pull data from the back-end if the store doesn't have the data it needs.</p>

<p>Currently I'm passing the component as a react element to react-bootstrap's OverlayMixin to show the details in the modal but I'm wondering if instead I should be passing a react class and rendering it with React.createElement.</p>

<p>Current code:</p>

<pre><code>var MyCell = React.creatClass({
    _renderDetails: function () { return (&lt;Details id={this.props.id}/&gt;); 

    render: function() {
        return (
            &lt;td&gt;
                &lt;MyModal modal={this._renderDetails()}&gt;
                    {this.props.value}
                &lt;/MyModal&gt;
            &lt;/td&gt;
        );
     }
});

var MyModal = React.createClass({
    props: { content: React.PropTypes.element.isRequired }
    mixins: [OverlayMixin],

    // Called by the OverlayMixin when this component is mounted or updated.
    renderOverlay: function() {
        if (!this.state.isModalOpen) { return (&lt;span/&gt;); }
        return (
            &lt;Modal className='information-modal' onRequestHide={this.handleToggle}&gt;
                &lt;div className='modal-body'&gt;
                    {this.props.modal}
                &lt;/div&gt;
            &lt;/Modal&gt;
        );
    }
});
</code></pre>

<p>The reason I ask this question is because I was looking at <a href=""http://griddlegriddle.github.io/Griddle/customization.html#customColumns"" rel=""nofollow"">Griddle's documentation</a> they appear to be passing a react class instead.</p>

<pre><code>var LinkComponent = React.createClass({
    render: function() { return &lt;a href ... &lt;/a&gt; } 
});
var columnMeta = [ { ""customComponent"": LinkComponent };
</code></pre>

<p>And then rendering it using React.CreateElement. <a href=""https://github.com/GriddleGriddle/Griddle/blob/master/scripts/gridRow.jsx#L100"" rel=""nofollow"">Source Code</a></p>

<pre><code>var colData = (&lt;meta.customComponent data= ... /&gt;;
returnValue = &lt;td&gt;{colData}&lt;/td&gt;);

// Turns into
var colData = React.createElement(meta.customComponent, {data: ...
returnValue = React.createElement(""td"" ... colData));
</code></pre>
","1167756","","","","","2015-06-20 16:22:12","Passing an element vs. a react class to an optionally displayed modal","<reactjs><react-bootstrap>","2","0","","",""
"30662401","1","","","2015-06-05 08:59:17","","1","558","<p>My simple web app have two pages. (Express as server)</p>

<p>/home</p>

<p>/item</p>

<ol>
<li><p>To test if the page is render in both server and client. I print a text to the console. I can see the text 'render' in console of server and client, if i directly type the url localhost:3000/item in browser. However, if I access the item page via the <code>&lt;Link to=""item""&gt;Item&lt;/Link&gt;</code> in home page. I can see the 'render' in client side only but not in server side? So I think it is not render in server side. Or am I misunderstanding something? can anyone tell me?</p></li>
<li><p>another question is: I would like to use the same code to generate a phonegap app running in android. Is there a problem if I use React server side rendering? Or should I use React client side rendering and then call a restful to get data?</p></li>
<li><p>one more question: 
when I use this code in server it give me a ""unexpected token &lt;"" error</p></li>
</ol>

<p>React.renderToString(&lt; Handler /&gt;)</p>

<p>So that I changed to </p>

<pre><code>React.renderToString(React.createElement(Handler))
</code></pre>

<p>How to setup the server so that it know how to parse jsx code?</p>

<p>Thanks everyone</p>

<p>item.js</p>

<pre><code>var React = require('react'),
DOM = React.DOM, div = DOM.div, button = DOM.button, ul = DOM.ul, li = DOM.li    

// This is just a simple example of a component that can be rendered on both
// the server and browser

module.exports = React.createClass({
    getInitialState: function() {
        console.log('getInitialState');      
        return {
            count: 0//this.props.initialCount
        };
    },

    _increment: function() {
      console.log('_increment');
      this.setState({ count: this.state.count + 1 });
    },

    render: function() {
        console.log('render');
        return div({onClick:this._increment}, this.state.count);                  
    }
});
</code></pre>

<p>server.js</p>

<pre><code>app.use(function (req, res) {
  Router.run(routes, req.path, function (Handler) {    
    res.send('&lt;!DOCTYPE html&gt;' + React.renderToString(React.createElement(Handler)));
  });
});
</code></pre>

<p>browser.js</p>

<pre><code>var React = require('react');
var Router = require('react-router');
var routes = require('./routes');

//var Info = require ('./pages/info.jsx');


 /*React.render(
        &lt;h1&gt;Hello, world!&lt;/h1&gt;,
        document.getElementById('main')
      );*/

Router.run(routes, Router.HistoryLocation, function (Handler) {
  React.render(&lt;Handler /&gt;, document);
});
</code></pre>
","2902485","","2902485","","2015-06-05 09:08:35","2015-06-07 20:37:28","React Server Side Rendering with react-router","<reactjs><react-router>","1","3","1","",""
"30498222","1","30608970","","2015-05-28 05:52:26","","5","2401","<p>I'm having a problem with React Native and Parse JS SDK.
<br> And I'm using <a href=""https://github.com/ParsePlatform/ParseReact"" rel=""nofollow"">ParseReact</a> </p>

<p>I have built a login, sign up and a main view, Sign up and log in works well but after i logged in -> directed to main view and when I refresh the app (CMD+R) in my simulator, it brings me back to the login view again, i should be brought to Main view.</p>

<p>As you can see I have set a state for initialComponent:</p>

<pre><code>this.state = {        
      InitialComponent : ((!currentUser) ? LoginView : MainView)
};
</code></pre>

<p>This allows my navigator to check for currentUser is null then load LoginView as initial component, else set Main View(user logged in)</p>

<pre><code>'use strict';
var React = require('react-native');
var MainView = require('./MainView');
var LoginView = require('./LoginView');


var Parse = require('parse').Parse;
var ParseReact = require('parse-react');
Parse.initialize(""mykey"", ""mykey"");


var {
  AppRegistry,
  StyleSheet,
  Text,
  View,
  TextInput,
  TouchableHighlight,
  Navigator,
  Component
} = React;


class MyApp extends Component {
    constructor(props) {
      super(props);

      var currentUser = Parse.User.current();
      console.log('Current User:' + currentUser);

      this.state = {        
        InitialComponent : ((!currentUser) ? LoginView : MainView)
      };
    }

   render() {
        return (
            &lt;Navigator
              initialRoute={{
                 name : 'StatusList',
                 component: this.state.InitialComponent
              }}
              configureScene = {() =&gt;{
                return Navigator.SceneConfigs.FloatFromRight;
              }}
              renderScene={(route, navigator) =&gt;{
                if(route.component) {
                  return React.createElement(route.component, {navigator});
                }
              }}/&gt;

        );
    }
}

AppRegistry.registerComponent('MyApp', function() { return MyApp });
</code></pre>

<p>In my Xcode console, i kept getting current user is null after each refresh even though i have previously logged in. On my parse app, I can see new session has been created.</p>

<p>In my LoginView.</p>

<pre><code>'use strict';

var React = require('react-native');
var SignUp = require('./SignUp');
var MainView = require('./MainView');

var {
  AppRegistry,
  StyleSheet,
  Text,
  View,
  TextInput,
  TouchableHighlight,
  Navigator,
  AlertIOS,
  Component
} = React;

var styles = StyleSheet.create({
  container : {
      flex: 1,
      padding: 15,
      marginTop: 30,
      backgroundColor: '#0179D5',
   },
  text: {
    color: '#000000',
    fontSize: 30,
    margin: 100
  },

  headingText: {
    color: '#fff',
    fontSize: 40,
    fontWeight: '100',
    alignSelf: 'center',
    marginBottom: 20,
    letterSpacing: 3
  },

  textBox: {
    color: 'white',
    backgroundColor: '#4BB0FC',
    borderRadius: 5,
    borderColor: 'transparent',
    padding:10,
    height:40,
    borderWidth: 1,
    marginBottom: 15,
  },

  greenBtn: {
    height: 36,
    padding: 10,
    borderRadius: 5,
    backgroundColor: '#2EA927',
    justifyContent: 'center'
  },

  signUpButton: {
    marginTop: 10,
    height: 36,
    padding: 10,
    borderRadius: 5,
    backgroundColor: '#FF5500',
    justifyContent: 'center'

  },

  btnText: {
    color : '#fff',
    fontSize: 15,
    alignSelf: 'center'
  },

  buttonText: {
    fontSize: 18,
    color: 'white',
    alignSelf: 'center'
  },

   loginForm : {
      flex:1,
      marginTop:100
   }
});

class LoginView extends Component {

    constructor(props) {
      super(props);
      this.state = {
        username: '',
        password: ''
      };

    }

    checkLogin() {
        var success = true;
        var state = this.state;
        for(var key in state){
          if(state[key].length &lt;= 0){
            success = false;
          }
        }

        if(success) {
          this._doLogin();
        } else {
          //show alert
          AlertIOS.alert('Error','Please complete all fields',
            [{text: 'Okay', onPress: () =&gt; console.log('')}]
          );
        }
    }

    goMainView() {
      this.props.navigator.push({
        title: ""Home"",
        component: MainView
      });
    }

    goSignUp() {
      this.props.navigator.push({
        title: ""Sign Up"",
        component: SignUp
      });
    }

    _doLogin() {
      var parent = this;
      Parse.User.logIn(this.state.username, this.state.password, {
        success: function(user) {
            parent.goMainView();
        },
        error: function(user, error) {
          AlertIOS.alert('Login Error', error.message,
            [{text: 'Okay', onPress: () =&gt; console.log('')}]
          );
        }
      });
    }

    onUsernameChanged(event) {
      this.setState({ username : event.nativeEvent.text });
    }

    onPasswordChanged(event) {
      this.setState({ password : event.nativeEvent.text });
    }

    render() {
       return(
          &lt;View style={styles.container}&gt;
            &lt;View style={styles.loginForm}&gt;
                &lt;Text style={styles.headingText}&gt;
                  MyStatus
                &lt;/Text&gt;

               &lt;TextInput style={styles.textBox}
                placeholder='Username'
                onChange={this.onUsernameChanged.bind(this)}
                placeholderTextColor='#fff'
                autoCorrect={false}
               &gt;
               &lt;/TextInput&gt;

               &lt;TextInput style={styles.textBox}
                placeholder='Password'
                onChange={this.onPasswordChanged.bind(this)}
                placeholderTextColor='#fff'
                password={true}
               &gt;
               &lt;/TextInput&gt;

               &lt;TouchableHighlight style={styles.greenBtn}
                  underlayColor='#33B02C'
                  onPress={this.checkLogin.bind(this)}&gt;
                    &lt;Text style={styles.btnText}&gt;Login&lt;/Text&gt;

                &lt;/TouchableHighlight&gt;


                &lt;TouchableHighlight style={styles.signUpButton}
                  underlayColor='#D54700'
                  onPress={this.goSignUp.bind(this)}&gt;
                    &lt;Text style={styles.btnText}&gt;Sign Up&lt;/Text&gt;

                &lt;/TouchableHighlight&gt;
            &lt;/View&gt;

          &lt;/View&gt;
        );
    }
}

module.exports = LoginView;
</code></pre>

<p>Am I doing it the wrong way? Kindly advice. Or is it something wrong with parse localstorage/session?</p>
","2013111","","1454176","","2015-12-27 23:06:15","2016-07-09 02:14:47","react native and parse, currentuser is null after login and cmd+R","<parse.com><reactjs><react-native>","4","4","1","",""
"47326516","1","","","2017-11-16 09:55:12","","1","120","<p>Hi guys I'm trying to set both the react-data-grid and react-data-grid-addons libraries as externals in webpack, so they don't get included in my asset bundling. I had everything working before I tried to move it all to the externals part of webpack.
I've found the following error message in a few stacktraces, but could not manage to get it to work. Perhaps my use case is a little different and the problem lies somewhere else? This is the message I get:</p>

<blockquote>
  <p>React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: object. Check the render method of <code>Table</code>.</p>
</blockquote>

<p>I use the following versions in my package.json:</p>

<pre><code>""dependencies"": {
    ""react"": ""15.4.2"",
    ""react-data-grid"": ""2.0.60"",
    ""react-data-grid-addons"": ""2.0.60"",
    ""react-dom"": ""15.4.2""
  },
</code></pre>

<p>In the externals of my webpack module.exports I have:</p>

<pre><code>externals: {
  ""react"": ""React"",
  ""react-dom"": ""ReactDOM"",
  ""react-data-grid"": ""ReactDataGrid"",
  ""react-data-grid-addons"": ""ReactDataGridPlugins""
}
</code></pre>

<p>And finally the whole logic for the table I'm trying to render. I've tried playing around with the imports at the top, to no avail :( Is there something I'm not doing right? The table is the example I used from the filterable &amp; sortable table example given by react-data-grid (<a href=""http://adazzle.github.io/react-data-grid/examples.html#/filterable-sortable-grid"" rel=""nofollow noreferrer"">http://adazzle.github.io/react-data-grid/examples.html#/filterable-sortable-grid</a>). Had to change it to a typescript structure however.</p>

<pre><code>/** @module Global *//***/

import * as React from ""react"";
import * as ReactDataGrid from ""react-data-grid"";
import { Toolbar, Data } from ""react-data-grid-addons"";
import * as ReactDOM from ""react-dom"";

const Selectors = Data.Selectors;

/**
 * Row interface
 */
interface Row {
    id: number;
    title: string;
    count: number;
}

/**
 * Column interface
 */
interface Column {
    key: keyof Row;
    name: string;
    filterable?: boolean;
    sortable?: boolean;
}

/**
 * State interface
 */
interface State {
    rows: Row[] | null;
    filters: any;
    sortColumn: string | null;
    sortDirection: string | null;
}

/**
 * Table component
 */
class Table extends React.Component&lt;{}, State&gt; {
    private columns: Column[];
    private rows: Row[];

    public state: State = {
        rows: null,
        filters: {},
        sortColumn: null,
        sortDirection: null,
    };

    /**
     * Table class constructor
     * @param props
     * @param context
     */
    constructor(props: any, context: any) {
        super(props, context);
        this.columns = [
            { key: ""id"", name: ""ID"", filterable: true, sortable: true },
            { key: ""title"", name: ""Title"", filterable: true, sortable: true },
            { key: ""count"", name: ""Count"", filterable: true, sortable: true },
        ];
        this.rows = this.createRows();

        this.state.rows = this.rows;

        this.handleGridSort = this.handleGridSort.bind(this);
        this.handleFilterChange = this.handleFilterChange.bind(this);
        this.onClearFilters = this.onClearFilters.bind(this);
    }

    /**
     * Create the table rows
     * @returns {Row[]}
     */
    public createRows(): Row[]  {
        const rows = [];
        for (let i = 1; i &lt; 1000; i++) {
            rows.push({
                id: i,
                title: ""Title "" + i,
                count: i * 1000,
            });
        }
        return rows;
    }

    /**
     * Get the table rows as an array of Row objects
     * @returns {Row[]}
     */
    public getRows(): Row[] {
        return Selectors.getRows(this.state) as Row[];
    }

    /**
     * Get the amount of rows
     * @returns {number}
     */
    public getSize(): number {
        return this.getRows().length;
    }

    /**
     * Get a specific row
     * @param {number} i
     * @returns {Row}
     */
    public rowGetter(i: number): Row {
        const rows = this.getRows();
        return rows[i];
    }

    /**
     * Handle the filter change
     * @param filter
     */
    public handleFilterChange(filter: any): void {
        const newFilters = {...this.state.filters};
        if (filter.filterTerm) {
            newFilters[filter.column.key] = filter;
        } else {
            delete newFilters[filter.column.key];
        }

        this.setState({ filters: newFilters });
    }

    /**
     * Handle the table sorting
     * @param {string} sortColumn
     * @param {string} sortDirection
     */
    public handleGridSort(sortColumn: string, sortDirection: string): void {
        this.setState({ sortColumn: sortColumn, sortDirection: sortDirection });
    }

    /**
     * Handles the clearing of the filters
     */
    public onClearFilters(): void {
        this.setState({ filters: {} });
    }

    /**
     * Render table
     * @returns {any}
     */
    public render(): any {
        // console.log(this);
        return  (
            &lt;ReactDataGrid
                columns={this.columns}
                rowGetter={this.rowGetter.bind(this)}
                rowsCount={this.getSize()}
                minHeight={500}
                toolbar={&lt;Toolbar enableFilter={true} /&gt;}
                enableCellSelect={true}
                onGridSort={this.handleGridSort}
                onAddFilter={this.handleFilterChange}
                onClearFilters={this.onClearFilters}
            /&gt;);
    }
}

ReactDOM.render(
    &lt;Table /&gt;,
    document.getElementById(""table""),
);
</code></pre>
","8950465","","8950465","","2017-11-16 10:41:44","2017-11-16 11:38:41","react-data-grid: createElement type is invalid with typescript & webpack externals","<reactjs><typescript><webpack><react-data-grid>","1","1","","",""
"30598447","1","","","2015-06-02 14:08:08","","0","626","<p>I have some files Typescrypt->ES6->React JSX (ES6)->Webpack (with react-hot and babel),
<strong>react-hot does not refresh page</strong></p>

<p>One is some sort of code behide <em>PersonDetailsComponent.cb.js</em>
(compiled from TypeScript)</p>

<pre><code>import * as React from ""react/addons"";
export default class PersonDetailsComponent_CB extends React.Component {
    constructor(props) {
        super(props);
    }
    componentDidMount() {
    }
    //other code
    render() {
        //return React.jsx(`&lt;div&gt;test&lt;/div&gt;`);
        //return React.DOM.div(null, this.props.name + "" is a "" + this.props.role);
        return null;
    }
}
</code></pre>

<p>Then <em>PersonDetailsComponent.jsx</em> (because TypeScript compiler can't parse JSX)</p>

<pre><code>    import * as React from ""react/addons"";
    import {default as PersonDetailsComponent_CB} from ""../tmp/PersonDetailsComponent.cb.js"";

    class PersonDetailsComponent extends PersonDetailsComponent_CB {
        constructor(props) {
            super(props);
        }
//only render
        render() {
            let a = 1;
            return(
                &lt;div&gt;
                {this.props.name} is  {this.props.role}
                &lt;/div&gt;
                );
        }
    }

    export default function Factory(props) {
        ""use strict"";
        return React.createElement(PersonDetailsComponent, props);
    }
</code></pre>

<p>Then <em>index.js</em> chunk</p>

<pre><code>import {default as PersonDetailsComponent}  from ""./PersonDetailsComponent.jsx"";

React.render(PersonDetailsComponent(
    {name: ""Bob"", 
    role: ""mmm""}),
    document.body);
</code></pre>

<p>All is OK, but <strong>react-hot does not refresh page</strong> then I edit and save jsx file. For jsx files in ES5 format all is updating.
I'm using webpack and react-hot and babel</p>

<pre><code>gulp.task('react:development', function() {
  var wconfig = {
    cache: true,
    devtool: 'eval',
    entry: [
      'webpack-dev-server/client?http://'+whost+':'+wport,
      'webpack/hot/only-dev-server',
      './src/index'
    ],
    output: {
      path: process.cwd(),
      //contentBase: 'http://'+whost+':'+wport,
      filename: 'bundle.js',
      publicPath: 'http://'+whost+':'+wport+'/dist/'
    },
    plugins: [
      new dwebpack.HotModuleReplacementPlugin(),
      new dwebpack.NoErrorsPlugin()
    ],
    module: {
      loaders: [
      { test: /\.js$/, loaders: ['react-hot', 'jsx?harmony!babel', 'babel-loader'], exclude: /node_modules/ },
      { test: /\.jsx$/, loaders: ['react-hot', 'jsx?harmony!babel', 'babel-loader'], exclude: /node_modules/ },
      { test: /\.css$/, loader: ""style!css"" }
      ]
    }
  };

  var server = new WebpackDevServer(dwebpack(wconfig), {
    publicPath: wconfig.output.publicPath,
    hot: true,
    stats: {
      colors: true,
      progress: true
    }
  });

  server.listen(wport, function (err, result) {
    if (err) {
      console.log(err);
    }

    gutil.log('Webpack Dev Server started. Compiling...');
  });
});
</code></pre>

<p>Anybody know this problem?</p>
","3852290","","1434116","","2016-02-05 22:46:30","2016-02-05 22:46:30","WebPack and react-hot module with babel and ES6 doesn't update page on save","<javascript><ecmascript-6><webpack><react-jsx><webpack-dev-server>","1","0","","",""
"39310861","1","","","2016-09-03 20:02:24","","0","28","<p>I am not getting output to this code with reactjs , please tell me what is the problem with this code. I am not able to find the error.i am using react for the first time.</p>

<pre><code>&lt;head&gt;
  &lt;script src=""https://npmcdn.com/react@15.3.1/dist/react.js""&gt;&lt;/script&gt;
  &lt;script src=""https://npmcdn.com/react-dom@15.3.1/dist/react-dom.js""&gt;&lt;/script&gt;

&lt;/head&gt;
&lt;body&gt;
&lt;/body&gt;


&lt;script type=""text/jsx""&gt;

  var HelloWorld = React.createClass({
    render: function() {
     return &lt;div&gt;
        Hello World
     &lt;/div&gt;
    }
  });

  var element = React.createElement(HelloWorld);
  ReactDOM.render(element, document.body);
&lt;/script&gt;
</code></pre>
","6536488","","","","","2016-09-03 20:20:19","not able to display with reactjs","<reactjs>","1","2","","",""
"47976008","1","47976065","","2017-12-26 08:44:41","","0","103","<p>I'm using google script it my daily practice and recenlty tried to connect react.js to client side of web-app. <br>
I've achived to connect react.js using require.js, but the point is that I not able to use jsx. I have to use vanila javascript, to create and render components.<br></p>

<pre><code>requirejs.config({
    // module name mapped to CDN url
    paths: {
        // Require.js appends `.js` extension for you
        'react': 'https://unpkg.com/react@15.3.2/dist/react',
        'react-dom': 'https://unpkg.com/react-dom@15.3.2/dist/react-dom'
    }
});

requirejs(['react', 'react-dom'], function(React, ReactDOM) {
  var app, cr, r_comp, el, app;
  cr = React.createElement;
  r_comp = new React.Component();
  el = [];
   el[0] = React.createElement('button', {
        type: 'submit',
        className: 'postfix',
        disabled: false
    }, 'Automate');
   el[1] = React.createElement('input', { placeholder: 'Enter a url', type: 'url', autoFocus: true }, 'default_url')

   app = document.getElementById('app');
   ReactDOM.render(el[1], app);

});
</code></pre>

<p>when I'm trying to create first element(el[0]) it works fine, and a button appears
<a href=""https://i.stack.imgur.com/CbIvs.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CbIvs.png"" alt=""enter image description here""></a>
but when I'm trying to create second element - input, it respones with error</p>

<blockquote>
  <p>""react.js:20145 Uncaught Error: input is a void element tag and must
  neither have <code>children</code> nor use <code>dangerouslySetInnerHTML</code>.""</p>
</blockquote>

<p><a href=""https://i.stack.imgur.com/FW0el.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FW0el.png"" alt=""enter image description here""></a>
googling that error I didn't found any usefull information for this case, or I don't understand react is well enough to understand what should I change to overcome the error.
Please, help.</p>
","714873","","","","","2017-12-26 08:51:27","Create an react component with input using only ES3","<reactjs><input><google-apps-script>","1","0","","",""
"48024328","1","48025546","","2017-12-29 14:48:04","","1","117","<p>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in.
Check your code at AddCarScreen.js:30.
... </p>

<p>I keep getting this error and it says to check my code at line 30 which is the  line where it dynamically generates picker items based on the array given to state in the constructor.</p>

<p>Styles is a correctly imported with export default in a different file. This javascript file will then be exported to the central drawer navigator in a different file. </p>

<pre><code>    import React, { Component } from 'react';
import { Platform, StyleSheet, Text, View, Button, Picker } from 'react-native';
import styles from './StyleSheet.js';

export default class AddCarScreen extends Component {
  constructor(props){
super(props)

this.state = { 
  carBrand : """", 
  carBrandList : [ 'Ford', 'VW', 'Mazda' ]
}; 
</code></pre>

<p>}</p>

<pre><code>  static navigationOptions = {
      drawerLabel: 'Add Car',
  }



 render() {

const { navigate } = this.props.navigation;

return(
  &lt;View style = { styles.container }&gt; 
    &lt;Text style = { styles.screenTitle }&gt; Add Car &lt;/Text&gt;
    &lt;Picker
      selectedValue = {this.state.carBrand}
      onValueChange = {(itemValue) =&gt; this.setState({ carBrand: itemValue })}&gt;
      **{ this.state.carBrandList.map((item, index) =&gt; { return &lt;Picker.item label = {item} value = {item} key = {index}/&gt; } ) }**
    &lt;/Picker&gt;
    &lt;Button 
      onPress = {() =&gt; navigate('DrawerOpen')}
      title = ""Menu""
    /&gt;
  &lt;/View&gt;
    );
  }
};
</code></pre>
","8098332","","","","","2018-02-09 16:55:07","Warning: React.createElement: type is invalid with React Native Picker","<javascript><react-native>","2","0","","",""
"48628963","1","","","2018-02-05 18:18:26","","0","159","<p>I have an index file where I export all of my SVG components:</p>

<pre><code>import Twitter from './Twitter';
import Upload from './Upload';
import Cloud from './Cloud';
import Share from './Share';
import Eye from './Eye';
import Trash from './Trash';
import Search from './Search';

export {
  Facebook,
  Twitter,
  Upload,
  Cloud,
  Share,
  Eye,
  Trash,
  Search,
};
</code></pre>

<p>Then later in the app, I use them like:</p>

<pre><code>import * as Icons from './index.js';

&lt;Icons.Twitter /&gt;
...
&lt;Icons.Search /&gt;
</code></pre>

<p>because I have a lot of these icons I would like to load them asynchronously with <code>react-lodable</code>.</p>

<p>I tried:</p>

<pre><code>import React from 'react';
import Loadable from 'react-loadable';
import PulsingCircleLoader from '../PulsingCircleLoader';

const Icons = Loadable({
  loader: () =&gt; import(/* webpackChunkName: ""icons"" */ './index'),
  loading: () =&gt; &lt;PulsingCircleLoader isLoading /&gt;,
});

export default Icons;
</code></pre>

<p>But this gives me an error:</p>

<blockquote>
  <p>warning.js?6327:33 Warning: React.createElement: type is invalid --
  expected a string (for built-in components) or a class/function (for
  composite components) but got: undefined. You likely forgot to export
  your component from the file it's defined in, or you might have mixed
  up default and named imports</p>
</blockquote>

<p>that's probably because <code>Icons.Twitter</code> is at some point an <code>PulsingCircleLoader</code> with no static <code>Twitter</code> property.</p>

<p>How can I get around this?</p>
","4443323","","","","","2018-02-05 18:18:26","react-loadable import dynamicaly object with components as properties","<javascript><reactjs><dynamic-import><react-loadable>","0","0","1","",""
"30715220","1","","","2015-06-08 17:11:47","","9","11309","<p>I would be getting dynamic html content from my template rendering which was rendered by other react components. How would I convert this html string to React component so that I can use the component in my render function. Note that I want to preserve react specific attributes used for diffing.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>React.createClass( {
  var self = this;

  componentWillMountDown : function() {
    //htmlString is essentially huge dynamic one in my actual case
    var htmlString = ""&lt;div class='classDiv' react-id=""0.1""&gt;&lt;input type='text'/&gt;&lt;/div&gt;"";
    self.setState({responseString : htmlString});
    self.forceUpdate();
  },
    
  render: function() {
    var Response = this.state.responseString;
    //how would I return the react component as response?
    return (&lt;Response/&gt;); //does not work. err is it shd be valid react component
   }
});</code></pre>
</div>
</div>
</p>

<p>I've tried converting htmlString to HTMLDocument object and recursively creating React.createElement in willmount callback and setting react component. however, the error is type toUpperCase is not defined.</p>
","2872888","","2872888","","2015-06-08 18:10:19","2017-08-15 11:43:35","dynamic HTML String to react component","<javascript><reactjs>","2","0","1","",""
"48076562","1","","","2018-01-03 11:34:33","","1","100","<p>I have try to use the '<a href=""http://adazzle.github.io/react-data-grid/"" rel=""nofollow noreferrer"">http://adazzle.github.io/react-data-grid/</a>' into the html without the npm</p>

<p>but when i try to used the '<a href=""http://adazzle.github.io/react-data-grid/examples.html#/custom-filters"" rel=""nofollow noreferrer"">http://adazzle.github.io/react-data-grid/examples.html#/custom-filters</a>' example it give errors it doesnot find the addon in component classs</p>

<p>My working example </p>

<p>index.html</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;

  &lt;head&gt;
    &lt;script data-require=""jquery@3.1.1"" data-semver=""3.1.1"" src=""https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js""&gt;&lt;/script&gt;
    &lt;script data-require=""tether@*"" data-semver=""1.4.0"" src=""https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js""&gt;&lt;/script&gt;
    &lt;link data-require=""bootstrap@4.0.5"" data-semver=""4.0.5"" rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css"" /&gt;
    &lt;script data-require=""bootstrap@4.0.5"" data-semver=""4.0.5"" src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.5/js/bootstrap.min.js""&gt;&lt;/script&gt;
    &lt;script data-require=""react@*"" data-semver=""15.5.0"" src=""https://cdnjs.cloudflare.com/ajax/libs/react/15.5.0/react.min.js""&gt;&lt;/script&gt;
    &lt;script data-require=""react@*"" data-semver=""15.5.0"" src=""https://cdnjs.cloudflare.com/ajax/libs/react/15.5.0/react-dom.min.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript"" src=""node_modules/react-data-grid/dist/react-data-grid.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript"" src=""node_modules/react-data-grid-addons/dist/react-data-grid-addons.js""&gt;&lt;/script&gt;
    &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.21.1/babel.min.js""&gt;&lt;/script&gt;
    &lt;link rel=""stylesheet"" href=""style.css"" /&gt;
  &lt;/head&gt;

  &lt;body&gt;
    &lt;div class='container'&gt;
      &lt;h1&gt;Hello World!&lt;/h1&gt;
      &lt;button id='btnShow' type=""button"" class=""btn btn-primary""&gt;Show&lt;/button&gt;
      &lt;button id='btnHide' type=""button"" class=""btn btn-primary""&gt;Hide&lt;/button&gt;
      &lt;div id=""translator"" class='mt-5'&gt;&lt;/div&gt;
      &lt;div id=""output""&gt;&lt;/div&gt;
    &lt;/div&gt;
     &lt;script src=""data.jsx"" type=""text/babel""&gt;&lt;/script&gt;
    &lt;script src=""script.jsx"" type=""text/babel""&gt;&lt;/script&gt;

  &lt;/body&gt;

&lt;/html&gt;
</code></pre>

<p>script.jsx</p>

<pre><code>var translator = ReactDOM.render(React.createElement(Example), document.getElementById('translator'));

$(function() {
  $('#btnShow').click(function() {
    $('#output').text('');

    translator.show('Hola Mundo! Este es el control de Translator.', 'en', 'es', function(text) {
      $('#output').text(text);
    });
  });

  $('#btnHide').click(function() {
    translator.hide();
  });
});
</code></pre>

<p>Data.jsx</p>

<pre><code>class Example extends React.Component {
  constructor(props, context) {
    super(props, context);
    this.createRows();
    this._columns = [
      { key: 'id', name: 'ID' },
      { key: 'title', name: 'Title' },
      { key: 'count', name: 'Count' } ];

    this.state = null;
  }

  createRows = () =&gt; {
    let rows = [];
    for (let i = 1; i &lt; 1000; i++) {
      rows.push({
        id: i,
        title: 'Title ' + i,
        count: i * 1000
      });
    }

    this._rows = rows;
  };

  rowGetter = (i) =&gt; {
    return this._rows[i];
  };

  render() {
    return  (
      &lt;ReactDataGrid
        columns={this._columns}
        rowGetter={this.rowGetter}
        rowsCount={this._rows.length}
        minHeight={500} /&gt;);
  }
}
</code></pre>
","","user5633496","","","","2018-01-03 11:34:33","using 'react data Grid' in html application without npm","<jquery><reactjs><react-data-grid>","0","0","","",""
"40794470","1","40794514","","2016-11-24 21:05:09","","0","101","<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react';
import {Alert} from 'react-bootstrap';


var App = React.createClass({
  render() {
    return React.createElement('Alert',{bsStyle: 'danger'},'this alert doesn\'t work');
  }
});

module.exports = App;</code></pre>
</div>
</div>
</p>

<p>I render this component in the dom in another component. Its works fine with a non bootstrap element like this for instance:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react';
import {Alert} from 'react-bootstrap';
const element = React.createElement(
    'h1',
    {className: 'greeting'},
    'Hello, world!'
);


var App = React.createClass({
  render() {
    return element;
  }
});

module.exports = App;</code></pre>
</div>
</div>
</p>
","6942857","","","","","2016-11-24 21:08:45","Why doesn't this react element render?","<reactjs><react-bootstrap>","1","0","1","",""
"40817699","1","40820145","","2016-11-26 11:07:01","","2","866","<p>I'm trying to run tests with Jest, React and PostCSS. I could make it work fine without react-css-modules by using <code>className={styles.*}</code>. Also tried <a href=""https://facebook.github.io/jest/docs/tutorial-webpack.html"" rel=""nofollow noreferrer"">For CSS Modules, you can use an ES2015 Proxy</a> didn't help.</p>

<pre><code>import React, { Component } from 'react';
import logo from './logo.svg';
import CSSModules from 'react-css-modules';
import styles from './App.pcss';

class App extends Component {
    render() {
        return (
            &lt;div styleName=""root""&gt;
                &lt;div styleName=""header""&gt;
                    &lt;img src={logo} styleName=""logo"" alt=""logo"" /&gt;
                    &lt;h2&gt;Welcome to React&lt;/h2&gt;
                &lt;/div&gt;
                &lt;p styleName=""intro""&gt;To get started, edit &lt;code&gt;src/App.js&lt;/code&gt; and save to reload.&lt;/p&gt;
            &lt;/div&gt;
        );
    }
}

export default CSSModules(App, styles);
</code></pre>

<p>Failing test:</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';

import App from './App';

it('renders without crashing', () =&gt; {
    const div = document.createElement('div');
    ReactDOM.render(&lt;App /&gt;, div);
});
</code></pre>

<p>Stack trace:</p>

<pre><code>TypeError: Class constructor App cannot be invoked without 'new'
  at new WrappedComponent (node_modules/react-css-modules/dist/extendReactClass.js:46:58)
  at node_modules/react-dom/lib/ReactCompositeComponent.js:295:18
  at measureLifeCyclePerf (node_modules/react-dom/lib/ReactCompositeComponent.js:75:12)
  at ReactCompositeComponentWrapper._constructComponentWithoutOwner (node_modules/react-dom/lib/ReactCompositeComponent.js:294:16)
  at ReactCompositeComponentWrapper._constructComponent (node_modules/react-dom/lib/ReactCompositeComponent.js:280:21)
  at ReactCompositeComponentWrapper.mountComponent (node_modules/react-dom/lib/ReactCompositeComponent.js:188:21)
  at Object.mountComponent (node_modules/react-dom/lib/ReactReconciler.js:46:35)
  at ReactCompositeComponentWrapper.performInitialMount (node_modules/react-dom/lib/ReactCompositeComponent.js:371:34)
  at ReactCompositeComponentWrapper.mountComponent (node_modules/react-dom/lib/ReactCompositeComponent.js:258:21)
  at Object.mountComponent (node_modules/react-dom/lib/ReactReconciler.js:46:35)
  at mountComponentIntoNode (node_modules/react-dom/lib/ReactMount.js:104:32)
  at ReactReconcileTransaction.perform (node_modules/react-dom/lib/Transaction.js:140:20)
  at batchedMountComponentIntoNode (node_modules/react-dom/lib/ReactMount.js:126:15)
  at ReactDefaultBatchingStrategyTransaction.perform (node_modules/react-dom/lib/Transaction.js:140:20)
  at Object.batchedUpdates (node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js:62:26)
  at Object.batchedUpdates (node_modules/react-dom/lib/ReactUpdates.js:97:27)
  at Object._renderNewRootComponent (node_modules/react-dom/lib/ReactMount.js:320:18)
  at Object._renderSubtreeIntoContainer (node_modules/react-dom/lib/ReactMount.js:401:32)
  at Object.render (node_modules/react-dom/lib/ReactMount.js:422:23)
  at Object.&lt;anonymous&gt;.it (src/components/App.test.js:8:50)
  at process._tickCallback (internal/process/next_tick.js:103:7)
</code></pre>
","5347426","","","","","2016-11-26 15:54:22","Cannot use react-css-modules with Jest","<react-css-modules>","1","0","","",""
"32033711","1","32046636","","2015-08-16 09:41:35","","2","994","<p>I'm try to test my ReactJS mixin for drag and drop functionality using jasmine, karma and React TestUtils.</p>

<p>No exception is thrown but when debugging it seems that the function bound to the event listener not being executed when the event is simulated.</p>

<p>You can clone the it here:
<a href=""https://github.com/itsh01/react-dragdrop/tree/testing-simutale-events"" rel=""nofollow"">https://github.com/itsh01/react-dragdrop/tree/testing-simutale-events</a></p>

<p>Thank you very much in advance.</p>

<p>Here is my test:</p>

<pre><code>beforeEach(function () {

    var CompDrag = React.createClass({
        mixins: [DragDropMixin],
        dragDrop: function dragDrop() {
            return {
                draggable: true,
                dropType: 'test',
                dataTransfer: {
                    test: true
                }
            };
        },
        render: function render() {
            return React.createElement('div', {});
        }
    });

    var CompDrop = React.createClass({
        mixins: [DragDropMixin],
        dragDrop: function dragDrop() {
            var self = this;
            return {
                droppable: true,
                acceptableTypes: ['test'],
                drop: function (data) {
                    self.setState(data);
                }
            };
        },
        render: function render() {
            return React.createElement('div', {});
        }
    });

    elementDrag = React.createElement(CompDrag, {});
    elementDrop = React.createElement(CompDrop, {});

});

...

it('should attach drop functionality when configured', function () {
    var renderedDrag = TestUtils.renderIntoDocument(elementDrag);
    var renderedDrop = TestUtils.renderIntoDocument(elementDrop);
    var nodeDrag = renderedDrag.getDOMNode();
    var nodeDrop = renderedDrop.getDOMNode();
    var mockEvent = {
        preventDefault: function () {},
        dataTransfer: {
            types: [""objtopass""],
            setData: function () {},
            getData: function () {
                return JSON.parse({
                    dropType: 'test',
                    data: {
                        test: true
                    }
                });
            }
        }
    };

    TestUtils.SimulateNative.dragStart(nodeDrag, mockEvent);
    TestUtils.Simulate.dragOver(nodeDrop, mockEvent);
    TestUtils.Simulate.drop(nodeDrop, mockEvent);

    expect(renderedDrop.state).not.toBeNull();
});
</code></pre>

<p>Here is the mixin:</p>

<pre><code>'use strict';

var _ = lodash;

var DragDropMixin = {
    /*
     *  usage:
     *
     *  mixins: [DragDropMixin],
     *  dragDrop: function () {
     *
     *     return {
     *
     *         // when dragging an item
     *         draggable: true,
     *         dropType: 'myItem',
     *         dataTransfer: { myItemData: property }
     *
     *         // when dropping an item:
     *         droppable: true,
     *         acceptableDrops: ['myItem'],
     *         drop: function (myItem) {},
     *     };
     *  }
     *
     */
    isAttrEnabled: function (attr) {
        return this.dragDropData &amp;&amp; this.dragDropData[attr];
    },
    isDroppable: function () {
        return this.isAttrEnabled('droppable');
    },
    isDraggable: function () {
        return this.isAttrEnabled('draggable');
    },
    componentDidMount: function () {
        var node = this.getDOMNode();

        this.dragDropData = this.dragDrop();

        if (this.isDroppable()) {
            node.addEventListener('dragover', this.handleDragOver, this);
            node.addEventListener('drop', this.handleDrop, this);
        }

        if (this.isDraggable()) {
            node.draggable = true;
            node.addEventListener('dragstart', this.handleDragStart, this);
        }
    },
    componentWillUnmount: function () {
        var node = this.getDOMNode();

        if (this.isDroppable()) {
            node.removeEventListener('dragover', this.handleDragOver);
            node.removeEventListener('drop', this.handleDrop);
        }

        if (this.isDraggable()) {
            node.removeEventListener('dragstart', this.handleDragStart);
        }
    },
    handleDragOver: function (e) {
        e.preventDefault();
    },
    handleDrop: function (e) {
        var jsonData = e.dataTransfer.getData('objToPass'),
            passedObj = JSON.parse(jsonData),
            acceptableDrops = this.dragDropData.acceptableDrops;

        e.preventDefault();

        if (!this.dragDropData.drop) {
            throw new Error('Must define drop function when using droppable');
        }

        if (_.includes(acceptableDrops, passedObj.dropType)) {
            this.dragDropData.drop(passedObj.data);
        }

    },
    handleDragStart: function (e) {
        var objToPass = {
            data: this.dragDropData.dataTransfer,
            dropType: this.dragDropData.dropType
        };

        e.dataTransfer.setData('objToPass', JSON.stringify(objToPass));
    }
};
</code></pre>

<p>Thanks again.</p>
","5232011","","","","","2015-08-17 09:13:22","Simulating drag drop with react testutils not working","<javascript><drag-and-drop><reactjs><karma-jasmine><reactjs-testutils>","1","0","1","",""
"39921204","1","","","2016-10-07 15:46:20","","0","210","<p>I am trying to use <a href=""https://github.com/clauderic/react-sortable-hoc"" rel=""nofollow noreferrer"">this</a> <strong>higher order</strong> react component from Scala.js using the <code>scalajs-react</code> library.</p>

<p>Here is an example on how to use this component from JS:</p>

<pre><code>import React, {Component} from 'react';
import {render} from 'react-dom';
import {SortableContainer, SortableElement, arrayMove} from 'react-sortable-hoc';

const SortableItem = SortableElement(({value}) =&gt; &lt;li&gt;{value}&lt;/li&gt;);

const SortableList = SortableContainer(({items}) =&gt; {
    return (
        &lt;ul&gt;
            {items.map((value, index) =&gt;
                &lt;SortableItem key={`item-${index}`} index={index} value={value} /&gt;
            )}
        &lt;/ul&gt;
    );
});

class SortableComponent extends Component {
    state = {
        items: ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6']
    }
    onSortEnd = ({oldIndex, newIndex}) =&gt; {
        this.setState({
            items: arrayMove(this.state.items, oldIndex, newIndex)
        });
    };
    render() {
        return (
            &lt;SortableList items={this.state.items} onSortEnd={this.onSortEnd} /&gt;
        )
    }
}

render(&lt;SortableComponent/&gt;, document.getElementById('root'));
</code></pre>

<p>The expression <code>({value}) =&gt; &lt;li&gt;{value}&lt;/li&gt;</code> desugars to <code>(props) =&gt; { var value = props.value; return &lt;li&gt;{value}&lt;/li&gt; }</code> and <code>&lt;li&gt;{value}&lt;/li&gt;</code> JSX desugars to <code>React.createElement(""li"", null, value );</code> but the problem is I don't know how to translate this expression (<code>React.createElement(""li"", null, value );</code>) into Scala.JS.</p>

<p>(<code>({value}) =&gt; &lt;li&gt;{value}&lt;/li&gt;</code> ends up <a href=""https://github.com/clauderic/react-sortable-hoc/blob/master/src/SortableElement/index.js#L68"" rel=""nofollow noreferrer"">here</a> as a wrapped component)</p>

<p>What do I need to write in Scala.JS so that I get the equivalent of <code>React.createElement(""li"", null, value )</code>?</p>

<p><strong>Summary:</strong></p>

<p>In other words, if in JS I write <code>var element=React.createElement(""li"", null, value )</code> and the resulting object is called <code>element</code>, then what what is the Scala.JS expression that evaluates to the exact same <code>element</code> object (<code>val element = ???</code> )? </p>

<p>Related question is <a href=""https://stackoverflow.com/questions/39885009/function-argument-in-components-constructor-in-react-js"">here</a>.</p>
","1198559","","-1","","2017-05-23 12:00:41","2016-10-07 19:37:49","Using a higher order react component from scalajs-react","<reactjs><scala.js><scalajs-react>","1","0","","",""
"40950219","1","","","2016-12-03 17:00:23","","0","57","<p>I'm trying to reproduce <a href=""http://sahatyalkabov.com/create-a-character-voting-app-using-react-nodejs-mongodb-and-socketio/"" rel=""nofollow noreferrer"">this</a> tutorial (it's outdated a bit) and at this place</p>

<p><code>var html = ReactDOM.renderToString(React.createElement(Router.RouterContext, renderProps));</code></p>

<p>I'm get this error:</p>

<p><code>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components).</code></p>

<p>Error triggered by</p>

<pre><code>import createBrowserHistory from 'history/createBrowserHistory';
let history = createBrowserHistory();

ReactDOM.render(
    &lt;Router history={history}&gt;
        {routes}
    &lt;/Router&gt;, 
    document.getElementById('app')
);
</code></pre>

<p>I'm newbie at React so maybe you can help me?</p>
","1443963","","","","","2016-12-03 18:11:56","Problems with React.createElement","<javascript><reactjs>","1","0","","",""
"47443442","1","","","2017-11-22 20:32:48","","0","44","<p>I decided to pick up on learning some react and spring boot.
I followed this tutorial link: <a href=""https://stormpath.com/blog/crud-application-react-spring-boot-user-authentication"" rel=""nofollow noreferrer"">https://stormpath.com/blog/crud-application-react-spring-boot-user-authentication</a></p>

<p>I was able to get the application working following the tutorial but I relized that it is outdated and now i think the preferred way to create classes is though components and not using createclass(). So i tried to change it to use components insted. </p>

<p>I get this warning on the EmployeeTable class / compnent: 
Each child in an array or iterator should have a unique ""key"" prop. Check the render method of <code>EmployeeTable</code>. </p>

<p>This is what my EmployeeTable looks like after changing it to a component. I am not sure how to add keys into the component yet or if i need to add key inside employee as well. Help to understand how to change this createclass function to a component would help me understand more about react.js.</p>

<p>If you need further information please let me know! 
Below is my js file:</p>

<pre><code>class Employee extends React.Component{
    constructor(props){
        super(props);
        this.state.display = true;
    }

    handleDelete() {
        var self = this;
        $.ajax({
            url: self.props.employee._links.self.href,
            type: 'DELETE',
            success: function(result) {
                self.setState({display: false});
            },
            error: function(xhr, ajaxOptions, thrownError) {
                toastr.error(xhr.responseJSON.message);
            }
        });
    }

    render() {
        if (this.state.display==false){
            return null;
        }
        else{
            return (
                &lt;tr key={this.props.employee.Gmid.toString()}&gt;
                    &lt;td&gt;{this.props.employee.Gmid}&lt;/td&gt;
                    &lt;td&gt;{this.props.employee.name}&lt;/td&gt;
                    &lt;td&gt;{this.props.employee.age}&lt;/td&gt;
                    &lt;td&gt;{this.props.employee.years}&lt;/td&gt;
                    &lt;td&gt;
                        &lt;button className=""btn btn-info"" onClick={this.handleDelete}&gt;Delete&lt;/button&gt;
                    &lt;/td&gt;
                &lt;/tr&gt;)
        }

    }
}

class EmployeeTable extends React.Component {
    constructor(props){
        super(props);
    }

    render() {
        var rows = [];
        this.props.employees.forEach(function (employee) {
            rows.push(React.createElement(Employee, { employee: employee }));
        });
        return (
            &lt;div className=""container""&gt;
                &lt;table className=""table table-striped""&gt;
                &lt;thead&gt;
                    &lt;tr&gt;
                        &lt;th&gt;Name&lt;/th&gt;
                        &lt;th&gt;Gmid&lt;/th&gt;
                        &lt;th&gt;Age&lt;/th&gt;
                        &lt;th&gt;Years&lt;/th&gt;
                    &lt;/tr&gt;
                &lt;/thead&gt;
                &lt;tbody&gt;{rows}&lt;/tbody&gt;
                &lt;/table&gt;
            &lt;/div&gt;)
    }
}

var addNewUserButton = &lt;button class=""btn btn-default"" onClick=""showNewUserCreatinonForm""&gt; Add New User &lt;/button&gt;

function AddUserButton(props){
    return(
        &lt;button class=""btn btn-default"" onClick=""showNewUserCreatinonForm""&gt; Add New User &lt;/button&gt;
)
}

class App extends React.Component {
    constructor(props) {
        super(props);
       this.state = { employees: []};
    }

    loadEmployeesFromServer() {
        var self = this;
        var host = window.location.hostname;
        var urlHost = """";
        if(host == ""localhost""){
            urlHost=""http://localhost:8008/davidsAwesomeReactApplication/api/employees""
        }
        else{
            urlHost=""https://""+host+""/davidsAwesomeReactApplication/api/employees""
        }
        $.ajax({
            url: urlHost
        }).then(function (data) {
            self.setState({employees: data._embedded.employees});
        });
    }

    componentDidMount() {
        this.loadEmployeesFromServer()
    }

    render() {
        return ( &lt;EmployeeTable employees={this.state.employees}/&gt; );
    }
}

ReactDOM.render(&lt;App /&gt;, document.getElementById('root') );
</code></pre>
","1462379","","","","","2017-11-22 20:48:46","React - changing from react.createClass to compenent class Key issue","<reactjs>","1","0","","",""
"40936666","1","","","2016-12-02 16:20:30","","0","30","<p>I have this route,</p>

<pre><code>FlowRouter.route('/dashboard',{
name: 'dashboard',
action(){
    mount(MainLayout, {
        content: (&lt;AW /&gt;)
    })
}
});
</code></pre>

<p>I imported the AW file.</p>

<pre><code>import React from 'react';
import TrackerReact from 'meteor/ultimatejs:tracker-react';
import UA from './UA.jsx';
export default class AW extends TrackerReact(React.Component){
    constructor(){
        super();
    }
    componentWIllUnmount() {
    }
render(){
    return (
    &lt;div&gt;
        &lt;UA /&gt;
        &lt;/div&gt;
    )
    }
}
</code></pre>

<p>If I removed the <code>&lt;UA /&gt;</code> it is working. If I placed <code>&lt;UA /&gt;</code>, it is not working. 
The error is React.createElement: type should not be null,undefined,boolean, or number.</p>

<p>I tried some editing on the UA file. But unfortunately, nothing works.</p>

<p>Here is the UA file.</p>

<pre><code>import React from 'react';

class UA extends React.Component{
render(){
    return(

        &lt;div&gt;hi&lt;/div&gt;
    )
}
}
export default UA;
</code></pre>
","5399555","","438992","","2016-12-02 16:29:34","2016-12-02 16:29:34","React.createElement: type should not be null with Meteor, TrackerReact, React-mounter and FlowRouter","<reactjs><meteor><flow-router>","0","4","","",""
"39939322","1","44392483","","2016-10-09 02:19:02","","1","1881","<p>The documentation for <a href=""https://www.npmjs.com/package/react-google-maps"" rel=""nofollow"">react-google-maps</a> says that you can import SearchBox via <code>import { SearchBox } from 'react-google-maps'</code> but it seems to break my page when I try giving me an error of <code>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components).</code> when I attempt to import it in.  Everything else with react-google-maps seems to work, however.</p>

<p>my code is below:</p>

<pre><code>/* global google */
import _ from ""lodash"";

import {
  default as React,
  Component,
} from ""react"";

import Helmet from ""react-helmet"";

import {
  GoogleMapLoader,
  withGoogleMap,
  GoogleMap,
  Marker,
  SearchBox,
  InfoWindow,
} from ""react-google-maps"";

// mobx
import {observer} from 'mobx-react'
import {observable} from 'mobx'

const INPUT_STYLE = {
  boxSizing: `border-box`,
  MozBoxSizing: `border-box`,
  border: `1px solid transparent`,
  width: `240px`,
  height: `32px`,
  marginTop: `27px`,
  padding: `0 12px`,
  borderRadius: `1px`,
  boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,
  fontSize: `14px`,
  outline: `none`,
  textOverflow: `ellipses`,
};

/*
 * This is the modify version of:
 * https://developers.google.com/maps/documentation/javascript/examples/event-arguments
 */
const GettingStartedGoogleMap = withGoogleMap(props =&gt; (
  &lt;GoogleMap
    ref={props.onMapMounted}
    defaultZoom={3}
    center={props.center}
    onBoundsChanged={props.onBoundsChanged}
    onClick={props.onMapClick}
  &gt;
    &lt;SearchBox
      ref={props.onSearchBoxMounted}
      bounds={props.bounds}
      controlPosition={google.maps.ControlPosition.TOP_LEFT}
      onPlacesChanged={props.onPlacesChanged}
      inputPlaceholder=""Customized your placeholder""
      inputStyle={INPUT_STYLE}
    /&gt;
    ...
  &lt;/GoogleMap&gt;
));

const Browse = observer(class Browse extends Component {

  constructor(props) {
    super(props)

    this.populateMap(this.props.properties);

    // this.state ONLY FOR vars, not for functions.
    // if i need to change state, use this.setState({})  
    this.state = observable({
      bounds: null,
      center: {
        lat: 25.363882,
        lng: -80.044922,
      },
      properties: this.props.properties,
      markers: [],
    });

    this.handleMapMounted = this.handleMapMounted.bind(this);
    this.handleMapClick = this.handleMapClick.bind(this);
    this.handleMarkerClick = this.handleMarkerClick.bind(this);
    this.handleBoundsChanged = this.handleBoundsChanged.bind(this);
    this.handleSearchBoxMounted = this.handleSearchBoxMounted.bind(this);
    this.handlePlacesChanged = this.handlePlacesChanged.bind(this);
  }

  didFinishLoadingMarkers(markers) {
    this.setState({markers: markers});
  }

  //... removed this code to make it all easier to read...

  // test

  handleBoundsChanged() {
    this.setState({
      bounds: this._map.getBounds(),
      center: this._map.getCenter(),
    });
    console.log('handleBoundsChanged')
  }

  handleSearchBoxMounted(searchBox) {
    this._searchBox = searchBox;
    console.log('handleSearchBoxMounted')
  }

  handlePlacesChanged() {
    const places = this._searchBox.getPlaces();

    // Add a marker for each place returned from search bar
    const markers = places.map(place =&gt; ({
      position: place.geometry.location,
    }));

    // Set markers; set map center to first search result
    const mapCenter = markers.length &gt; 0 ? markers[0].position : this.state.center;
    console.log('handlePlacesChanged')
    this.setState({
      center: mapCenter,
      markers,
    });
  }
  // end test

  render() {
    return (
      &lt;div className='container-fluid full-height'&gt;
        &lt;div className='row full-height'&gt;
          &lt;div className='col-xs-6 full-height map-position'&gt;
            &lt;GettingStartedGoogleMap
              containerElement={
                &lt;div style={{ height: `100%` }} /&gt;
              }
              mapElement={
                &lt;div style={{ height: `100%`, position: `static` }} /&gt;
              }
              center={this.state.center}
              onMapMounted={this.handleMapMounted}
              onMapClick={this.handleMapClick}
              markers={this.state.markers}
              onMarkerClick={this.handleMarkerClick}
              onBoundsChanged={this.handleBoundsChanged}
              onSearchBoxMounted={this.handleSearchBoxMounted}
              bounds={this.state.bounds}
              onPlacesChanged={this.handlePlacesChanged}
            /&gt;
          &lt;/div&gt;
          &lt;div className='col-xs-6 full-height pull-right'&gt;
            &lt;h1&gt;Browse All Properties&lt;/h1&gt;
            {this.props.properties.map(function(property, i) {
              return (
                &lt;div key={i}&gt;
                  &lt;a href={'housing_applications/' + property.id}&gt;{property.name}&lt;/a&gt;
                &lt;/div&gt;
              )
            }, this)}
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    );
  }
})

export default Browse

ReactOnRails.register({ Browse });
</code></pre>

<p>Thanks!</p>
","4348139","","","","","2017-06-06 14:15:43","Difficulty importing SearchBox from 'react-google-maps'","<javascript><google-maps><reactjs>","1","1","","",""
"41014546","1","","","2016-12-07 10:05:58","","0","66","<p>I wanted to make dropdown menu and i did actually made it, but now i have one annoying problem. 
I got the blank div of reactJS component when my menu is not here.</p>

<p><a href=""https://i.stack.imgur.com/exEQZ.png"" rel=""nofollow noreferrer"">normal menu </a></p>

<p><a href=""https://i.stack.imgur.com/r9Djw.png"" rel=""nofollow noreferrer"">blank div in the back</a></p>

<p>So, here is the code behind this</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>@Users = React.createClass
	handleEnter: (e) -&gt;
	  $('.users').animate({top: '+=250px'});
	handleLeave: (e) -&gt;
	  $('.users').animate({top: '-=250px'});
	render: -&gt;
		React.DOM.div
			onMouseEnter: @handleEnter
			onMouseLeave: @handleLeave
			className: 'users'
			React.DOM.h1
				className: 'h1'
				""Log In!""
			 	React.createElement SessionForm
			React.DOM.h1
				className: 'h1'
				""Sign up!""
			 	React.createElement UserForm</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>.users {
	padding-bottom: 40px;
  text-align: center;
  background-color: #f3f3f3;
  display: flex;
  position:  relative;
  bottom: 250px;
  /*-moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);*/
  /*-webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);*/
  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.4);
}

.users &gt; .h1 {
	flex: 1;
}

.users &gt; .h2 {
	flex: 1;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;%= react_component 'Users', {} %&gt;
&lt;%= react_component 'Tasks', { data: @tasks } %&gt;</code></pre>
</div>
</div>
</p>
","7143634","","","","","2016-12-07 10:05:58","How to get rid of class component div in react","<jquery><html><css><reactjs><react-rails>","0","2","","",""
"48781734","1","","","2018-02-14 07:25:34","","0","105","<p>we are trying to integrate app nexus(<a href=""https://www.appnexus.com/en"" rel=""nofollow noreferrer"">https://www.appnexus.com/en</a>) along with the react-gpt(<a href=""https://github.com/nfl/react-gpt"" rel=""nofollow noreferrer"">https://github.com/nfl/react-gpt</a>) library. However, the ads are not being displayed when app nexus is enabled. They display fine when app nexus is disabled.
Following is the sample code for the same, the part of code which displays ads is being implemented using the react-gpt library and not plain js as shown in the following snippet -
<a href=""https://jsfiddle.net/prebid/bhn3xk2j/458/"" rel=""nofollow noreferrer"">https://jsfiddle.net/prebid/bhn3xk2j/458/</a></p>

<pre><code>&lt;html&gt;
&lt;head&gt;
  &lt;!-- Prebid Config Section START --&gt;
  &lt;!-- Make sure this is inserted before your GPT tag --&gt;
  &lt;script&gt; 
    var PREBID_TIMEOUT = 700;

    var adUnits = [{
        code: 'div-gpt-ad-1460505748561-0',
        sizes: [[300, 250], [300,600]],
        bids: [{
            bidder: 'appnexus',
            params: {
               placementId: '10433394'
            }
        }]
    },{
        code: 'div-gpt-ad-1460505661639-0',
        sizes: [[728, 90], [970, 90]],
        bids: [{
            bidder: 'appnexus',
            params: {
               placementId: '10433394'
            }
        }]
    }];

    var pbjs = pbjs || {};
    pbjs.que = pbjs.que || [];

  &lt;/script&gt;
  &lt;!-- Prebid Config Section END --&gt;

  &lt;!-- Prebid Boilerplate Section START. No Need to Edit. --&gt;
  &lt;script type=""text/javascript"" src=""//acdn.adnxs.com/prebid/not-for-prod/prebid.js"" async&gt;&lt;/script&gt;
  &lt;script&gt;
    var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
    googletag.cmd.push(function() {
        googletag.pubads().disableInitialLoad();
    });

    pbjs.que.push(function() {
        pbjs.addAdUnits(adUnits);
        pbjs.requestBids({
            bidsBackHandler: sendAdserverRequest
        });
    });

    function sendAdserverRequest() {
        if (pbjs.adserverRequestSent) return;
        pbjs.adserverRequestSent = true;
        googletag.cmd.push(function() {
            pbjs.que.push(function() {
                pbjs.setTargetingForGPTAsync();
                googletag.pubads().refresh();
            });
        });
    }

    setTimeout(function() {
        sendAdserverRequest();
    }, PREBID_TIMEOUT);

  &lt;/script&gt;
  &lt;!-- Prebid Boilerplate Section END --&gt;

  &lt;script&gt;
    (function () {
        var gads = document.createElement('script');
        gads.async = true;
        gads.type = 'text/javascript';
        var useSSL = 'https:' == document.location.protocol;
        gads.src = (useSSL ? 'https:' : 'http:') +
                '//www.googletagservices.com/tag/js/gpt.js';
        var node = document.getElementsByTagName('script')[0];
        node.parentNode.insertBefore(gads, node);
    })();
  &lt;/script&gt;

  &lt;script&gt;
    googletag.cmd.push(function () {
        googletag.defineSlot('/19968336/header-bid-tag-0', [[300, 250], [300, 600]], 'div-gpt-ad-1460505748561-0').addService(googletag.pubads());

        googletag.defineSlot('/19968336/header-bid-tag1', [[728, 90], [970, 90]], 'div-gpt-ad-1460505661639-0').addService(googletag.pubads());

        googletag.pubads().enableSingleRequest();
        googletag.enableServices();
    });
  &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;h2&gt;Prebid.js Test&lt;/h2&gt;
&lt;h5&gt;Div-1&lt;/h5&gt;
&lt;div id='div-gpt-ad-1460505748561-0'&gt;
    &lt;script type='text/javascript'&gt;
        googletag.cmd.push(function() { googletag.display('div-gpt-ad-1460505748561-0'); });
    &lt;/script&gt;
&lt;/div&gt;

&lt;h5&gt;Div-2&lt;/h5&gt;
&lt;div id='div-gpt-ad-1460505661639-0'&gt;
    &lt;script type='text/javascript'&gt;
        googletag.cmd.push(function() { googletag.display('div-gpt-ad-1460505661639-0'); });
    &lt;/script&gt;
&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Any ideas as to why its not working?</p>
","2636802","","","","","2018-02-14 07:25:34","App Nexus integration with react-gpt","<reactjs><ads><adsense><google-dfp>","0","2","","",""
"48798205","1","","","2018-02-15 00:02:21","","0","52","<p>I've written a few rudimentary apps in React, but I'm fairly new to the React Boiler-Plate (<a href=""https://github.com/react-boilerplate/react-boilerplate"" rel=""nofollow noreferrer"">https://github.com/react-boilerplate/react-boilerplate</a>).  I'm doing a deep dive to create an app where I can simply input a string from one page and get a list of the strings from my DB on a second page... super simple.  There are sooo many moving parts to the boilerplate that is pretty difficult to figure out how to add a working nav component to my main page.  </p>

<p>So far I have figured out that the <code>container</code> and the <code>component</code> folders are where my playground will be.  I have created an simple About page and linked it up through the existing Router to display at <code>/about</code>.  Now I want to add a Nav bar to my home page to access that <code>/about</code> page.  I am confident I know how to create a component and display it where I would like.  So far my <code>Nav</code> component is being rendered within my <code>HomePage</code> component like so:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react';
import Nav from '../Nav/index';

export default class HomePage extends React.Component { // eslint-disable-line react/prefer-stateless-function
  render(){
    return(
      &lt;div&gt;
        &lt;h1&gt; Welcome to the String Motel where string come to stay... forever&lt;/h1&gt;
        &lt;Nav/&gt;
      &lt;/div&gt;
      
    );
  }
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react.min.js""&gt;&lt;/script&gt;
&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react-dom.min.js""&gt;&lt;/script&gt;</code></pre>
</div>
</div>
</p>

<p>When I add links to my Nav component like this:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>import React from 'react';
import {Link, IndexLink} from 'react-router';

export default class Nav extends React.Component { // eslint-disable-line react/prefer-stateless-function
  render() {
    return (
      &lt;div&gt;
        &lt;h2&gt;Nav Component&lt;/h2&gt;
        &lt;IndexLink to='/'&gt;Insert String&lt;/IndexLink&gt;
        &lt;Link to='/museum'&gt;Museum&lt;/Link&gt;
        &lt;Link to='/about'&gt;About&lt;/Link&gt;
      &lt;/div&gt;
    );
  }
}</code></pre>
</div>
</div>
</p>

<p>I get an error I'm not sure I understand:</p>

<pre><code>warning.js:33 Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in. Check the render method of `Nav`.
    in Nav (created by HomePage)
    in div (created by HomePage)
    in HomePage (created by LoadableComponent)
    in LoadableComponent (created by Route)
    in Route (created by App)
    in Switch (created by App)
    in div (created by App)
    in App
    in Router (created by ConnectedRouter)
    in ConnectedRouter
    in IntlProvider (created by LanguageProvider)
    in LanguageProvider (created by Connect(LanguageProvider))
    in Connect(LanguageProvider)
    in Provider
</code></pre>

<p>The export is fine as it seems to function without the <code>&lt;Link&gt;</code> added.  Can anyone point me in the right direction?</p>
","6006051","","3180287","","2018-02-15 00:10:13","2018-02-15 01:03:41","Using React Boilerplate from (react-boilerplate), how co I add a NavBar to my home page?","<reactjs><react-redux>","1","0","","",""
"47809720","1","47810000","","2017-12-14 09:16:39","","1","384","<p>I am trying to create a stand alone react example without using webpack, npm, JSX or babel. As React.createClass has been removed in React v16, how can I make the following code work, without using require.js and npm:</p>

<pre><code>&lt;html&gt;

&lt;head&gt;
    &lt;title&gt;React Hello World&lt;/title&gt;

    &lt;script crossorigin src=""https://unpkg.com/react@16/umd/react.production.min.js""&gt;&lt;/script&gt;
    &lt;script crossorigin src=""https://unpkg.com/react-dom@16/umd/react-dom.production.min.js""&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;div id=""root""&gt;&lt;/div&gt;

    &lt;script&gt;
        window.onload = function () {
            var Greetings = React.createClass(
                {
                    render: function () {
                        return React.createElement('h1', null, 'Greetings, ' + this.props.name + '!');
                    }
                });
            ReactDOM.render(
                React.createElement(Greetings, { name: 'World' }),
                document.getElementById('root')
            );
        };
    &lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre>
","1089524","","","","","2017-12-14 09:31:55","create-react-class without npm using require and npm in React 16","<reactjs>","1","0","1","",""
"48724365","1","","","2018-02-10 18:49:34","","0","156","<p>I'm currently experimenting an issue with my new React project using React and GraphQL Apollo. Here is my stack :</p>

<ul>
<li>Webpack to build/dev to project </li>
<li>Babel to transpile javascript/jsx files </li>
<li>Jest to run tests</li>
<li>Enzyme to test my react components</li>
</ul>

<p>The issue: When I run my tests, it seems that Apollo react client is not transpiled and throw tests : </p>

<pre><code>pp/containers/App/__tests__/App.test.jsx
  ● Test suite failed to run

    /Users/utilisateur/Project/TrAVis/TrAVis/node_modules/react-apollo/graphql.js:19
    import { Component, createElement } from 'react';
    ^^^^^^

    SyntaxError: Unexpected token import

      1 | import React, { Component } from 'react';
    &gt; 2 | import graphql from 'react-apollo/graphql';
      3 | import { bool, object, shape } from 'prop-types';
      4 |
      5 | import getUserQuery from './query';

      at ScriptTransformer._transformAndBuildScript (node_modules/jest-runtime/build/script_transformer.js:318:17)
      at Object.&lt;anonymous&gt; (app/containers/App/App.jsx:2:16)
      at Object.&lt;anonymous&gt; (app/containers/App/__tests__/App.test.jsx:4:12)
</code></pre>

<p>My jest configuration is : </p>

<pre><code>module.exports = {
  verbose: true,
  moduleNameMapper: {
    '\\.(css)$': 'identity-obj-proxy',
  },
  transform: {
    '^.+\\.(js|jsx)$': 'babel-jest'
  }
};
</code></pre>

<p>and my .babelrc is simply :</p>

<pre><code>{
  ""presets"": [
    ""react"", 
    ""es2015""
  ]
}
</code></pre>

<p>I found this issue <a href=""https://github.com/facebook/jest/issues/3202"" rel=""nofollow noreferrer"">https://github.com/facebook/jest/issues/3202</a> but it seems that the solution doesn't work with my project.</p>

<p>Can you help me?</p>

<p>Thank you,</p>

<p>SLedunois</p>
","4827454","","2102634","","2018-02-12 18:24:12","2018-06-26 23:42:50","Apollo react import not transpiled when running jest tests","<javascript><reactjs><jestjs><react-apollo>","1","0","","",""
"48866088","1","","","2018-02-19 12:18:49","","2","158","<p>Consider we have the following Map component. This is in TypeScript, but the same should apply for normal JavaScript.</p>

<pre><code>import * as React from 'react';
import ReactMapboxGl from 'react-mapbox-gl';

const MapBox = ReactMapboxGl({
  accessToken: 'pk.&lt;redacted&gt;'
});

export default class Map extends React.Component {
  render() {
    return (
      &lt;MapBox
        style=""mapbox://styles/mapbox/streets-v9""
        zoom={[0]}
        containerStyle={{
          height: '500px',
          width: 'inherit'
        }}
      /&gt;);
  }
}
</code></pre>

<p>It is then part of some react application that is rendered as such:</p>

<pre><code>import * as React from 'react';

export default class App extends React.Component {
  render() {
    return (
          &lt;Map /&gt;
    );
  }
}
</code></pre>

<p>In order to test this setup we use Jest and JSDOM.</p>

<pre><code>import * as React from 'react';
import * as ReactDOM from 'react-dom';
import App from './App';

it('renders without crashing', () =&gt; {
  const div = document.createElement('div');
  ReactDOM.render(&lt;App /&gt;, div);
});
</code></pre>

<p>This test will fail to run and produce the following output:</p>

<pre><code>    TypeError: window.URL.createObjectURL is not a function

      at Object.254.../../source/worker (node_modules/mapbox-gl/dist/mapbox-gl.js:509:100)
      at s (node_modules/mapbox-gl/dist/mapbox-gl.js:1:711)
      at node_modules/mapbox-gl/dist/mapbox-gl.js:1:762
      at Object.280.../ (node_modules/mapbox-gl/dist/mapbox-gl.js:561:28)
      at s (node_modules/mapbox-gl/dist/mapbox-gl.js:1:711)
      at node_modules/mapbox-gl/dist/mapbox-gl.js:1:762
      at Object.263../worker_pool (node_modules/mapbox-gl/dist/mapbox-gl.js:527:29)
      at s (node_modules/mapbox-gl/dist/mapbox-gl.js:1:711)
      at node_modules/mapbox-gl/dist/mapbox-gl.js:1:762
      at Object.191.../render/glyph_manager (node_modules/mapbox-gl/dist/mapbox-gl.js:383:809)
      at s (node_modules/mapbox-gl/dist/mapbox-gl.js:1:711)
      at node_modules/mapbox-gl/dist/mapbox-gl.js:1:762
      at Object.248.../geo/lng_lat (node_modules/mapbox-gl/dist/mapbox-gl.js:497:338)
      at s (node_modules/mapbox-gl/dist/mapbox-gl.js:1:711)
      at node_modules/mapbox-gl/dist/mapbox-gl.js:1:762
      at Object.72.../package.json (node_modules/mapbox-gl/dist/mapbox-gl.js:144:148)
      at s (node_modules/mapbox-gl/dist/mapbox-gl.js:1:711)
      at e (node_modules/mapbox-gl/dist/mapbox-gl.js:1:882)
      at node_modules/mapbox-gl/dist/mapbox-gl.js:1:900
      at Object.&lt;anonymous&gt;.i (node_modules/mapbox-gl/dist/mapbox-gl.js:1:177)
      at Object.&lt;anonymous&gt; (node_modules/mapbox-gl/dist/mapbox-gl.js:1:413)
      at Object.&lt;anonymous&gt; (node_modules/react-mapbox-gl/lib/map.js:21:16)
      at Object.&lt;anonymous&gt; (node_modules/react-mapbox-gl/lib/index.js:3:13)
      at Object.&lt;anonymous&gt; (src/Map.tsx:14:25)
      at Object.&lt;anonymous&gt; (src/NewOrder.tsx:21:13)
      at Object.&lt;anonymous&gt; (src/Routes.ts:17:18)
      at Object.&lt;anonymous&gt; (src/App.tsx:16:16)
      at Object.&lt;anonymous&gt; (src/App.test.tsx:6:169)
          at &lt;anonymous&gt;
</code></pre>

<p>The question to you, my dear reader, is simply: Is it possible to work around this issue? Are there seams we can use to inject a mocked MapBoxGL library?</p>

<p>I've found multiple issues on GitHub related to this problem but none of them provide a solution: <a href=""https://github.com/mapbox/mapbox-gl-js/issues/3436"" rel=""nofollow noreferrer"">1</a>, <a href=""https://github.com/mapbox/mapbox-gl-js/issues/5026"" rel=""nofollow noreferrer"">2</a>. Some points toward using <a href=""https://github.com/mapbox/mapbox-gl-js-mock"" rel=""nofollow noreferrer"">mapbox-gl-js-mock</a> while others claim it is of no use since it too will require a real browser to run.</p>

<p>There is also the <a href=""https://github.com/jsdom/jsdom/issues/1721"" rel=""nofollow noreferrer"">related issue</a> on the JSDOM project about adding URL.createObjectURL which would perhaps resolve the underlying issue.</p>
","501017","","","","","2018-02-19 12:18:49","Testing a react-mapbox-gl with jsodom and jest","<typescript><jestjs><mapbox-gl-js><jsdom>","0","0","","",""
"40295658","1","40296389","","2016-10-27 23:18:03","","0","193","<p>I get the following error when running <code>webpack</code>:</p>

<pre><code>Error in ./src/index.jsx
Module parse failed: .../src/index.jsx Unexpected token (10:18)
You may need an appropriate loader to handle this file type.
</code></pre>

<p>I believe I have all the correct loaders set up, please tell me if I missed something.</p>

<p>package.json:</p>

<pre><code>""dependencies"": {
  ""isomorphic-fetch"": ""^2.2.1"",
  ""koa"": ""^1.2.4"",
  ""koa-ejs"": ""^3.0.0"",
  ""koa-route"": ""^2.4.2"",
  ""koa-router"": ""^5.4.0"",
  ""koa-static"": ""^2.0.0"",
  ""koa-webpack-dev-middleware"": ""^1.2.2"",
  ""node-sass"": ""^3.10.1"",
  ""react"": ""^15.3.2"",
  ""react-dom"": ""^15.3.2"",
  ""react-hot-loader"": ""^1.3.0"",
  ""react-redux"": ""^4.4.5"",
  ""react-router"": ""^2.8.1"",
  ""redux"": ""^3.6.0"",
  ""redux-thunk"": ""^2.1.0"",
  ""sass-loader"": ""^4.0.2"",
  ""style-loader"": ""^0.13.1"",
  ""webpack"": ""^1.13.2""
},
""devDependencies"": {
    ""babel-core"": ""^6.17.0"",
    ""babel-eslint"": ""^7.0.0"",
    ""babel-loader"": ""^6.2.6"",
    ""babel-preset-es2015"": ""^6.18.0"",
    ""babel-preset-react"": ""^6.16.0"",
    ""babel-preset-stage-0"": ""^6.16.0"",
    ""babel-preset-react-hmre"": ""^1.1.1"",
    ""css-loader"": ""^0.25.0"",
    ""eslint"": ""^3.7.1"",
    ""eslint-loader"": ""^1.5.0"",
    ""eslint-plugin-react"": ""^6.4.1"",
    ""koa-webpack-hot-middleware"": ""^1.0.3"",
    ""react-hot-loader"": ""^1.3.0"",
    ""redux-devtools"": ""^3.3.1"",
    ""webpack-dev-server"": ""^1.16.2""
  }
</code></pre>

<p>webpack.config.js:</p>

<pre class=""lang-js prettyprint-override""><code>const webpack = require('webpack');

const path = require('path');

const ROOT_PATH = path.resolve(__dirname);

module.exports = {
  devtool: process.env.NODE_ENV === 'production' ? '' : 'source-map',
  entry: [
    'webpack-hot-middleware/client?path=/__webpack_hmr&amp;timeout=20000',
    path.resolve(ROOT_PATH, 'src/index.jsx')
  ],
  module: {
    preLoaders: [{
      test: /\.jsx?$/,
      loaders: process.env.NODE_ENV === 'production' ? [] : ['eslint'],
      include: path.resolve(ROOT_PATH, 'src/index.jsx')
    }],
    loaders: [{
      test: /\.jsx?$/,
      exclude: /node_modules/,
      loader: 'babel',
      query: {
        presets: ['es2015', 'stage-0', 'react'],
        cacheDirectory: true,
        env: {
          development: {
            presets: ['react-hmre']
          }
        }
      },
      include: './src'
    },
    {
      test: /\.scss$/,
      loaders: ['style', 'css', 'sass']
    }]
  },
  resolve: {
    extensions: ['', '.js', '.jsx']
  },
  output: {
    path: process.env.NODE_ENV === 'production'
      ? path.resolve(ROOT_PATH, 'dist')
      : path.resolve(ROOT_PATH, 'build'),
    publicPath: '/',
    filename: 'bundle.js'
  },
  devServer: {
    contentBase: path.resolve(ROOT_PATH, 'build'),
    historyApiFallback: true,
    hot: true,
    inline: true,
    progress: true
  },
  plugins: [
    new webpack.optimize.OccurenceOrderPlugin(),
    new webpack.HotModuleReplacementPlugin(),
    new webpack.NoErrorsPlugin()
  ]
};
</code></pre>

<p>src/index.jsx:
</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import App from './components/App';

const main = () =&gt; {
  const app = document.createElement('div');

  document.body.appendChild(app);

  ReactDOM.render(&lt;App /&gt;, app);
};

main();
</code></pre>

<p>I have also tried without any presets using a .babelrc file:</p>

<pre><code>{
  ""presets"": [""es2015"", ""stage-0"", ""react""]
}
</code></pre>

<p>Running <code>babel src/index.jsx</code> does work as expected, so I think this is an issue with the webpack configuration.</p>
","642715","","3966682","","2017-01-22 12:52:50","2017-01-22 12:52:50","Why isn't babel-preset-react parsing my JSX?","<reactjs><webpack><babeljs>","1","2","1","",""
"47428343","1","47428522","","2017-11-22 06:42:46","","0","347","<p>added reducer in reducer file </p>

<pre><code>const reducers = {
  // ... other reducers here ...
  form: formReducer
};
</code></pre>

<p>I am using <a href=""https://redux-form.com/7.1.2/docs/gettingstarted.md/"" rel=""nofollow noreferrer""><code>redux-form</code></a> v 7.1.2 with react v 16 and using <code>reduxForm()`` but there is already</code>connect()` applied in this class, tried 2 approached to add both HOC in the same page but failed on both.</p>

<p>below is the relevant code of my files , please check and let me know what  is missing ?</p>

<ol>
<li>Using named export</li>
</ol>

<h3>renderField.jsx</h3>

<pre><code>    import React from 'react';

    const renderField = ({ input, label, type, meta: { touched, error } }) =&gt; (
      &lt;div&gt;
        &lt;label&gt;{label}&lt;/label&gt;
        &lt;div&gt;
          &lt;input {...input} placeholder={label} type={type} /&gt;
          {touched &amp;&amp; error &amp;&amp; &lt;span&gt;{error}&lt;/span&gt;}
        &lt;/div&gt;
      &lt;/div&gt;
    );

    export default renderField;
</code></pre>

<h3>Register.jsx</h3>

<pre><code>import { connect } from 'react-redux';
import { Field, reduxForm } from 'redux-form';
import { renderField } from './renderField';

class RegisterPage extends React.Component {
    constructor (props) {
        super(props);
        this.state = {
            user: {
                firstName: ''
            },
            submitted: false
        };

        this.handleSubmit = this.handleSubmit.bind(this);
    }


    handleSubmit (values) {
        this.setState({ submitted: true });
        const { user } = this.state;
        const { dispatch } = this.props;
        dispatch(userActions.register(user));
    }

    render () {
        const { registering } = this.props;
        return (
            &lt;div className=""col-md-6 col-md-offset-3""&gt;
                &lt;h2&gt;Register&lt;/h2&gt;
                &lt;form onSubmit={this.handleSubmit} &gt;
                    &lt;div className=""form-group""&gt;
                        &lt;Field
                            name=""firstName""
                            type=""text""
                            label=""First Name""
                            className=""form-control""
                            component={renderField}
                        /&gt;
                    &lt;/div&gt;
                    &lt;div className=""form-group""&gt;
                        &lt;button type=""submit"" className=""btn btn-primary"" disabled={this.pristine} &gt;Register&lt;/button&gt;
                        { registering &amp;&amp; &lt;Loading /&gt; }
                        &lt;Link to=""/login"" className=""btn btn-link""&gt;Cancel&lt;/Link&gt;
                    &lt;/div&gt;
                &lt;/form&gt;
            &lt;/div&gt;
        );
    }
}
</code></pre>

<p>below class definition , here is connect and reduxForm usage</p>

<pre><code>RegisterPage = reduxForm({
    form: 'register',
    destroyOnUnmount: false
})(RegisterPage);

const connectedRegisterPage = connect(mapStateToProps)(RegisterPage);

export { connectedRegisterPage as RegisterPage };
</code></pre>

<h3>App.jsx</h3>

<pre><code>import { RegisterPage } from '../RegisterPage';

&lt;Route path=""/register"" component={RegisterPage} /&gt;
</code></pre>

<p>BUT this gives multiple warning in console</p>

<blockquote>
  <p>Failed prop type: The prop <code>component</code> is marked as required in
  <code>Field</code>, but its value is <code>undefined</code>. in Field (created by
  RegisterPage)</p>
  
  <p>Warning: React.createElement: type is invalid -- expected a string
  (for built-in components) or a class/function (for composite
  components) but got: undefined. You likely forgot to export your
  component from the file it's defined in. Check the render method of
  <code>ConnectedField</code>.</p>
</blockquote>

<hr>

<ol start=""2"">
<li>with default export </li>
</ol>

<h3>Register.jsx</h3>

<pre><code>RegisterPage = reduxForm({
    form: 'register'
})(RegisterPage);

const connectedRegisterPage = connect(mapStateToProps)(RegisterPage);

export { connectedRegisterPage as default };
</code></pre>

<h3>App.jsx</h3>

<pre><code>import RegisterPage from '../RegisterPage';
console.log(""RegisterPage"", RegisterPage); // undefined 
</code></pre>

<p>this gives no warning but display blank page in the browser</p>
","6339952","","","","","2017-11-22 06:54:32","How to use reduxForm() and connect() together for class component in react?","<reactjs><react-redux><redux-form>","1","0","","",""
"46919584","1","","","2017-10-24 20:37:22","","0","146","<p>I'm trying to setup my new project with Rails 5.1 and Wepacker-react, but I get first error very quickly.
I have been created new component in <strong>javascript/packs</strong> 
The code is basic:</p>

<p><em>javascript/packs/home.jsx</em></p>

<pre><code>import React from 'react'
import ReactDOM from 'react-dom'
import PropTypes from 'prop-types'

const Home = props =&gt; (
  &lt;div&gt;Hello {props.name}!&lt;/div&gt;
)

Home.defaultProps = {
  name: ''
}

Home.propTypes = {
  name: PropTypes.string
}

document.addEventListener('DOMContentLoaded', () =&gt; {
  ReactDOM.render(
    &lt;Home name=""Daniel"" /&gt;,
    document.body.appendChild(document.createElement('div')),
  )
})
</code></pre>

<p>Im rendering this component in index view:</p>

<p><em>index.html.erb</em></p>

<pre><code>&lt;%= javascript_pack_tag 'home' %&gt;
</code></pre>

<p>But I got this error: 
<a href=""https://i.stack.imgur.com/oen4J.png"" rel=""nofollow noreferrer"">MissingEntryError </a></p>

<p>I would to add  that I had imported this component in app....js
What is missing?</p>
","7949346","","","","","2018-01-08 12:20:04","rails webpacker react MissingEntryError","<reactjs><ruby-on-rails-5><react-rails><ruby-on-rails-5.1><webpacker>","1","1","","",""
"48439667","1","48439848","","2018-01-25 09:35:59","","0","53","<p>I am a novice in today's technologies, but am planning to use <strong>react-data-grid</strong> for a pet project.</p>

<p>I am somewhat punch drunk trying to understand git, npm, react, react-data-grid, babel, webpack, javascript and its variants....., so I thought I would try generating my first simple <strong>react-data-grid</strong> app with <strong>create-react-app</strong> from facebook.</p>

<p>I get the following failure during rendering, and I am stuck:</p>

<p>TypeError: undefined is not an object (evaluating '<strong>WEBPACK_IMPORTED_MODULE_0_react</strong>[""React""].createElement')</p>

<p>My simple app.js below is adapted from the template generated from create-react-app.</p>

<pre><code>import { React, Component } from 'react';
import { ReactDataGrid } from 'react-data-grid';
import logo from './logo.svg';
import './App.css';

class App extends Component {
  constructor(props, context) {
    super(props, context);
    this._rows = [];
    this._columns = [];
 }

  getRows () {return this._rows;}

  render() {
    return (
          &lt;ReactDataGrid
            columns={this._columns}
            rowGetter={this.getRows}
            rowsCount={this.state.rows.length}
            minHeight={500} /&gt;
    );
  }
}

export default App;
</code></pre>

<p>I am using: </p>

<p>react-data-grid 3.0.6
react 16.2.0
npm 5.6</p>
","3764755","","","","","2018-01-25 09:46:09","Failed react-data-grid generation using create-react-app","<create-react-app><react-data-grid>","1","0","","",""
"40296654","1","40297394","","2016-10-28 01:36:05","","3","97","<p>I am having a trouble in dealing with react components. My problem is already been answered over stackoverflow in several question but am unable to resolve my problem with them thats why I am posting question again.</p>

<p>my app-client.js file</p>

<pre><code>var React = require(""react"");
var ReactDom = require(""react-dom"");
var Router = require(""react-router"");
var Route = Router.Route;
var DefaultRoute = require(""react-router"").DefaultRoute;

var APP = require(""./components/APP"");
var Audience = require(""./components/Audience"")
var Speaker = require(""./components/Speaker"")
var Board = require(""./components/Board"")

var routes = (
    &lt;Route handler={APP}&gt;
        &lt;Route path=""/"" handler={Audience}&gt;&lt;/Route&gt;
        &lt;Route name=""speaker"" path=""speaker"" handler={Speaker}&gt;&lt;/Route&gt;
        &lt;Route name=""board"" path=""board"" handler={Board}&gt;&lt;/Route&gt;
    &lt;/Route&gt;
);

ReactDom.render(&lt;Router&gt;{routes}&lt;/Router&gt;, document.getElementById('react-container')) 
</code></pre>

<p>And in my App component file I am trying to deal all those routes with 
this line <code>var RouteHandler = require(""react-router"").RouteHandler;</code></p>

<p>And I am having 2 error in console as </p>

<pre><code>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components).
</code></pre>

<p>and</p>

<pre><code>Uncaught Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: Object
</code></pre>

<p>If anyone is concerned in look the whole code then its on github as well <a href=""https://github.com/ijunaid8088/react-sockets"" rel=""nofollow"">https://github.com/ijunaid8088/react-sockets</a>
Thanks for any help</p>
","4952770","","","","","2016-10-28 06:26:08","working with react components REACTjs","<javascript><reactjs>","1","0","","",""
"40950537","1","40950888","","2016-12-03 17:30:30","","3","4070","<p>I'm trying to run my first react jsx file and it works! However, I don't have the 2 import statements coded in my jsx. </p>

<pre><code>  import React from 'react';
  import ReactDOM from 'react-dom';
</code></pre>

<p>I thought I will need these 2 imports so when JSX transpiles to js (as React.createElement), the React Component is in scope. But it seems to work even without these 2 imports. </p>

<p>Can someone pls help me understand how it works without the imports?  </p>

<p>Thanks for your help!</p>

<p>EDIT: I've added my code here</p>

<p>script.jsx:</p>

<pre><code>var Main = React.createClass({
    getIntialState: function () {
        return {
            counter: 0
        };
    },
    clickHandler: function () {
        return {
            counter: this.state.counter + 1
        };
    },
    render: function () {
        return (
            &lt;button onClick={this.clickHandler}&gt;+2&lt;/button&gt;
        )
    }
});
</code></pre>

<p>package.json </p>

<pre><code>{
  ""name"": ""reactjs"",
  ""version"": ""1.0.0"",
  ""description"": """",
  ""main"": ""react.js"",
  ""dependencies"": {
    ""webpack"": ""^1.13.3""
  },
  ""devDependencies"": {
    ""babel-cli"": ""^6.18.0"",
    ""babel-core"": ""^6.18.2"",
    ""babel-loader"": ""^6.2.8"",
    ""babel-preset-es2015"": ""^6.18.0"",
    ""babel-preset-react"": ""^6.16.0"",
    ""react"": ""^15.4.1"",
    ""react-dom"": ""^15.4.1""
  },
  ""scripts"": {
   ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1"",
   ""dev"": ""webpack --watch"",
   ""build"": ""webpack -p""
  },
  ""author"": """",
  ""license"": ""ISC""
}
</code></pre>

<p>HTML file</p>

<pre><code>&lt;html&gt;
&lt;head&gt;

    &lt;title&gt;
        !My first React JS Component!
    &lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div id=""root""&gt;&lt;/div&gt;
    &lt;script src=""react.js""&gt;&lt;/script&gt;
    &lt;script src=""output.js""&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>webpack.config.js</p>

<pre><code>module.exports = {
    entry: ""./app/script.jsx"",
    output: {
        filename: ""output.js""
    },
    module: {
        loaders: [
            {
                test: /\.(js|jsx)$/,
                loader: 'babel-loader'
            }
        ]
    }
}
</code></pre>
","3731212","","3731212","","2016-12-03 17:56:50","2016-12-03 18:06:56","reactJS import React from 'react';","<reactjs>","1","8","1","",""
"41021784","1","","","2016-12-07 15:51:59","","0","681","<p>I must be doing something really stupid cause I cant get react-bootstrap-multiselect to work. </p>

<pre><code>import { MultiSelect } from 'react-bootstrap-multiselect'

export class StatusBar extends Component {  

@observable status = {}

  list = [{ value: 'One', selected: true }, { value: 'Two' }, { value: 'Three' }, { value: 'Four', label: 'Four Label' }]

  constructor(props) {
    super(props)
    this.store = this.props.store
  }

  render() {

    return (
      &lt;div className='statusBar'&gt;
        &lt;div className='item'&gt;
          &lt;span&gt;&lt;MultiSelect data={this.list} multiple /&gt;&lt;/span&gt;
        &lt;/div&gt;
        &lt;div className='item'&gt;
          &lt;span&gt;John Doe&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    )

  }
}
</code></pre>

<p>I get the error: React.createElement: type should not be null, undefined, boolean, or number. It should be a string</p>

<p>I also debugged bootstrap-multiselect.js and noticed that the value ko is undefined and therefore skipping most of the code.</p>

<pre><code>    if (typeof ko !== 'undefined' &amp;&amp; ko.bindingHandlers &amp;&amp; !ko.bindingHandlers.multiselect) {
</code></pre>

<p>Any ideas?</p>
","2928264","","","","","2016-12-07 15:51:59","react-bootstrap-multiselect not working","<reactjs><bootstrap-multiselect>","0","2","1","",""
"41666198","1","","","2017-01-15 20:53:08","","0","864","<p>I am trying to add the English premier league twitter timeline to my react app. 
Twitter gives me the code snippet for HMTL which works in a regular HTML page.  </p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset=""utf-8""&gt;
&lt;meta http-equiv=""X-UA-Compatible"" content=""IE=edge""&gt;
&lt;title&gt;PREMIER LEAGUE&lt;/title&gt;
&lt;link rel=""stylesheet"" href=""""&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div&gt;
&lt;a class=""twitter-timeline""  href=""https://twitter.com/search?q=%40premierleague"" data-widget-id=""820173369198968833""&gt;Tweets about @premierleague&lt;/a&gt;
        &lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+""://platform.twitter.com/widgets.js"";fjs.parentNode.insertBefore(js,fjs);}}(document,""script"",""twitter-wjs"");&lt;/script&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>I have tried to convert this into my react app but it does not work or throw any error. Here is code i used in react.</p>

<pre><code>import React, { Component } from 'react';
import logo from './logo.svg';
import './App.css';





class App extends Component {

render() {
return (
  &lt;div className=""App""&gt;
    &lt;div className=""App-header""&gt;
      &lt;img src={logo} className=""App-logo"" alt=""logo"" /&gt;
      &lt;h2&gt;WELCOME TO THE PREMIER LEAGUE BLOG&lt;/h2&gt;
    &lt;/div&gt;
    &lt;div&gt;
    &lt;meta charSet=""utf-8"" /&gt;
    &lt;meta httpEquiv=""X-UA-Compatible"" content=""IE=edge"" /&gt;
    &lt;title&gt;PREMIER LEAGUE&lt;/title&gt;
    &lt;link rel=""stylesheet"" href /&gt;
    &lt;div&gt;
      &lt;a className=""twitter-timeline"" href=""https://twitter.com/search?q=%40premierleague"" data-widget-id={820173369198968833}&gt;Tweets about @premierleague&lt;/a&gt;
      {!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+""://platform.twitter.com/widgets.js"";fjs.parentNode.insertBefore(js,fjs);}}(document,""script"",""twitter-wjs"");}
    &lt;/div&gt;
  &lt;/div&gt;

      &lt;/div&gt;
);
}
}

export default App;
</code></pre>

<p>Thanks in advance for your help.</p>
","7422670","","209103","","2017-01-15 22:35:35","2017-01-15 22:35:35","embed twitter timeline in react app","<twitter-bootstrap><reactjs><twitter>","0","4","","",""
"48738761","1","48738794","","2018-02-12 02:27:32","","3","1924","<p>I'm taking a tutorial to learn React JS, everything was fine, for days I could run an example, simple, carrying out a recommended basic configuration, plus a few more add-ons that I add to recognize the Javascript version.</p>

<p>After several days of no longer reviewing the project, but it is working correctly, when executing the command, I do not see any error, but it does not show anything in the browser, only multiple errors appear in the console of this one.</p>

<p>I have uninstalled and reinstalled reac and react-dom, and the problem still persists, try a new project cloning it from a friend, and it works normally, and it only copied the same structure of mine.</p>

<h3>Issues</h3>

<blockquote>
  <p>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.</p>
  
  <p>The above error occurred in one of your React components: Consider adding an error boundary to your tree to customize error handling behavior.</p>
</blockquote>

<p>It should be noted that errors appear in the file <code>bundle.js</code>, which is used to store the generated code through <code>webpack</code></p>

<p><a href=""https://i.stack.imgur.com/brVbL.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/brVbL.jpg"" alt=""errores""></a></p>

<p><a href=""https://i.stack.imgur.com/zSovO.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zSovO.jpg"" alt=""tree""></a></p>

<h3>package.json</h3>

<pre><code>{
  ""name"": ""prueba"",
  ""version"": ""1.0.0"",
  ""description"": """",
  ""main"": ""index.js"",
  ""scripts"": {
    ""start"": ""node server.js"",
    ""dev"": ""concurrently \""node server.js\"" \""webpack -w\"" ""
  },
  ""keywords"": [],
  ""author"": """",
  ""license"": ""ISC"",
  ""dependencies"": {
    ""express"": ""^4.16.2"",
    ""react"": ""^16.2.0"",
    ""react-dom"": ""^16.2.0"",
    ""serve-static"": ""^1.13.1""
  },
  ""devDependencies"": {
    ""babel-core"": ""^6.26.0"",
    ""babel-loader"": ""^7.1.2"",
    ""babel-preset-es2015"": ""^6.24.1"",
    ""babel-preset-react"": ""^6.24.1"",
    ""concurrently"": ""^3.5.1"",
    ""eslint"": ""^4.9.0"",
    ""eslint-config-airbnb-base"": ""^12.1.0"",
    ""eslint-plugin-import"": ""^2.7.0"",
    ""webpack"": ""^3.10.0""
  }
}
</code></pre>

<h3>webpack.config.js</h3>

<pre><code>const path = require('path');

const config = {
    entry: './src/index.jsx',
    output: {
        path: path.resolve('js'),
        filename: 'bundle.js'
    },

    module: {
        rules: [
            {                
                test: /.jsx$/,
                use:{
                    loader:'babel-loader'
                },
                exclude: /node_module/
            }
        ]
    }
}

module.exports = config;
</code></pre>

<h3>app.jsx</h3>

<pre><code>import React, {Component} from 'react';
import {render} from 'react-dom';

class App extends Component{
    render(){
        return(
            &lt;div&gt;                
                &lt;h1&gt;Mi Aplicacion React Js&lt;/h1&gt;
                &lt;h3&gt;Probando la exportacion&lt;/h3&gt;
            &lt;/div&gt;
        )       
    }
}
</code></pre>

<p>export default App;</p>

<h3>index.jsx</h3>

<pre><code>import React, { Component } from 'react';
import { render } from 'react-dom';
import {App} from './components/app.jsx';

render(
    &lt;App/&gt;,
    document.getElementById('appStart')
)
</code></pre>

<h3>index.html</h3>

<pre><code>&lt;!DOCTYPE html&gt;

&lt;html&gt;

    &lt;head&gt;
        &lt;meta charset=""utf-8""&gt;
        &lt;title&gt;Aprendiendo React&lt;/title&gt;
    &lt;/head&gt;

    &lt;body&gt;
        &lt;div id=""appStart""&gt;&lt;/div&gt;
        &lt;script src=""js/bundle.js""&gt;&lt;/script&gt;
    &lt;/body&gt;

&lt;/html&gt;
</code></pre>

<h3>Console</h3>

<pre><code>C:\Users\PterPmntaM\CursoReactJS\React_Scaffold&gt; npm run dev

&gt; prueba@1.0.0 dev C:\Users\PterPmntaM\CursoReactJS\React_Scaffold
&gt; concurrently ""node server.js"" ""webpack -w""

[0] Iniciando servidor
[1]
[1] Webpack is watching the files...
[1]
[1] Hash: 5fd2ce10b3c1788b385b
[1] Version: webpack 3.10.0
[1] Time: 4878ms
[1]     Asset    Size  Chunks                    Chunk Names
[1] bundle.js  729 kB       0  [emitted]  [big]  main
[1]   [14] ./src/index.jsx 381 bytes {0} [built]
[1]     + 27 hidden modules
</code></pre>
","4756890","","","","","2018-02-12 02:33:10","Warning: React.createElement: type is invalid -- bundle.js","<javascript><node.js><reactjs><webpack><react-dom>","1","0","","",""
"40064972","1","40065168","","2016-10-15 22:39:21","","1","110","<p>I am running into a strange issue while developing a ReactJS component everything works normal, but when I try to render my UserPage component inside ContentBody I get this error </p>

<blockquote>
  <p>react.js:18798 Warning: React.createElement: type should not be null,
  undefined, boolean, or number. It should be a string (for DOM
  elements) or a ReactClass (for composite components).</p>
</blockquote>

<h2>user.jsx Component</h2>

<pre><code>import Link from ‘react’


export default class UserPage extends React.Component {
    function render() {
         return(
             &lt;UserList /&gt;  
         );
    }
}

class UserList extends React.Component {
    function render() {
        return(
           {/* jsx code */}
        );
    }
}

class User extends React.Component {
    function render() {
      return(
        &lt;tr&gt;

            &lt;td&gt;{user.name}&lt;/td&gt;
            &lt;td&gt;{user.email}&lt;/td&gt;
            &lt;td&gt;{user.createdAt}&lt;/td&gt;
            &lt;td&gt;{user.updatedAt}&lt;/td&gt;
            &lt;td&gt;
                &lt;Link to=""/api/user/delete""&gt;Delete&lt;/Link&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
    );
    }
}

##########################################
content-body.jsx file
/*————————————–-----------------*/
import UserPage from ‘./page/user.jsx’;

export default class ContentBody extends React.Component {

    constructor(props) {
       super(props)
       this.state = {data: []};
    }

    render() {
        return(

           {/* This should be dynamic and replaced with Router */}

       );
    }
}
</code></pre>

<p>It still will throw that error, not sure what I am doing wrong here?</p>

<p><strong>Update</strong>
I was able to fix the issue by importing the Link properly since Link is not an export default Link it should be imported as </p>

<pre><code>import {Link} from 'react'
</code></pre>
","601182","","601182","","2016-10-15 23:02:25","2016-10-15 23:11:39","ES6 ReactJS Warning: React.createElement: type should not be null, undefined, boolean, or number","<javascript><reactjs><ecmascript-6><react-jsx>","1","1","1","",""
"49403164","1","","","2018-03-21 09:57:43","","0","29","<p>With the script below I got this error in Internet Explorer 8 console.
How can I fix it?</p>

<p><a href=""https://i.stack.imgur.com/xZ0nK.gif"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/xZ0nK.gif"" alt=""enter image description here""></a></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code> var React =require('react');
 var ReactDOM =require('react-dom');
require('es5-shim');
require('es5-shim/es5-sham');
require('console-polyfill');


class Hello extends React.Component {
  render() {
    return React.createElement('div', null, `Hello ${this.props.toWhat}`);
  }
}

ReactDOM.render(
  React.createElement(Hello, {toWhat: 'World2'}, null),
  document.getElementById('root')
);</code></pre>
</div>
</div>
</p>
","4448949","","7135046","","2018-03-21 10:12:22","2018-03-21 10:12:22","internet explorer 8 - reactJS with IE8 in not working2","<reactjs><internet-explorer-8>","0","1","","",""
"39962053","1","","","2016-10-10 15:50:19","","1","398","<p>I am trying to implement drag&amp;drop with react for multiple lists, but i can't seem to get it work!</p>

<p>My color object change after the drop ,but it doesn't place the item in the exact position.Also while draggig the placeholder is also visible outside the ul valid dropzone.</p>

<pre><code>var colors = {
    ""a"": [""Red"", ""Green"", ""Blue""],
    ""b"": [""Yellow"", ""Black"", ""White"", ""Orange""]
};
var placeholder = document.createElement(""li"");
placeholder.className = ""placeholder"";
var List = React.createClass({
    getInitialState: function() {
        return {
            data: this.props.data
        };
    },
    dragStart: function(key, index, e) {
        this.dragged = e.currentTarget;
        this.contentToBeDragged_src = e.currentTarget.parentNode;
        e.dataTransfer.effectAllowed = 'move';
        // Firefox requires dataTransfer data to be set
        e.dataTransfer.setData(""text/html"", e.currentTarget);
    },
    dragEnd: function(key, index, e) {
        console.log(key + ' ' + index);
        this.dragged.style.display = ""block"";
        //this.dragged.parentNode.removeChild(placeholder);
        // Update data
        var data = this.state.data;
        var from = Number(this.dragged.dataset.id);
        var to = Number(this.over.dataset.id);
        data[index].splice(0, data[index].splice(from, 1)[0]);
        this.setState({
            data: data
        });
    },
    dragOver: function(e) {
        e.preventDefault();
        //this.dragged.style.display = ""none"";
        if (e.target.className == ""placeholder"") return;
        this.over = e.target;
        // Inside the dragOver method
        var relY = e.clientY - this.over.offsetTop;
        var height = this.over.offsetHeight / 2;
        var parent = e.target.parentNode;
        if (relY &gt; height) {
            this.nodePlacement = ""after"";
            parent.insertBefore(placeholder, e.target.nextElementSibling);
        } else if (relY &lt; height) {
            this.nodePlacement = ""before""
            parent.insertBefore(placeholder, e.target);
        }
    },
    render: function() {
        var context = this;
        var lists = Object.keys(context.state.data).map(function(key) {
            return &lt;ul onDragOver = {
                    context.dragOver
                } &gt; {
                    context.state.data[key].map(function(item, i) {
                        return ( &lt;
                            li data - id = {
                                i
                            }
                            key = {
                                i
                            }
                            draggable = ""true""
                            onDragEnd = {
                                (evt) =&gt; context.dragEnd(key, i, evt)
                            }
                            onDragStart = {
                                (evt) =&gt; context.dragStart(key, i, evt)
                            } &gt;
                            {
                                item
                            } &lt;
                            /li&gt;
                        )
                    }, context)
                } &lt;
                /ul&gt;
        });

        return &lt;div &gt; {
            lists
        } &lt; /div&gt;

    }
});

ReactDOM.render( &lt;
    List data = {
        colors
    }
    /&gt;, document.getElementById('app')
);
</code></pre>

<p>here is a jsfiddle with my attempt at it.
<a href=""http://jsfiddle.net/60rb5dv9/2/"" rel=""nofollow"">jsfiddle </a></p>

<p>Any help would be greatly appreciated, Thanks!</p>
","4378549","","","","","2016-10-10 21:27:47","Implementing drag&drop with react for multiple lists","<javascript><reactjs><drag-and-drop>","1","0","","",""
"33076457","1","33334728","","2015-10-12 08:26:19","","1","1958","<p>I am running into an issue where when requesting data within two adjacent react-router-relay route components using the same root query, the graphql server query in the second route component invalidates the data previously retrieved from the first.</p>

<p>As an example:</p>

<p>I am using a workaround to attach fields to a 'viewer' root node, in order to query for arrays of data from a root field:</p>

<p>My schema.js includes the following definitions for the viewer (User) type and the root: </p>

<pre><code>var GraphQLUser = new GraphQLObjectType({
   name: 'User',
   isTypeOf: function(obj) { return obj instanceof User },
   fields: function() {
      return {
         id: GraphQLRelay.globalIdField('User'),
         //Fields to expose to app, e.g. cars
         cars: {
            type: GraphQLRelay.connectionDefinitions({
               name: 'Car', nodeType: carType
            }).connectionType,
            args: GraphQLRelay.connectionArgs,
            resolve: function(user, args) {
               return
                 GraphQLRelay.connectionFromPromisedArray(getCars(), args)
            },
        },
     }
 },
 interfaces: [nodeDefinitions.nodeInterface],
});
</code></pre>

<p>And the root:</p>

<pre><code>var Root = new GraphQLObjectType({
   name: 'Root',
   fields: {
      viewer: {
         type: GraphQLUser,
         resolve: (root, {} ) =&gt; getUser()
    },
    node: nodeDefinitions.nodeField
});
</code></pre>

<p>Now, in the main.jsx application entry point, I am defining the following routes:</p>

<pre><code>ReactDOM.render(
   &lt;Router createElement={ReactRouterRelay.createElement}&gt;
      &lt;Route path=""/"" component={App} queries={ViewerQueries} /&gt;
      &lt;Route path=""/cars"" component={AllCars} queries={ViewerQueries} /&gt;
  &lt;/Router&gt;,
  document.getElementById('ReactContainer'));
</code></pre>

<p>with ViewerQueries.js containing:</p>

<pre><code>export default {
   viewer: () =&gt; Relay.QL`query { viewer }`,
};
</code></pre>

<p>Now, if the <code>App</code> component includes the following graphql fragment:</p>

<pre><code>exports.Component = Relay.createContainer(App, {
   initialVariables: {
      limit: 10
   },
   fragments: {
      viewer: () =&gt; Relay.QL`
         fragment on User {
         cars (first: $limit) {
            edges {
              node {
                 name,
              }
            }
          }
       }`,
   },
 })
</code></pre>

<p>And the <code>AllCars</code> component includes the following:</p>

<pre><code>exports.Component = Relay.createContainer(AllCars, {
   initialVariables: {limit: 10},
   fragments: {
      viewer: () =&gt; Relay.QL`
         fragment on User {
            cars (first: $limit) {
               edges {
                  node {
                     name,
                     type
                  }
               }
            }
        }`,
     },
  })
</code></pre>

<p>what happens is that on rendering of the App component on path '/', the array of cars is returned without problems. However, once the '/cars' path is rendered, the resulting array on `this.props.viewer.cars' is empty. In addition, returning to the path '/' to cause a re-rendering of the App component now also returns an empty array.</p>

<p>On the back-end, it appears the AllCars component causes an additional <code>POST /graphql 200 277.369 ms - 94</code> trip to the server to fetch the new <code>type</code> specified in the fragment. 
If the AllCars component only includes the 'name' field, Relay correctly doesn't make another server request, but instead populates the array with data (supposedly cached from the initial App component server request).</p>

<p>Shouldn't it be possible to get the array of cars from either component, with Relay getting any additional data fields specified in the fragments regardless of the order they appear in the routes? </p>

<p>Any help would be greatly appreciated!</p>
","2396046","","2030321","","2017-07-10 07:43:26","2017-07-10 07:43:26","Multiple react-router-relay routes using same Relay root query with different fragment fields","<javascript><reactjs><react-router><relayjs><react-router-relay>","2","0","","",""
"41811291","1","","","2017-01-23 16:40:36","","0","356","<p>I have this php script that I'm trying to move to react, and I came into a problem with google adsense.</p>

<p>This is the code I need to convert:</p>

<pre><code>&lt;!-- Google --&gt;
&lt;script&gt;(function(w,d,t,r,u){var f,n,i;w[u]=w[u]||[],f=function(){var o={ti:""4027507""};o.q=w[u],w[u]=new UET(o),w[u].push(""pageLoad"")},n=d.createElement(t),n.src=r,n

&lt;!-- Google Code for Free Trial Lead Conversion Page --&gt;
&lt;script type=""text/javascript""&gt;
/* &lt;![CDATA[ */
var google_conversion_id = &lt;int&gt;;
var google_conversion_language = ""en"";
var google_conversion_format = ""2"";
var google_conversion_color = ""ffffff"";
var google_conversion_label = &lt;label&gt;;
var google_remarketing_only = false;
/* ]]&gt; */
&lt;/script&gt;
&lt;script type=""text/javascript"" src=""//www.googleadservices.com/pagead/conversion.js""&gt;
&lt;/script&gt;
&lt;noscript&gt;
&lt;div style=""display:inline;""&gt;
&lt;img height=""1"" width=""1"" style=""border-style:none;"" alt="""" src=""//www.googleadservices.com/pagead/conversion/1048017343/?label=rnLgCPuC2wIQv_Pd8wM&amp;amp;guid=ON&amp;amp;s
&lt;/div&gt;
&lt;/noscript&gt;

&lt;!-- END TRACKING SCRIPTS --&gt;
</code></pre>

<p>Is this possible?</p>
","6823303","","6823303","","2017-01-23 17:09:30","2017-01-23 17:09:30","using google adsense in react","<javascript><php><reactjs><adsense>","0","7","","",""
"40082284","1","","","2016-10-17 09:02:47","","0","530","<p>I have frontend running in react + flux +node and backend running in Java.
I am using superagent to post requests from the react action to the backend which is successfully happening and I am trying to send custom headers from backend which is also working fine and getting  sent from the backend to frontend as I can see in the browsers networks(debugging for request and response).However when I try to access the headers in the react action I don't see it.Can someone please guide me how Can I handle this?</p>

<p>The custom header which I want to access is X-Token but I cant see it in the response from superagent in react action.
The react action function looks as below:</p>

<pre><code>login(payload) {
        request.post(someurl+'/login')
            .send({
                username: payload.userEmail,
                password: payload.userPassword
                })
            .set('Accept', 'application/json')
            .end(function(err, res){
                if (err || !res.ok) {

                } else {
                    console.log(res.headers) //it doesnt give x-token header.

                }
            });
    }
}
</code></pre>

<p>Below is my Server js content:</p>

<pre><code>var app = express();
app.options('*', cors());

app.set('port', process.env.PORT || 3001);
app.use(compression());
app.use(logger('dev'));
app.use(bodyParser.urlencoded({
    extended: true
}));
app.use(bodyParser.json());

app.use(function (req, res, next) {
         // Website you wish to allow to connect
         res.setHeader('Access-Control-Allow-Origin', '*');

         // Request methods you wish to allow
         res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');

         // Request headers you wish to allow
         res.setHeader(""Access-Control-Allow-Headers"", ""X-Token,Origin,X-Requested-With,content-type"");

         // Set to true if you need the website to include cookies in the requests sent
         // to the API (e.g. in case you use sessions)
         res.setHeader('Access-Control-Allow-Credentials', true);

         // Pass to next layer of middleware
         next();
     });


app.use(express.static(path.join(__dirname, 'public')));

app.engine('html', consolidate['swig']);
app.set('view engine', 'html');
app.set('views', './views');


 app.use(function(req, res) {
   Router.match({ routes: routes.default, location: req.url }, function(err, redirectLocation, renderProps) {
     if (err) {
       res.status(500).send(err.message)
     } else if (redirectLocation) {
       res.status(302).redirect(redirectLocation.pathname + redirectLocation.search)
     } else if (renderProps) {
       var html = ReactDOM.renderToString(React.createElement(Router.RoutingContext, renderProps));
       var page = swig.renderFile('views/index.html', { html: html });
       res.status(200).send(page);
     } else {
       res.status(404).send('Page Not Found')
     }
   });
 });

require('./app/routes/server-route')(app, express);
var server = require('http').createServer(app);


server.listen(app.get('port'), function() {
   console.log('Express server listening on port ' + app.get('port'));
});
</code></pre>

<p>Thanks in advance for the help.</p>
","5288327","","5288327","","2016-10-18 08:23:07","2016-10-18 08:23:07","Unable to get custom headers in react response","<node.js><express><reactjs><cors><reactjs-flux>","1","0","","",""
"41729972","1","41772623","","2017-01-18 21:40:50","","6","12004","<p>I've just upgraded to Webpack 2.2 today and have been reading through their guides, which are still a work in progress it seems.</p>

<p>I am having difficulties setting up my application to use webpack-dev-server with hot module reloading.</p>

<p>The guide I was following via the webpack documentation is here, but I am having to modify it to work with a development/production application.</p>

<p><a href=""https://webpack.js.org/guides/hmr-react/"" rel=""nofollow noreferrer"">https://webpack.js.org/guides/hmr-react/</a></p>

<p>The two errors I get are the following...</p>

<pre><code>Uncaught Error: _registerComponent(...): Target container is not a DOM element.
    at invariant (eval at &lt;anonymous&gt; (index.js:2), &lt;anonymous&gt;:44:15)
    at Object._renderNewRootComponent (eval at &lt;anonymous&gt; (index.js:64), &lt;anonymous&gt;:311:44)
    at Object._renderSubtreeIntoContainer (eval at &lt;anonymous&gt; (index.js:64), &lt;anonymous&gt;:401:32)
    at render (eval at &lt;anonymous&gt; (index.js:64), &lt;anonymous&gt;:422:23)
    at hotRenderer (eval at &lt;anonymous&gt; (index.js:73), &lt;anonymous&gt;:41:28)
    at eval (eval at &lt;anonymous&gt; (index.js:73), &lt;anonymous&gt;:47:5)
    at eval (eval at &lt;anonymous&gt; (index.js:73), &lt;anonymous&gt;:54:5)
    at Object.&lt;anonymous&gt; (index.js:73)
    at e (index.js:1)
    at Object.&lt;anonymous&gt; (index.js:146)
</code></pre>

<p>AND </p>

<pre><code>Warning: React.createElement: type is invalid -- expected a string (for built-in components) 
or a class/function (for composite components) but got: object.
printWarning    @   warning.js?8a56:36
warning @   warning.js?8a56:60
createElement   @   ReactElementValidator.js?a599:171
hotRenderer @   index.js?2018:30
(anonymous) @   index.js?2018:35
(anonymous) @   index.js?2018:25
(anonymous) @   index.js:73
e   @   index.js:1
(anonymous) @   index.js:146
e   @   index.js:1
(anonymous) @   index.js:1
(anonymous) @   index.js:1
</code></pre>

<p>I believe the problem might lie with the fact that my app file is exporting a Component composed of a Redux Provider wrapping a React Router Router.</p>

<p>Here are the two culprit files:</p>

<p>index.js</p>

<pre><code>import './lib/styles.css'
import React from 'react'
import { render } from 'react-dom'

import App from './App'

if (process.env.NODE_ENV === 'development') {
  const { AppContainer } = require('react-hot-loader')
  const hotRender = (Component) =&gt; {
    render(
      &lt;AppContainer&gt;
        &lt;Component/&gt;
      &lt;/AppContainer&gt;,
      document.getElementById('root')
    )
  }

  hotRender(App)

  if (module.hot) {
    module.hot.accept('./App', () =&gt; {
      const NewApp = require('./App').default
      hotRender(NewApp)
    })
  }
} else {
  render(App, document.getElementById('app'))
}
</code></pre>

<p>App.js</p>

<pre><code>import React from 'react'
import { Provider } from 'react-redux'
import { createStore } from 'redux'
import store from './redux/store'

import { Router, hashHistory } from 'react-router'
import routes from './routes'

let s = createStore(store,
  process.env.NODE_ENV === 'development' ? (
    window.__REDUX_DEVTOOLS_EXTENSION__ &amp;&amp;
    window.__REDUX_DEVTOOLS_EXTENSION__()
  ) : null
)

const App = () =&gt; (
  &lt;Provider store={s}&gt;
    &lt;Router history={hashHistory} routes={routes} /&gt;
  &lt;/Provider&gt;
)


export default App
</code></pre>

<p>If you would like to examine the entire PR that has the changes, that would be awesome! The code is located here: <a href=""https://github.com/awitherow/aether/pull/64/files"" rel=""nofollow noreferrer"">https://github.com/awitherow/aether/pull/64/files</a></p>

<p>I apologise for some of the CSS changes that slipped into the PR as well, but all of the Webpack 2.2 and later upgrades that I have done in here are related potentially!</p>

<p><strong>EDIT</strong></p>

<p>I have attempted some fixes, simple ones at that... but they are not solving anything.</p>

<ol>
<li><strong>X</strong> Wrapping the App in a div, so that it would somehow think it was a DOM element.</li>
<li><strong>X</strong> exporting App as a class extending Component</li>
</ol>
","1475153","","1475153","","2017-01-19 07:26:27","2017-07-11 06:50:51","React.createElement: type is invalid -- expected a string, but got: object","<reactjs><webpack><redux><react-router><webpack-dev-server>","2","1","2","",""
"40387100","1","","","2016-11-02 18:20:24","","0","61","<p>I have been doing react for awhile. I don't use module loaders though like webpack.</p>

<p>I only use npm to get the files from npm install and then get the dist from from the dist folder within. And for babel to get from es6 to es5.</p>

<p>I have never been able to figure out how to reuse a react component, they seem to use some kind of <code>require</code>. Can you please outline to me how I can reuse components I find on npm?</p>

<p>Here is example how I use it:</p>

<p>

    
        </p>

<pre><code>    &lt;link rel=""stylesheet"" href=""/styles/app.css"" /&gt;

    &lt;script src=""/scripts/3rd/polyfill.min.js""&gt;&lt;/script&gt;
    &lt;script src=""/scripts/3rd/comm/webext.js""&gt;&lt;/script&gt;
    &lt;script src=""/scripts/3rd/react-with-addons.min.js""&gt;&lt;/script&gt;
    &lt;script src=""/scripts/3rd/react-dom.min.js""&gt;&lt;/script&gt;
    &lt;script src=""/scripts/3rd/redux.min.js""&gt;&lt;/script&gt;
    &lt;script src=""/scripts/3rd/react-redux.min.js""&gt;&lt;/script&gt;
    &lt;script src=""/scripts/app.js""&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div id=""root""&gt;&lt;/div&gt;
&lt;/body&gt;
</code></pre>

<p></p>

<p>Then my js is:</p>

<pre><code>        ReactDOM.render(
            React.createElement(ReactRedux.Provider, { store },
                React.createElement(App)
            ),
            document.getElementById('root')
        );
</code></pre>
","1828637","","1828637","","2016-11-02 18:58:59","2018-04-05 10:04:21","Reusing react components publicly available","<reactjs>","2","5","","",""
"48504679","1","48505816","","2018-01-29 15:28:44","","1","170","<p>I'm getting the following error when trying to use a component such as the {Input} from 'reactstrap' in an external component, it seems I'm not importing the reactstrap well with the rest of my component somehow.</p>

<p>My <strong>App.jsx</strong> goes like this:</p>

<pre><code>import React, {Component} from 'react';
import './App.css';
import Login from './Login';
import {BrowserRouter as Router, Link, Route} from 'react-router-dom'

class App extends Component {
render() {
    return (
        &lt;Router&gt;
            &lt;div className=""App""&gt;
                &lt;Link to=""/login""&gt;
                    &lt;h3 className=""App-menu-title""&gt;Login&lt;/h3&gt;
                &lt;/Link&gt;
                &lt;Route exact={true} path=""/"" component={Login}/&gt;
            &lt;/div&gt;
        &lt;/Router&gt;)
}
}

export default App;
</code></pre>

<p>And here's my <strong>Login.jsx</strong></p>

<pre><code>import React, {Component} from 'react';
 import {Input} from 'bootstrap';


class Login extends Component {
render() {
    return (
        &lt;div&gt;
        &lt;Input /&gt;
        &lt;/div&gt;
    )
}
}

export default Login;
</code></pre>

<p>and here's the error I get</p>

<pre><code>index.js:2178 Warning: React.createElement: type is invalid -- 
expected a string (for built-in components) or a class/function (for 
composite components) but got: undefined. You likely forgot to export 
your component from the file it's defined in, or you might have mixed 
up default and named imports.

Check your code at Login.jsx:9.
in Login (created by Route)
in Route (at App.jsx:14)
in div (at App.jsx:10)
in Router (created by BrowserRouter)
in BrowserRouter (at App.jsx:9)
in App (at index.js:9)
</code></pre>
","7436518","","","","","2018-01-29 16:51:04","Getting Error ""React.createElement: type is invalid -- expected a string"" when using React Router and external component that imports other Components","<reactjs><react-router><reactstrap>","3","0","","",""
"40411259","1","40450931","","2016-11-03 21:08:07","","2","957","<p>I am using react-router. I have embedded the same external widget in two react components. The widget loads fine for the first time or when I refresh the page. The problem is when I change pages, the widget won't load anymore. Please look at my code:</p>

<pre><code>var { Router, Route, IndexRoute, Link, browserHistory } = ReactRouter

var MainLayout = React.createClass({
  render: function() {
    return (
      &lt;div className=""app""&gt;
        &lt;header className=""primary-header""&gt;&lt;/header&gt;
        &lt;aside className=""primary-aside""&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;Link to=""/""&gt;Home&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link to=""/page1""&gt;Page1&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link to=""/page2""&gt;Page2&lt;/Link&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/aside&gt;
        &lt;main&gt;
          {this.props.children}
        &lt;/main&gt;
      &lt;/div&gt;
      )
  }
})

var Home = React.createClass({
  render: function() {
    return (&lt;h1&gt;Home Page&lt;/h1&gt;)
  }
})

var SearchLayout = React.createClass({
  render: function() {
    return (
      &lt;div className=""search""&gt;
        &lt;header className=""search-header""&gt;&lt;/header&gt;
        &lt;div className=""results""&gt;
          {this.props.children}
        &lt;/div&gt;
        &lt;div className=""search-footer pagination""&gt;&lt;/div&gt;
      &lt;/div&gt;
      )
  }
})

var PageOne = React.createClass({
  componentDidMount: function() {
    const plumxScript = document.createElement(""script"");
    plumxScript.src = ""//d39af2mgp1pqhg.cloudfront.net/widget-popup.js"";
    plumxScript.async = true;
    document.body.appendChild(plumxScript);
 },

  render: function() {
    return (
        &lt;div
            href=""https://plu.mx/plum/a/?doi=10.1371/journal.pone.0056506""
            className=""plumx-plum-print-popup""
            data-hide-when-empty=""true""
            data-popup=""left""
            data-size=""medium""
            target=""_blank""&gt;
        &lt;/div&gt;
      )
  }
})

var PageTwo = React.createClass({
  componentDidMount: function() {
    const plumxScript = document.createElement(""script"");
    plumxScript.src = ""//d39af2mgp1pqhg.cloudfront.net/widget-popup.js"";
    plumxScript.async = true;
    document.body.appendChild(plumxScript);
  },

  render: function() {
    return (
        &lt;div
            href=""https://plu.mx/plum/a/?doi=10.1371/journal.pone.0056506""
            className=""plumx-plum-print-popup""
            data-hide-when-empty=""true""
            data-popup=""left""
            data-size=""medium""
            target=""_blank""&gt;
        &lt;/div&gt;
      )
  }
})

ReactDOM.render((
  &lt;Router&gt;
    &lt;Route path=""/"" component={MainLayout}&gt;
      &lt;IndexRoute component={Home} /&gt;
      &lt;Route component={SearchLayout}&gt;
        &lt;Route path=""page1"" component={PageOne} /&gt;
        &lt;Route path=""page2"" component={PageTwo} /&gt;
      &lt;/Route&gt; 
    &lt;/Route&gt;
  &lt;/Router&gt;
), document.getElementById('root'))
</code></pre>

<p>Click on Page1 and the widget loads, click on Page2 and in theory the widget should reload but it doesn't. If I click again on Page1 the widget won't load.</p>

<p>Full code here: <a href=""https://codepen.io/vh_ruelas/pen/MbgdOm"" rel=""nofollow noreferrer"">https://codepen.io/vh_ruelas/pen/MbgdOm</a></p>
","7112122","","7112122","","2016-11-04 17:51:50","2016-11-06 15:15:30","External script won't load after page change react-router","<reactjs><react-router>","1","0","1","",""
"41059756","1","41059829","","2016-12-09 11:45:52","","2","98","<p>I just had the craziest bug. In my <code>onKeyDown</code> I destructred the <code>preventDefault</code> out of <code>e</code>. However when I would call <code>preventDefault()</code> I would get:</p>

<blockquote>
  <p>TypeError: this is undefined[Learn More]react-dom.js:13987:5</p>
</blockquote>

<p>I am using React v15.4.1 and the line is highlighted in my screenshot below:</p>

<p><img src=""https://i.imgur.com/zv1Fr5I.png"" alt=""""></p>

<p>If I don't destructure and just use <code>e.preventDefaut()</code> it works. Does anyone know why this is? Is this a bug in babel?</p>

<pre><code>const El = React.createClass({
  displayName: 'El',
  onKeyDown(e) {
    let { key, preventDefault } = e;
    preventDefault();
  },
  render() {
    return React.createElement('input', { onKeyDown:this.onKeyDown });
  }
});
</code></pre>
","1828637","","","","","2016-12-09 11:55:24","If destructure preventDefault - with babel in react - this is undefined","<reactjs><babeljs>","1","0","","",""
"48818175","1","","","2018-02-15 23:55:15","","0","120","<p>I'm a complete beginner at web development + react, and am running
into a problem as I try to render an imported component.</p>

<p>I'm trying to render the following component: <a href=""https://www.npmjs.com/package/react-launch-gauge"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/react-launch-gauge</a></p>

<p>However, when i run, i keep getting the following error:</p>

<pre><code>&gt; Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: object.
</code></pre>

<p>What am I doing wrong? My code is below</p>

<p>App.jsx</p>

<pre><code>import React from 'react';
import Gauge from 'react-launch-gauge';

class App extends React.Component {
    constructor(props, context) {
        super(props, context)
    }
    render() {
        return (
            &lt;div&gt;
                &lt;Gauge title={'Points'} value={42} max={100} /&gt;
            &lt;/div&gt;
        );
    }
}
export default App;
</code></pre>

<p>main.js</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import App from './App.jsx';

ReactDOM.render(&lt;App /&gt;, document.getElementById('app'));
</code></pre>

<p>webpack.config.js</p>

<pre><code>var config = {
   entry: './main.js',
   output: {
      path:'/',
      filename: 'index.js',
   },
   devServer: {
      inline: true,
      port: 8080
   },
   module: {
      loaders: [
         {
            test: /\.jsx?$/,
            exclude: /node_modules/,
            loader: 'babel-loader',
            query: {
               presets: ['es2015', 'react']
            }
         }
      ]
   }
}
module.exports = config;
</code></pre>

<p>package.json</p>

<pre><code>{
  ""name"": ""iw"",
  ""version"": ""1.0.0"",
  ""description"": """",
  ""main"": ""index.js"",
  ""scripts"": {
    ""start"": ""webpack-dev-server --hot""
  },
  ""author"": """",
  ""license"": ""ISC"",
  ""dependencies"": {
    ""babel-core"": ""^6.26.0"",
    ""babel-loader"": ""^7.1.2"",
    ""babel-preset-es2015"": ""^6.24.1"",
    ""babel-preset-react"": ""^6.24.1"",
    ""react"": ""^16.2.0"",
    ""react-dom"": ""^16.2.0"",
    ""react-launch-gauge"": ""^0.2.3"",
    ""webpack"": ""^3.11.0"",
    ""webpack-dev-server"": ""^2.11.1""
  }
}
</code></pre>
","3059217","","497815","","2018-02-16 00:07:51","2018-02-16 00:07:51","Warning: React.createElement: type is invalid -- expected a string","<javascript><reactjs><webpack><babeljs><webpack-dev-server>","1","1","","",""
"48521781","1","","","2018-01-30 12:42:10","","3","71","<p>Sometime I was sawing the well known warning, <code>browser.js:49 Warning: [react-router] You cannot change &lt;Router routes&gt;; it will be ignored</code> and I found two trend issues that friends discussed about this issue and the solution is <code>const</code> routes components and putting them inside <code>Router</code> component. </p>

<p><a href=""https://github.com/ReactTraining/react-router/issues/2704"" rel=""nofollow noreferrer"">https://github.com/ReactTraining/react-router/issues/2704</a></p>

<p><a href=""https://github.com/reactjs/react-router-redux/issues/179"" rel=""nofollow noreferrer"">https://github.com/reactjs/react-router-redux/issues/179</a></p>

<p>Just like below:</p>

<p><strong>you will see warning with this code:</strong></p>

<pre><code>class Root extends Component {
  render() {
    return (
      &lt;Router history={browserHistory} createElement={this.createElement}&gt;
        &lt;Route component={App}&gt;
          &lt;Route path=""/"" component={MainPage}/&gt;
          &lt;Route path=""/page2"" component={Page2}/&gt;
          &lt;Route path=""/settings"" component={SettingsPage}/&gt;
        &lt;/Route&gt;
      &lt;/Router&gt;
    )
  }
}
</code></pre>

<p><strong>but you won't see warning with this code:</strong></p>

<pre><code>const routes = (
  &lt;Route component={App}&gt;
    &lt;Route path=""/"" component={MainPage}/&gt;
    &lt;Route path=""/page2"" component={Page2}/&gt;
    &lt;Route path=""/settings"" component={SettingsPage}/&gt;
  &lt;/Route&gt;
);

class Root extends Component {
  render() {
    return (
      &lt;Router history={browserHistory} createElement={this.createElement}&gt;
        {routes}
      &lt;/Router&gt;
    )
  }
}
</code></pre>

<p>This is OK, awesome solution to vanish [react-router] warning, and for <code>Root Component</code> changing <code>state</code> the <code>routes</code> was static and you won't see any warnings. <strong><em>BUT</em></strong> my issue is: I pass <code>Root Component</code> props to each <code>Route</code> and I can not do the above solution 😞 ,
I must put App <code>Route</code> inside Router so with this method absolutely this is not solution method and I will saw the known warning again, see my router code:</p>

<pre><code>export default class AppRoutes extends Component {
    render() {
        return (
            &lt;Router history={hashHistory}&gt;
                &lt;Route path=""/"" {...this.props} component={App}&gt;
                    &lt;IndexRoute component={Home}  {...this.props}/&gt;
                    &lt;Route path=""/transaction"" component={Transaction} {...this.props}/&gt;
                    &lt;Route path=""/users-management"" component={UsersManagement} {...this.props}/&gt;
                    &lt;Route path=""/issues"" component={Issues} {...this.props}/&gt;
                    &lt;Route path='/not-found' component={NotFound}/&gt;
                    &lt;Route path='/settlement-management' component={SettlementManagement} {...this.props}/&gt;
                    &lt;Route path='/categories-management' component={CategoriesManagement} {...this.props}/&gt;
                    &lt;Route path='/gifts-management' component={GiftsManagement} {...this.props}/&gt;
                    &lt;Redirect from='/*' to='/not-found'/&gt;
                &lt;/Route&gt;
            &lt;/Router&gt;
        );
    }
}
</code></pre>

<p>And the <code>Root Component</code> render code is:</p>

<pre><code>render(){
    return(
        &lt;AppRoutes {...this}/&gt;
    );
}
</code></pre>

<p>I passed this as a props to <code>AppRoutes</code> component and I need to pass inherited <code>this.props</code> to sub <code>Route</code>s and use them. how I could won't see warning and pass props to any <code>Route</code>s?</p>

<p>One of my solution is that, I write all <code>Route</code>s as static and call <code>Root Component</code> <code>props</code> directly inside each component, but how? I don't know how I can call and keep <code>props</code> of <code>Root Component</code> inside the component that need to have <code>props</code> of <code>Root Component</code> as the component is not direct <code>Root Component</code> children? </p>
","","user9289032","","","","2018-01-30 13:35:57","`react-router` warning solution and passing root props to sub routes","<javascript><reactjs><react-router>","1","0","","",""
"40466492","1","40467882","","2016-11-07 13:33:41","","8","4681","<p>I made the project using this link as my starting file.</p>

<p><a href=""https://github.com/facebookincubator/create-react-app"" rel=""noreferrer"">https://github.com/facebookincubator/create-react-app</a></p>

<p>But after i tried to make Facebook login button with follow by their official docs with this.</p>

<pre><code>componentDidMount(){
    console.log('login mount');
    window.fbAsyncInit = function() {
        FB.init({
            appId      : '320866754951228',
            xfbml      : true,
            version    : 'v2.6'
        });

        FB.getLoginStatus(function(response) {
            //this.statusChangeCallback(response);
        });

    };

    (function(d, s, id){
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) {return;}
        js = d.createElement(s); js.id = id;
        js.src = ""//connect.facebook.net/en_US/sdk.js"";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
}
</code></pre>

<p>So i got this errors when the browser was refreshed.</p>

<pre><code>Failed to compile.

Error in ./src/components/user_profile/LoginForm.js

/Sites/full_stack_production/xxxxx
  70:13  error  'FB' is not defined  no-undef
  76:13  error  'FB' is not defined  no-undef

✖ 2 problems (2 errors, 0 warnings)
</code></pre>

<p>So i guess because ESLint that cause this errors.
How can i fix this or make the exception for this <code>FB</code> variable?</p>

<p>Thanks! </p>
","3403614","","","","","2018-01-16 20:24:47","How to fix error 'FB' is not defined no-undef on create-react-app project?","<facebook><reactjs><eslint><create-react-app>","5","1","3","",""
"33166027","1","33207613","","2015-10-16 08:41:49","","2","69","<p>I have the following routes:<br>
<strong>routes.jsx</strong>  </p>

<pre><code>var routes = (
    &lt;Route component={AfApp} path=""/""&gt;
        &lt;Route path=""/testpage"" component={Test}/&gt;
        &lt;Route path=""testpage"" component={Test}/&gt;
    &lt;/Route&gt;
);

module.exports = routes;
</code></pre>

<p>But when I navigated to <code>mydomain/testpage</code>, <code>mydomain/testpage/</code> and <code>mydomain/whatever</code>, only the <strong>AfApp</strong> component rendered, not the <strong>TestPage</strong> component or any other component!  </p>

<p>What is wrong?<br>
<strong>AfApp.jsx</strong></p>

<pre><code>export default class AfApp extends React.Component {
    render() {
        console.log('render');

        return (

            &lt;div&gt;
                {this.props.children}
            &lt;/div&gt;
        );

    }
}
</code></pre>

<p><strong>entry.jsx</strong>  </p>

<pre><code>import routes from './routes.jsx';
ReactDOM.render(&lt;Router routes={routes} /&gt;, document.getElementById('content'));
</code></pre>

<p>React version is 0.14.0  </p>

<p>The bundle.js that is included in my page contains the following:  </p>

<pre><code>var _appComponentsTestJsx2 = _interopRequireDefault(_appComponentsTestJsx);

var routes = _react2['default'].createElement(
    _reactRouter.Route,
    { component: _appComponentsAfAppJsx2['default'], path: '/' },
    _react2['default'].createElement(_reactRouter.Route, { path: '/testpage', component: _appComponentsTestJsx2['default'] }),
    _react2['default'].createElement(_reactRouter.Route, { path: 'testpage', component: _appComponentsTestJsx2['default'] })
);
</code></pre>
","541624","","541624","","2015-10-19 02:42:50","2015-10-19 06:06:41","react-router 1.0.0-rc3 - All URLs are are mapped to only one React component","<reactjs><react-router>","1","0","1","",""
"49525599","1","","","2018-03-28 03:25:49","","2","172","<p>I am a newbie to react. I'm trying to create a component named StationBrowserForHome (TSX). In the render() function, I want to render a DOM element looks like this:</p>

<pre><code>&lt;div class = ""big-group""&gt;
 &lt;div class = ""small-group&gt;
   &lt;div class=""item""&gt;&lt;/item&gt;
   &lt;div class=""item""&gt;&lt;/item&gt;
   ...
   &lt;div class=""item""&gt;&lt;/item&gt;
 &lt;/div&gt;
 &lt;div class = ""small-group&gt;
   &lt;div class=""item""&gt;&lt;/item&gt;
   &lt;div class=""item""&gt;&lt;/item&gt;
   ...
   &lt;div class=""item""&gt;&lt;/item&gt;
 &lt;/div&gt;
 ...
&lt;/div&gt;
</code></pre>

<p>So I tried to create that DOM tree in componentWillMount(), set it to state variable ""divItems"", and in render(), I retrieve it</p>

<pre><code>export class StationBrowserForHome extends Component &lt;{}, any&gt; {
    componentWillMount (){
        var divItems = document.createElement(""div"");
        var divSeven = document.createElement(""div"");

        for (var i = 0; i &lt; 7; i++) {
            var singleItem = document.createElement('&lt;div className=""station-item""&gt;&lt;div className=""row""&gt;&lt;StationBrowserItemInfo/&gt;&lt;/div&gt;&lt;div className=""row station-name""&gt;Station {i}&lt;/div&gt;&lt;/div&gt;');
            divSeven.appendChild(singleItem);
            console.log(""singleItem: ""+singleItem);
            console.log(""divSeven: ""+divSeven);

        }
        divItems.appendChild(divSeven);
        this.setState({divItems:divItems});
    }

    render() {

        return (
            &lt;div className=""container-fluid text-center browser""&gt;
                &lt;div className=""cover-div""&gt;
                    &lt;ArrowButton/&gt;
                    &lt;div className=""text-center list-station"" id=""station-browser""&gt;
                        { this.state.divItems }
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        );
  }
}
</code></pre>

<p>And I got this error message: </p>

<blockquote>
  <p>VM19339 invariant.js:42 Uncaught Error: Objects are not valid as a
  React child (found: [object HTMLDivElement]). If you meant to render a
  collection of children, use an array instead</p>
</blockquote>

<p>Any help would be appreciated!</p>
","2874409","","","","","2018-03-28 15:03:55","How to pass a javascript-generated DOM element to react render function","<reactjs><typescript><dom><render>","3","0","","",""
"40015610","1","","","2016-10-13 08:11:26","","0","951","<p>I read <a href=""https://facebook.github.io/react/docs/top-level-api.html#react.createelement"" rel=""nofollow"">this</a>:</p>

<pre><code>ReactElement createElement(
  string/ReactClass type,
  [object props],
  [children ...]
)
</code></pre>

<blockquote>
  <p>Create and return a new ReactElement of the given type. The type
  argument can be either an html tag name string (eg. 'div', 'span',
  etc), or a ReactClass (created via React.createClass).</p>
</blockquote>

<p>This does not really explain to me what happens to <code>[object props]</code>. Why is it needed ? What is it used for ?</p>

<p>Could someone explain what happens to <code>[object props]</code> when calling to <code>createElement</code> ? How are they used ? Will they be used to render the element ? Can they change later ? Are they mutable or immutable ?</p>

<p>Reason for asking : I am trying to figure out <a href=""https://github.com/jhegedus42/scalajs-react-playaround/wiki/ReactJS-----ScalaJS-React-Interop"" rel=""nofollow"">how to use</a> scalajs-react.</p>
","1198559","","","","","2016-10-13 17:03:35","How does React's createElement(...) work ? What are the props used for?","<reactjs>","2","4","1","",""
"48509999","1","","","2018-01-29 21:08:41","","0","44","<p>I am not sure how to do this, i understand how to store data in  components but when creating <code>containers</code> etc it gets confusing as they need to be rendered but i just want to store data. online official docs are not very clear. </p>

<p>I would like to store the data in <code>setstate</code> globally so i can access it from any component. this will be related to all user information. so i can import User state and then say <code>user.isGuest</code> etc. </p>

<p>I currently do the the following in my header file but i need to expose the user data to any component without doing callbacks and passing data back to <code>App</code>.</p>

<pre><code>import React, { Component } from 'react';
import {getHttpRequestJSON} from '../components/HTTP.js'
import { Link } from 'react-router-dom';
import { connect } from 'react-redux';
import { fetchActiveUser } from '../actions/index';
import { bindActionCreators } from 'redux';   

class Header extends Component {

    constructor(props){
        super(props);
        this.state = {
            loading: true,
            version: ''
        };
    }

    initData = () =&gt; {
        let self = this;

        getHttpRequestJSON('/api/user/get/user/method/is/guest/format/json?quiet=1')
        .then((response) =&gt; {
            let isGuest = response.body.recordset.record.isGuest;
            if(isGuest){
                /*$("".logo"").trigger('click');
                //$(""#overlay"").show();
                $('#modalIntro').modal('toggle');

                $(""#modalIntro"").on(""hidden.bs.modal"", function () {
                    $("".logo"").trigger('click');
                });*/
            }

            self.props.activeUser.isGuest = isGuest;
            self.setState({
                 loading : false,
                 version : response.header.version
            });
        })
        .catch(error =&gt; { 
            console.log(""Failed!"", error);
            //$('#myModalError .modal-body').html(error);
            //$('#myModalError').modal('show');
        }); 
    }

    componentDidMount() {
        this.props.fetchActiveUser();       
        this.initData();
     }

    render() {
        if(this.state.loading){
            return (
                    &lt;div className=""container-fluid"" id=""top_section""&gt;
                        &lt;div id=""flash_alert"" className=""row"" style={{margin:""0 auto""}} &gt;
                            &lt;div className=""alert alert-success col-xs-3 col-sm-6 col-lg-3 text-center""&gt;
                              &lt;strong&gt;Success!&lt;/strong&gt;
                            &lt;/div&gt;

                            &lt;div className=""alert alert-info col-xs-3 col-sm-6 col-lg-3 text-center""&gt;
                              &lt;strong&gt;Info!&lt;/strong&gt;
                            &lt;/div&gt;

                            &lt;div className=""alert alert-warning col-xs-3 col-sm-6 col-lg-3 text-center""&gt;
                              &lt;strong&gt;Warning!&lt;/strong&gt;
                            &lt;/div&gt;

                            &lt;div className=""alert alert-danger col-xs-3 col-sm-6 col-lg-3 text-center""&gt;
                              &lt;strong&gt;Danger!&lt;/strong&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div className=""logo""&gt;

                        &lt;/div&gt;
                        &lt;div className=""row-fluid""&gt;
                            &lt;div className=""header""&gt;
                                &lt;div className=""row-fluid""&gt;
                                    &lt;div className=""col-xs-5 col-sm-7 col-md-9""&gt;
                                    &lt;h2 style={{paddingLeft: ""15px !important""}} className=""ellipsis""&gt;Home&lt;/h2&gt;
                                    &lt;/div&gt;
                                    &lt;div className=""col-xs-4 col-sm-3 col-md-2 vcenter hidden-print"" style={{textAlign: ""right"",fontSize: ""8pt"",bottom: ""-28px"",position: ""relative"",float: ""right""}}&gt;
                                        &lt;span className=""username""&gt;&lt;/span&gt; | &lt;Link className=""logout"" to={`/logout`}&gt; Logout &lt;img src=""/images/page-layout/logout-button.gif"" alt=""Icon: Logout"" title=""Logout"" /&gt; &lt;/Link&gt;
                                    &lt;/div&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                            &lt;div className=""row-fluid"" style={{clear: ""both"",position: ""relative"",top: ""-50px"",marginLeft: ""95px""}}&gt;
                                &lt;div className=""col-sm-8""&gt; &lt;/div&gt;
                                &lt;div className=""col-sm-4 text-right""&gt;
                                    &lt;Link to={`/home`}&gt; Connectivity Compliance Portal (CCP) &lt;span style={{fontSize:""7pt""}}&gt;&lt;/span&gt; &lt;/Link&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;

                        &lt;div id=""myModalError"" class=""modal fade"" role=""dialog""&gt;
                            &lt;div class=""modal-dialog""&gt;

                              &lt;div class=""modal-content""&gt;
                                &lt;div class=""modal-header alert alert-danger""&gt;
                                  &lt;button type=""button"" class=""close"" data-dismiss=""modal""&gt;x&lt;/button&gt;
                                  &lt;h4 class=""modal-title""&gt;Error&lt;/h4&gt;
                                &lt;/div&gt;
                                &lt;div class=""modal-body""&gt;
                                  Unexpected error occured
                                &lt;/div&gt;
                                &lt;div class=""modal-footer""&gt;
                                    &lt;button type=""button"" class=""btn btn-success"" data-dismiss=""modal""&gt;Ok&lt;/button&gt;
                                &lt;/div&gt;
                              &lt;/div&gt;

                            &lt;/div&gt;
                          &lt;/div&gt;
                    &lt;/div&gt;
                        );
        }
        return (
                &lt;div className=""container-fluid"" id=""top_section""&gt;
                    &lt;div id=""flash_alert"" className=""row"" style={{margin:""0 auto""}} &gt;
                        &lt;div className=""alert alert-success col-xs-3 col-sm-6 col-lg-3 text-center""&gt;
                          &lt;strong&gt;Success!&lt;/strong&gt;
                        &lt;/div&gt;

                        &lt;div className=""alert alert-info col-xs-3 col-sm-6 col-lg-3 text-center""&gt;
                          &lt;strong&gt;Info!&lt;/strong&gt;
                        &lt;/div&gt;

                        &lt;div className=""alert alert-warning col-xs-3 col-sm-6 col-lg-3 text-center""&gt;
                          &lt;strong&gt;Warning!&lt;/strong&gt;
                        &lt;/div&gt;

                        &lt;div className=""alert alert-danger col-xs-3 col-sm-6 col-lg-3 text-center""&gt;
                          &lt;strong&gt;Danger!&lt;/strong&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                    &lt;div className=""logo""&gt;

                    &lt;/div&gt;
                    &lt;div className=""row-fluid""&gt;
                        &lt;div className=""header""&gt;
                            &lt;div className=""row-fluid""&gt;
                                &lt;div className=""col-xs-5 col-sm-7 col-md-9""&gt;
                                &lt;h2 style={{paddingLeft: ""15px !important""}} className=""ellipsis""&gt;Home&lt;/h2&gt;
                                &lt;/div&gt;
                                &lt;div className=""col-xs-4 col-sm-3 col-md-2 vcenter hidden-print"" style={{textAlign: ""right"",fontSize: ""8pt"",bottom: ""-28px"",position: ""relative"",float: ""right""}}&gt;

                                            &lt;span className=""username""&gt;{this.props.activeUser.name}{` `}&lt;/span&gt; | &lt;Link className=""logout"" to={`/logout`}&gt; Logout &lt;img src=""/images/page-layout/logout-button.gif"" alt=""Icon: Logout"" title=""Logout"" /&gt; &lt;/Link&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div className=""row-fluid"" style={{clear: ""both"",position: ""relative"",top: ""-50px"",marginLeft: ""95px""}}&gt;
                            &lt;div className=""col-sm-8""&gt;
                                                &lt;/div&gt;
                            &lt;div className=""col-sm-4 text-right""&gt;
                                &lt;Link to={`/home`}&gt;Connectivity Compliance Portal (CCP)&lt;span style={{fontSize:""7pt""}}&gt;{` `}v{` `}{this.state.version}&lt;/span&gt;&lt;/Link&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;

                    &lt;div id=""myModalError"" class=""modal fade"" role=""dialog""&gt;
                        &lt;div class=""modal-dialog""&gt;

                          &lt;div class=""modal-content""&gt;
                            &lt;div class=""modal-header alert alert-danger""&gt;
                              &lt;button type=""button"" class=""close"" data-dismiss=""modal""&gt;x&lt;/button&gt;
                              &lt;h4 class=""modal-title""&gt;Error&lt;/h4&gt;
                            &lt;/div&gt;
                            &lt;div class=""modal-body""&gt;
                              Unexpected error occured
                            &lt;/div&gt;
                            &lt;div class=""modal-footer""&gt;
                                &lt;button type=""button"" class=""btn btn-success"" data-dismiss=""modal""&gt;Ok&lt;/button&gt;
                            &lt;/div&gt;
                          &lt;/div&gt;

                        &lt;/div&gt;
                      &lt;/div&gt;
                &lt;/div&gt;

        );

    }
}

function mapStateToProps(state) {
    // Whatever is returned will show up as props
    // inside of the component
    return {
        activeUser: state.activeUser
    };
}

// Anything returned from this function will end up as props
// on this container
function mapDispatchToProps(dispatch){
    // Whenever getUser is called, the result should be passed
    // to all our reducers
    return bindActionCreators({ fetchActiveUser }, dispatch);
}

//Promote component to a container - it needs to know
//about this new dispatch method, fetchActiveUser. Make it available
//as a prop
export default connect(mapStateToProps, mapDispatchToProps)(Header);
</code></pre>

<p>I have another container which i would like to access the data of <code>fetchActiveUser</code>. </p>

<pre><code>import _ from 'lodash';
import React, { Component } from 'react';
import { connect } from 'react-redux';
import { fetchContents } from '../actions';
import { Link } from 'react-router-dom';
import { fetchActiveUser } from '../actions/index';
import { bindActionCreators } from 'redux';   

class HomeContent extends Component {

    componentDidMount() {
        this.props.fetchContents();
    }

    htmlDecode(input){
        let e = document.createElement('div');
        e.innerHTML = input;
        return e.childNodes.length === 0 ? """" : e.childNodes[0].nodeValue;
    }

    renderContent(classname) {
        return _.map(this.props.content, c =&gt; {

            if(c.target == classname){
                return (                        
                    &lt;div dangerouslySetInnerHTML={{ __html: c.content}} /&gt;
                );
            }
        });
    }

    render() {
console.log(this.props);
        return (
                &lt;div className=""container-fluid""&gt;

        &lt;div className=""row-fluid text-center"" &gt;
            &lt;div className=""panel panel-default disclaimer""&gt;
                &lt;div className=""panel-heading""&gt;
                    &lt;h3 className=""panel-title""&gt;INTRODUCTION&lt;/h3&gt;
                &lt;/div&gt;
                &lt;div className=""panel-body panel_introduction""&gt;{this.renderContent('panel_introduction')}&lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;


        &lt;div className=""row-fluid text-center top-buffer""&gt;
            &lt;div className=""panel panel-default disclaimer""&gt;
                &lt;div className=""panel-heading""&gt;
                    &lt;h3 className=""panel-title""&gt;Whats New!&lt;/h3&gt;
                &lt;/div&gt;
                &lt;div className=""panel-body panel_whats_new""&gt;{this.renderContent('panel_whats_new')}&lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;

        &lt;div className=""row-fluid text-center top-buffer""&gt;
            &lt;div className=""panel panel-default disclaimer""&gt;
                &lt;div className=""panel-heading""&gt;
                    &lt;h3 className=""panel-title""&gt;DISCLAIMER&lt;/h3&gt;
                &lt;/div&gt;
                &lt;div className=""panel-body panel_disclaimer""&gt;{this.renderContent('panel_disclaimer')}&lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;

        &lt;div className=""modal fade bs-example-modal-lg"" id=""modalIntro"" tabIndex=""-1"" role=""dialog"" aria-labelledby=""myLargeModalLabel""&gt;
          &lt;div className=""modal-dialog modal-lg"" role=""document""&gt;
            &lt;div className=""modal-content""&gt;
              &lt;div className=""modal-header""&gt;
                &lt;button type=""button"" className=""close"" data-dismiss=""modal"" aria-label=""Close""&gt;&lt;span aria-hidden=""true""&gt;&amp;times;&lt;/span&gt;&lt;/button&gt;
                &lt;h4 className=""modal-title"" id=""myModalLabel""&gt;Welcome to the Connectivity Compliance Portal (CCP)&lt;/h4&gt;
              &lt;/div&gt;
              &lt;div className=""modal-body""&gt;
                You are receiving this message as you are a guest and require elevated privileges to make best use of the service. In order to do this you'll need to:
                    &lt;ol start=""1""&gt;
                      &lt;li&gt;Go to &lt;a target=""_blank"" href=""https://iam.domain.com/identity"" target=""_blank"" &gt;WIAM (https://iam.domain.com/identity)&lt;/a&gt;&lt;/li&gt;
                      &lt;li&gt;Click on &lt;i&gt;""Request Access""&lt;/i&gt; at the top&lt;/li&gt;
                      &lt;li&gt;Search for &lt;i&gt;""CCP""&lt;/i&gt;&lt;/li&gt;
                      &lt;li&gt;Select the relevant group and add it to the cart&lt;/li&gt;
                      &lt;li&gt;Check Out!&lt;/li&gt;
                    &lt;/ol&gt;

                &lt;p&gt;You can confirm if you have been added to the group by going to &lt;Link to={`/ldapuser`}&gt;https://ccp.domain.com/ldapuser&lt;/Link&gt;. Once you see you have been added to the group log out of CCP and log back in and you should have the correct permissions. The process can take a few hours to a couple of days depending on how long the approvers take.&lt;/p&gt;
              &lt;/div&gt;
              &lt;div className=""modal-footer""&gt;
                &lt;button type=""button"" className=""btn btn-default"" data-dismiss=""modal""&gt;Close&lt;/button&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;

    &lt;/div&gt;
          );
    }
}

function mapStateToProps(state) {
    return { content: state.content }
}

//Anything returned from this function will end up as props
//on this container
function mapDispatchToProps(dispatch){
 // Whenever getUser is called, the result should be passed
 // to all our reducers
 return bindActionCreators({ fetchContents, fetchActiveUser }, dispatch);
}

export default connect(mapStateToProps, mapDispatchToProps)(HomeContent);
</code></pre>
","1164789","","1164789","","2018-01-30 12:18:55","2018-01-31 22:27:16","react-redux how to access data globally from other containers that are not children","<reactjs><redux><react-redux>","1","0","","",""
"39832596","1","39833599","","2016-10-03 13:16:11","","1","116","<p>I'm trying to render a multi-select component within a nav bar but am coming back with these errors:</p>

<blockquote>
  <p>warning.js:36Warning: React.createElement: type should not be null,
  undefined, boolean, or number. It should be a string (for DOM
  elements) or a ReactClass (for composite components). Check the render
  method of <code>EventsFilters</code>.</p>
  
  <p>invariant.js:38 Uncaught Invariant Violation: Element type is invalid:
  expected a string (for built-in components) or a class/function (for
  composite components) but got: undefined. Check the render method of
  <code>EventsFilters</code>.</p>
</blockquote>

<p>Pointers in the right direction would be greatly appreciated. </p>

<p>Filter Code: </p>

<pre><code>import React from 'react';

//Event Types Filter
class EventsFilters extends React.Component {
  //Define react properties
  static propTypes: {
    setLocalStorage: 'jjj',
    selectedFilters: 'sds',
  }

render() {

var SelectList = React.SelectList;
var items = [
  {id: 0, name: 'Workflow Event'},
  {id: 1, name: 'Dev Event'},
];

//Event Workflow Select List
var EventsWorkflowFilters = (
&lt;div&gt;
  &lt;SelectList
          textField='name'
          valueField='id'
          className='selectlist-unstyled list-inline filter-list'
          defaultValue={[0]}
          data={items}
          multiple=""true"" /&gt;
&lt;/div&gt;
)



return(EventsWorkflowFilters)

}}

export default EventsFilters;
</code></pre>
","4092052","","","","","2016-10-03 14:06:56","React createElement type should not be null/ Uncaught Invariant Violation","<reactjs>","1","1","","",""
"41427413","1","","","2017-01-02 13:04:31","","1","551","<p>I am using server side rendering in react</p>

<p>As suggest in this SSR boilerplate,</p>

<pre><code>https://github.com/erikras/react-redux-universal-hot-example
</code></pre>

<p>webpack.config.js : Here is what it looks the loaders part looks like-</p>

<pre class=""lang-json prettyprint-override""><code> module: {
    loaders: [
      { test: /\.jsx?$/, exclude: /node_modules/, loaders: ['babel?' + JSON.stringify(babelLoaderQuery), 'eslint-loader']},
      { test: /\.json$/, loader: 'json-loader' },
      { test: /\.pcss$/, loader: 'style-loader!css-loader!postcss-loader' },
      { test: /\.css$/, loader: 'style-loader!css-loader'},
      { test: /\.less$/, loader: 'style!css?importLoaders=2&amp;sourceMap!autoprefixer?browsers=last 2 version!less?outputStyle=expanded&amp;sourceMap' },
      { test: /\.scss$/, loader:
        'style!css?importLoaders=2&amp;sourceMap!autoprefixer?browsers=last 2 version!sass?outputStyle=expanded&amp;sourceMap' },
      { test: /\.woff(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=application/font-woff"" },
      { test: /\.woff2(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=application/font-woff"" },
      { test: /\.ttf(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=application/octet-stream"" },
      { test: /\.eot(\?v=\d+\.\d+\.\d+)?$/, loader: ""file"" },
      { test: /\.svg(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=image/svg+xml"" },
      { test: webpackIsomorphicToolsPlugin.regular_expression('images'), loader: 'url-loader?limit=10240' }
    ]
  },
</code></pre>

<p>webpack-isomorphic-tools.js style modules part:</p>

<pre class=""lang-json prettyprint-override""><code>style_modules: {
      extensions: ['less','scss','css'],
      filter: function(module, regex, options, log) {
        if (options.development) {
          // in development mode there's webpack ""style-loader"",
          // so the module.name is not equal to module.name
          return WebpackIsomorphicToolsPlugin.style_loader_filter(module, regex, options, log);
        } else {
          // in production mode there's no webpack ""style-loader"",
          // so the module.name will be equal to the asset path
          return regex.test(module.name);
        }
      },
</code></pre>

<p>In my component the render method looks like this: </p>

<pre><code>require('../../../styles/header_new.css');
  require('../../../styles/common_style.scss');
</code></pre>

<pre class=""lang-js prettyprint-override""><code>render() {


  return (
            &lt;div className=""some_class_from_commonstyleSCSS""&gt;
           &lt;/div&gt;
)
</code></pre>

<p>I seem to have followed all the steps but no CSS is applied at all.</p>

<p>Could I have some pointers on this?</p>

<p><strong>Edit: quick snapshot of scss file:</strong></p>

<pre class=""lang-css prettyprint-override""><code>@import ""partial/header"";
@import ""partial/variables"";
@import ""partial/mixins"";
@import ""partial/login_signup"";
@import ""partial/footer"";
@import ""partial/sbl_popups"";
@import ""partial/track_order"";
//@import ""~font-awesome/scss/font-awesome"";

body, html{
  font-size: $primary_font;
  font-family: $font_regular;
  height:100%;
  margin: 0px;
  padding: 0px;
  color: $primary_color;
  min-height:100%;
}

.mg_img1, .mg_img2, .mg_img3, .mg_img4, .mg_img5, .mobile_maga_img, .phone_sprite, .email_sprite, .add_sprite, .visaimg, .payment_icon, .swiper-button-magazine-next, .swiper-button-magazine-prev, .android_image, .ios_image {
  max-width: 100%;
  background-size: 100%;
  background-image: url(../images/commonsprite.png);
  //background-image: url(http://localhost:3000/src/images/commonsprite.png);

}
</code></pre>

<p>header_new.css</p>

<pre class=""lang-css prettyprint-override""><code>.hide-true  {
  display: none;
}

.login-true{
  display: none;
}

.login-false{
  display: block;
}

.disabled {
  opacity: 0.65;
  cursor: not-allowed;
}
</code></pre>

<p>These worked just fine with client side rendering and ES6 import statements.</p>

<p>This is the function I use to render the HTML:</p>

<pre class=""lang-js prettyprint-override""><code>function renderFullPage(html, preloadedState, assets = webpackIsomorphicTools.assets()) {

  console.log('ASSETSSSSSSSSSSSSSSS STYLESSS', assets.styles);
  console.log(assets)

  //console.log(""ASSETTTTTTTTSSSSSSSSSSSSSSSSSSSSSSSSSSS ARE AS FOLLOWSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS"", assets);
  //console.log(""html to be inserted"", html);
  //console.log(""preloaded state in render full page"", preloadedState);
  return `
    &lt;!doctype html&gt;
    &lt;html&gt;
       &lt;head&gt;
     &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no""&gt;
    &lt;link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css""&gt;
    &lt;link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/Swiper/3.3.1/css/swiper.min.css""&gt;
    &lt;link rel=""stylesheet"" type=""text/css"" href=""https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css"" /&gt;
    &lt;link rel=""stylesheet"" type=""text/css"" href=""https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css"" /&gt;

    ${Object.keys(assets.styles).map((style, i) =&gt;
    &lt;link href={assets.styles[style]} key={i}
          rel=""stylesheet"" type=""text/css""/&gt;)
      }


     &lt;/head&gt;
      &lt;body&gt;
        &lt;div id=""app""&gt;${html}&lt;/div&gt;
        &lt;script&gt;
          window.__PRELOADED_STATE__ = ${JSON.stringify(preloadedState)}
        &lt;/script&gt;
         &lt;noscript&gt;
              &lt;iframe src=""//www.googletagmanager.com/ns.html?id=GTM-KMXH6S""
                      height=""0"" width=""0"" style=""display:none;visibility:hidden""&gt;&lt;/iframe&gt;
         &lt;/noscript&gt;
          &lt;script&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
            new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
            j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=false;j.src=
            '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
          })(window,document,'script','dataLayer','GTM-KMXH6S');
          &lt;/script&gt;
          &lt;div className=""nanorep_loadingData"" id=""nanoRepProxyContainer"" aria-live=""polite"" style={{position:'absolute', top: '-500px', left: 0}} /&gt;

      &lt;/body&gt;
    &lt;/html&gt;
    `

  {/*&lt;script src=""/static/dist/bundle.js""&gt;&lt;/script&gt;*/}

}
</code></pre>
","2699001","","4585153","","2017-01-03 12:58:00","2017-01-03 12:58:00","using require to load CSS with SSR in react JS","<webpack>","0","15","","",""
"32730518","1","","","2015-09-23 03:34:25","","0","635","<p>Trying to implement react-router 1.0.0-rc1 in my project and i am getting following errors:</p>

<p>1) Warning: React.createElement: type should not be null or undefined. It should be a string (for DOM elements) or a ReactClass (for composite components).
2) Warning: Only functions or strings can be mounted as React components.
3) Uncaught TypeError: Cannot read property 'toUpperCase' of undefined</p>

<p>routes.js file:</p>

<pre><code>var React = require('react');
var ReactRouter = require('react-router');
var Router = ReactRouter.Router;
var Route = ReactRouter.Route;

var Home = require('./components/home.js');
var Jobs = require('./components/jobs.js');
var JobDetail = require('./components/jobDetail');
var App = require('./components/app.js');
var About = require('./components/about.js');
var NotFoundPage = require('./components/notfoundpage.js');

var routes = (&lt;Router&gt;
        &lt;Route path=""/"" component={App}&gt;
            &lt;Route path=""jobs"" component={Jobs}&gt;
                &lt;Route path=""jobs-detail"" component={JobDetail} /&gt;
            &lt;/Route&gt;
            &lt;Route path=""*"" component={NotFoundPage} /&gt;
        &lt;/Route&gt;
    &lt;/Router&gt;);

module.exports = routes; 
</code></pre>

<p>app.js file:</p>

<pre><code>var React = require('react');
var ReactRouter = require('react-router');
var Router = ReactRouter.Router;
var routes = require('./routes');

React.render(&lt;Router&gt;{routes}&lt;/Router&gt;, document.body);
</code></pre>
","2102324","","121946","","2015-09-23 06:14:43","2015-09-25 09:52:23","Basic implementaton of react router 1.0.0-rc1 shows error","<javascript><reactjs><reactjs-flux><react-router>","2","0","","",""
"39370431","1","","","2016-09-07 12:50:25","","2","299","<p>I am trying to parse some JSON from an Ajax call to display it a table using react datatable component. The problem which I am facing is that when I try to put the data in a state variable using set state method, I am not able to access the required data. This is what the JSON looks like:</p>

<pre><code>{
  ""Search"": [
    {
      ""Title"": ""Star Wars: Episode IV - A New Hope"",
      ""Year"": ""1977"",
      ""imdbID"": ""tt0076759"",
      ""Type"": ""movie"",
      ""Poster"": ""http://ia.media-imdb.com/images/M/MV5BOTIyMDY2NGQtOGJjNi00OTk4LWFhMDgtYmE3M2NiYzM0YTVmXkEyXkFqcGdeQXVyNTU1NTcwOTk@._V1_SX300.jpg""
    },
    {
      ""Title"": ""Star Wars: Episode V - The Empire Strikes Back"",
      ""Year"": ""1980"",
      ""imdbID"": ""tt0080684"",
      ""Type"": ""movie"",
      ""Poster"": ""http://ia.media-imdb.com/images/M/MV5BMjE2MzQwMTgxN15BMl5BanBnXkFtZTcwMDQzNjk2OQ@@._V1_SX300.jpg""
    },
    {
      ""Title"": ""Star Wars: Episode VI - Return of the Jedi"",
      ""Year"": ""1983"",
      ""imdbID"": ""tt0086190"",
      ""Type"": ""movie"",
      ""Poster"": ""http://ia.media-imdb.com/images/M/MV5BMTQ0MzI1NjYwOF5BMl5BanBnXkFtZTgwODU3NDU2MTE@._V1._CR93,97,1209,1861_SX89_AL_.jpg_V1_SX300.jpg""
    },
    {
      ""Title"": ""Star Wars: The Force Awakens"",
      ""Year"": ""2015"",
      ""imdbID"": ""tt2488496"",
      ""Type"": ""movie"",
      ""Poster"": ""http://ia.media-imdb.com/images/M/MV5BOTAzODEzNDAzMl5BMl5BanBnXkFtZTgwMDU1MTgzNzE@._V1_SX300.jpg""
    },
    {
      ""Title"": ""Star Wars: Episode I - The Phantom Menace"",
      ""Year"": ""1999"",
      ""imdbID"": ""tt0120915"",
      ""Type"": ""movie"",
      ""Poster"": ""http://ia.media-imdb.com/images/M/MV5BMTQ4NjEwNDA2Nl5BMl5BanBnXkFtZTcwNDUyNDQzNw@@._V1_SX300.jpg""
    },
    {
      ""Title"": ""Star Wars: Episode III - Revenge of the Sith"",
      ""Year"": ""2005"",
      ""imdbID"": ""tt0121766"",
      ""Type"": ""movie"",
      ""Poster"": ""http://ia.media-imdb.com/images/M/MV5BNTc4MTc3NTQ5OF5BMl5BanBnXkFtZTcwOTg0NjI4NA@@._V1_SX300.jpg""
    },
    {
      ""Title"": ""Star Trek"",
      ""Year"": ""2009"",
      ""imdbID"": ""tt0796366"",
      ""Type"": ""movie"",
      ""Poster"": ""http://ia.media-imdb.com/images/M/MV5BMjE5NDQ5OTE4Ml5BMl5BanBnXkFtZTcwOTE3NDIzMw@@._V1_SX300.jpg""
    },
    {
      ""Title"": ""Star Wars: Episode II - Attack of the Clones"",
      ""Year"": ""2002"",
      ""imdbID"": ""tt0121765"",
      ""Type"": ""movie"",
      ""Poster"": ""http://ia.media-imdb.com/images/M/MV5BMTY5MjI5NTIwNl5BMl5BanBnXkFtZTYwMTM1Njg2._V1_SX300.jpg""
    },
    {
      ""Title"": ""Star Trek Into Darkness"",
      ""Year"": ""2013"",
      ""imdbID"": ""tt1408101"",
      ""Type"": ""movie"",
      ""Poster"": ""http://ia.media-imdb.com/images/M/MV5BMTk2NzczOTgxNF5BMl5BanBnXkFtZTcwODQ5ODczOQ@@._V1_SX300.jpg""
    },
    {
      ""Title"": ""Star Trek: First Contact"",
      ""Year"": ""1996"",
      ""imdbID"": ""tt0117731"",
      ""Type"": ""movie"",
      ""Poster"": ""http://ia.media-imdb.com/images/M/MV5BMTg4OTYwODY4MF5BMl5BanBnXkFtZTgwNTg2NjIyMDE@._V1_SX300.jpg""
    }
  ],
  ""totalResults"": ""2846"",
  ""Response"": ""True""
}
</code></pre>

<p>""data.Search"" should gives me an array of objects. This is not being sent to the data table component. Instead, if I try to somehow display ""data.totalResults"" it works because it throws single value. Or if the same array of objects is sent thru a local variable, it works. Please help me as I am new to React and this really is taking a lot of time! Any help appreciated in advance!</p>

<pre><code>&lt;body&gt;
  &lt;div id=""container""&gt;&lt;/div&gt;
  &lt;script type=""text/babel""&gt;

var tableColumns = [
   { 'title': 'Title', 'prop': 'Title' },
   { 'title': 'Year', 'prop': 'Year' }
 ];

var destination = document.querySelector(""#container"");
var Buildrules = React.createClass({

  getInitialState: function() {
        return {data: {}};
      },

  loadData: function(){
    $.ajax({
      url: 'http://www.omdbapi.com/?s=star&amp;r=json&amp;plot=short',
      success: function(data){
        console.log(data);
        this.setState({data: data});
        console.log(this.state.data.Search);
      }.bind(this)
    })

  },

componentWillMount: function(){
  this.loadData();

},
componentDidMount:function(){

},
render:function(){

  return (
    React.createElement(ReactDataComponents.DataTable, {
      keys: 'id',
      columns: this.props.col,
      initialData: this.state.data.Search, //Here, ""data.Search"" should give an array of objects but i am facing issue. If the same data is fed using a local variable, it works!
      initialPageLength: 5,
      initialSortBy: { prop: 'Title', order: 'descending'}
    })

        );
  }
});

ReactDOM.render(
  &lt;div id=""blah""&gt;
    &lt;Buildrules col = {tableColumns} /&gt;
  &lt;/div&gt;,
  destination
);


&lt;/script&gt;


&lt;/body&gt;
</code></pre>
","5757717","","15778","","2016-09-07 13:05:33","2016-09-08 09:39:27","Unable to render JSON data in react component","<javascript><json><ajax><reactjs><react-router>","1","0","","",""
"48659784","1","","","2018-02-07 09:09:18","","0","43","<p>How can I access and test input fields in react using jest and enzyme?</p>

<p>Container.js</p>

<pre><code>import { getAgent } from ""../../reducers/agents"";
class AgentForm extends Component {
      componentWillMount = () =&gt; {
          //code
          this.agent = getAgent(agents, match.params.id);
      }
      render = () =&gt; {
       const agent = this.agent;
       return (
              &lt;article className=""thirteen wide column""&gt;
              &lt;form className=""ui form"" onSubmit={this.submit}&gt;
              &lt;div className=""field""&gt;
          &lt;label htmlFor=""newFirstName""&gt;First Name&lt;/label&gt;
          &lt;input
            type=""text""
            tabIndex=""10""
            name=""newFirstName""
            id=""newFirstName""
            placeholder=""First Name""
            autoComplete=""off""
            autoFocus={true}
            ref={input =&gt; (this.firstNameField = input)}
            defaultValue={agent.firstName}
          /&gt;
        &lt;/div&gt;
        &lt;/form&gt;
        &lt;/article&gt;
       )
      }
}
</code></pre>

<p>I want to test the values set in the input field properly.</p>

<p>test.js</p>

<pre><code> it(""should set the form values"", () =&gt; {
     const form = document.createElement(""form""),
     store = configureStore(),
     agent = {
              firstName: ""agent1"",
              lastName: ""abc"",
              email: ""agent1@email.com"",
              active: true,
              admin: true
             },
      name = ""newAgent"";

      const wrapper = shallow(
            &lt;provider store={store}&gt;
            &lt;AgentForm&gt;
            &lt;/AgentForm&gt;
            &lt;/provider&gt;
      );
     expect(wrapper.find("".ui form"").length).toBe(1);
     });
</code></pre>

<p>But my test fail with following message:</p>

<pre><code>expect(received).toBe(expected)

Expected value to be (using ===):
  1
Received:
  0
</code></pre>

<p>And also I need to test the ""defaultValue"" field of input is set with ""agent1"" (ie, from my const agent = { firstName: ""agent1"" }).  How to pass this test? How can I solve this issue?</p>
","5912433","","5912433","","2018-02-07 10:04:54","2018-02-07 10:04:54","How to test form values in react using enzyme?","<reactjs><unit-testing><enzyme>","1","0","","",""
"40234008","1","40234421","","2016-10-25 07:35:50","","0","804","<p>so i have that big project and everything is on pure javascript like Class.create...prototype and functions that render every component on that page and in render with react.I mean when i type function.createElement(""div"") somehow it create react div.. and so on and everything is on PURE javascript .. so my question is how can i create file with normal react components and and call that react component from that js file? Thank you  </p>
","6613368","","","","","2016-10-25 07:58:16","Call react component from javascript","<javascript><reactjs>","1","0","1","",""
"40910593","1","","","2016-12-01 12:23:07","","1","484","<p>I have authenticated my user, I have got a uid. But when I try and write to the database using the suggested code from Firebase, </p>

<pre><code>var isNewUser = true;

var ref = new Firebase(""https://&lt;YOUR-FIREBASE-APP&gt;.firebaseio.com"");
ref.onAuth(function(authData) {
  if (authData &amp;&amp; isNewUser) {
    // save the user's profile into the database so we can list users,
    // use them in Security and Firebase Rules, and show profiles
    ref.child(""users"").child(authData.uid).set({
      provider: authData.provider,
      name: getName(authData)
    });
  }
});

// find a suitable name based on the meta info given by each provider
function getName(authData) {
  switch(authData.provider) {
     case 'password':
       return authData.password.email.replace(/@.*/, '');
     case 'twitter':
       return authData.twitter.displayName;
     case 'facebook':
       return authData.facebook.displayName;
  }
}
</code></pre>

<p>I am returning an error that <code>onAuth</code> is not a function.</p>

<p>I thought it might be an issue with passing Firebase through the props so logged out a couple of paths to see if I could find the function <code>onAuth</code> but could not. Any suggestions? As i'm just testing the relevant code can be found in account.js with n the <code>componentWillMount</code> function. </p>

<p>Login. js</p>

<pre><code>'use strict';
import {
  AppRegistry,
  Text,
  TextInput,
  View,
  TouchableHighlight,
  ToolbarAndroid,
  ActivityIndicator
} from 'react-native';
import React, {Component} from 'react';
import Signup from './Signup';
import Account from './Account';
import styles from '../styles/baseStyles.js';

export default class Login extends Component {

  constructor(props){
    super(props);
    // We have the same props as in our signup.js file and they serve the same purposes.
    this.state = {
      loading: false,
      email: '',
      password: ''
    }
  }

  render() {
    // The content of the screen should be inputs for a username, password and submit button.
    // If we are loading then we display an ActivityIndicator.
    const content = this.state.loading ? &lt;ActivityIndicator size=""large""/&gt; :
      &lt;View&gt;
        &lt;TextInput
          style={styles.textInput}
          onChangeText={(text) =&gt; this.setState({email: text})}
          value={this.state.email}
          placeholder={""Email Address""} /&gt;
        &lt;TextInput
          style={styles.textInput}
          onChangeText={(text) =&gt; this.setState({password: text})}
          value={this.state.password}
          secureTextEntry={true}
          placeholder={""Password""} /&gt;
        &lt;TouchableHighlight onPress={this.login.bind(this)} style={styles.primaryButton}&gt;
          &lt;Text style={styles.primaryButtonText}&gt;Login&lt;/Text&gt;
        &lt;/TouchableHighlight&gt;
        &lt;TouchableHighlight onPress={this.goToSignup.bind(this)} style={styles.transparentButton}&gt;
          &lt;Text style={styles.transparentButtonText}&gt;New here?&lt;/Text&gt;
        &lt;/TouchableHighlight&gt;
      &lt;/View&gt;;

    // A simple UI with a toolbar, and content below it.
    return (
        &lt;View style={styles.container}&gt;
        &lt;View style={styles.body}&gt;
          {content}
        &lt;/View&gt;
      &lt;/View&gt;
        );
  }

  login(){
    this.setState({
      loading: true
    });
    // Log in and display an alert to tell the user what happened.
    this.props.firebaseApp.auth().signInWithEmailAndPassword(this.state.email, this.state.password
    ).then((userData) =&gt;
      {
        this.setState({
            loading: false,
          username:""mone""
          });
        this.props.navigator.push({
          component: Account
        });
      }
    ).catch((error) =&gt;
        {
          this.setState({
            loading: false
          });
        alert('Login Failed. Please try again' + error.message);
    });
  }

  // Go to the signup page
  goToSignup(){
    this.props.navigator.push({
      component: Signup
    });
  }
}

AppRegistry.registerComponent('Login', () =&gt; Login);
</code></pre>

<p>main.js</p>

<pre><code>import React, { Component } from 'react';
'use strict';
import {
  AppRegistry,
  Text,
  StyleSheet,
  ActivityIndicator,
  View,
  Navigator,
} from 'react-native';

import Login from '../login/pages/Login';
import Account from '../login/pages/Account';

import * as firebase from 'firebase';

const firebaseConfig ={
    apiKey: ""AIzaSyAaJuCW0nsMLqi-ke6K_bTDhBujilgWneQ"",
    authDomain: ""test-app-657c0.firebaseapp.com"",
    databaseURL: ""https://test-app-657c0.firebaseio.com"",
    storageBucket: ""test-app-657c0.appspot.com"",
    messagingSenderId: ""215519929651""
  };


const firebaseApp = firebase.initializeApp(firebaseConfig);


import styles from '../login/styles/baseStyles.js';

class Main extends Component {
  constructor(props){
    super(props);
    this.state = {
      // the page is the screen we want to show the user, we will determine that
      // based on what user the firebase apI returns to us.
      page: null
    };
  }

  componentWillMount(){
    // We must asynchronously get the auth state, if we use currentUser here, it'll be null
    const unsubscribe = firebaseApp.auth().onAuthStateChanged((user) =&gt; {
      // If the user is logged in take them to the accounts screen
      if (user != null) {
        this.setState({page: Account});
        return;
      }
      // otherwise have them login
      this.setState({page: Login});
      // unsubscribe this observer
      unsubscribe();
    });


  }



  render() {
    if (this.state.page) {
      return (
        // Take the user to whatever page we set the state to.
        // We will use a transition where the new page will slide in from the right.
        &lt;Navigator
          initialRoute={{component: this.state.page}}
          configureScene={() =&gt; {
            return Navigator.SceneConfigs.FloatFromRight;
          }}
          renderScene={(route, navigator) =&gt; {
            if(route.component){
              // Pass the navigator the the page so it can navigate as well.
              // Pass firebaseApp so it can make calls to firebase.
              return React.createElement(route.component, { navigator, firebaseApp});
            }
        }} /&gt;
      );
    } else {
      return (
        // Our default loading view while waiting to hear back from firebase
        &lt;View style={styles.container}&gt;
          &lt;View style={styles.body}&gt;
            &lt;ActivityIndicator size=""large"" /&gt;
          &lt;/View&gt;
        &lt;/View&gt;
      );
    }
  }
}

module.exports = Main;
</code></pre>

<p>account</p>

<pre><code>'use strict';
import {
  AppRegistry,
  StyleSheet,
  Text,
  View,
  Image,
  TouchableHighlight,
  ToolbarAndroid
} from 'react-native';
import React, {Component} from 'react';
import Login from './Login';
import styles from '../styles/baseStyles.js';

// Styles specific to the account page
const accountStyles = StyleSheet.create({
  email_container: {
    padding: 20
  },
  email_text: {
    fontSize: 18
  }
});

export default class Account extends Component {

  constructor(props) {
    super(props);
    this.state = {
      loading: true,
    }
  }

  componentWillMount() {
    // get the current user from firebase
    const userData = this.props.firebaseApp.auth().currentUser;
    this.setState({
      user: userData,
      loading: false
    });

    console.log(userData);

    console.log(this.props.firebaseApp)

     console.log(this.props.firebaseApp.auth())

      var isNewUser = true;

      var ref = this.props.firebaseApp;
      ref.onAuth(function(authData) {
        if (authData &amp;&amp; isNewUser) {
          // save the user's profile into the database so we can list users,
          // use them in Security and Firebase Rules, and show profiles
          ref.child(""users"").child(authData.uid).set({
            provider: authData.provider,
            name: getName(authData)
          });
        }
      });
      // find a suitable name based on the meta info given by each provider
      function getName(authData) {
        switch(authData.provider) {
           case 'password':
             return authData.password.email.replace(/@.*/, '');
           case 'twitter':
             return authData.twitter.displayName;
           case 'facebook':
             return authData.facebook.displayName;
        }
      }



  }

  render() {
    // If we are loading then we display the indicator, if the account is null and we are not loading
    // Then we display nothing. If the account is not null then we display the account info.
    const content = this.state.loading ? &lt;ActivityIndicator size=""large""/&gt; :
       this.state.user &amp;&amp;
        &lt;View style={styles.body}&gt;
          &lt;View style={accountStyles.email_container}&gt;
            &lt;Text style={accountStyles.email_text}&gt;{this.state.user.email}&lt;/Text&gt;
          &lt;/View&gt;
          &lt;TouchableHighlight onPress={this.logout.bind(this)} style={styles.primaryButton}&gt;
            &lt;Text style={styles.primaryButtonText}&gt;Logout&lt;/Text&gt;
          &lt;/TouchableHighlight&gt;

          &lt;TouchableHighlight onPress={this.logout.bind(this)} style={styles.primaryButton}&gt;
            &lt;Text style={styles.primaryButtonText}&gt;Logout&lt;/Text&gt;
          &lt;/TouchableHighlight&gt;
        &lt;/View&gt;
      ;
    return (
      &lt;View style={styles.container}&gt;
        &lt;View style={styles.body}&gt;
          {content}
        &lt;/View&gt;
      &lt;/View&gt;
    );
  }

  logout() {
    // logout, once that is complete, return the user to the login screen.
    this.props.firebaseApp.auth().signOut().then(() =&gt; {
      this.props.navigator.push({
        component: Login
      });
    });
  }
}

AppRegistry.registerComponent('Account', () =&gt; Account);
</code></pre>
","7236092","","5637321","","2016-12-01 23:41:37","2016-12-05 12:53:18","Authenticating a user in firebase with react native Onauth not a function","<javascript><firebase><react-native><firebase-authentication>","1","0","","",""
"49365523","1","50485422","","2018-03-19 14:36:16","","0","43","<p>I am trying to create a simple 'renders without crashing' test for my React components that contains a ReactMapGL components, which itself contains a DeckGL component. </p>

<p>This is the test I have written:</p>

<pre><code>describe('MapGL test', () =&gt; {
  it('renders without crashing', () =&gt; {
    const wrapper = mount(
      &lt;MapGL
        gpsPath={mockGpsPath}
        pathColor={mockPathColor}
        pathWidth={mockPathWidth}
        bearing={mockBearing}
      /&gt;,
    )
  })
})
</code></pre>

<p>and I have also tried this:</p>

<pre><code>describe('MapGL test', () =&gt; {
  it('renders without crashing', () =&gt; {
    const div = document.createElement('div')
    ReactDOM.render(
      &lt;div&gt;
        &lt;MapGL
          gpsPath={mockGpsPath}
          pathColor={mockPathColor}
          pathWidth={mockPathWidth}
          bearing={mockBearing}
        /&gt;
      &lt;/div&gt;,
      div,
    )
  })
})
</code></pre>

<p>Both tests cause the following error:</p>

<pre><code>    console.log node_modules/deck.gl/dist/lib/init.js:44
  deck.gl 4.1.5 - set deck.log.priority=1 (or higher) to trace attribute updates
console.error node_modules/react-dom/cjs/react-dom.development.js:9747
  The above error occurred in the &lt;WebGLRenderer&gt; component:
      in WebGLRenderer (created by DeckGL)
      in DeckGL (at DeckGLOverlay.jsx:54)
      in DeckGLOverlay (at MapGL.jsx:68)
      in div (created by StaticMap)
      in div (created by StaticMap)
      in StaticMap (created by InteractiveMap)
      in div (created by InteractiveMap)
      in InteractiveMap (at MapGL.jsx:62)
      in MapGL (created by WrapperComponent)
      in WrapperComponent

  Consider adding an error boundary to your tree to customize error handling behavior.
  Visit react-error-boundaries to learn more about error boundaries.
</code></pre>

<p>● MapGL test › renders without crashing</p>

<pre><code>TypeError: Cannot read property 'state' of null

  at setParameters (node_modules/luma.gl/dist/webgl-utils/set-parameters.js:151:18)
  at setParameters (node_modules/luma.gl/dist/webgl/context-state.js:240:36)
  at DeckGL._onRendererInitialized (node_modules/deck.gl/dist/react/deckgl.js:192:31)
  at WebGLRenderer._initWebGL (node_modules/deck.gl/dist/react/webgl-renderer.js:150:18)
  at WebGLRenderer.componentDidMount (node_modules/deck.gl/dist/react/webgl-renderer.js:114:12)
  at commitLifeCycles (node_modules/react-dom/cjs/react-dom.development.js:8770:24)
  at commitAllLifeCycles (node_modules/react-dom/cjs/react-dom.development.js:9946:9)
  at HTMLUnknownElement.callCallback (node_modules/react-dom/cjs/react-dom.development.js:542:14)
  at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:219:27)
  at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:126:9)
  at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:87:17)
  at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/nodes/HTMLElement-impl.js:36:27)
  at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:61:35)
  at Object.invokeGuardedCallbackDev (node_modules/react-dom/cjs/react-dom.development.js:581:16)
  at invokeGuardedCallback (node_modules/react-dom/cjs/react-dom.development.js:438:27)
  at commitRoot (node_modules/react-dom/cjs/react-dom.development.js:10050:9)
  at performWorkOnRoot (node_modules/react-dom/cjs/react-dom.development.js:11017:42)
  at performWork (node_modules/react-dom/cjs/react-dom.development.js:10967:7)
  at requestWork (node_modules/react-dom/cjs/react-dom.development.js:10878:7)
  at scheduleWorkImpl (node_modules/react-dom/cjs/react-dom.development.js:10732:11)
  at scheduleWork (node_modules/react-dom/cjs/react-dom.development.js:10689:12)
  at scheduleTopLevelUpdate (node_modules/react-dom/cjs/react-dom.development.js:11193:5)
  at Object.updateContainer (node_modules/react-dom/cjs/react-dom.development.js:11231:7)
  at node_modules/react-dom/cjs/react-dom.development.js:15226:19
  at Object.unbatchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:11102:12)
  at renderSubtreeIntoContainer (node_modules/react-dom/cjs/react-dom.development.js:15225:17)
  at Object.render (node_modules/react-dom/cjs/react-dom.development.js:15290:12)
  at Object.render (node_modules/enzyme-adapter-react-16/build/ReactSixteenAdapter.js:218:50)
  at new ReactWrapper (node_modules/enzyme/build/ReactWrapper.js:98:16)
  at mount (node_modules/enzyme/build/mount.js:19:10)
  at Object.it (src/screens/map/components/MapGL.test.js:83:39)
      at new Promise (&lt;anonymous&gt;)
  at Promise.resolve.then.el (node_modules/p-map/index.js:46:16)
      at &lt;anonymous&gt;
</code></pre>

<p>Any help with this issue would be much appreciated</p>
","9462430","","","","","2018-05-23 10:04:16","Testing react-map-gl/deck.gl component with Jest/Enzyme causes 'TypeError: Cannot read property 'state' of null'","<reactjs><deck.gl><react-map-gl>","1","0","","",""
"49365768","1","","","2018-03-19 14:49:00","","0","67","<p>I have a index.php file with</p>

<pre><code>&lt;!--Bootstrap scripts--&gt;
&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.1/umd/popper.min.js""&gt;&lt;/script&gt;
&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0/js/bootstrap.min.js""&gt;&lt;/script&gt;

&lt;!--Other scripts--&gt;
&lt;script src=""https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js""&gt;&lt;/script&gt;
&lt;script src=""https://smartlock.google.com/client""&gt;&lt;/script&gt;
&lt;script defer src=""https://use.fontawesome.com/releases/v5.0.8/js/all.js"" integrity=""sha384-SlE991lGASHoBfWbelyBPLsUlwY1GwNDJo3jSJO04KZ33K2bwfV9YBauFfnzvynJ"" crossorigin=""anonymous""&gt;&lt;/script&gt;
&lt;script crossorigin type=""text/babel"" src=""https://unpkg.com/react@16/umd/react.production.min.js""&gt;&lt;/script&gt;
&lt;script crossorigin type=""text/babel"" src=""https://unpkg.com/react-dom@16/umd/react-dom.production.min.js""&gt;&lt;/script&gt;

&lt;script&gt;var requirejs = { waitSeconds: 0 };&lt;/script&gt;
&lt;script data-main=""js/main"" src=""require.js""&gt;&lt;/script&gt;
</code></pre>

<p>My require.js file reads</p>

<pre><code>/** vim: et:ts=4:sw=4:sts=4
 * @license RequireJS 2.3.5 Copyright jQuery Foundation and other contributors.
 * Released under MIT license, https://github.com/requirejs/requirejs/blob/master/LICENSE
 */
var requirejs,require,define;!function(global,setTimeout){function commentReplace(e,t){return t||""""}function isFunction(e){return""[object Function]""===ostring.call(e)}function isArray(e){return""[object Array]""===ostring.call(e)}function each(e,t){if(e){var i;for(i=0;i&lt;e.length&amp;&amp;(!e[i]||!t(e[i],i,e));i+=1);}}function eachReverse(e,t){if(e){var i;for(i=e.length-1;i&gt;-1&amp;&amp;(!e[i]||!t(e[i],i,e));i-=1);}}function hasProp(e,t){return hasOwn.call(e,t)}function getOwn(e,t){return hasProp(e,t)&amp;&amp;e[t]}function eachProp(e,t){var i;for(i in e)if(hasProp(e,i)&amp;&amp;t(e[i],i))break}function mixin(e,t,i,r){return t&amp;&amp;eachProp(t,function(t,n){!i&amp;&amp;hasProp(e,n)||(!r||""object""!=typeof t||!t||isArray(t)||isFunction(t)||t instanceof RegExp?e[n]=t:(e[n]||(e[n]={}),mixin(e[n],t,i,r)))}),e}function bind(e,t){return function(){return t.apply(e,arguments)}}function scripts(){return document.getElementsByTagName(""script"")}function defaultOnError(e){throw e}function getGlobal(e){if(!e)return e;var t=global;return each(e.split("".""),function(e){t=t[e]}),t}function makeError(e,t,i,r){var n=new Error(t+""\nhttp://requirejs.org/docs/errors.html#""+e);return n.requireType=e,n.requireModules=r,i&amp;&amp;(n.originalError=i),n}function newContext(e){function t(e){var t,i;for(t=0;t&lt;e.length;t++)if("".""===(i=e[t]))e.splice(t,1),t-=1;else if(""..""===i){if(0===t||1===t&amp;&amp;""..""===e[2]||""..""===e[t-1])continue;t&gt;0&amp;&amp;(e.splice(t-1,2),t-=2)}}function i(e,i,r){var n,o,a,s,u,c,d,p,f,l,h=i&amp;&amp;i.split(""/""),m=y.map,g=m&amp;&amp;m[""*""];if(e&amp;&amp;(c=(e=e.split(""/"")).length-1,y.nodeIdCompat&amp;&amp;jsSuffixRegExp.test(e[c])&amp;&amp;(e[c]=e[c].replace(jsSuffixRegExp,"""")),"".""===e[0].charAt(0)&amp;&amp;h&amp;&amp;(e=h.slice(0,h.length-1).concat(e)),t(e),e=e.join(""/"")),r&amp;&amp;m&amp;&amp;(h||g)){e:for(a=(o=e.split(""/"")).length;a&gt;0;a-=1){if(u=o.slice(0,a).join(""/""),h)for(s=h.length;s&gt;0;s-=1)if((n=getOwn(m,h.slice(0,s).join(""/"")))&amp;&amp;(n=getOwn(n,u))){d=n,p=a;break e}!f&amp;&amp;g&amp;&amp;getOwn(g,u)&amp;&amp;(f=getOwn(g,u),l=a)}!d&amp;&amp;f&amp;&amp;(d=f,p=l),d&amp;&amp;(o.splice(0,p,d),e=o.join(""/""))}return getOwn(y.pkgs,e)||e}function r(e){isBrowser&amp;&amp;each(scripts(),function(t){if(t.getAttribute(""data-requiremodule"")===e&amp;&amp;t.getAttribute(""data-requirecontext"")===q.contextName)return t.parentNode.removeChild(t),!0})}function n(e){var t=getOwn(y.paths,e);if(t&amp;&amp;isArray(t)&amp;&amp;t.length&gt;1)return t.shift(),q.require.undef(e),q.makeRequire(null,{skipMap:!0})([e]),!0}function o(e){var t,i=e?e.indexOf(""!""):-1;return i&gt;-1&amp;&amp;(t=e.substring(0,i),e=e.substring(i+1,e.length)),[t,e]}function a(e,t,r,n){var a,s,u,c,d=null,p=t?t.name:null,f=e,l=!0,h="""";return e||(l=!1,e=""_@r""+(T+=1)),c=o(e),d=c[0],e=c[1],d&amp;&amp;(d=i(d,p,n),s=getOwn(j,d)),e&amp;&amp;(d?h=r?e:s&amp;&amp;s.normalize?s.normalize(e,function(e){return i(e,p,n)}):-1===e.indexOf(""!"")?i(e,p,n):e:(d=(c=o(h=i(e,p,n)))[0],h=c[1],r=!0,a=q.nameToUrl(h))),u=!d||s||r?"""":""_unnormalized""+(A+=1),{prefix:d,name:h,parentMap:t,unnormalized:!!u,url:a,originalName:f,isDefine:l,id:(d?d+""!""+h:h)+u}}function s(e){var t=e.id,i=getOwn(S,t);return i||(i=S[t]=new q.Module(e)),i}function u(e,t,i){var r=e.id,n=getOwn(S,r);!hasProp(j,r)||n&amp;&amp;!n.defineEmitComplete?(n=s(e)).error&amp;&amp;""error""===t?i(n.error):n.on(t,i):""defined""===t&amp;&amp;i(j[r])}function c(e,t){var i=e.requireModules,r=!1;t?t(e):(each(i,function(t){var i=getOwn(S,t);i&amp;&amp;(i.error=e,i.events.error&amp;&amp;(r=!0,i.emit(""error"",e)))}),r||req.onError(e))}function d(){globalDefQueue.length&amp;&amp;(each(globalDefQueue,function(e){var t=e[0];""string""==typeof t&amp;&amp;(q.defQueueMap[t]=!0),O.push(e)}),globalDefQueue=[])}function p(e){delete S[e],delete k[e]}function f(e,t,i){var r=e.map.id;e.error?e.emit(""error"",e.error):(t[r]=!0,each(e.depMaps,function(r,n){var o=r.id,a=getOwn(S,o);!a||e.depMatched[n]||i[o]||(getOwn(t,o)?(e.defineDep(n,j[o]),e.check()):f(a,t,i))}),i[r]=!0)}function l(){var e,t,i=1e3*y.waitSeconds,o=i&amp;&amp;q.startTime+i&lt;(new Date).getTime(),a=[],s=[],u=!1,d=!0;if(!x){if(x=!0,eachProp(k,function(e){var i=e.map,c=i.id;if(e.enabled&amp;&amp;(i.isDefine||s.push(e),!e.error))if(!e.inited&amp;&amp;o)n(c)?(t=!0,u=!0):(a.push(c),r(c));else if(!e.inited&amp;&amp;e.fetched&amp;&amp;i.isDefine&amp;&amp;(u=!0,!i.prefix))return d=!1}),o&amp;&amp;a.length)return e=makeError(""timeout"",""Load timeout for modules: ""+a,null,a),e.contextName=q.contextName,c(e);d&amp;&amp;each(s,function(e){f(e,{},{})}),o&amp;&amp;!t||!u||!isBrowser&amp;&amp;!isWebWorker||w||(w=setTimeout(function(){w=0,l()},50)),x=!1}}function h(e){hasProp(j,e[0])||s(a(e[0],null,!0)).init(e[1],e[2])}function m(e,t,i,r){e.detachEvent&amp;&amp;!isOpera?r&amp;&amp;e.detachEvent(r,t):e.removeEventListener(i,t,!1)}function g(e){var t=e.currentTarget||e.srcElement;return m(t,q.onScriptLoad,""load"",""onreadystatechange""),m(t,q.onScriptError,""error""),{node:t,id:t&amp;&amp;t.getAttribute(""data-requiremodule"")}}function v(){var e;for(d();O.length;){if(null===(e=O.shift())[0])return c(makeError(""mismatch"",""Mismatched anonymous define() module: ""+e[e.length-1]));h(e)}q.defQueueMap={}}var x,b,q,E,w,y={waitSeconds:7,baseUrl:""./"",paths:{},bundles:{},pkgs:{},shim:{},config:{}},S={},k={},M={},O=[],j={},P={},R={},T=1,A=1;return E={require:function(e){return e.require?e.require:e.require=q.makeRequire(e.map)},exports:function(e){if(e.usingExports=!0,e.map.isDefine)return e.exports?j[e.map.id]=e.exports:e.exports=j[e.map.id]={}},module:function(e){return e.module?e.module:e.module={id:e.map.id,uri:e.map.url,config:function(){return getOwn(y.config,e.map.id)||{}},exports:e.exports||(e.exports={})}}},b=function(e){this.events=getOwn(M,e.id)||{},this.map=e,this.shim=getOwn(y.shim,e.id),this.depExports=[],this.depMaps=[],this.depMatched=[],this.pluginMaps={},this.depCount=0},b.prototype={init:function(e,t,i,r){r=r||{},this.inited||(this.factory=t,i?this.on(""error"",i):this.events.error&amp;&amp;(i=bind(this,function(e){this.emit(""error"",e)})),this.depMaps=e&amp;&amp;e.slice(0),this.errback=i,this.inited=!0,this.ignore=r.ignore,r.enabled||this.enabled?this.enable():this.check())},defineDep:function(e,t){this.depMatched[e]||(this.depMatched[e]=!0,this.depCount-=1,this.depExports[e]=t)},fetch:function(){if(!this.fetched){this.fetched=!0,q.startTime=(new Date).getTime();var e=this.map;if(!this.shim)return e.prefix?this.callPlugin():this.load();q.makeRequire(this.map,{enableBuildCallback:!0})(this.shim.deps||[],bind(this,function(){return e.prefix?this.callPlugin():this.load()}))}},load:function(){var e=this.map.url;P[e]||(P[e]=!0,q.load(this.map.id,e))},check:function(){if(this.enabled&amp;&amp;!this.enabling){var e,t,i=this.map.id,r=this.depExports,n=this.exports,o=this.factory;if(this.inited){if(this.error)this.emit(""error"",this.error);else if(!this.defining){if(this.defining=!0,this.depCount&lt;1&amp;&amp;!this.defined){if(isFunction(o)){if(this.events.error&amp;&amp;this.map.isDefine||req.onError!==defaultOnError)try{n=q.execCb(i,o,r,n)}catch(t){e=t}else n=q.execCb(i,o,r,n);if(this.map.isDefine&amp;&amp;void 0===n&amp;&amp;((t=this.module)?n=t.exports:this.usingExports&amp;&amp;(n=this.exports)),e)return e.requireMap=this.map,e.requireModules=this.map.isDefine?[this.map.id]:null,e.requireType=this.map.isDefine?""define"":""require"",c(this.error=e)}else n=o;if(this.exports=n,this.map.isDefine&amp;&amp;!this.ignore&amp;&amp;(j[i]=n,req.onResourceLoad)){var a=[];each(this.depMaps,function(e){a.push(e.normalizedMap||e)}),req.onResourceLoad(q,this.map,a)}p(i),this.defined=!0}this.defining=!1,this.defined&amp;&amp;!this.defineEmitted&amp;&amp;(this.defineEmitted=!0,this.emit(""defined"",this.exports),this.defineEmitComplete=!0)}}else hasProp(q.defQueueMap,i)||this.fetch()}},callPlugin:function(){var e=this.map,t=e.id,r=a(e.prefix);this.depMaps.push(r),u(r,""defined"",bind(this,function(r){var n,o,d,f=getOwn(R,this.map.id),l=this.map.name,h=this.map.parentMap?this.map.parentMap.name:null,m=q.makeRequire(e.parentMap,{enableBuildCallback:!0});return this.map.unnormalized?(r.normalize&amp;&amp;(l=r.normalize(l,function(e){return i(e,h,!0)})||""""),o=a(e.prefix+""!""+l,this.map.parentMap,!0),u(o,""defined"",bind(this,function(e){this.map.normalizedMap=o,this.init([],function(){return e},null,{enabled:!0,ignore:!0})})),void((d=getOwn(S,o.id))&amp;&amp;(this.depMaps.push(o),this.events.error&amp;&amp;d.on(""error"",bind(this,function(e){this.emit(""error"",e)})),d.enable()))):f?(this.map.url=q.nameToUrl(f),void this.load()):((n=bind(this,function(e){this.init([],function(){return e},null,{enabled:!0})})).error=bind(this,function(e){this.inited=!0,this.error=e,e.requireModules=[t],eachProp(S,function(e){0===e.map.id.indexOf(t+""_unnormalized"")&amp;&amp;p(e.map.id)}),c(e)}),n.fromText=bind(this,function(i,r){var o=e.name,u=a(o),d=useInteractive;r&amp;&amp;(i=r),d&amp;&amp;(useInteractive=!1),s(u),hasProp(y.config,t)&amp;&amp;(y.config[o]=y.config[t]);try{req.exec(i)}catch(e){return c(makeError(""fromtexteval"",""fromText eval for ""+t+"" failed: ""+e,e,[t]))}d&amp;&amp;(useInteractive=!0),this.depMaps.push(u),q.completeLoad(o),m([o],n)}),void r.load(e.name,m,n,y))})),q.enable(r,this),this.pluginMaps[r.id]=r},enable:function(){k[this.map.id]=this,this.enabled=!0,this.enabling=!0,each(this.depMaps,bind(this,function(e,t){var i,r,n;if(""string""==typeof e){if(e=a(e,this.map.isDefine?this.map:this.map.parentMap,!1,!this.skipMap),this.depMaps[t]=e,n=getOwn(E,e.id))return void(this.depExports[t]=n(this));this.depCount+=1,u(e,""defined"",bind(this,function(e){this.undefed||(this.defineDep(t,e),this.check())})),this.errback?u(e,""error"",bind(this,this.errback)):this.events.error&amp;&amp;u(e,""error"",bind(this,function(e){this.emit(""error"",e)}))}i=e.id,r=S[i],hasProp(E,i)||!r||r.enabled||q.enable(e,this)})),eachProp(this.pluginMaps,bind(this,function(e){var t=getOwn(S,e.id);t&amp;&amp;!t.enabled&amp;&amp;q.enable(e,this)})),this.enabling=!1,this.check()},on:function(e,t){var i=this.events[e];i||(i=this.events[e]=[]),i.push(t)},emit:function(e,t){each(this.events[e],function(e){e(t)}),""error""===e&amp;&amp;delete this.events[e]}},q={config:y,contextName:e,registry:S,defined:j,urlFetched:P,defQueue:O,defQueueMap:{},Module:b,makeModuleMap:a,nextTick:req.nextTick,onError:c,configure:function(e){if(e.baseUrl&amp;&amp;""/""!==e.baseUrl.charAt(e.baseUrl.length-1)&amp;&amp;(e.baseUrl+=""/""),""string""==typeof e.urlArgs){var t=e.urlArgs;e.urlArgs=function(e,i){return(-1===i.indexOf(""?"")?""?"":""&amp;"")+t}}var i=y.shim,r={paths:!0,bundles:!0,config:!0,map:!0};eachProp(e,function(e,t){r[t]?(y[t]||(y[t]={}),mixin(y[t],e,!0,!0)):y[t]=e}),e.bundles&amp;&amp;eachProp(e.bundles,function(e,t){each(e,function(e){e!==t&amp;&amp;(R[e]=t)})}),e.shim&amp;&amp;(eachProp(e.shim,function(e,t){isArray(e)&amp;&amp;(e={deps:e}),!e.exports&amp;&amp;!e.init||e.exportsFn||(e.exportsFn=q.makeShimExports(e)),i[t]=e}),y.shim=i),e.packages&amp;&amp;each(e.packages,function(e){var t;t=(e=""string""==typeof e?{name:e}:e).name,e.location&amp;&amp;(y.paths[t]=e.location),y.pkgs[t]=e.name+""/""+(e.main||""main"").replace(currDirRegExp,"""").replace(jsSuffixRegExp,"""")}),eachProp(S,function(e,t){e.inited||e.map.unnormalized||(e.map=a(t,null,!0))}),(e.deps||e.callback)&amp;&amp;q.require(e.deps||[],e.callback)},makeShimExports:function(e){return function(){var t;return e.init&amp;&amp;(t=e.init.apply(global,arguments)),t||e.exports&amp;&amp;getGlobal(e.exports)}},makeRequire:function(t,n){function o(i,r,u){var d,p,f;return n.enableBuildCallback&amp;&amp;r&amp;&amp;isFunction(r)&amp;&amp;(r.__requireJsBuild=!0),""string""==typeof i?isFunction(r)?c(makeError(""requireargs"",""Invalid require call""),u):t&amp;&amp;hasProp(E,i)?E[i](S[t.id]):req.get?req.get(q,i,t,o):(p=a(i,t,!1,!0),d=p.id,hasProp(j,d)?j[d]:c(makeError(""notloaded"",'Module name ""'+d+'"" has not been loaded yet for context: '+e+(t?"""":"". Use require([])"")))):(v(),q.nextTick(function(){v(),(f=s(a(null,t))).skipMap=n.skipMap,f.init(i,r,u,{enabled:!0}),l()}),o)}return n=n||{},mixin(o,{isBrowser:isBrowser,toUrl:function(e){var r,n=e.lastIndexOf("".""),o=e.split(""/"")[0],a="".""===o||""..""===o;return-1!==n&amp;&amp;(!a||n&gt;1)&amp;&amp;(r=e.substring(n,e.length),e=e.substring(0,n)),q.nameToUrl(i(e,t&amp;&amp;t.id,!0),r,!0)},defined:function(e){return hasProp(j,a(e,t,!1,!0).id)},specified:function(e){return e=a(e,t,!1,!0).id,hasProp(j,e)||hasProp(S,e)}}),t||(o.undef=function(e){d();var i=a(e,t,!0),n=getOwn(S,e);n.undefed=!0,r(e),delete j[e],delete P[i.url],delete M[e],eachReverse(O,function(t,i){t[0]===e&amp;&amp;O.splice(i,1)}),delete q.defQueueMap[e],n&amp;&amp;(n.events.defined&amp;&amp;(M[e]=n.events),p(e))}),o},enable:function(e){getOwn(S,e.id)&amp;&amp;s(e).enable()},completeLoad:function(e){var t,i,r,o=getOwn(y.shim,e)||{},a=o.exports;for(d();O.length;){if(null===(i=O.shift())[0]){if(i[0]=e,t)break;t=!0}else i[0]===e&amp;&amp;(t=!0);h(i)}if(q.defQueueMap={},r=getOwn(S,e),!t&amp;&amp;!hasProp(j,e)&amp;&amp;r&amp;&amp;!r.inited){if(!(!y.enforceDefine||a&amp;&amp;getGlobal(a)))return n(e)?void 0:c(makeError(""nodefine"",""No define call for ""+e,null,[e]));h([e,o.deps||[],o.exportsFn])}l()},nameToUrl:function(e,t,i){var r,n,o,a,s,u,c,d=getOwn(y.pkgs,e);if(d&amp;&amp;(e=d),c=getOwn(R,e))return q.nameToUrl(c,t,i);if(req.jsExtRegExp.test(e))s=e+(t||"""");else{for(r=y.paths,o=(n=e.split(""/"")).length;o&gt;0;o-=1)if(a=n.slice(0,o).join(""/""),u=getOwn(r,a)){isArray(u)&amp;&amp;(u=u[0]),n.splice(0,o,u);break}s=n.join(""/""),s=(""/""===(s+=t||(/^data\:|^blob\:|\?/.test(s)||i?"""":"".js"")).charAt(0)||s.match(/^[\w\+\.\-]+:/)?"""":y.baseUrl)+s}return y.urlArgs&amp;&amp;!/^blob\:/.test(s)?s+y.urlArgs(e,s):s},load:function(e,t){req.load(q,e,t)},execCb:function(e,t,i,r){return t.apply(r,i)},onScriptLoad:function(e){if(""load""===e.type||readyRegExp.test((e.currentTarget||e.srcElement).readyState)){interactiveScript=null;var t=g(e);q.completeLoad(t.id)}},onScriptError:function(e){var t=g(e);if(!n(t.id)){var i=[];return eachProp(S,function(e,r){0!==r.indexOf(""_@r"")&amp;&amp;each(e.depMaps,function(e){if(e.id===t.id)return i.push(r),!0})}),c(makeError(""scripterror"",'Script error for ""'+t.id+(i.length?'"", needed by: '+i.join("", ""):'""'),e,[t.id]))}}},q.require=q.makeRequire(),q}function getInteractiveScript(){return interactiveScript&amp;&amp;""interactive""===interactiveScript.readyState?interactiveScript:(eachReverse(scripts(),function(e){if(""interactive""===e.readyState)return interactiveScript=e}),interactiveScript)}var req,s,head,baseElement,dataMain,src,interactiveScript,currentlyAddingScript,mainScript,subPath,version=""2.3.5"",commentRegExp=/\/\*[\s\S]*?\*\/|([^:""'=]|^)\/\/.*$/gm,cjsRequireRegExp=/[^.]\s*require\s*\(\s*[""']([^'""\s]+)[""']\s*\)/g,jsSuffixRegExp=/\.js$/,currDirRegExp=/^\.\//,op=Object.prototype,ostring=op.toString,hasOwn=op.hasOwnProperty,isBrowser=!(""undefined""==typeof window||""undefined""==typeof navigator||!window.document),isWebWorker=!isBrowser&amp;&amp;""undefined""!=typeof importScripts,readyRegExp=isBrowser&amp;&amp;""PLAYSTATION 3""===navigator.platform?/^complete$/:/^(complete|loaded)$/,defContextName=""_"",isOpera=""undefined""!=typeof opera&amp;&amp;""[object Opera]""===opera.toString(),contexts={},cfg={},globalDefQueue=[],useInteractive=!1;if(void 0===define){if(void 0!==requirejs){if(isFunction(requirejs))return;cfg=requirejs,requirejs=void 0}void 0===require||isFunction(require)||(cfg=require,require=void 0),req=requirejs=function(e,t,i,r){var n,o,a=defContextName;return isArray(e)||""string""==typeof e||(o=e,isArray(t)?(e=t,t=i,i=r):e=[]),o&amp;&amp;o.context&amp;&amp;(a=o.context),(n=getOwn(contexts,a))||(n=contexts[a]=req.s.newContext(a)),o&amp;&amp;n.configure(o),n.require(e,t,i)},req.config=function(e){return req(e)},req.nextTick=void 0!==setTimeout?function(e){setTimeout(e,4)}:function(e){e()},require||(require=req),req.version=version,req.jsExtRegExp=/^\/|:|\?|\.js$/,req.isBrowser=isBrowser,s=req.s={contexts:contexts,newContext:newContext},req({}),each([""toUrl"",""undef"",""defined"",""specified""],function(e){req[e]=function(){var t=contexts[defContextName];return t.require[e].apply(t,arguments)}}),isBrowser&amp;&amp;(head=s.head=document.getElementsByTagName(""head"")[0],(baseElement=document.getElementsByTagName(""base"")[0])&amp;&amp;(head=s.head=baseElement.parentNode)),req.onError=defaultOnError,req.createNode=function(e,t,i){var r=e.xhtml?document.createElementNS(""http://www.w3.org/1999/xhtml"",""html:script""):document.createElement(""script"");return r.type=e.scriptType||""text/javascript"",r.charset=""utf-8"",r.async=!0,r},req.load=function(e,t,i){var r,n=e&amp;&amp;e.config||{};if(isBrowser)return(r=req.createNode(n,t,i)).setAttribute(""data-requirecontext"",e.contextName),r.setAttribute(""data-requiremodule"",t),!r.attachEvent||r.attachEvent.toString&amp;&amp;r.attachEvent.toString().indexOf(""[native code"")&lt;0||isOpera?(r.addEventListener(""load"",e.onScriptLoad,!1),r.addEventListener(""error"",e.onScriptError,!1)):(useInteractive=!0,r.attachEvent(""onreadystatechange"",e.onScriptLoad)),r.src=i,n.onNodeCreated&amp;&amp;n.onNodeCreated(r,n,t,i),currentlyAddingScript=r,baseElement?head.insertBefore(r,baseElement):head.appendChild(r),currentlyAddingScript=null,r;if(isWebWorker)try{setTimeout(function(){},0),importScripts(i),e.completeLoad(t)}catch(r){e.onError(makeError(""importscripts"",""importScripts failed for ""+t+"" at ""+i,r,[t]))}},isBrowser&amp;&amp;!cfg.skipDataMain&amp;&amp;eachReverse(scripts(),function(e){if(head||(head=e.parentNode),dataMain=e.getAttribute(""data-main""))return mainScript=dataMain,cfg.baseUrl||-1!==mainScript.indexOf(""!"")||(src=mainScript.split(""/""),mainScript=src.pop(),subPath=src.length?src.join(""/"")+""/"":""./"",cfg.baseUrl=subPath),mainScript=mainScript.replace(jsSuffixRegExp,""""),req.jsExtRegExp.test(mainScript)&amp;&amp;(mainScript=dataMain),cfg.deps=cfg.deps?cfg.deps.concat(mainScript):[mainScript],!0}),define=function(e,t,i){var r,n;""string""!=typeof e&amp;&amp;(i=t,t=e,e=null),isArray(t)||(i=t,t=null),!t&amp;&amp;isFunction(i)&amp;&amp;(t=[],i.length&amp;&amp;(i.toString().replace(commentRegExp,commentReplace).replace(cjsRequireRegExp,function(e,i){t.push(i)}),t=(1===i.length?[""require""]:[""require"",""exports"",""module""]).concat(t))),useInteractive&amp;&amp;(r=currentlyAddingScript||getInteractiveScript())&amp;&amp;(e||(e=r.getAttribute(""data-requiremodule"")),n=contexts[r.getAttribute(""data-requirecontext"")]),n?(n.defQueue.push([e,t,i]),n.defQueueMap[e]=!0):globalDefQueue.push([e,t,i])},define.amd={jQuery:!0},req.exec=function(text){return eval(text)},req(cfg)}}(this,""undefined""==typeof setTimeout?void 0:setTimeout);
</code></pre>

<p>Now I want to use React in main.js file</p>

<pre><code>define([]), function() {
ReactDOM.render(
                &lt;h1&gt;Hello, world!&lt;/h1&gt;,
                document.getElementById('table')
            );
});
</code></pre>

<p>But this returns an error</p>

<blockquote>
  <p>Uncaught SyntaxError: Unexpected token &lt;</p>
</blockquote>

<p>How to resolve it?</p>
","4257473","","","","","2018-03-19 14:57:22","Error while using react with requirejs","<javascript><php><reactjs><requirejs>","1","1","","",""
"33440604","1","33440735","","2015-10-30 16:24:33","","1","612","<p>I am actually updating <a href=""https://github.com/ezequiel/react-typeahead-component"" rel=""nofollow"">https://github.com/ezequiel/react-typeahead-component</a> this component to be compatible to react >= 0.14 but while changing the methods I just run into one error:</p>

<p>Exchange <code>this.getDOMnode</code> for the reason it is deprecated with <code>this.findDOMnode</code> it occurs an error: <code>Uncaught TypeError: this.findDOMNode is not a function</code></p>

<p>So I tried a lot about that React isn't binding <code>this</code> automatically in 0.14 to several functions. But it did not really helped me out.</p>

<pre class=""lang-js prettyprint-override""><code>module.exports = React.createClass({
  displayName: 'Aria Status',

  propTypes: process.env.NODE_ENV === 'production' ? {} : {
    message: React.PropTypes.string
  },

  componentDidMount: function() {
    var _this = this;

    _this.setTextContent(_this.props.message).bind(this);
  },

  componentDidUpdate: function() {
    var _this = this;

    _this.setTextContent(_this.props.message).bind(this);
  },

  render: function() {
    return (
      React.createElement(""span"", {
        role: ""status"",
        ""aria-live"": ""polite"",
        style: {
          left: '-9999px',
          position: 'absolute'
        }
      })
    );
  },

  setTextContent: function(textContent) {
    this.findDOMNode().textContent = textContent || '';
  }
});
</code></pre>

<p>Maybe someone can point me somewhere to go ahead!</p>
","3318813","","","","","2015-10-30 16:39:36","reactjs - this is not a function error on upgrade","<javascript><function><reactjs><deprecated><typeahead>","1","1","","",""
"40561958","1","","","2016-11-12 10:35:29","","2","222","<p>When I install react-icons and trying to import</p>

<p><code>import FaBeer from 'react-icons/fa/beer';</code> I get an error</p>

<pre><code>Module parse failed: /Users/firfi/work/react-redux-todo/node_modules/react-icons/fa/beer.js Unexpected token (8:12)
</code></pre>

<p>If I change import to <code>import FaBeer from 'react-icons/lib/fa/beer';</code> I get</p>

<pre><code>Module parse failed: /Users/firfi/work/react-redux-todo/node_modules/react-icon-base/index.js Unexpected token (3:50)
You may need an appropriate loader to handle this file type.
</code></pre>

<p>Reading the error message, I figured out I should change my webpack config. </p>

<p>So I changed exlude statement in</p>

<pre><code>{
  test: /\.js$/, // Transform all .js files required somewhere with Babel
  loader: 'babel',
  exclude: /node_modules/,
  query: options.babelQuery,
}
</code></pre>

<p>to <code>exclude: /node_modules\/(?!(react-icon-base|react-icons)\/).*/,</code></p>

<p>And now I can <code>import FaBeer from 'react-icons/fa/beer';</code></p>

<p>However, when I use it as  in my render method, it give me an error</p>

<p><code>warning.js:36Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of</code>FaBeer<code>.</code></p>

<p>So how do I get some beer?</p>
","2123547","","","","","2016-11-12 10:35:29","Using react-icons package with react-boilerplate","<reactjs><webpack><font-awesome><babeljs><react-boilerplate>","0","0","","",""
"32662744","1","","","2015-09-19 00:03:09","","0","116","<p>I've loaded the client-side library as the author suggests. ""If you just want to drop a <code>&lt;script&gt;</code> tag in your page and be done with it, you can use the UMD/global build hosted on cdnjs.""</p>

<p>ReactRouter is loaded onto the window object.</p>

<p>To render a Router, Route or Link I will need the ReactClass. But there I am stumped. I am using pure JavaScript so I want to do something like:</p>

<pre><code>var router = React.createElement(ReactRouter.Router, null);
React.render(router, document.getElementById('container'));
</code></pre>

<p>But I just get an error message: </p>

<pre><code>Uncaught TypeError: Cannot read property 'toUpperCase' of undefined
</code></pre>

<p>Does anyone have an example of getting react-router to work with the CDN hosted client side library?</p>

<p>I'm using:</p>

<p><code>13.0</code> of React and the JSX inline transpiler and <code>13.3</code> of React-Router. (I have the same error whether I do it in JSX or pure JavaScript) </p>
","","user911625","2926641","","2015-09-19 11:55:20","2015-09-19 11:55:20","Using react-router with the client-side library - I get errors","<javascript><reactjs><react-router>","1","0","","",""
"49781210","1","49781363","","2018-04-11 17:29:44","","1","49","<p>So I just started with react and I was going through one of the videos about ""Handling Dynamic content in react). </p>

<p>So our main goal is to display three boxes using map function when we click on a button. </p>

<p>We Initially created State Object like this </p>

<pre><code>state = {
    person: [
    {name: ""Rohit"", age: 24},
    {name: ""Hariom"", age: 23},
    {name: ""Vaibhav"", age: 58}
  ],
  someOtherState: ""Untouched state"",
  showPerson: false
}
</code></pre>

<p>And then we tried something like this for conditional and mapping </p>

<pre><code> render() {

    let person = null;

    if (this.state.showPerson) {
      person = (
        &lt;div&gt;
          {this.state.person.map(Person =&gt; {
            return &lt;Person
            name={Person.name}
            age={Person.age} /&gt;
          })}
          &lt;/div&gt;
     );
    }
</code></pre>

<p>Followed by this </p>

<pre><code>return (

  &lt;div className=""App""&gt;
        &lt;h1&gt; Hi I am react App&lt;/h1&gt;
        &lt;button onClick={this.togglerPersonHandler}&gt;Button&lt;/button&gt;
        {person}
    &lt;/div&gt;
      );
   }
}
</code></pre>

<p>Now, When I click on a button it throws following error (three times) </p>

<pre><code>index.js:2178 Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: object.

Check your code at App.js:54.
    in App (at index.js:7)
</code></pre>

<p>and </p>

<pre><code>index.js:2178 The above error occurred in the &lt;div&gt; component:
    in div (at App.js:52)
    in div (at App.js:63)
    in App (at index.js:7)

Consider adding an error boundary to your tree to customize error handling behavior.
</code></pre>

<p>What am I doing wrong here? (THe togglerPersonHandler simply changes the value of someOtherState). Do let me know my mistake and fix.</p>
","","user9504869","","user9504869","2018-04-11 17:44:37","2018-04-11 18:26:08","React: Warning: React.createElement: type is invalid","<javascript><reactjs>","2","1","","",""
"39846223","1","39864896","","2016-10-04 07:09:55","","1","729","<p>I am upgrading a legacy web2py (python) application to use react components. I am using webpack to transpile the jsx files to minified js bundle. I want to be able to use:</p>

<pre><code>ReactDOM.render(
  &lt;ComponentA arg1=""hello"" arg2=""world"" /&gt;,
  document.getElementById('react-container')
);
</code></pre>

<p>Where ComponentA is included in the bundle and the bundle is included on the web2py view. The issue is that I can't access ComponentA in the view. The following example will work:</p>

<pre><code>&lt;script&gt;
var ComponentA = React.createClass({
     render: function() {
      var p = React.createElement('p', null, 'Passed these props: ',this.props.arg1, ' and ', this.props.arg2);
      var div = React.createElement('div', { className: 'my-test' }, p);
      return div;
  }
});

var component = React.createElement(ComponentA, {arg1:""hello"", arg2:""world""})
ReactDOM.render(
  component,//I would rather use &lt;ComponentA arg1=""hello"" arg2=""world"" /&gt;,
  document.getElementById('react-sample')
);

&lt;/script&gt;
</code></pre>

<p>I looked at <a href=""https://github.com/webpack/docs/wiki/shimming-modules#exports-loader"" rel=""nofollow"">exports-loader</a> and <a href=""https://github.com/joeyguo/webpack-add-module-exports"" rel=""nofollow"">webpack-add-module-exports</a> but I have not yet gotten it to work. Any help is greatly appreciated.</p>
","3163075","","","","","2016-10-05 03:19:30","library of react components in webpack bundle export to use in on runtime rendering","<python><reactjs><ecmascript-6><webpack><web2py>","1","1","","",""
"49746773","1","","","2018-04-10 06:26:46","","0","12","<p>I've been doing a lot of reading and tutorials on js react with server-side applications. I'm practicing on a mockup app and I am seeing the following line of code which I dont know where the variable number <strong><code>var _printArea = __webpack_require__(215);</code></strong> came from.</p>

<p>This is the code full code, can anyone please kindly explain where the 215 is being gathered from? </p>

<p><strong>CODE</strong></p>

<pre><code>var _contentAreanew = __webpack_require__(215);

var _contentAreanew2 = _interopRequireDefault(_contentAreanew);

$(document).ready(function () {

    if (document.getElementById('content-area-new')) {
        (0, _reactDom.render)(_react2.default.createElement(
            _reactRedux.Provider,
            { store: _store2.default },
            _react2.default.createElement(_contentAreanew2.default, null)
        ), document.getElementById('content-area-new'));
    }
});

/// RENDER PART  
var contentAreanew = _react2.default.createClass({
    displayName: 'contentAreanew',


    render: function render() {

          return _react2.default.createElement(
            'div',
            { className: 'container' },
            _react2.default.createElement(
                'div',
                { className: 'row' },

                'content here'

            ),


        );
    }
});
</code></pre>

<p>THanks</p>
","7738813","","","","","2018-04-10 06:26:46","how to connect data to js react webpack","<reactjs><react-router>","0","0","","",""
"49784990","1","49804860","","2018-04-11 21:55:14","","0","87","<p>I have seen the very similar post:
<a href=""https://stackoverflow.com/questions/43771517/using-jest-to-test-a-link-from-react-router-v4"">Using Jest to test a Link from react-router v4</a>
but I'm having different errors, and all kinds of them when trying to use CRA and React Router.</p>

<p>If the test script is <code>""test"": ""react-scripts test --env=jsdom""</code>, I get this error preventing the tests from running:</p>

<pre><code>2017-06-28 14:14 node[6612] (FSEvents.framework) FSEventStreamStart: register_with_server: ERROR: f2d_register_rpc() =&gt; (null) (-22)
Error: Error watching file for changes: EMFILE
at exports._errnoException (util.js:1018:11)
at FSEvent.FSWatcher._handle.onchange (fs.js:1420:11)
</code></pre>

<p>One solution I've found but I haven't been able to get it to work is to install/reinstall a library called watchman. (<a href=""https://github.com/facebook/react-native/issues/10028"" rel=""nofollow noreferrer"">https://github.com/facebook/react-native/issues/10028</a>) but trying to install watchman is throwing out errors as well.</p>

<p>Another solution I found (<a href=""https://github.com/jest-community/vscode-jest/issues/125"" rel=""nofollow noreferrer"">https://github.com/jest-community/vscode-jest/issues/125</a>) was to change that test script to <code>""test"": ""jest""</code>, and then I get this error:</p>

<pre><code>src/App.test.js: Unexpected token (7:18)
         5 | it('renders without crashing', () =&gt; {
         6 |   const div = document.createElement('div');
      &gt;  7 |   ReactDOM.render(&lt;App /&gt;, div);
           |                   ^
         8 |   ReactDOM.unmountComponentAtNode(div);
         9 | });
        10 |

Test Suites: 1 failed, 1 total
Tests:       0 total
Snapshots:   0 total
Time:        1.646s
Ran all test suites.
npm ERR! Test failed.  See above for more details.
</code></pre>

<p>After going way back in my commit history to find where the test suite initially had problems, I found a different set of errors.
The first of the errors happens after installing react-router-dom and adding this one liner to App.js</p>

<pre><code>&lt;Link to=""/""&gt;Scratch&lt;/Link&gt;
</code></pre>

<p>I get this error:</p>

<pre><code>  console.error node_modules/fbjs/lib/warning.js:33
    Warning: Failed context type: The context `router` is marked as required in`Link`, but its value is `undefined`.
        in Link (at App.js:13)
        in NavbarBrand (at App.js:12)
        in div (created by NavbarHeader)
        in NavbarHeader (at App.js:11)
        in div (created by Grid)
        in Grid (created by Navbar)
        in nav (created by Navbar)
        in Navbar (created by Uncontrolled(Navbar))
        in Uncontrolled(Navbar) (at App.js:10)
        in div (at App.js:9)
        in App (at App.test.js:7)

  console.error node_modules/react-dom/cjs/react-dom.development.js:9627
    The above error occurred in the &lt;Link&gt; component:
        in Link (at App.js:13)
        in NavbarBrand (at App.js:12)
        in div (created by NavbarHeader)
        in NavbarHeader (at App.js:11)
        in div (created by Grid)
        in Grid (created by Navbar)
        in nav (created by Navbar)
        in Navbar (created by Uncontrolled(Navbar))
        in Uncontrolled(Navbar) (at App.js:10)
        in div (at App.js:9)
        in App (at App.test.js:7)
</code></pre>

<p>Everything that I'm trying seems to be yielding different errors, I don't know the correct way to set this up, and since I'm still new to React I'm not very familiar with any of these messages, and the solutions I'm finding online don't seem to be working.</p>
","7102316","","7102316","","2018-04-12 20:51:31","2018-04-12 20:53:58","Why does React Router break create-react-app tests? How to fix this?","<javascript><reactjs><testing><react-router><create-react-app>","1","0","0","",""
"49224725","1","","","2018-03-11 20:26:43","","0","66","<p><strong>Hi Friends</strong> </p>

<p>I'm currently working on a landing page. The functionality is taken care of in reactJS (which I am relatively unfamilar with). I am having trouble adding an onClick to the button in order to take me to the next page of my project. </p>

<p><strong>Here is my JS</strong></p>

<pre><code>var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (""value"" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(""Cannot call a class as a function""); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(""this hasn't been initialised - super() hasn't been called""); } return call &amp;&amp; (typeof call === ""object"" || typeof call === ""function"") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== ""function"" &amp;&amp; superClass !== null) { throw new TypeError(""Super expression must either be null or a function, not "" + typeof superClass); } subClass.prototype = Object.create(superClass &amp;&amp; superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FancyButton = function (_React$Component) {
    _inherits(FancyButton, _React$Component);

    function FancyButton() {
        _classCallCheck(this, FancyButton);

        return _possibleConstructorReturn(this, (FancyButton.__proto__ || Object.getPrototypeOf(FancyButton)).apply(this, arguments));
    }

    _createClass(FancyButton, [{
        key: 'render',
        value: function render() {
            // Mask id and styling
            // need unique id's for multiple buttons
            var maskId = 'mask_1';
            var maskStyle = '#fancy-masked-element_' + maskId + ' { mask: url(#' + maskId + '); -webkit-mask: url(#' + maskId + ')}';

            var buttonStyle = {
                width: this.props.width,
                height: this.props.height
            };

            var fancyFrontStyle = {
                transform: 'rotateX(0deg) translateZ(' + this.props.height / 2 + 'px )'
            };

            var fancyBackStyle = {
                transform: 'rotateX(90deg) translateZ( ' + this.props.height / 2 + 'px )'
            };



            // SVG attributes
            var textTransform = 'matrix(1 0 0 1 ' + this.props.width / 2 + ' ' + this.props.height / 1.6 + ')';
            var viewBox = '0 0 ' + this.props.width + ' ' + this.props.height;

            return React.createElement(
                'div',
                { className: 'fancy-button',
                    style: buttonStyle,
                    ref: 'fancyButton' },
                React.createElement(
                    'div',
                    { className: 'fancy-flipper' },
                    React.createElement(
                        'div',
                        { className: 'fancy-front', style: fancyFrontStyle },
                        React.createElement(
                            'svg',
                            {
                                height: this.props.height,
                                width: this.props.width,
                                viewBox: viewBox },
                            React.createElement(
                                'defs',
                                null,
                                React.createElement(
                                    'mask',
                                    { id: maskId },
                                    React.createElement('rect', { width: '100%', height: '100%', fill: '#FFFFFF' }),
                                    React.createElement(
                                        'text',
                                        { className: 'mask-text button-text', fill: '#000000', transform: textTransform, fontFamily: '\'intro_regular\'', fontSize: this.props.fontSize, width: '100%', textAnchor: 'middle', letterSpacing: '1' },
                                        this.props.buttonText
                                    )
                                )
                            ),
                            React.createElement(
                                'style',
                                null,
                                maskStyle
                            ),
                            React.createElement('rect', { id: 'fancy-masked-element_' + maskId, fill: this.props.color, width: '100%', height: '100%' })
                        )
                    ),
                    React.createElement(
                        'div',
                        { className: 'fancy-back', style: fancyBackStyle },
                        React.createElement(
                            'svg',
                            {
                                height: this.props.height,
                                width: this.props.width,
                                viewBox: viewBox },
                            React.createElement('rect', { stroke: this.props.color,
                                strokeWidth: this.props.borderWidth,
                                fill: 'transparent',
                                width: '100%',
                                height: '100%' }),
                            React.createElement(
                                'text',
                                { className: 'button-text', transform: textTransform, fill: this.props.color, fontFamily: '\'intro_regular\'', fontSize: this.props.fontSize, textAnchor: 'middle', letterSpacing: '1' },
                                this.props.buttonText,

                            )
                        )
                    )
                )
            );
        }
    }]);

    return FancyButton;
}(React.Component);

FancyButton.defaultProps = {
    color: '#FFFFFF',
    width: 410,
    height: 100,
    fontSize: 42,
    borderWidth: 15,
    buttonText: 'MYSTUDY'

};

React.render(React.createElement(FancyButton, null), document.getElementById('app'));
</code></pre>

<p>Thus far I have tried to add an A tag in my html and reference it further in my JS</p>

<pre><code>function App() {
    {
      window.location.href = ""homepageDEMO.php"";
    }
}
</code></pre>

<p>This also didn't work, Probably because it is ordinary Js and I realized the function I created was not referencing the button I need. </p>

<p>I then tried to add an onClick to the function FancyButton and I also tried by adding a reference to the page I want to go to. Neither worked </p>

<pre><code>    function FancyButton() {
    _classCallCheck(this, FancyButton);
        {
      window.location.href = ""index2.html"";
    }
    return _possibleConstructorReturn(this, (FancyButton.__proto__ || Object.getPrototypeOf(FancyButton)).apply(this, arguments));
}
</code></pre>

<p>This last code made the page which held my landing page go to the page I wanted to go to with the button on my landing page.</p>

<pre><code>function FancyButton() {
        _classCallCheck(this, FancyButton);

        return _possibleConstructorReturn(""webApp.php"", (FancyButton.__proto__ || Object.getPrototypeOf(FancyButton)).apply(this, arguments));
    }
</code></pre>

<p>Anyone have the answer to my problems?</p>

<hr>

<hr>

<h2>EDIT</h2>

<p>With help from the comments I have found the solution. I added the onclick syntax into the fancy-button class and it worked like a charm. Thank you all</p>

<pre><code>return React.createElement(
                'div',
                { className: 'fancy-button',
                    style: buttonStyle,
                    onClick: () =&gt; window.location.href = ""index2.html"",
                    ref: 'fancyButton' },
</code></pre>
","9445468","","9445468","","2018-03-11 20:54:41","2018-03-11 21:10:40","Adding an onClick button into reactJS","<javascript><html><reactjs><onclick>","1","6","","",""
"41539999","1","","","2017-01-09 02:04:47","","1","105","<p>I'm new to react and having a issue with rendering elements. I have a heatmap component which I'n getting the code from external script, and calling it from my main component. Looks like I'm missing some parameter to be passed or error in the way I'm returning the element.</p>

<p>I have a Heatmap component : </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var React = require(""react"");
var ReactDOM = require(""react-dom"");
var AmCharts = require(""amcharts3-react"");

// Generate random data
function generateData() {
  var firstDate = new Date();

  var dataProvider = [];

  for (var i = 0; i &lt; 100; ++i) {
    var date = new Date(firstDate.getTime());

    date.setDate(i);

    dataProvider.push({
      date: date,
      value: Math.floor(Math.random() * 100)
    });
  }

  return dataProvider;
}


// Component which contains the dynamic state for the chart
var Chart = React.createClass({
  getInitialState: function () {
    return {
      dataProvider: generateData(),
      timer: null
    };
  },

  componentDidMount: function () {
    var self = this;

    self.setState({
      // Update the chart dataProvider every 3 seconds
      timer: setInterval(function () {
        self.setState({
          dataProvider: generateData()
        });
      }, 3000)
    });
  },

  componentWillUnmount: function () {
    clearInterval(this.state.timer);
  },

  render: function () {
    // Render the chart
    return React.createElement(AmCharts, {
      ""path"": ""node_modules/amcharts3/amcharts"",
      ""type"": ""serial"",
      ""theme"": ""light"",
      ""marginRight"": 40,
      ""marginLeft"": 40,
      ""autoMarginOffset"": 20,
      ""mouseWheelZoomEnabled"": true,
      ""valueAxes"": [{
        ""id"": ""v1"",
        ""axisAlpha"": 0,
        ""position"": ""left"",
        ""ignoreAxisWidth"": true
      }],
      ""balloon"": {
        ""borderThickness"": 1,
        ""shadowAlpha"": 0
      },
      ""graphs"": [{
        ""id"": ""g1"",
        ""balloon"":{
          ""drop"": true,
          ""adjustBorderColor"": false,
          ""color"":""#ffffff""
        },
        ""bullet"": ""round"",
        ""bulletBorderAlpha"": 1,
        ""bulletColor"": ""#FFFFFF"",
        ""bulletSize"": 5,
        ""hideBulletsCount"": 50,
        ""lineThickness"": 2,
        ""title"": ""red line"",
        ""useLineColorForBulletBorder"": true,
        ""valueField"": ""value"",
        ""balloonText"": ""&lt;span style='font-size:18px;'&gt;[[value]]&lt;/span&gt;""
      }],
      ""chartScrollbar"": {
        ""graph"": ""g1"",
        ""oppositeAxis"": false,
        ""offset"":30,
        ""scrollbarHeight"": 80,
        ""backgroundAlpha"": 0,
        ""selectedBackgroundAlpha"": 0.1,
        ""selectedBackgroundColor"": ""#888888"",
        ""graphFillAlpha"": 0,
        ""graphLineAlpha"": 0.5,
        ""selectedGraphFillAlpha"": 0,
        ""selectedGraphLineAlpha"": 1,
        ""autoGridCount"": true,
        ""color"":""#AAAAAA""
      },
      ""chartCursor"": {
        ""pan"": true,
        ""valueLineEnabled"": true,
        ""valueLineBalloonEnabled"": true,
        ""cursorAlpha"":1,
        ""cursorColor"":""#258cbb"",
        ""limitToGraph"":""g1"",
        ""valueLineAlpha"":0.2,
        ""valueZoomable"": true
      },
      ""valueScrollbar"":{
        ""oppositeAxis"": false,
        ""offset"":50,
        ""scrollbarHeight"":10
      },
      ""categoryField"": ""date"",
      ""categoryAxis"": {
        ""parseDates"": true,
        ""dashLength"": 1,
        ""minorGridEnabled"": true
      },
      ""dataProvider"": this.state.dataProvider
    });
  }
});</code></pre>
</div>
</div>
</p>

<p>I'm calling it from my main component : </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from ""react""
import Heatmap from ""../../Elements/AmCharts/Heatmap""

...

export default class Stats extends React.Component {

  render() {
      return (
        ....
        &lt;Heatmap /&gt;
        ....
      )
  }
}</code></pre>
</div>
</div>
</p>

<p>I'm getting a error saying <code>warning.js:45 Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of Stats.</code></p>

<p>and also</p>

<p><code>Uncaught Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: object. Check the render method of Stats.</code></p>

<p>Is there any way to fix it?</p>
","7392461","","","","","2017-01-09 16:51:52","React - React.createElement: type should not be null, undefined, boolean","<javascript><reactjs>","1","1","","",""
"33428492","1","","","2015-10-30 04:07:58","","0","306","<p>Getting this error on every browser when trying to render a simple paragraph in React:</p>

<blockquote>
  <p>Uncaught Error: Invariant Violation: _registerComponent(...): Target
  container is not a DOM element.</p>
</blockquote>

<p>Here is the code:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;title&gt;Basic Example&lt;/title&gt;
    &lt;link rel=""stylesheet"" href=""../shared/css/base.css"" /&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div class=""container""&gt;
      &lt;p&gt;this should not be seen&lt;/p&gt;
    &lt;/div&gt;
    &lt;script src=""../../build/react.js""&gt;&lt;/script&gt;
    &lt;script src=""../../build/react-dom.js""&gt;&lt;/script&gt;
    &lt;script&gt;
      ""use strict"";
      var BoxTile = React.createClass({
        render: function () {
          return React.createElement(""p"", null, ""Imageine this is a tile..."");
        }
      });
      ReactDOM.render(React.createElement(BoxTile), document.getElementById('container'));
    &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
","5505683","","1288633","","2017-12-18 18:42:03","2017-12-18 18:42:03","reactjs Invariant Violation","<reactjs>","1","1","","",""
"42813342","1","42814137","","2017-03-15 14:57:12","","26","41772","<p>Trying to get react-router (v4.0.0) and react-hot-loader (3.0.0-beta.6) to play nicely, but getitng the following error in the browser console:</p>

<blockquote>
  <p>Warning: React.createElement: type is invalid -- expected a string
  (for built-in components) or a class/function (for composite
  components) but got: undefined. You likely forgot to export your
  component from the file it's defined in.</p>
</blockquote>

<p>index.js:</p>

<pre><code>import React from 'react';
import ReactDom from 'react-dom';
import routes from './routes.js';
require('jquery');
import 'bootstrap/dist/css/bootstrap.min.css';
import 'bootstrap/dist/js/bootstrap.min.js';
import './css/main.css';

const renderApp = (appRoutes) =&gt; {
    ReactDom.render(appRoutes, document.getElementById('root'));
};

renderApp( routes() );
</code></pre>

<p>routes.js:</p>

<pre><code>import React from 'react';
import { AppContainer } from 'react-hot-loader';
import { Router, Route, browserHistory, IndexRoute } from 'react-router';
import store from './store/store.js';
import { Provider } from 'react-redux';
import App from './containers/App.jsx';
import Products from './containers/shop/Products.jsx';
import Basket from './containers/shop/Basket.jsx';

const routes = () =&gt; (

    &lt;AppContainer&gt;
        &lt;Provider store={store}&gt;
            &lt;Router history={browserHistory}&gt;
                &lt;Route path=""/"" component={App}&gt;
                    &lt;IndexRoute component={Products} /&gt;
                    &lt;Route path=""/basket"" component={Basket} /&gt;
                &lt;/Route&gt;
            &lt;/Router&gt;
        &lt;/Provider&gt;
    &lt;/AppContainer&gt;

);

export default routes;
</code></pre>
","3111255","","","","","2018-06-29 03:46:08","React.createElement: type is invalid -- expected a string","<reactjs><react-router><react-hot-loader>","10","1","4","",""
"50537558","1","","","2018-05-25 22:24:28","","0","23","<p>For simple testing purposes, I want to create an React app to render at browser via babel. So I do not use react starter kit.</p>

<p>So I have a very simple page like below; </p>

<pre><code> &lt;script type=""text/jsx"" src=""Link.react.js""&gt;&lt;/script&gt;
    &lt;script src=""https://unpkg.com/react@16/umd/react.development.js""&gt;&lt;/script&gt;
    &lt;script src=""https://unpkg.com/react-dom@16/umd/react-dom.development.js""&gt;&lt;/script&gt;
    &lt;script src=""https://unpkg.com/babel-standalone@6.15.0/babel.min.js""&gt;&lt;/script&gt;

&lt;body&gt;
    &lt;div id=""root""&gt;&lt;/div&gt;
    &lt;script type=""text/babel""&gt;    
    ReactDOM.render(&lt;Link page=""https://www.facebook.com"" /&gt;, document.getElementById('root'));
    &lt;/script&gt;
&lt;/body&gt;
</code></pre>

<p>Here <code>Link.react.js</code> has a react component like below;</p>

<pre><code>export default class Link extends React.Component {
// basic implementation
}
</code></pre>

<p>But it does not render, and gives whole bunch of errors like </p>

<pre><code> Uncaught ReferenceError: exports is not defined
 React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.
</code></pre>

<p>Is there any way to achive this? Or I should use <code>react-scripts</code> utility to compile them first?</p>
","929902","","929902","","2018-05-25 22:30:33","2018-05-25 22:30:33","Reference react component at browser","<reactjs><babeljs><react-dom>","0","4","","",""
"49220252","1","49220350","","2018-03-11 13:00:01","","1","164","<p>I'm having a look at <a href=""https://github.com/react-boilerplate/react-boilerplate"" rel=""nofollow noreferrer"">React Boilerplate</a> and I noticed that when I change the syntax from JSX to regular JS (using <code>React.createElement</code>) I have the warning <code>Each child in an array or iterator should have a unique ""key"" prop</code>. So I guess JSX does some extra stuff.<br>
What are the real differences?<br>
Is it possible to fix this warning without using JSX or without providing a key?</p>

<p>Just for clarity, this is the snippet that gives me the warning:</p>

<pre><code>React.createElement(AppWrapper, {}, [
  React.createElement(Helmet, {titleTemplate: ""Boilerplate""},
    React.createElement('meta', {name: ""description""})
  ),
  React.createElement(Switch, {}, [
    React.createElement(Route, {exact: true, path: ""/"", component: HomePage}),
    React.createElement(Route, {path: ""/features"", component: FeaturePage}),
  ]),
  React.createElement(Footer)
])
</code></pre>

<p>And this is the JSX that does not give me any warning:</p>

<pre><code>&lt;AppWrapper&gt;
  &lt;Helmet titleTemplate=""Boilerplate""&gt;
    &lt;meta name=""description"" /&gt;
  &lt;/Helmet&gt;
  &lt;Header /&gt;
  &lt;Switch&gt;
    &lt;Route exact path=""/"" component={HomePage} /&gt;
    &lt;Route path=""/features"" component={FeaturePage} /&gt;
  &lt;/Switch&gt;
  &lt;Footer /&gt;
&lt;/AppWrapper&gt;
</code></pre>
","3997132","","3997132","","2018-03-11 13:18:01","2018-03-11 13:18:01","Differences between JSX syntax and React.createElement()","<reactjs>","2","0","","",""
"49241714","1","","","2018-03-12 18:01:29","","0","40","<p>In my <code>React</code>, <code>TypeScript</code> application I simply need to create new instance of a custom component which - in my case - is showing a notification.</p>

<p>The notification's props are read from the <code>localStorage</code>. 
As the notification needs some adjustments regarding the height I need to create a new instance (so <code>componentDidMount</code> gets called).</p>

<p>However, when calling in my <code>render</code></p>

<pre><code>const { props: { }, state: { notificationProps } } = this;

const Element = React.createElement(Vtm.Notification, notificationProps, null);

return &lt;Element /&gt;;
</code></pre>

<p>I get a bunch of errors:</p>

<pre><code>JSX element type 'Element' does not have any construct or call signatures.
</code></pre>

<p>and from ReSharper:</p>

<pre><code>_$_$RsRpExt""FromFile:\node_modules\@types\react\index.d.ts, module=JavaScriptReferencedFilesModule:Referenced external files"".React.createElement : {
    (type: ""input"", props?: InputHTMLAttributes&lt;HTMLInputElement&gt; &amp; ClassAttributes&lt;HTMLInputElement&gt;, ...children: ReactNode[]) =&gt; DetailedReactHTMLElement&lt;InputHTMLAttributes&lt;HTMLInputElement&gt;, HTMLInputElement&gt;; 
    &lt;P extends HTMLAttributes&lt;T extends HTMLElement&gt;, T extends HTMLElement&gt;(type: ""a"" | ""abbr"" | ""address"" | ""area"" | ""article"" | ""aside"" | ""audio"" | ""b"" | ""base"" | ""bdi"" | ""bdo"" | ""big"" | ""blockquote"" | ""body"" | ""br"" | ""button"" | ""canvas"" | ""caption"" | ""cite"" | ""code"" | ""col"" | ""colgroup"" | ""data"" | ""datalist"" | ""dd"" | ""del"" | ""details"" | ""dfn"" | ""dialog"" | ""div"" | ""dl"" | ""dt"" | ""em"" | ""embed"" | ""fieldset"" | ""figcaption"" | ""figure"" | ""footer"" | ""form"" | ""h1"" | ""h2"" | ""h3"" | ""h4"" | ""h5"" | ""h6"" | ""head"" | ""header"" | ""hgroup"" | ""hr"" | ""html"" | ""i"" | ""iframe"" | ""img"" | ""input"" | ""ins"" | ""kbd"" | ""keygen"" | ""label"" | ""legend"" | ""li"" | ""link"" | ""main"" | ""map"" | ""mark"" | ""menu"" | ""menuitem"" | ""meta"" | ""meter"" | ""nav"" | ""noscript"" | ""object"" | ""ol"" | ""optgroup"" | ""option"" | ""output"" | ""p"" | ""param"" | ""picture"" | ""pre"" | ""progress"" | ""q"" | ""rp"" | ""rt"" | ""ruby"" | ""s"" | ""samp"" | ""script"" | ""section"" | ""select"" | ""small"" | ""source"" | ""span"" | ""strong"" | ""style"" | ""sub"" | ""summary"" | ""sup"" | ""table"" | ""tbody"" | ""td"" | ""textarea"" | ""tfoot"" | ""th"" | ""thead"" | ""time"" | ""title"" | ""tr"" | ""track"" | ""u"" | ""ul"" | ""var"" | ""video"" | ""wbr"" | ""webview"", props?: ClassAttributes&lt;T extends HTMLElement&gt; &amp; P extends HTMLAttributes, ...children: ReactNode[]) =&gt; DetailedReactHTMLElement&lt;P extends HTMLAttributes, T extends HTMLElement&gt;; 
    &lt;P extends SVGAttributes&lt;T extends SVGElement&gt;, T extends SVGElement&gt;(type: ""animate"" | ""circle"" | ""clipPath"" | ""defs"" | ""desc"" | ""ellipse"" | ""feBlend"" | ""feColorMatrix"" | ""feComponentTransfer"" | ""feComposite"" | ""feConvolveMatrix"" | ""feDiffuseLighting"" | ""feDisplacementMap"" | ""feDistantLight"" | ""feDropShadow"" | ""feFlood"" | ""feFuncA"" | ""feFuncB"" | ""feFuncG"" | ""feFuncR"" | ""feGaussianBlur"" | ""feImage"" | ""feMerge"" | ""feMergeNode"" | ""feMorphology"" | ""feOffset"" | ""fePointLight"" | ""feSpecularLighting"" | ""feSpotLight"" | ""feTile"" | ""feTurbulence"" | ""filter"" | ""foreignObject"" | ""g"" | ""image"" | ""line"" | ""linearGradient"" | ""marker"" | ""mask"" | ""metadata"" | ""path"" | ""pattern"" | ""polygon"" | ""polyline"" | ""radialGradient"" | ""rect"" | ""stop"" | ""svg"" | ""switch"" | ""symbol"" | ""text"" | ""textPath"" | ""tspan"" | ""use"" | ""view"", props?: ClassAttributes&lt;T extends SVGElement&gt; &amp; P extends SVGAttributes, ...children: ReactNode[]) =&gt; ReactSVGElement; 
    &lt;P extends DOMAttributes&lt;T extends Element&gt;, T extends Element&gt;(type: string, props?: ClassAttributes&lt;T extends Element&gt; &amp; P extends DOMAttributes, ...children: ReactNode[]) =&gt; DOMElement&lt;P extends DOMAttributes, T extends Element&gt;; 
    &lt;P&gt;(type: SFC, props?: Attributes &amp; P, ...children: ReactNode[]) =&gt; SFCElement&lt;P&gt;; 
    &lt;P&gt;(type: ClassType, props?: ClassAttributes&lt;ClassicComponent&lt;P, ComponentState&gt;&gt; &amp; P, ...children: ReactNode[]) =&gt; CElement; 
    &lt;P, T extends Component&lt;P, ComponentState&gt;, C extends ComponentClass&lt;P&gt;&gt;(type: ClassType, props?: ClassAttributes&lt;T extends Component&gt; &amp; P, ...children: ReactNode[]) =&gt; CElement; 
    &lt;P&gt;(type: StatelessComponent&lt;P&gt; | ComponentClass&lt;P&gt; | string, props?: Attributes &amp; P, ...children: ReactNode[]) =&gt; ReactElement&lt;P&gt;; 
}
</code></pre>
","615288","","","","","2018-03-12 18:08:30","TypeScript using React.createElement inside component not working/compiling","<javascript><reactjs><typescript>","1","1","","",""
"33508325","1","","","2015-11-03 20:21:04","","0","343","<p>I'm using a subrender approach (split the react component creation in a helpers methods) on my React 0.13 App like this. But I got an error:</p>

<blockquote>
  <p>Invariant Violation: addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component's <code>render</code> method</p>
</blockquote>

<p>So, how can manage my on the fly created react components that depend on the DOM to avoid to get fat my primary render method?</p>

<p>Any clue how to refactor that to the new approach in the 0.14 React version?</p>

<pre class=""lang-js prettyprint-override""><code>module.exports = React.createClass({
displayName: 'Typed',
render: function() {
    var _this = this;

    return (
      React.createElement(""div"", {
            style: {
                position: 'relative'
            },
            className: 'react-typeahead-container ' + _this.props.className},
        _this._renderInput(),
        _this._renderDropdown(),
        _this._renderAriaMessageForOptions(),
        _this._renderAriaMessageForIncomingOptions()
      )
    );
},
_renderInput: function() {
    var _this = this,
        state = _this.state,
        props = _this.props,
        inputValue = props.inputValue,
        inputValue = props.inputValue,
        className = 'react-typeahead-input',
        inputDirection = getTextDirection(inputValue);

    return (
        React.createElement(""div"", {
            style: {
                position: 'relative'
            },
            className: ""react-typeahead-input-container""},
            React.createElement(Input, {
                ref: ""input"", //this does not works :(
                role: ""combobox""
            )
        )
    );
},
</code></pre>
","253403","","1199684","","2015-11-05 22:17:44","2015-12-29 23:16:19","How Refs works on react 0.14","<javascript><reactjs>","2","3","","",""
"50603550","1","50604038","","2018-05-30 11:30:01","","0","24","<p>I am trying to create a one file app with no import from other files and no webpack but I can not make it work as I get the message</p>

<p>'Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in.'</p>

<p>and the message</p>

<p>Uncaught Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in.</p>

<p>My file looks like this.</p>

<p>INDEX.HTML</p>

<p>In the head I have the following links</p>

<pre><code>&lt;script src=""https://unpkg.com/react@15/dist/react.js""&gt;&lt;/script&gt;
&lt;script src=""https://unpkg.com/react-dom@15/dist/react-dom.js""&gt;&lt;/script&gt;
&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.23/browser.js""&gt;&lt;/script&gt;
&lt;script src=""https://unpkg.com/react-router@3.0.0/umd/ReactRouter.js""&gt;&lt;/script&gt;
</code></pre>

<p>In the body I have the div with id=""root"" and the script tag with type ""text/label"" and then in the script tag the following code:</p>

<pre><code>let BrowserRouter = ReactRouter.BrowserRouter;
  let Route = ReactRouter.Route;
  let Switch = ReactRouter.Switch;

  class FriendsIndexRoute extends React.Component {
    render() {
      return (
        &lt;div&gt;
           some content
        &lt;/div&gt;
      );
    }
  }

ReactDOM.render(
    &lt;BrowserRouter&gt;
      &lt;main&gt;
        &lt;Switch&gt;
          &lt;Route path=""/"" component={FriendsIndexRoute} /&gt;
        &lt;/Switch&gt;
      &lt;/main&gt;
    &lt;/BrowserRouter&gt;,
  document.getElementById('root')
);
</code></pre>

<p>Any idea what is causing the issue?</p>

<p>Many thanks for your help</p>
","9229400","","","","","2018-05-30 11:55:08","React - one file app - Warning: React.createElement: type is invalid -- expected a string (for built-in components)","<reactjs>","1","4","","",""
"48816651","1","48833907","","2018-02-15 21:33:21","","0","246","<p>I try to update my webpack+js+react-HelloWorld webapp (which worked fine) to use Typescript instead by following <a href=""https://webpack.js.org/guides/typescript/"" rel=""nofollow noreferrer"">webpack's intro</a> but my editor cann't find the react module (which is defined in package.json and i ran ""npm install"").
So the bundle.js-file is loaded, shouldn't typescript be compiled into that one?</p>

<p><em>src/index.tsx:</em></p>

<pre><code>import * as React from ""react"";
import { render } from ""react-dom"";

const App = () =&gt; (&lt;div&gt;Hello React with Typescript&lt;/div&gt;);

function createAppParent() {
  let element = document.createElement('div');
  document.body.appendChild(element);

  return element;
}

render((
    &lt;App /&gt;
), createAppParent());
</code></pre>

<p><em>package.json:</em></p>

<pre><code>{
  ""name"": ""hello_world_ts"",
  ""version"": ""1.0.0"",
  ""description"": ""minimal configuration of webpack react and sass using typescript"",
  ""scripts"": {
    ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1"",
    ""start"": ""webpack-dev-server --open --config webpack.dev.js"",
    ""build"": ""webpack --config webpack.prod.js""
  },
  ""keywords"": [],
  ""author"": ""me"",
  ""license"": ""ISC"",
  ""devDependencies"": {
    ""clean-webpack-plugin"": ""^0.1.17"",
    ""html-webpack-plugin"": ""^2.30.1"",
    ""ts-loader"": ""^3.5.0"",
    ""typescript"": ""^2.7.1"",
    ""uglifyjs-webpack-plugin"": ""^1.1.6"",
    ""webpack"": ""^3.10.0"",
    ""webpack-dev-server"": ""^2.11.1"",
    ""webpack-merge"": ""^4.1.1""
  },
  ""dependencies"": {
    ""@types/react"": ""^16.0.38"",
    ""@types/react-dom"": ""^16.0.4"",
    ""react"": ""^16.2.0"",
    ""react-dom"": ""^16.2.0""
  }
}
</code></pre>

<p><em>tsconfig.json:</em></p>

<pre><code>{
    ""compilerOptions"": {
      ""outDir"": ""./dist/"",
      ""sourceMap"": true,
      ""noImplicitAny"": true,
      ""module"": ""es6"",
      ""target"": ""es2017"",
      ""jsx"": ""react"",
      ""allowJs"": true
    },
    ""exclude"": [
      ""node_modules"",
      ""dist""
    ],
    ""include"": [
        ""./src/**/*""
    ]
}
</code></pre>

<p><em>webpack.common.json:</em></p>

<pre><code>const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CleanWebpackPlugin = require('clean-webpack-plugin');

module.exports = {
    entry: './src/index.tsx',
    output: {
        filename: 'bundle.js',
        path: path.resolve(__dirname, 'dist')
    },
    module: {
        rules: [
            {
                test: /\.(js|jsx|ts|tsx)$/,
                exclude: /node_modules/,
                use: [
                    'ts-loader'
                ],
            }
        ]
    },
    plugins: [
        new CleanWebpackPlugin(['dist']),
        new HtmlWebpackPlugin({
            title: 'Hello React+Typescript',
        })
    ]
};
</code></pre>

<p><em>webpack.dev.json:</em></p>

<pre><code>const webpack = require('webpack');
const merge = require('webpack-merge');
const common = require('./webpack.common.js');

module.exports = merge(common, {
    devtool: 'inline-source-map',
    devServer: {
        contentBase: './dist'
    },
    plugins: [
        new webpack.DefinePlugin({
            'process.env.NODE_ENV': JSON.stringify('development')
        })
    ]
});
</code></pre>

<p><em>webpack.prod.json:</em></p>

<pre><code>const webpack = require('webpack');
const merge = require('webpack-merge');
const UglifyJSPlugin = require('uglifyjs-webpack-plugin');
const common = require('./webpack.common.js');

module.exports = merge(common, {
    devtool: 'source-map',
    plugins: [
        new UglifyJSPlugin({
            sourceMap: true
        }),
        new webpack.DefinePlugin({
            'process.env.NODE_ENV': JSON.stringify('production')
        })
    ]
});
</code></pre>

<p>So what is missing?</p>

<p><strong>UPDATE:</strong>
I use Visual Studio Code which displayed the message ""[ts] Cannot find module 'react'"", but it wasn't only the editor. After '<em>npm start</em>' starting the devServer i got something like ""react module not found"" in the firefox console.</p>

<p>So why is everything working now, a day later? (rhetoric question) No errors in the compiler and the dev server output works fine. I know that a reload can sometimes help an IDE but also npm?? Strange stuff, but not problem left to solve.</p>
","4515050","","4515050","","2018-02-16 16:58:35","2018-02-16 19:52:13","""[ts] Cannot find module 'react'"" in spite of ""npm install""","<reactjs><typescript><webpack>","2","1","","",""
"50752101","1","","","2018-06-08 01:20:43","","0","39","<p>When attempting to create an animation in a Gatsby site, I get the following error:</p>

<pre><code>12:57:12:665 (ScrollMagic.Scene) -&gt; ERROR calling setTween() due to missing Plugin 'animation.gsap'. Please make sure to include plugins/animation.gsap.js
</code></pre>

<p>I have found resources referencing adding the plugin into the gatsby-config.js, also the gatsby-browser.js but not exactly how to code that plugin add.</p>

<p>Current gatsby.config.js:</p>

<pre><code>module.exports = {
   siteMetadata: {
    title: 'Gatsby Default Starter',
  },
  plugins: ['gatsby-plugin-react-helmet', 'gatsby-plugin-emotion'],
}
</code></pre>

<p>Current gatsby-browser.js:</p>

<pre><code>/* eslint-disable react/prop-types */
import 'babel-polyfill'
import React, { createElement } from 'react'

exports.onClientEntry = () =&gt; {
  require('gsap')
  require('scrollmagic')
  require('gsap/src/uncompressed/plugins/ScrollToPlugin')
  require('jquery')
}
</code></pre>

<p>How do I bring in animation.gsap plugin?</p>

<p>My animation component:</p>

<pre><code>import React, { Component } from 'react'
import Link from 'gatsby-link'
import styled from 'react-emotion'
import { TweenLite as Tween, TimelineMax as Timeline, TweenMax } from 'gsap'
import { Images } from '../../assets'
import '../../styles/main.css'
import $ from 'jquery'
import ScrollMagic from 'scrollmagic'

const Container = styled.div`
  height: 100vh;
  margin: auto;
  position: absolute;
  top: 30%;
  z-index: 999;
`

export default class Animation extends React.Component {
  constructor(props) {
    super(props)
  }

  componentDidMount() {
    const flightpath = {
      entry: {
        curviness: 1.25,
        autoRotate: true,
        values: [{ x: 100, y: -20 }, { x: 300, y: 10 }, {}],
      },
      looping: {
        curviness: 1.25,
        autoRotate: true,
        values: [
          { x: 510, y: 60 },
          { x: 620, y: -60 },
          { x: 500, y: -100 },
          { x: 380, y: 20 },
          { x: 500, y: 60 },
          { x: 580, y: 20 },
          { x: 620, y: 15 },
        ],
      },
      leave: {
        curviness: 1.25,
        autoRotate: true,
        values: [
          { x: 660, y: 20 },
          { x: 800, y: 130 },
          { x: $(window).width() + 300, y: -100 },
        ],
      },
    }

    //init controller
    const controller = new ScrollMagic.Controller()

    //create tween
    const tween = new Timeline()
      .add(
        TweenMax.to($('#plane'), 1.2, {
          css: { bezier: flightpath.entry },
          ease: Power1.easeInOut,
        })
      )
      .add(
        TweenMax.to($('#plane'), 2, {
          css: { bezier: flightpath.looping },
          ease: Power1.easeInOut,
        })
      )
      .add(
        TweenMax.to($('#plane'), 1, {
          css: { bezier: flightpath.leave },
          ease: Power1.easeInOut,
        })
      )

    // build scene
    const scene = new ScrollMagic.Scene({
      triggerElement: '#trigger',
      duration: 500,
      offset: 100,
    })
      .setPin('#target')
      .setTween(tween)
      .addTo(controller)
  }

  render() {
    return (
      &lt;Container&gt;
        &lt;div className=""spacer s2"" /&gt;
        &lt;div className=""spacer s0"" id=""trigger"" /&gt;
        &lt;div id=""target""&gt;
          &lt;img id=""plane"" src={Images.pou} /&gt;
        &lt;/div&gt;
        &lt;div className=""spacer s2"" /&gt;
      &lt;/Container&gt;
    )
  }
}
</code></pre>
","6396582","","","","","2018-06-08 01:20:43","Using Greensock (gsap) with Gatsby react static site error animation.gsap","<animation><greensock><gsap><gatsby>","0","0","","",""
"50823024","1","50823331","","2018-06-12 17:50:58","","0","49","<p>Does anyone know how to resolve this linting issue? It's claiming that I'm not using the TasksComponent. Thanks!</p>

<blockquote>
  <p>'TasksComponent' is assigned a value but never used. (no-unused-vars)</p>
</blockquote>

<pre><code>describe('root tests', () =&gt; {

    it('renders without crashing', () =&gt; {
        const TasksComponent = TasksWithData(Tasks);
        const root = document.createElement('root');
        ReactDOM.render(&lt;TasksComponent {...taskconfig} /&gt;, root);
        ReactDOM.unmountComponentAtNode(root);
    });

});
</code></pre>

<p>This is my .eslintrc file:</p>

<pre><code>module.exports = {
    ""env"": {
        ""browser"": true,
        ""es6"": true,
        ""jest"": true
    },
    ""extends"": ""eslint:recommended"",
    ""parserOptions"": {
        ""ecmaFeatures"": {
            ""experimentalObjectRestSpread"": true,
            ""jsx"": true
        },
        ""sourceType"": ""module""
    },
    ""plugins"": [
        ""react""
    ],
    ""rules"": {
        ""indent"": [
            ""error"",
            4
        ],
        ""quotes"": [
            ""warn"",
            ""single""
        ],
        ""semi"": [
            ""error"",
            ""always""
        ]
    }
};
</code></pre>
","9824961","","9824961","","2018-06-12 18:21:15","2018-06-12 18:21:15","ESLint throwing no-unused-vars for reactjs data component","<reactjs><eslint><react-component><eslintrc>","1","0","","",""
"42122122","1","","","2017-02-08 19:36:33","","0","126","<p>I've been developing an idea but am getting stuck on something unusual (my brain hurts on react-router).</p>

<p>I am trying to dynamically render a list of items using .map from a returned object (of multiple similar objects) and appending them to the <code>render(){return(&lt;div /&gt;)}</code>. </p>

<p>I just dont know another way than call a function then .map the result for this callback.</p>

<p>I think that the way I'm doing this means the rendered items lose context. The react-router <code>&lt;Link /&gt;</code> will function as expected in the normal flow (placed inside the <code>render(){return(&lt;div /&gt;)}</code> ) but not when the item is created from outside of the render. I have posted the error below the code.</p>

<p>I have read Many different ways of getting around this using context and location/history and withRouter. Frankly I'm lost.</p>

<p>I would appreciate if someone could look at my example below and guide me in the right direction.</p>

<p>A few notes:
- main focus appears to be in mystuff
- i have many unnecessary imports i know
- stripped down for clarity, i would get lost otherwise</p>

<p>index</p>

<pre><code>import _ from 'lodash';
import React from 'react';
import { render } from 'react-dom';
import { Router, Route, IndexRoute, browserHistory } from 'react-router';
import { Provider } from 'react-redux';
import { store, history } from './store';

import Main from './Main';
import { routyr } from './Menu';

// remaining paths in Menu.js (routyr) for menu visibility
const router = (
  &lt;Provider store={store}&gt;
    &lt;Router history={history}&gt;
      &lt;Route path=""/"" component={Main}&gt;
        {routyr}
      &lt;/Route&gt;
    &lt;/Router&gt;
  &lt;/Provider&gt;
)

render (router, document.getElementById('app'));
</code></pre>

<p>Main</p>

<pre><code>import { bindActionCreators } from 'redux';
import { connect } from 'react-redux';
import * as actionCreators from './actionCreators';

import App from './app';

function mapStateToProps(state){
  return{
    info: state.info,
    myProfile: state.myProfile
  }
}

function mapDispatchToProps(dispatch){
  return { actions: bindActionCreators(actionCreators, dispatch) }
}

const Main = connect(mapStateToProps, mapDispatchToProps)(App);
export default Main;
</code></pre>

<p>routyr</p>

<pre><code>import React from 'react';
import { Link } from 'react-router';
import { Router, Route, IndexRoute, browserHistory } from 'react-router';
import { Provider } from 'react-redux';

import { store, history } from './store';

//pages
import App from './app';
import Landing from './Landing';
import Me from './mystuff';
import ViewStuff from './viewStuff';

//Routes for index.js
export const routyr = (
  &lt;span&gt;
    &lt;IndexRoute component={Landing} /&gt;
    &lt;Route path=""/myStuff"" component={Me} /&gt;
    &lt;Route path=""/viewStuff"" component={ViewStuff} /&gt;
  &lt;/span&gt;
)

//Menu types
//loaded by app.js
export const menuLoggedIn = (
  &lt;div className=""MainMenu""&gt;
    &lt;Link to='/' className=""buttonA green""&gt;Home&lt;/Link&gt;
    &lt;Link to='myStuff' className=""buttonA green""&gt;My Stuff&lt;/Link&gt;
  &lt;/div&gt;
);
export const menuLoggedOut = (
  &lt;div className=""MainMenu""&gt;
    &lt;Link to='/login' className=""buttonA green""&gt;Login&lt;/Link&gt;
  &lt;/div&gt;
);
</code></pre>

<p>app</p>

<pre><code>import React from 'react';
import _ from 'lodash';
import { Link } from 'react-router';
import auth from './auth';
import Landing from './Landing';
import Header from './Header';
import { menuLoggedIn, menuLoggedOut } from './Menu';

export default class App extends React.Component {
  constructor(){
    super();
    this.state={
      auth: auth.loggedIn(),
      menu: null
    };
  }

  componentWillMount(){
    if (this.state.auth==true) {
      this.setState({
        menu: menuLoggedIn
      })
    }else{
      this.setState({
        menu: menuLoggedOut
      });
    }
  }

  render(){
    return (
      &lt;div&gt;
        &lt;Header /&gt;
        {this.state.menu}&lt;br /&gt;
        &lt;div id=""view""&gt;
          {React.cloneElement(this.props.children, this.props)}
        &lt;/div&gt;
      &lt;/div&gt;
    );
  }
};
</code></pre>

<p>mystuff</p>

<pre><code>import React, { PropTypes } from 'react';
import { render } from 'react-dom';
import { Link } from 'react-router';
import { withRouter } from 'react-router';
import { Provider } from 'react-redux';

import * from './whacks';

export default class Me extends React.Component{
  constructor(){
    super();
  }
  componentDidMount() {

    function listThem(oio){
      oio.map(function(ducks){
        render(

          &lt;div className=""ListItem""&gt;
            &lt;Link to=""/viewStuff""&gt; _BROKEN_ View Stuff&lt;/Link&gt;
            &lt;div className=""listLabel""&gt;{ducks.type}&lt;/div&gt;
            &lt;h3&gt;{ducks.description.title}&lt;/h3&gt;
            {ducks.description.long}
          &lt;/div&gt;, document.getElementById('fishes').appendChild(document.createElement('div'))

        );
      });
    }

    var some = new Whacks();

    some.thing(more, (close, open) =&gt; {

      if(close){
        console.log(close));
      } else {
        doIt(open);
      }

    });
  }

  render(){
    return(
      &lt;div&gt;
        &lt;Link to=""viewStuff""&gt; _WORKING_ View Stuff&lt;/Link&gt;
        &lt;div id=""fishes""&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    )
  }
}
</code></pre>

<p>store</p>

<pre><code>import { createStore, compose } from 'redux';
import { syncHistoryWithStore } from 'react-router-redux';
import { browserHistory } from 'react-router';
import { combineReducers } from 'redux';
import { routerReducer } from 'react-router-redux';

/*-------ROOT REDUCER---------*/
/*-------DEFAULT STATES---------*/
/*-------CREATE STORE---------*/
/*-------INTEGRATE HISTORY---------*/

import me from './reducers/obj';
import myProfile from './reducers/myProfile';

const rootReducer = combineReducers(
  {
    routing: routerReducer,
    me,
    myProfile
  }
);

//TEMP remove harcoded var
const uuidSet = ""fa78d964"";
export const defaultState = {
  uuid: uuidSet,
};

export const store = createStore(rootReducer, defaultState, window.__REDUX_DEVTOOLS_EXTENSION__ &amp;&amp; window.__REDUX_DEVTOOLS_EXTENSION__());
export const history = syncHistoryWithStore(browserHistory, store);
</code></pre>

<p>actionCreators</p>

<pre><code>export function me (obj){
  return {
    type: ""ADD_OBJECTLIST"",
    obj
  }
}

export function myProfile (dump){
  return {
    type: ""MY_DATA"",
    dump
  }
}
</code></pre>

<p>from package.json</p>

<pre><code>""react-redux"": ""^5.0.2"",
""react-router"": ""^3.0.2"",
""react-router-redux"": ""^4.0.7"",
""redux"": ""^3.6.0"",
</code></pre>

<p>error</p>

<blockquote>
  <p>Uncaught Error: s rendered outside of a router context cannot navigate.</p>
</blockquote>

<p>@UG,
I have tried the following in mystuff:</p>

<pre><code>constructor(){
  super();
  this.state={
    oio: {}
  };
}
</code></pre>

<p>and</p>

<pre><code>some.thing(more, (close, open) =&gt; {

      if(close){
        console.log(close));
      } else {
        this.setState({
          oio: open
        });
      }

});
</code></pre>

<p>and </p>

<pre><code>render(){
  let flat = this.state.oio;
  flat.map(function(ducks){
    return (
      &lt;div className=""ListItem""&gt;
        &lt;Link to=""/viewStuff""&gt;View Stuff&lt;/Link&gt;
        &lt;div className=""listLabel""&gt;{ducks.type}&lt;/div&gt;
        &lt;h3&gt;{ducks.description.title}&lt;/h3&gt;
        {ducks.description.long}
      &lt;/div&gt;
    )
  })
}
</code></pre>

<p>and receive</p>

<blockquote>
  <p>Uncaught TypeError: flat.map is not a function
      at Me.render</p>
</blockquote>
","5601989","","5601989","","2017-02-08 22:19:46","2017-02-09 21:26:32","callback render loses router context for child react-router & redux","<javascript><redux><react-router><react-router-redux>","2","0","","",""
"50629526","1","50629602","","2018-05-31 17:12:13","","0","51","<p>I faced this configuration here <a href=""https://github.com/developit/zero-to-preact/blob/master/webpack.config.js"" rel=""nofollow noreferrer"">https://github.com/developit/zero-to-preact/blob/master/webpack.config.js</a></p>

<pre><code>plugins: [
    ['transform-react-jsx', { pragma: 'h' }]
]
</code></pre>

<p>The docs says </p>

<blockquote>
  <p>pragma</p>
  
  <p>string, defaults to React.createElement.</p>
  
  <p>Replace the function used when compiling JSX expressions.</p>
  
  <p>Note that the @jsx React.DOM pragma has been deprecated as of React v0.12</p>
</blockquote>

<p>but no clue about what 'h' means! What is it?</p>
","652528","","","","","2018-05-31 17:17:32","What is ""pragma h"" in transform-react-jsx?","<reactjs><preact>","1","0","","",""
"50886687","1","50886743","","2018-06-16 09:34:35","","0","9","<p>The problem I am having is that</p>

<pre><code>auth.isSignedIn.listen((isLoggedIn) =&gt; ...
</code></pre>

<p>in init() function is firing multiple times. As I log in &amp; out without refreshing, the number of times it fires keeps on increasing. I have added the console log image below. The message 'how many times' should print only once.</p>

<p><a href=""https://i.stack.imgur.com/150jo.png"" rel=""nofollow noreferrer"">console logs</a></p>

<p>Below are my program files</p>

<p>app.js</p>

<pre><code>import React, { Component } from 'react'
import logo from './logo.svg'
import './App.css'
import GoogleOauth from './components/googleOauth.js'

class App extends Component {
  constructor (props) {
    super(props)
    this.state = {
      isLoggedin: false
    }
    this.logoutFunc = this.logoutFunc.bind(this)
    this.init = this.init.bind(this)
    this.signin = this.signin.bind(this)
  }

  logoutFunc () {
    console.log('clicked logout')
    window.gapi.load('auth2', () =&gt; {
      const auth = window.gapi.auth2.getAuthInstance()
      auth.signOut()
      this.setState({
        isLoggedin: !this.state.isLoggedin
      })
    })
  }

  loadScript () {
    const script = document.createElement('script')
    script.src = 'https://apis.google.com/js/client:platform.js'
    script.onload = this.init
    script.id = 'google-login'
    document.head.appendChild(script)
  }

  componentWillMount () {
    console.log('is it the componentWillMount')
    this.loadScript()
  }

  signin () {
    console.log('clicked signin')
    this.init()
    this.logoutFunc()
  }

  init () {
    window.gapi.load('auth2', () =&gt; {
      const auth = window.gapi.auth2.getAuthInstance()
      auth.isSignedIn.listen((isLoggedIn) =&gt; {
        const profile = auth.currentUser.get().getBasicProfile()
        if (isLoggedIn) {
          console.log('how many times')
        }
      })
    })
  }

  render () {
    return (
      &lt;div className='App'&gt;
        &lt;header className='App-header'&gt;
          &lt;img src={logo} className='App-logo' alt='logo' /&gt;
          &lt;h1 className='App-title'&gt;Welcome to React&lt;/h1&gt;
        &lt;/header&gt;
        &lt;p className='App-intro'&gt;
          To get started, edit &lt;code&gt;src/App.js&lt;/code&gt; and save to reload.
        &lt;/p&gt;
        &lt;GoogleOauth logoutFunc={this.logoutFunc} signin={this.signin} /&gt;
      &lt;/div&gt;
    )
  }
}

export default App
</code></pre>

<p>googleOauth.js</p>

<pre><code>import React from 'react'

const GoogleOauth = ({logoutFunc, signin}) =&gt; {
  return (
    &lt;div&gt;
      &lt;div className='g-signin2' data-onsuccess='onSignIn' onClick={signin} data-width='94' data-height='36' /&gt;
      &lt;button onClick={logoutFunc}&gt; logout &lt;/button&gt;
    &lt;/div&gt;
  )
}

export default GoogleOauth
</code></pre>
","6475939","","","","","2018-06-16 09:40:56","The listener to isSignedIn is getting fired multiple times while implementing google oauth 2.0 implicit signing in react","<javascript><reactjs><google-oauth2>","1","0","","",""
"49878569","1","49879450","","2018-04-17 12:46:37","","-1","34","<p>I am trying to create this code in <strong>ReactJS</strong> without <strong>JSX</strong></p>

<pre><code>&lt;li&gt;
  &lt;a href=""javascript:;"" onClick={onClick ? this.handleClick : null}&gt;
    &lt;div className=""home-gallery"" style={{background: `url(${photo})`}}/&gt;
  &lt;/a&gt;
&lt;/li&gt;
</code></pre>

<p>Reason is due to altering previous code in a component that doesn't quite fit my needs. Reading some other posts I came to this but its far from working.</p>

<pre><code>_createClass(Photo, [{
 key: 'handleClick',
  value: function handleClick(event) {
   var _props = this.props,
      onClick = _props.onClick,
        index = _props.index,
        photo = _props.photo;

      onClick(event, { photo: photo, index: index });
  }
}, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
            photo = _props2.photo,
          onClick = _props2.onClick,
           margin = _props2.margin;

      var imgStyle = { background: `url(${photo})`, margin: margin };
      return 

      _react2.default.createElement('li', null,
        _react2.default.createElement('a', _extends({
          onClick: onClick ? this.handleClick : null
        },
          _react2.default.createElement('div', _extends({
            style: onClick ? _extends({}, imgStyle, imgWithClick) : imgStyle
          }))
        ))
      )
  }}]);
</code></pre>

<p>Could someone point me in the direction of fixing this or reference how to best learn what I am doing wrong. </p>

<p><strong>UPDATE</strong></p>

<p>I have no figured out the majority of my query with altering to but the <code>background: 'url(${photo})'</code> is still not producing, whilst the margin is. </p>

<pre><code>var imgStyle = { background: `url(${photo})`, margin: margin };

      return _react2.default.createElement(
        ""li"",
        null,
        _react2.default.createElement(
          ""a"",
          { href: ""javascript:;"", onClick: onClick ? this.handleClick : null },
          _react2.default.createElement(""div"", { className: ""home-gallery"", style: onClick ? _extends({}, imgStyle) : imgStyle })
        )
      );
</code></pre>
","8450582","","8450582","","2018-04-17 13:16:13","2018-04-17 13:28:46","Using ReactJS createElement to output HTML without JSX","<javascript><reactjs>","1","2","","",""
"50896233","1","50896713","","2018-06-17 11:34:37","","0","104","<p>I have the following options and dataset:</p>

<pre><code>const chartData = {
      labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],
      datasets: [{
        label: 'Chart',
        data: this.transformIntoArray(data),
        backgroundColor: 'linear-gradient(to right, #20f08b, #07dfb1)',
        borderColor: '#05deb3'
      }]
    }
</code></pre>

<p>But it does nothing. Im using it as react component and don't know how can I reach the context of the canvas in this case. And also I render many of these charts.</p>

<pre><code>        &lt;Line
          data={chartData}
          options={options}
          height={50}
          width={300}
        /&gt;
</code></pre>

<p>This how I added the gradient to my chart when I was uisng <code>chart.js</code> in not-react app:</p>

<pre><code>var gradient = this.ctx.createLinearGradient(0, 0, document.getElementById(this.id).width, document.getElementById(this.id).height);
    gradient.addColorStop(0, '#20f08b');
    gradient.addColorStop(0.5, '#20f08b');
    gradient.addColorStop(1, '#07dfb1');
    document.getElementById(this.id).style.backgroundColor = 'transparent';

    this.updatedData = {
      labels: labels,
      datasets: [{
        label: 'gradient chart',
        data: this.data,
        backgroundColor: gradient,
        borderColor: gradient
      }]
    };
</code></pre>

<p>How knows how to add the gradient to the <code>Line</code> in the <code>react-chartjs-2</code> ?</p>

<p><strong>@Boy With Silver Wings</strong>,</p>

<p>I dont quite understand how can I use this.</p>

<p>This what I've done for now using this method:</p>

<pre><code>render() {

const getData = (canvas) =&gt; {
      const ctx = canvas.getContext(""2d"");
      const gradient = this.ctx.createLinearGradient(0, 0, 300, 0);
      gradient.addColorStop(0, '#20f08b');
      gradient.addColorStop(0.5, '#20f08b');
      gradient.addColorStop(1, '#07dfb1');

      return {
        labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],
        datasets: [{
          label: 'Chart',
          data: this.transformIntoArray(data),
          backgroundColor: gradient,
          borderColor: '#05deb3'
        }]
      }
    }

    const canvas = document.createElement('canvas');
    const chartData = getData(canvas);

    return (
     &lt;Line
      data={chartData}
      options={options}
      height={50}
      width={300}
    /&gt;
   )
</code></pre>

<p>But it says me <code>TypeError: Cannot read property 'createLinearGradient' of undefined at getData</code></p>
","9952828","","9952828","","2018-06-17 13:09:32","2018-06-17 13:14:12","Change background color to gradient in react-chartjs-2","<reactjs><charts><gradient><react-chartjs>","1","0","","",""
"50857856","1","","","2018-06-14 12:43:08","","0","18","<p>I want to send emails on user's behalf using Gmail API in my react application. For that, I went through this documentation <a href=""https://www.sitepoint.com/mastering-your-inbox-with-gmail-javascript-api/"" rel=""nofollow noreferrer"">https://www.sitepoint.com/mastering-your-inbox-with-gmail-javascript-api/</a> and implemented as below:</p>

<p>When google sign in window pops up, it asks for authorization and after giving permissions, it logs <strong>unauthorized</strong> in my console. It happens every time no matter which google account I use for login. It always logs <strong>Undefined</strong> when I log auth result in the console. When I check the <strong>apps with account access</strong> section in my Gmail, I can see my app there. Now what could possibly go wrong I cant understand. I can't move ahead unless I have the user.</p>

<p>App.js</p>

<pre><code> var clientId = 'xxxxxxxxxxxx';           
 var API_KEY = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx';
 var scopes =
    'https://www.googleapis.com/auth/gmail.readonly '+
    'https://www.googleapis.com/auth/gmail.send';

class App extends Component {

constructor (props) {
  super(props);
  this.handleAuthClick = this.handleAuthClick.bind(this)
 }

componentDidMount() {
  this.handleClientLoad();
}


handleClientLoad = () =&gt; {
  const script = document.createElement(""script"");
  script.src = ""https://apis.google.com/js/client.js"";

  script.async = true
  script.onload = () =&gt; {
    window.gapi.load('client', () =&gt; {
      window.gapi.client.setApiKey(API_KEY);
      window.setTimeout(this.checkAuth(), 1);
    });
  }
  document.body.appendChild(script)
}

checkAuth() {
  window.gapi.auth.authorize({
      client_id: clientId,
      scope: scopes,
      immediate: true
  }, () =&gt; this.handleAuthResult());
}

handleAuthClick() {
  window.gapi.auth.authorize({
      client_id: clientId,
      scope: scopes,
      immediate: false
  }, () =&gt; this.handleAuthResult());
  return false;
}

handleAuthResult(authResult) {
  console.log(authResult);
  if(authResult &amp;&amp; !authResult.error) {
    //success code
    console.log(""authorized"");
  } else {
   //error code
    console.log(""unauthorized"");
  }
}

render() {
  return (
      &lt;button onClick={this.handleAuthClick}&gt;Authorize&lt;/button&gt;
    );
  }
}
</code></pre>
","9382110","","","","","2018-06-14 12:43:08","Cannot authorize user in reactjs application using Google API (gapi)","<reactjs><gapi>","0","0","","",""
"51058863","1","","","2018-06-27 09:14:23","","0","15","<p>Please help me in one more issue, Here is my Response:</p>

<pre><code>""content"": [
                    ""form|{\""name\"":\""registerform\"",\""id\"":\""registerform\""}"",
                    ""h4|{}|Enter Name"",
                    ""input|{\""type\"":\""text\"",\""name\"":\""useremail\"",\""id\"":\""useremail\"",\""required\"":\""true\"", \""placeholder\"":\""Enter Name\""}"",
                    ""h4|{}|Enter Email"",
                    ""input|{\""type\"":\""email\"",\""name\"":\""useremail\"",\""id\"":\""useremail\"",\""required\"":\""false\"", \""placeholder\"":\""Enter Email\""}"",
                    ""h4|{}|Enter Phone"",
                    ""input|{\""type\"":\""number\"",\""name\"":\""usermobile\"",\""id\"":\""usermobile\"",\""required\"":\""true\"", \""placeholder\"":\""Enter Mobile\""}"",
                    ""h4|{}|Select Gender"",
                    ""span|{}|Male"",
                    ""input|{\""type\"":\""radio\"",\""name\"":\""usergender\"",\""id\"":\""usergender1\"",\""value\"":\""Male\"",\""checked\"":\""true\""}"",
                    ""span|{}|Female"",
                    ""input|{\""type\"":\""radio\"",\""name\"":\""usergender\"",\""id\"":\""usergender2\"",\""value\"":\""Female\""}"",
                    ""h4|{}|Enter Address"",
                    ""textarea|{\""name\"":\""useraddress\"",\""id\"":\""useraddress\"", \""placeholder\"":\""Enter Address\""}"",
                    ""h4|{}|"",
                    ""input|{\""type\"":\""submit\"",\""value\"":\""Register\"",\""id\"":\""submitbutton\""}"",
                    ""input|{\""type\"":\""reset\"",\""value\"":\""Reset\"",\""id\"":\""resetbutton\""}""
                ]
</code></pre>

<p>And i want to create form and inputs in react by using this API response.
I am using React.crateElement(tagname, {properties});
issue is all tags are created properly using for loop but form tag is closed just after open. i want that form tag shudl close at the last.</p>

<p>React JS Code IS Below:</p>

<pre><code>var form_array = data_response.layout.body.content[0].split(',');
              var form1_element = Array(React.createElement(form_array[0],form_array[1]));      
              body_arr = form1_element.slice(); 
              for(var i=1;i&lt;data_response.layout.body.content.length;i++)
              {
                  var form_input = data_response.layout.body.content[i].split('|');
                  //console.log(form_input.length);

                   if(form_input.length == 3)
                   {
                       var form_inputs = React.createElement(form_input[0],form_input[1],form_input[2]);      
                   }else if(form_input.length == 2)
                   {
                       var form_parse_input = JSON.parse(form_input[1]);
                       console.log(form_parse_input);
                       var form_inputs = React.createElement(form_input[0],form_parse_input);      
                   }
                       body_arr.push(form_inputs);          
              }
</code></pre>
","9689610","","","","","2018-06-27 09:14:23","Create Form & Form inputes from API response JSON in react","<reactjs>","0","0","","",""
"51134490","1","","","2018-07-02 10:52:27","","0","43","<p>I am working on a react-redux application where the user can submit their feedback/complaint to respective organization. The idea is to send emails on user's consent for which I am using Gmail API. I have integrated a feedback form.</p>

<p>Now the user has to be logged in before submission of the message. I do not want to add Gmail send (<a href=""https://www.googleapis.com/auth/gmail.send"" rel=""nofollow noreferrer"">https://www.googleapis.com/auth/gmail.send</a>) scope with login. Login(on the header) only works with the profile and read-only scopes. Send email permission should only be asked separately when submit is clicked and then take further action on that consent. How can I achieve this send email scope separately? I am writing down my login code as I am not sure what has to be done on submit.</p>

<pre><code>var clientId = 'xxxxxxxxxxxxxxxxxxxx.apps.googleusercontent.com';                    
var API_KEY = 'xxxxxxxxxxxxxxxxxxxxxxxx';
var scopes = 'https://www.googleapis.com/auth/gmail.readonly '+'https://www.googleapis.com/auth/userinfo.profile';

var DISCOVERY_DOCS = [""https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest""];

componentDidMount() {
  this.handleClientLoad();
}


 handleClientLoad = () =&gt; {
    const script = document.createElement(""script"");
    script.src = ""https://apis.google.com/js/client.js"";

  script.async = true
  script.onload = () =&gt; {
    window.gapi.load('client:auth2', () =&gt; {
      window.gapi.client.setApiKey(API_KEY);
      window.setTimeout(this.initClient(), 1);
    });
  }
  document.body.appendChild(script)
}

initClient = () =&gt; {
window.gapi.client.init({
  apiKey: API_KEY,
  discoveryDocs: DISCOVERY_DOCS,
  clientId: clientId,
  scope: scopes,
}).then(() =&gt; {
window.gapi.auth2.getAuthInstance().isSignedIn.listen(this.updateSigninStatus());
      this.updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());
    });
  }

updateSigninStatus = (isSignedIn) =&gt; {
if (isSignedIn) {
  window.gapi.auth2.getAuthInstance().currentUser.listen((user) =&gt; {
    console.log(user);
  });
} else {
    console.log(""error"");
  }
 }

authClick = () =&gt; {
    window.gapi.auth2.getAuthInstance().signIn().then((user) =&gt;
       console.log(user)
 )}
</code></pre>

<p>Following is the order:</p>

<ol>
<li>User logs in</li>
<li>Fill out the feedback form</li>
<li>Hit submit (ask user's consent using Gmail send scope)</li>
<li>Perform actions on the basis of consent.</li>
</ol>

<p>I am stuck on the 3rd step. How to add scope separately to get user consent? </p>
","9382110","","","","","2018-07-02 12:12:31","Gmail API permission to send emails on user consent in my react-redux application?","<javascript><reactjs><redux><gmail-api>","1","0","","",""
"51164844","1","","","2018-07-04 02:01:42","","0","45","<p>I am trying to user a single <code>ToastContainer</code> for all my components in a <code>ReactJS</code> app but I can't seem to figure out how to do it. I tried:</p>

<pre><code>let container;

ReactDOM.render(
  &lt;App container={container}&gt;
    &lt;ToasterContainer ref={ref =&gt; (container = ref)} /&gt;
  &lt;/App&gt;,
  document.getElementById(""root"")
);
</code></pre>

<p>However, I get an error:</p>

<pre><code>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.
</code></pre>

<p>Anybody have any tips on how to do it?</p>

<p>I am open to using any other libraries that may play better with a React app.</p>

<p>I should also mention that my aim is to be able to display toasts from modules that only contain helper functions but do not render anything per se. The biggest problem I have so far with <code>react-toastr</code> is that it requires the <code>ToasterContainer</code> component to be rendered first to be able to display any toasts. My ideal solution would be something I can create like this:</p>

<pre><code>let toastr = new Toastr(/* some options */);
toastr.show(message);
</code></pre>
","1044422","","","","","2018-07-04 08:38:01","How to use react-toastr?","<reactjs><toastr>","1","2","","",""
"51088515","1","","","2018-06-28 17:27:20","","0","20","<p>So I am making a ReactJS app which includes reactstrap, react-router and react-router-bootstrap. The problem is that when I test components which contain LinkContainer, the following error occurs, making my unit tests fail:</p>

<blockquote>
  <p>console.error node_modules\prop-types\checkPropTypes.js:19
        Warning: Failed context type: The context <code>router</code> is marked as required in <code>LinkContainer</code>, but its value is <code>undefined</code>.
            in LinkContainer (at Header.js:27)</p>
</blockquote>

<p>Could anyone please help me out? This is the code, in header.js for example:</p>

<pre><code>import { LinkContainer } from ""react-router-bootstrap"";
import { ROUTE_POKEDEX } from ""../../constants/constants"";

export default class Header extends Component {
  constructor(props) {
    super(props);

    this.toggle = this.toggle.bind(this);
    this.state = {
      isOpen: false
    };
  }

  toggle() {
    this.setState({
      isOpen: !this.state.isOpen
    });
  }

  render() {
    return (
      &lt;Container fluid className=""header""&gt;
        &lt;Navbar expand=""md""&gt;
          &lt;LinkContainer to={ROUTE_POKEDEX}&gt;
            &lt;NavbarBrand&gt;Pokédex&lt;/NavbarBrand&gt;
          &lt;/LinkContainer&gt;
          &lt;NavbarToggler onClick={this.toggle} /&gt;
        &lt;/Navbar&gt;
      &lt;/Container&gt;
    );
  }
}
</code></pre>

<p>test.js</p>

<pre><code>import Header from ""./Header"";

it(""renders without crashing"", () =&gt; {
  const div = document.createElement(""div"");
  ReactDOM.render(&lt;Header /&gt;, div);
  ReactDOM.unmountComponentAtNode(div);
});

it(""has valid snapshot"", () =&gt; {
  const tree = renderer.create(&lt;Header /&gt;).toJSON();
  expect(tree).toMatchSnapshot();
});
</code></pre>
","9481547","","","","","2018-06-28 17:27:20","Test fails when using LinkContainer from react-router-bootstrap","<javascript><reactjs><react-router><react-router-bootstrap>","0","0","","",""
"33450282","1","","","2015-10-31 09:58:56","","0","1287","<p>I want to split my meteor app into web and mobile/cordova parts, however I do not want to duplicate code nor create 2 separate projects. I also want to use React instead of Blaze, as I am more familiar with it (only recenlty started using meteor). There are a lot of discussion how to better split your code for web/mobile (just google), however I liked local packages approach and determined to make it work.</p>

<p>I have found this great <a href=""https://github.com/Compy/meteor-mobile-desktop"" rel=""nofollow"">github repo</a> which shows how to split web and app code, however I am struggling to achieve similar results when adding react. So if someone has a repo or post about how to do it, please share. If no, may be we can make it easy for other developers by making a step by step guide here in this question.</p>

<p>I have not done anything with packages in meteor. So please be patient :-)</p>

<p>Currently I am struggling with even making one package working in my meteor app. So far I have the following (after creating and cleaning meteor app):</p>

<p>1) Run the following command</p>

<p>meteor create --package app-base</p>

<p>2) created root.html in project folder and populated it with</p>

<pre><code>&lt;head&gt;
  &lt;title&gt;despite&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
  &lt;div id=""render-target""&gt;&lt;/div&gt;
&lt;/body&gt;
</code></pre>

<p>3) added some code to app-base.jsx:</p>

<pre><code>if (Meteor.isClient) {
  Meteor.startup(function () {
    // Use Meteor.startup to render the component after the page is ready
    React.render(&lt;App /&gt;, document.getElementById(""render-target""));
  });
}
</code></pre>

<p>4) Added App.jsx:</p>

<pre><code>App = React.createClass({
  render() {
    return (
      &lt;div&gt;
        Hello World!
      &lt;/div&gt;
    )
  }
})
</code></pre>

<p>5) added react and files to package.js: </p>

<pre><code>...
api.use(['ecmascript', 'react']);
api.addFiles(['app-base.js', 'App.jsx']);
...
</code></pre>

<p>6) added app-base to .meteor/packages file</p>

<p>At this point builds, but when opening browser window I get the following error:</p>

<pre><code>Uncaught Error: Invariant Violation: _registerComponent(...): Target container is not a DOM element.
</code></pre>

<p>Seems like Meteor.startup is run before the DOM is rendered?</p>

<p>UPDATE:
I added <code>console.log(document.getElementById(""render-target"")</code> just before <code>ReactDOM.render</code> and it is <code>null</code> for some reason... 
I also tried </p>

<pre><code>document.body.innerHtml = '&lt;div id=""render-target""&gt;&lt;/div&gt;'
ReactDOM.render(&lt;App /&gt;, document.getElementById('render-target'));
</code></pre>

<p>and then</p>

<pre><code>const element = document.createElement('div');
documnet.body.appendChild(element)
ReactDOM.render(&lt;App /&gt;, element);
</code></pre>

<p>And now it renders Hello World on the page! Sweet! Not sure about soundness of this approach though. Also after deleting html file in project dir, app still works</p>
","3194545","","3194545","","2015-10-31 16:03:01","2015-10-31 16:03:01","meteor & react split break down a Meteor app into packages targeting both mobile and desktop","<meteor><reactjs><meteor-react>","0","8","","",""
"51192308","1","51196051","","2018-07-05 13:15:26","","2","47","<p>I'm using Searchkit node module to retrieve data from elasticsearch in a Jekyll project. To do so I use webpack and react like suggest in <a href=""https://blog.omc.io/elasticsearch-for-jekyll-part-4-bb91a0b7ea78"" rel=""nofollow noreferrer"">that tutorial</a>.</p>

<p>I have a issue issue to instantiate a Searchkit object.</p>

<p>When I build my project with webpack and then with Jekyll, I get no error.</p>

<p>But the component that I try to inject doesn't appear on the website and I get this error in the google chrome console : </p>

<pre><code>Search.js:41 Uncaught TypeError: Cannot read property 'SearchkitManager' of undefined
    at eval (Search.js:41)
    at Object../webpack/components/Search.js (bundle.js:6933)
    at __webpack_require__ (bundle.js:20)
    at eval (entry.js:9)
    at Object../webpack/entry.js (bundle.js:6945)
    at __webpack_require__ (bundle.js:20)
    at bundle.js:84
    at bundle.js:87
</code></pre>

<p><em>Search.js:41</em></p>

<pre><code>var sk = new _searchkit2.default.SearchkitManager('http://demo.searchkit.co/api/movies/');
</code></pre>

<p>I try to instantiate it in the console and I get no error.</p>

<p>I think that it's a configuration issue but, I'm not familiar with those technologies.</p>

<p>Is someone has some idea about how to solve this issue ? </p>

<p><em>package.json :</em></p>

<pre><code>{
  ""name"": ""proto_doc"",
  ""version"": ""1.0.0"",
  ""description"": """",
  ""main"": ""index.js"",
  ""devDependencies"": {
    ""babel-core"": ""^6.26.3"",
    ""babel-loader"": ""^7.1.4"",
    ""babel-preset-env"": ""^1.7.0"",
    ""babel-preset-es2015"": ""^6.24.1"",
    ""babel-preset-react"": ""^6.24.1"",
    ""react"": ""^16.4.1"",
    ""react-addons-update"": ""^15.6.2"",
    ""react-dom"": ""^16.4.1"",
    ""searchkit"": ""^2.3.0"",
    ""serviceworker-webpack-plugin"": ""^1.0.0-alpha02"",
    ""webpack"": ""^4.0.0-beta.3"",
    ""webpack-cli"": ""0.0.8-development"",
    ""webpack-dashboard"": ""^2.0.0"",
    ""webpack-dev-server"": ""^3.1.4""
  },
  ""scripts"": {
    ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1"",
    ""dev"": ""npx webpack-cli --mode development""
  },
  ""repository"": {
    ""type"": ""git"",
    ""url"": ""git+https://github.com/pbelabbes/proto_doc.git""
  },
  ""author"": """",
  ""license"": ""ISC"",
  ""bugs"": {
    ""url"": ""https://github.com/pbelabbes/proto_doc/issues""
  },
  ""homepage"": ""https://github.com/pbelabbes/proto_doc#readme""
}
</code></pre>

<p><em>webpack.config.js</em></p>

<pre><code>const webpack = require(""webpack"");
const path = require(""path"");

let config = {
  entry: ""./webpack/entry.js"",
  output: {
    path: path.resolve(__dirname, ""./assets/javascripts/""),
    filename: ""bundle.js""
  },
  module: {
    rules: [
      {
        test: /\.js$/,
        exclude: /node_modules/,
        loader: ""babel-loader"",
        options: {
          presets: ['react', 'es2015']
       }
    }],
  },
  mode: ""development""
}

module.exports = config;
</code></pre>

<p><em>entry.js</em></p>

<pre><code>// Dependencies.
import React from 'react';
import {render} from 'react-dom';

// Custom components.
import Search from './components/Search';

// Mount apps to DOM.
render(&lt;Search /&gt; ,  document.getElementById('react-search'));
</code></pre>

<p><em>Search.js</em> </p>

<pre><code>// 1. Import Dependencies. =====================================================
import React, {Component} from 'react';
import Searchkit,{
    SearchBox,
    RefinementListFilter,
    Hits,
    HitsStats,
    SearchkitComponent,
    SelectedFilters,
    MenuFilter,
    HierarchicalMenuFilter,
    Pagination,
    ResetFilters
    } from ""searchkit"";
import * as _ from ""lodash"";

// custom to my project: generate random example searchbox placeholder.
// import SearchQuotes from './SearchQuotes';
// var randomQuote = SearchQuotes[Math.floor(Math.random() * SearchQuotes.length)];

// 2. Connect elasticsearch with searchkit =====================================
// Set ES url - use a protected URL that only allows read actions.
// const sk = new Searchkit.SearchkitManager(ELASTICSEARCH_URL, {});
const sk = new Searchkit.SearchkitManager('http://demo.searchkit.co/api/movies/');

// Custom hitItem display HTML.
const HitItem = (props) =&gt; (
  &lt;div className={props.bemBlocks.item().mix(props.bemBlocks.container(""item""))}&gt;
    &lt;a href={ `https://omc.github.io/jekyll-elasticsearch-boilerplate${props.result._source.url}` }&gt;
      &lt;div className={props.bemBlocks.item(""title"")} 
        dangerouslySetInnerHTML={{__html:_.get(props.result,""highlight.title"",false) || props.result._source.title}}&gt;&lt;/div&gt;
    &lt;/a&gt;
    &lt;div&gt;
      &lt;small className={props.bemBlocks.item(""hightlights"")}
        dangerouslySetInnerHTML={{__html:_.get(props.result,""highlight.text"",'')}}&gt;&lt;/small&gt;
    &lt;/div&gt;
  &lt;/div&gt;
)

// 3. Search UI. ===============================================================
class Search extends Component {
  render(){
    const SearchkitProvider = Searchkit.SearchkitProvider;
    const Searchbox = Searchkit.SearchBox;
    var queryOpts = {
      analyzer:""standard""
    }
    return (
      &lt;SearchkitProvider searchkit={sk}&gt;
        &lt;div className=""search""&gt;
          &lt;div className=""search__query""&gt;
            {/* search input box */}
            &lt;Searchbox searchOnChange={true}
              autoFocus={true}
              queryOptions={queryOpts}
              translations={{""searchbox.placeholder"":""ex: bcd configuration"", ""NoHits.DidYouMean"":""Search for {suggestion}.""}}
              queryFields={[""text"", ""title""]}/&gt;
          &lt;/div&gt;
          &lt;div className=""_Search_display_wrapper""&gt;
            &lt;div className=""_Search_facets""&gt;
              {/* search faceting */}
              &lt;RefinementListFilter
                id=""categories""
                title=""Category""
                field=""categories""
                operator=""AND""/&gt;
            &lt;/div&gt;
            &lt;div className=""search__results""&gt;
              {/* search results */}
              &lt;Hits hitsPerPage={50}
                highlightFields={[""title"", ""text""]}
                itemComponent={HitItem}/&gt;
              {/* if there are no results */}
              &lt;NoHits className=""sk-hits"" translations={{
                ""NoHits.NoResultsFound"":""No results were found for {query}"",
                ""NoHits.DidYouMean"":""Search for {suggestion}""
                }} suggestionsField=""text""/&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/SearchkitProvider&gt;
    )
  }
}
export default Search;
</code></pre>

<p><em>The Search.js generated by Babel mentionned in the console</em></p>

<pre><code>Object.defineProperty(exports, ""__esModule"", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (""value"" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(/*! react */ ""./node_modules/react/index.js"");

var _react2 = _interopRequireDefault(_react);

var _searchkit = __webpack_require__(/*! searchkit */ ""./node_modules/searchkit/lib/index.js"");

var _searchkit2 = _interopRequireDefault(_searchkit);

var _lodash = __webpack_require__(/*! lodash */ ""./node_modules/lodash/lodash.js"");

var _ = _interopRequireWildcard(_lodash);

function _interopRequireWildcard(obj) { if (obj &amp;&amp; obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj &amp;&amp; obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(""Cannot call a class as a function""); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(""this hasn't been initialised - super() hasn't been called""); } return call &amp;&amp; (typeof call === ""object"" || typeof call === ""function"") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== ""function"" &amp;&amp; superClass !== null) { throw new TypeError(""Super expression must either be null or a function, not "" + typeof superClass); } subClass.prototype = Object.create(superClass &amp;&amp; superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 1. Import Dependencies. =====================================================


// custom to my project: generate random example searchbox placeholder.
// import SearchQuotes from './SearchQuotes';
// var randomQuote = SearchQuotes[Math.floor(Math.random() * SearchQuotes.length)];

// 2. Connect elasticsearch with searchkit =====================================
// Set ES url - use a protected URL that only allows read actions.
var ELASTICSEARCH_URL = 'https://doc-bonita-test-4287920661.us-west-2.bonsaisearch.net/bonita_doc';
console.log(ELASTICSEARCH_URL);
// const sk = new Searchkit.SearchkitManager(ELASTICSEARCH_URL, {});
var sk = new _searchkit2.default.SearchkitManager('http://demo.searchkit.co/api/movies/');

// Custom hitItem display HTML.
var HitItem = function HitItem(props) {
  return _react2.default.createElement(
    ""div"",
    { className: props.bemBlocks.item().mix(props.bemBlocks.container(""item"")) },
    _react2.default.createElement(
      ""a"",
      { href: ""https://omc.github.io/jekyll-elasticsearch-boilerplate"" + props.result._source.url },
      _react2.default.createElement(""div"", { className: props.bemBlocks.item(""title""),
        dangerouslySetInnerHTML: { __html: _.get(props.result, ""highlight.title"", false) || props.result._source.title } })
    ),
    _react2.default.createElement(
      ""div"",
      null,
      _react2.default.createElement(""small"", { className: props.bemBlocks.item(""hightlights""),
        dangerouslySetInnerHTML: { __html: _.get(props.result, ""highlight.text"", '') } })
    )
  );
};

// 3. Search UI. ===============================================================

var Search = function (_Component) {
  _inherits(Search, _Component);

  function Search() {
    _classCallCheck(this, Search);

    return _possibleConstructorReturn(this, (Search.__proto__ || Object.getPrototypeOf(Search)).apply(this, arguments));
  }

  _createClass(Search, [{
    key: ""render"",
    value: function render() {
      var SearchkitProvider = _searchkit2.default.SearchkitProvider;
      var Searchbox = _searchkit2.default.SearchBox;
      var queryOpts = {
        analyzer: ""standard""
      };
      return _react2.default.createElement(
        SearchkitProvider,
        { searchkit: sk },
        _react2.default.createElement(
          ""div"",
          { className: ""search"" },
          _react2.default.createElement(
            ""div"",
            { className: ""search__query"" },
            _react2.default.createElement(Searchbox, { searchOnChange: true,
              autoFocus: true,
              queryOptions: queryOpts,
              translations: { ""searchbox.placeholder"": ""ex: bcd configuration"", ""NoHits.DidYouMean"": ""Search for {suggestion}."" },
              queryFields: [""text"", ""title""] })
          ),
          _react2.default.createElement(
            ""div"",
            { className: ""_Search_display_wrapper"" },
            _react2.default.createElement(
              ""div"",
              { className: ""_Search_facets"" },
              _react2.default.createElement(_searchkit.RefinementListFilter, {
                id: ""categories"",
                title: ""Category"",
                field: ""categories"",
                operator: ""AND"" })
            ),
            _react2.default.createElement(
              ""div"",
              { className: ""search__results"" },
              _react2.default.createElement(_searchkit.Hits, { hitsPerPage: 50,
                highlightFields: [""title"", ""text""],
                itemComponent: HitItem }),
              _react2.default.createElement(NoHits, { className: ""sk-hits"", translations: {
                  ""NoHits.NoResultsFound"": ""No results were found for {query}"",
                  ""NoHits.DidYouMean"": ""Search for {suggestion}""
                }, suggestionsField: ""text"" })
            )
          )
        )
      );
    }
  }]);

  return Search;
}(_react.Component);

exports.default = Search;
</code></pre>
","4773119","","4773119","","2018-07-05 15:14:04","2018-07-05 16:22:43","Issue to instantiate an object using Jekyll, react and webpack","<javascript><reactjs><webpack><jekyll><searchkit>","1","0","","",""
"50635526","1","50724794","","2018-06-01 03:02:36","","1","52","<p>This is my first project with Vue and I'm a couple of months into it. I have test question content in xml. In some cases the xml contains html. I'm grabbing the xml via ajax and using that content in templates which are built dynamically based on the needs of a particular test question instance. I would like to have reactive inputs in which the user will enter answers and then submit for evaluation. The html and number of inputs in a question varies widely in the data. But an example might look something like this </p>

<pre><code>&lt;item id=""q0"" type=""question""&gt;
    &lt;text&gt;Complete the data in the table below.
        &lt;table&gt;
            &lt;tr&gt;
                &lt;th&gt;row 1, col 1&lt;/th&gt;
                &lt;th&gt;row 1, col 2&lt;/th&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td&gt;row 2, col 1&lt;/td&gt;
                &lt;td&gt;
                    &lt;input id=""input0""/&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
        &lt;/table&gt;
    &lt;/text&gt;
&lt;item&gt;
</code></pre>

<p>The issue is that I don't know how to create a reactive input and render the surrounding html dynamically.</p>

<p>I tried this type of thing</p>

<p><a href=""https://jsfiddle.net/4u5tnw90/9/"" rel=""nofollow noreferrer"">https://jsfiddle.net/4u5tnw90/9/</a></p>

<p>but if you add v-html=""item"" to div#table it breaks. I assume because the html pieces are not legal html. I'm thinking that I'm going to have to parse the text element and create a VNode with createElement for each html element contained within and then render it. But I'm hoping that someone can save me from that fate. Is there another way? </p>
","1216749","","1216749","","2018-06-01 13:27:18","2018-06-08 12:58:58","Vue 2: reactive input in abritrary html","<javascript><html><vuejs2>","2","0","","",""
"50586974","1","","","2018-05-29 14:31:30","","5","145","<p>I get this error while trying to run npm.test for the App.test.js that you get when installing reactjs. Any thoughts on how to solve this? I've added some extra code etc now.</p>

<pre><code>&gt; client@0.1.0 test /Users/filipmyllari/Documents/1DV430/fm222hp- 
project/client
react-scripts test --env=jsdom

&gt;2018-05-29 16:26 node[535] (FSEvents.framework) FSEventStreamStart: 
register_with_server: ERROR: f2d_register_rpc() =&gt; (null) (-22)
2018-05-29 16:26 node[535] (FSEvents.framework) FSEventStreamStart: 
register_with_server: ERROR: f2d_register_rpc() =&gt; (null) (-22)
events.js:182
  throw er; // Unhandled 'error' event
  ^

&gt;Error: Error watching file for changes: EMFILE
at _errnoException (util.js:1019:11)
at FSEvent.FSWatcher._handle.onchange (fs.js:1360:9)
npm ERR! Test failed.  See above for more details.
</code></pre>

<p>Here is the package.json file</p>

<pre><code>{
 ""name"": ""client"",
 ""version"": ""0.1.0"",
 ""private"": true,
 ""dependencies"": {
 ""add"": ""^2.0.6"",
 ""babel-jest"": ""^23.0.1"",
 ""babel-preset-env"": ""^1.7.0"",
 ""babel-preset-react"": ""^6.24.1"",
 ""firebase"": ""^4.13.1"",
 ""jest"": ""^23.0.1"",
 ""lodash"": ""^4.17.5"",
 ""react"": ""^16.3.1"",
 ""react-dom"": ""^16.3.1"",
 ""react-router-dom"": ""^4.2.2"",
 ""react-scripts"": ""1.1.4"",
 ""react-test-renderer"": ""^16.4.0"",
 ""yarn"": ""^1.7.0""
 },
 ""scripts"": {
 ""start"": ""react-scripts start"",
 ""build"": ""react-scripts build"",
 ""test"": ""react-scripts test --env=jsdom"",
 ""eject"": ""react-scripts eject""
},
""devDependencies"": {
 ""enzyme"": ""^3.3.0"",
 ""react-addons-test-utils"": ""^15.6.2""
}
}
</code></pre>

<p>The code comes below here (App.test.js)</p>

<pre><code>import React from 'react'
import ReactDOM from 'react-dom'
import App from './App'

it('renders without crashing', () =&gt; {
  const div = document.createElement('div')
  ReactDOM.render(&lt;App /&gt;, div)
})

describe('Addition', () =&gt; {
  it('knows that 2 and 2 make 4', () =&gt; {
    expect(2 + 2).toBe(4);
  });
});
</code></pre>
","9864339","","9864339","","2018-05-29 14:54:14","2018-06-10 17:23:12","Error with reactjs App.test.js","<javascript><reactjs>","1","6","","",""
"50618398","1","50620333","","2018-05-31 06:55:48","","0","82","<p>so I have this react component, with a dropdown property (SPFx) which has 2 values, I need that when the dropdown is changed the react is re-rendered again, the dropdown defines the datasource from where the values will be retrieved.</p>

<p>Webpart.ts</p>

<pre><code>import * as React from 'react';
import * as ReactDom from 'react-dom';
import { Version } from '@microsoft/sp-core-library';
import {  
  BaseClientSideWebPart,
  IPropertyPaneConfiguration,
  PropertyPaneDropdown
} from ""@microsoft/sp-webpart-base"";

import * as strings from 'AbstractfactoryWebPartStrings';
import Abstractfactory from './components/Abstractfactory';
import { IAbstractFactoryProps } from './components/IAbstractFactoryProps';
import { IAbstractfactoryWebPartProps } from ""./IAbstractfactoryWebPartProps"";




export default class AbstractfactoryWebPart extends BaseClientSideWebPart&lt;IAbstractfactoryWebPartProps&gt; {

  public render(): void {
    const element: React.ReactElement&lt;IAbstractFactoryProps &gt; = React.createElement(
      Abstractfactory,
      {
        datasource: this.properties.datasource
      }
    );

    ReactDom.render(element, this.domElement);
  }

  protected get dataVersion(): Version {
    return Version.parse('1.0');
  }

  protected onPropertyPaneFieldChanged(propertyPath: string, oldValue: any, newValue: any): void {

    super.onPropertyPaneFieldChanged(propertyPath, oldValue, newValue);
  }

  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {
    return {
      pages: [
        {
          header: {
            description: strings.PropertyPaneDescription
          },
          groups: [
            {
              groupName: strings.BasicGroupName,
              groupFields: [
                PropertyPaneDropdown(""datasource"", {
                  label: ""DataSource"",
                  options: [
                      { key: ""1"", text: ""Sharepoint""},
                      { key: ""2"", text: ""JSON"" }
                    ],
                  selectedKey: ""1"",
                  })
              ]
            }
          ]
        }
      ]
    };
  }
}
</code></pre>

<p>Component.tsx</p>

<pre><code>import * as React from 'react';
import { IAbstractFactoryProps } from ""./IAbstractFactoryProps"";  
import { IAbstractFactoryState } from ""./IAbstractFactoryState"";  
import styles from './Abstractfactory.module.scss';
import { escape } from '@microsoft/sp-lodash-subset';
import DaoFactory from ""./DaoFactory"";  
import ICustomerDao from ""./ICustomerDao"";  
import DataSources from ""./DatasourcesEnum"";

export default class Abstractfactory extends React.Component&lt;IAbstractFactoryProps, IAbstractFactoryState&gt; {
  //Private instance of customerDao, please note it returns ICustomerDao, an Interface,
    //not a concrete type
    private customerDao: ICustomerDao;

    constructor(props: IAbstractFactoryProps, state: IAbstractFactoryState) {
      super(props);
      this.setInitialState();

      // We set the Dao depending on the selected data source
      this.setDaos(props.datasource);

      //Then we set the list of customers and note, we dont care if they come from Sharepoint
      //Rest API or anything else.
      this.state = {
        items: this.customerDao.listCustomers(),
      };
    }

    public render(): React.ReactElement&lt;IAbstractFactoryProps&gt; {
      return (
        &lt;div className={ styles.abstractfactory }&gt;
          &lt;div className={ styles.container }&gt;
            &lt;div className={ styles.row }&gt;
              &lt;div className={ styles.column }&gt;
              {this.state.items.map( i =&gt; (&lt;div key={i.id}&gt;{i.firstName}&lt;/div&gt;))}
             &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      );
    }

    public setInitialState(): void {
      this.state = {
        items: []
      };
    }

    private setDaos(datasource: string): void {
      const data: DataSources = datasource === ""Sharepoint"" ? DataSources.SharepointList : DataSources.JsonData;
      this.customerDao = DaoFactory.getDAOFactory(data).getCustomerDAO();

      //Now, its transparent for us a UI developers what datasource was selected
      //this.customerDao.
    }
}
</code></pre>

<p>State</p>

<pre><code>import Customer from ""./Customer"";

export interface IAbstractFactoryState {  
    items?: Customer[];
  }
</code></pre>

<p>DaoFactory</p>

<pre><code>import ICustomerDAO from ""./ICustomerDAO"";  

import DataSources from ""./DatasourcesEnum"";

abstract class DAOFactory {

    //For each entity we will need to implement getCustomerDAO, this will make it easily replaceable
    //when another datasource comes in
    public abstract getCustomerDAO(): ICustomerDAO;

    //Static method that receives a parameter depending on the datasource and will return the specifc 
    //factory
    public  static getDAOFactory(whichFactory: DataSources): DAOFactory {
        switch (whichFactory) {
          case DataSources.SharepointList:
            return new SharepointListDAOFactory();
          case DataSources.JsonData:
            return new JsonDAOFactory();
          default  :
            return null;
        }
      }
}

export default DAOFactory;
import SharepointListDAOFactory from ""./SharepointListDAOFactory"";  
import JsonDAOFactory from ""./JsonDAOFactory"";  
</code></pre>

<p>JsonCustomerDao.ts</p>

<pre><code>import ICustomerDao from ""./ICustomerDao"";  
import Customer from ""./Customer"";

  class JsonCustomerDAO implements ICustomerDao{
    public insertCustomer(): number {
        // implementation to be done by reader
        return 1;
    }

    public deleteCustomer(): boolean {
        // implementation to be done by reader
        return true;
    }

    public findCustomer(): Customer {
        // implementation to be done by reader
        return new Customer();
    }

    public updateCustomer(): boolean {
        // implementation to be done by reader
        return true;
    }

    public listCustomers(): Customer[] {
        // implementation to be done by reader
        let c1: Customer= new Customer();
        let c2: Customer= new Customer();
        c1.id=""3"";
        c1.firstName=""Andrew"";
        c1.lastName=""Valencia"";
        c2.id=""4"";
        c2.firstName=""Charles"";
        c2.lastName=""Smith"";


        let list: Array&lt;Customer&gt; = [c1, c2 ];
        return list;
    }
}

export default JsonCustomerDAO;
</code></pre>

<p>SharepointCustomerDao</p>

<pre><code>import ICustomerDao from ""./ICustomerDao"";  
import Customer from ""./Customer"";

 class SharepointCustomerDao implements ICustomerDao {
    public insertCustomer(): number {
        // implementation to be done by reader
        return 1;
    }

    public deleteCustomer(): boolean {
         // implementation to be done by reader
        return true;
    }

    public findCustomer(): Customer {
         // implementation to be done by reader
        return new Customer();
    }

    public updateCustomer(): boolean {
         // implementation to be done by reader
        return true;
    }

    public listCustomers(): Customer[] {
         // implementation to be done by reader
        let c1: Customer = new Customer();
        c1.id=""1"";
        c1.firstName=""Luis"";
        c1.lastName=""Valencia"";
        let c2: Customer = new Customer();
        c2.id=""2"";
        c2.firstName=""John"";
        c2.lastName=""Smith"";
        let list: Array&lt;Customer&gt; = [c1, c2 ];
        return list;
    }
}

export default SharepointCustomerDao;
</code></pre>

<p>The first time its executed the values are rendered for the default datasource, but when the property changes, the UI is not changing with the new values.</p>

<p>I found that I can use this event to set the new props datasource value when the dropdown changes</p>

<pre><code> protected onPropertyPaneFieldChanged(propertyPath: string, oldValue: any, newValue: any): void {
    this.properties[this.properties.datasource] = newValue;


    this.render();

    super.onPropertyPaneFieldChanged(propertyPath, oldValue, newValue);
  }
</code></pre>

<p>However the view is not re-rendered, can I use any of the react js events to re-render or re-set the status when a prop is changed?</p>
","1014217","","1014217","","2018-05-31 09:39:13","2018-05-31 10:37:11","How to re-render react component when a property changes","<javascript><reactjs><sharepoint><spfx>","1","0","","",""
"51127542","1","","","2018-07-01 22:53:25","","1","49","<p>I have this simple code I'm trying to use <code>replace prototype</code> to replace the old content and create new element with new content.</p>

<p>For example</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>class App extends React.Component {
constructor() {
    super();
    this.state = {
      name: 'bold'
    };
  }
  replace = () =&gt;{
    let oldState = this.state.name;
    oldState = oldState.replace(/bold/i, React.createElement('b',{ children: 'withBold'}) )
    console.log(oldState)
    this.setState({ name: oldState})
  }
  render() {
    return (
      &lt;div&gt;
      &lt;button onClick={this.replace}&gt;Click&lt;/button&gt;&lt;br /&gt;
       {this.state.name}
      &lt;/div&gt;
    );
  }
}

ReactDOM.render(&lt;App /&gt;, document.getElementById('code'));</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react.min.js""&gt;&lt;/script&gt;
&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react-dom.min.js""&gt;&lt;/script&gt;
&lt;div id='code'&gt;&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<p>I have tried <code>document.createElement</code> I got <code>[object HTMLElement]</code></p>

<p>What's wrong in my code?</p>
","9291622","","","","","2018-07-02 01:47:52","React createElement not working return [object Object]","<javascript><reactjs>","1","2","","",""