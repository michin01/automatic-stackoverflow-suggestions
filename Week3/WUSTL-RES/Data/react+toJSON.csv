Id,Title,CommentCount,Body,Text
"15474485","Java String conversion to JSON can not be done","6","<p>I have JSON which I get from server:</p>

<pre><code> ""[{\""id\"":\""1\"",\""name\"":\""Milos\"",\""city\"":\""Smederevo\"",\""email\"":\""milos\"",\""password\"":\""\""},
 {\""id\"":\""3\"",\""name\"":\""Boban\"",\""city\"":\""Beograd\"",\""email\"":\""bole\"",\""password\"":\""\""},
 {\""id\"":\""4\"",\""name\"":\""Pele\"",\""city\"":\""Brazil\"",\""email\"":\""pele@pele.com\"",\""password\"":\""\""},
 {\""id\"":\""5\"",\""name\"":\""admin\"",\""city\"":\""Smederevo\"",\""email\"":\""admin\"",\""password\"":\""\""}]""
</code></pre>

<p>I am using that json and sending to my thread (android thread):</p>

<pre><code>  try {
            // Method from which I am getting Json described above
            String s = dm.getAllUsers();

            /*JSONParser jp = new JSONParser();             
            JsonElement jelement = new JsonParser().parse(s);   
                JsonArray array1 = jelement.getAsJsonArray();*/

            JSONArray array = new JSONArray(s);
            for (int i = 0; i &lt; array.length(); i++) {

                 JSONObject menuObject = array.getJSONObject(i);

                 // doing something with the object
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }
</code></pre>

<p>I can not process that Json at all.
I am getting the error ""java.lang.String cannot be converted to JSONArray"".
A know that problem is caused by ""\"", and I just do not know how to get rid of ""\"".</p>

<p>I tried:</p>

<pre><code>1) s.replace(""\\"", """");
2) s.replace(""\"""", ""'"");
3) s.replaceAll(""\\"", """");
4) s.replaceAll(""\"""", ""'"");
</code></pre>

<p>In order to erase ""\"" but replace do not react at all.
I also tried to solve problem with ""google-gson-2.2.2"" library (code under the comment above, under the method).</p>

<p>Any advice, please?</p>
","what server are you using?"
"15474485","Java String conversion to JSON can not be done","6","<p>I have JSON which I get from server:</p>

<pre><code> ""[{\""id\"":\""1\"",\""name\"":\""Milos\"",\""city\"":\""Smederevo\"",\""email\"":\""milos\"",\""password\"":\""\""},
 {\""id\"":\""3\"",\""name\"":\""Boban\"",\""city\"":\""Beograd\"",\""email\"":\""bole\"",\""password\"":\""\""},
 {\""id\"":\""4\"",\""name\"":\""Pele\"",\""city\"":\""Brazil\"",\""email\"":\""pele@pele.com\"",\""password\"":\""\""},
 {\""id\"":\""5\"",\""name\"":\""admin\"",\""city\"":\""Smederevo\"",\""email\"":\""admin\"",\""password\"":\""\""}]""
</code></pre>

<p>I am using that json and sending to my thread (android thread):</p>

<pre><code>  try {
            // Method from which I am getting Json described above
            String s = dm.getAllUsers();

            /*JSONParser jp = new JSONParser();             
            JsonElement jelement = new JsonParser().parse(s);   
                JsonArray array1 = jelement.getAsJsonArray();*/

            JSONArray array = new JSONArray(s);
            for (int i = 0; i &lt; array.length(); i++) {

                 JSONObject menuObject = array.getJSONObject(i);

                 // doing something with the object
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }
</code></pre>

<p>I can not process that Json at all.
I am getting the error ""java.lang.String cannot be converted to JSONArray"".
A know that problem is caused by ""\"", and I just do not know how to get rid of ""\"".</p>

<p>I tried:</p>

<pre><code>1) s.replace(""\\"", """");
2) s.replace(""\"""", ""'"");
3) s.replaceAll(""\\"", """");
4) s.replaceAll(""\"""", ""'"");
</code></pre>

<p>In order to erase ""\"" but replace do not react at all.
I also tried to solve problem with ""google-gson-2.2.2"" library (code under the comment above, under the method).</p>

<p>Any advice, please?</p>
","i think you need to fix your server rather than doing extra work at client side"
"15474485","Java String conversion to JSON can not be done","6","<p>I have JSON which I get from server:</p>

<pre><code> ""[{\""id\"":\""1\"",\""name\"":\""Milos\"",\""city\"":\""Smederevo\"",\""email\"":\""milos\"",\""password\"":\""\""},
 {\""id\"":\""3\"",\""name\"":\""Boban\"",\""city\"":\""Beograd\"",\""email\"":\""bole\"",\""password\"":\""\""},
 {\""id\"":\""4\"",\""name\"":\""Pele\"",\""city\"":\""Brazil\"",\""email\"":\""pele@pele.com\"",\""password\"":\""\""},
 {\""id\"":\""5\"",\""name\"":\""admin\"",\""city\"":\""Smederevo\"",\""email\"":\""admin\"",\""password\"":\""\""}]""
</code></pre>

<p>I am using that json and sending to my thread (android thread):</p>

<pre><code>  try {
            // Method from which I am getting Json described above
            String s = dm.getAllUsers();

            /*JSONParser jp = new JSONParser();             
            JsonElement jelement = new JsonParser().parse(s);   
                JsonArray array1 = jelement.getAsJsonArray();*/

            JSONArray array = new JSONArray(s);
            for (int i = 0; i &lt; array.length(); i++) {

                 JSONObject menuObject = array.getJSONObject(i);

                 // doing something with the object
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }
</code></pre>

<p>I can not process that Json at all.
I am getting the error ""java.lang.String cannot be converted to JSONArray"".
A know that problem is caused by ""\"", and I just do not know how to get rid of ""\"".</p>

<p>I tried:</p>

<pre><code>1) s.replace(""\\"", """");
2) s.replace(""\"""", ""'"");
3) s.replaceAll(""\\"", """");
4) s.replaceAll(""\"""", ""'"");
</code></pre>

<p>In order to erase ""\"" but replace do not react at all.
I also tried to solve problem with ""google-gson-2.2.2"" library (code under the comment above, under the method).</p>

<p>Any advice, please?</p>
","I would do `s = s.replaceAll(""\\\"""", ""\"""");` (replace \"" by "", while leaving potential other \ untouched)"
"15474485","Java String conversion to JSON can not be done","6","<p>I have JSON which I get from server:</p>

<pre><code> ""[{\""id\"":\""1\"",\""name\"":\""Milos\"",\""city\"":\""Smederevo\"",\""email\"":\""milos\"",\""password\"":\""\""},
 {\""id\"":\""3\"",\""name\"":\""Boban\"",\""city\"":\""Beograd\"",\""email\"":\""bole\"",\""password\"":\""\""},
 {\""id\"":\""4\"",\""name\"":\""Pele\"",\""city\"":\""Brazil\"",\""email\"":\""pele@pele.com\"",\""password\"":\""\""},
 {\""id\"":\""5\"",\""name\"":\""admin\"",\""city\"":\""Smederevo\"",\""email\"":\""admin\"",\""password\"":\""\""}]""
</code></pre>

<p>I am using that json and sending to my thread (android thread):</p>

<pre><code>  try {
            // Method from which I am getting Json described above
            String s = dm.getAllUsers();

            /*JSONParser jp = new JSONParser();             
            JsonElement jelement = new JsonParser().parse(s);   
                JsonArray array1 = jelement.getAsJsonArray();*/

            JSONArray array = new JSONArray(s);
            for (int i = 0; i &lt; array.length(); i++) {

                 JSONObject menuObject = array.getJSONObject(i);

                 // doing something with the object
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }
</code></pre>

<p>I can not process that Json at all.
I am getting the error ""java.lang.String cannot be converted to JSONArray"".
A know that problem is caused by ""\"", and I just do not know how to get rid of ""\"".</p>

<p>I tried:</p>

<pre><code>1) s.replace(""\\"", """");
2) s.replace(""\"""", ""'"");
3) s.replaceAll(""\\"", """");
4) s.replaceAll(""\"""", ""'"");
</code></pre>

<p>In order to erase ""\"" but replace do not react at all.
I also tried to solve problem with ""google-gson-2.2.2"" library (code under the comment above, under the method).</p>

<p>Any advice, please?</p>
",".net restful WS, runs on IIS. userList is list of user object."
"15474485","Java String conversion to JSON can not be done","6","<p>I have JSON which I get from server:</p>

<pre><code> ""[{\""id\"":\""1\"",\""name\"":\""Milos\"",\""city\"":\""Smederevo\"",\""email\"":\""milos\"",\""password\"":\""\""},
 {\""id\"":\""3\"",\""name\"":\""Boban\"",\""city\"":\""Beograd\"",\""email\"":\""bole\"",\""password\"":\""\""},
 {\""id\"":\""4\"",\""name\"":\""Pele\"",\""city\"":\""Brazil\"",\""email\"":\""pele@pele.com\"",\""password\"":\""\""},
 {\""id\"":\""5\"",\""name\"":\""admin\"",\""city\"":\""Smederevo\"",\""email\"":\""admin\"",\""password\"":\""\""}]""
</code></pre>

<p>I am using that json and sending to my thread (android thread):</p>

<pre><code>  try {
            // Method from which I am getting Json described above
            String s = dm.getAllUsers();

            /*JSONParser jp = new JSONParser();             
            JsonElement jelement = new JsonParser().parse(s);   
                JsonArray array1 = jelement.getAsJsonArray();*/

            JSONArray array = new JSONArray(s);
            for (int i = 0; i &lt; array.length(); i++) {

                 JSONObject menuObject = array.getJSONObject(i);

                 // doing something with the object
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }
</code></pre>

<p>I can not process that Json at all.
I am getting the error ""java.lang.String cannot be converted to JSONArray"".
A know that problem is caused by ""\"", and I just do not know how to get rid of ""\"".</p>

<p>I tried:</p>

<pre><code>1) s.replace(""\\"", """");
2) s.replace(""\"""", ""'"");
3) s.replaceAll(""\\"", """");
4) s.replaceAll(""\"""", ""'"");
</code></pre>

<p>In order to erase ""\"" but replace do not react at all.
I also tried to solve problem with ""google-gson-2.2.2"" library (code under the comment above, under the method).</p>

<p>Any advice, please?</p>
","My server side is simple:                                        return jSearializer.Serialize(userList);    It just return serialized json object from the ""userList""."
"15474485","Java String conversion to JSON can not be done","6","<p>I have JSON which I get from server:</p>

<pre><code> ""[{\""id\"":\""1\"",\""name\"":\""Milos\"",\""city\"":\""Smederevo\"",\""email\"":\""milos\"",\""password\"":\""\""},
 {\""id\"":\""3\"",\""name\"":\""Boban\"",\""city\"":\""Beograd\"",\""email\"":\""bole\"",\""password\"":\""\""},
 {\""id\"":\""4\"",\""name\"":\""Pele\"",\""city\"":\""Brazil\"",\""email\"":\""pele@pele.com\"",\""password\"":\""\""},
 {\""id\"":\""5\"",\""name\"":\""admin\"",\""city\"":\""Smederevo\"",\""email\"":\""admin\"",\""password\"":\""\""}]""
</code></pre>

<p>I am using that json and sending to my thread (android thread):</p>

<pre><code>  try {
            // Method from which I am getting Json described above
            String s = dm.getAllUsers();

            /*JSONParser jp = new JSONParser();             
            JsonElement jelement = new JsonParser().parse(s);   
                JsonArray array1 = jelement.getAsJsonArray();*/

            JSONArray array = new JSONArray(s);
            for (int i = 0; i &lt; array.length(); i++) {

                 JSONObject menuObject = array.getJSONObject(i);

                 // doing something with the object
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }
</code></pre>

<p>I can not process that Json at all.
I am getting the error ""java.lang.String cannot be converted to JSONArray"".
A know that problem is caused by ""\"", and I just do not know how to get rid of ""\"".</p>

<p>I tried:</p>

<pre><code>1) s.replace(""\\"", """");
2) s.replace(""\"""", ""'"");
3) s.replaceAll(""\\"", """");
4) s.replaceAll(""\"""", ""'"");
</code></pre>

<p>In order to erase ""\"" but replace do not react at all.
I also tried to solve problem with ""google-gson-2.2.2"" library (code under the comment above, under the method).</p>

<p>Any advice, please?</p>
","is it running PHP?"
"35092781","How to access values from a java.util.Map that was serialized to JSON where the key is an ebean.Model with Javascript","1","<p>I am using playframework 2.4.4 and am trying to achieve the following:</p>

<p>In the backend I serialize a <code>Map&lt;Lagerplatz, Integer&gt;</code> to JSON (<code>com.fasterxml.jackson</code>) where <code>Lagerplatz</code> is a class inheriting from <code>com.avaje.ebean.Model</code>.</p>

<p>In the frontend I want to deserialize the map to construct a picking list, telling the picker from which place (=Lagerplatz) to pick how many items.</p>

<p>The JSON I get from the serialization looks like this:</p>

<pre><code>{
    ""models.Lagerplatz@21"":3,
    ""models.Lagerplatz@2"":6,
    ""models.Lagerplatz@3"":3,
    ""models.Lagerplatz@47"":0,
    ""models.Lagerplatz@48"":0,
    ""models.Lagerplatz@a"":3,
    ""models.Lagerplatz@c"":3,
    ""models.Lagerplatz@15"":3,
    ""models.Lagerplatz@36"":3,
    ""models.Lagerplatz@37"":3,
    ""models.Lagerplatz@18"":3,
    ""models.Lagerplatz@38"":6,
    ""models.Lagerplatz@39"":6,
    ""models.Lagerplatz@3a"":6
}
</code></pre>

<p>...so instead of serializing the whole Lagerplatz-object - for some reason only a String representation that looks like some kind of id is sent via JSON.</p>

<p>My question is how to access e.g. the value ""3"" for the key ""models.Lagerplatz@21"" with Javascript when all I have is a list with real Lagerplatz objects...how do I find out which Lagerplatz object refers to which ""id""?</p>

<p>(By the way: I also serialize a java.util.List which carries the order in which the picker is supposed to pick the items and here the Lagerplatz objects get serialized ""normally"" so there actually is a whole Lagerplatz object in the JSON...)</p>

<p>This is the class Lagerplatz:</p>

<pre><code>    package models;

import javax.persistence.*;
import play.data.validation.Constraints.Min;
import play.data.validation.Constraints.Required;
import com.avaje.ebean.Model;
import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

@Entity
public class Lagerplatz extends Model {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @Required
    @Min(0)
    private int menge;

    @Required
    @Min(1)
    private int kapazitaet;

    @Required
    @ManyToOne
    @JsonManagedReference
    private Material material;

    @Required
    @ManyToOne
    @JsonBackReference
    private Kommissionierlager kommissionierlager;

    @OneToOne
    @JsonManagedReference
    private Lagerplatz vorgaenger;

    @OneToOne
    @JsonBackReference
    private Lagerplatz nachfolger;


    public static Finder&lt;Long,Lagerplatz&gt; find = new Finder&lt;&gt;(Lagerplatz.class);
}
</code></pre>
","Hi. It looks like the ""toJson"" code is using some sort of Lagerplatz.toString rather than actually converting it to a json object. Would it not make more sense to fix that - get the server to send you an array of Lagerplatz objects ... something like `""{ lagerplatze"":[{""id"":3,""menge"":12, ""kapazitaet"":340 ...`?"
"39947244","In react native this.setState() does not changes the state in fetch function","0","<p>I have been searching for solutions for day, I learned a lot, but did not figure out what is wrong. Here what I do:</p>

<ol>
<li>Calling the App constructor; initialising the state loading, dataSource and data </li>
<li>when the component mounts, the program calls the getData function with the requested URL</li>
<li>The getData function is an asynchronous fetch function</li>
<li>then the data is converted to JSON</li>
<li>then the JSON is cloned to became a datablob for the webview</li>
<li>then the setState function is called, changing the loading and the data.</li>
</ol>

<p>This is where the setState does not fire. Not even the the render (it should). Every tutorial, every forum shows it to be this way (and its also logical).</p>

<p>Here is the code:</p>

<pre><code>import Exponent from 'exponent';
import React from 'react';
import {
  StyleSheet,
  Text,
  View,
  ListView,
  ActivityIndicator
} from 'react-native';

import { Button, Card } from 'react-native-material-design';
import {UnitMenuCard} from './unitmenucard.js';

class App extends React.Component {
  constructor(props) {
    super(props);
    const ds = new ListView.DataSource({rowHasChanged: (r1, r2) =&gt; r1 !== r2});
    this.state = {
      loading: true,
      dataSource: ds,
      data: null
    }
  }

  componentDidMount() {
    //console.log('componentDidMount');
    this.getData('https://dl.dropboxusercontent.com/u/76599014/testDATA.json');
  }

  getData(url) {
    console.log('loading data');
    return fetch(url).then(
      (rawData) =&gt; {
        console.log('parsing data');
        //console.table(rawData);
        return rawData.json();
      }
    ).then(
      (jsonData) =&gt;
      {
        console.log('parsing to datablobs');
        let datablobs = this.state.dataSource.cloneWithRows(jsonData);
        console.log('datablobs: ' + datablobs);
        return datablobs;
      }
    ).then(
        (datablobs) =&gt; {
          console.log('setting state');
          this.setState = ({
            loading: false,
            data: datablobs
          });
          console.log('the loading is '  + this.state.loading);
          console.log('the data is '  + this.state.data);
        }
    ).catch((errormsg) =&gt;
      {console.error('Loading error: ' + errormsg);}
    );
  }

  render() {
    console.log('loading is ' + this.state.loading);
    var dataToDisplay = '';
    if(this.state.loading) {
      dataToDisplay = &lt;ActivityIndicator animated={true} size='large' /&gt;
    } else {
      //let jdt = this.state.dataSource.cloneWithRows(this.state.data);
      dataToDisplay = &lt;ListView
        dataSource={this.state.ds}
        renderRow={(unit) =&gt; &lt;UnitMenuCard name={unit.name} image={unit.picture} menu={unit.menu}/&gt;}
        /&gt;
    }
    return (
      &lt;View style={styles.container}&gt;
        {dataToDisplay}
      &lt;/View&gt;
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',

  },
});

Exponent.registerRootComponent(App);
</code></pre>

<p>Did I missed something? Thank you forward for your answer mighty Stack Overflow.</p>
",""
"40852131","Refs are null in Jest snapshot tests with react-test-renderer","1","<p>Currently I am manually initializing Quill editor on componentDidMount and jest tests fail for me. Looks like ref value that I am getting is null in jsdom. There is and issue here: <a href=""https://github.com/facebook/react/issues/7371"" rel=""noreferrer"">https://github.com/facebook/react/issues/7371</a> but looks like refs should work. Any ideas what I should check?</p>

<p>Component:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React, { Component } from 'react';
import logo from './logo.svg';
import './App.css';

class App extends Component {

  componentDidMount() {
    console.log(this._p)
  }
  
  render() {
    return (
      &lt;div className=""App""&gt;
        &lt;div className=""App-header""&gt;
          &lt;img src={logo} className=""App-logo"" alt=""logo"" /&gt;
          &lt;h2&gt;Welcome to React&lt;/h2&gt;
        &lt;/div&gt;
        &lt;p className=""App-intro"" ref={(c) =&gt; { this._p = c }}&gt;
          To get started, edit &lt;code&gt;src/App.js&lt;/code&gt; and save to reload.
        &lt;/p&gt;
      &lt;/div&gt;
    );
  }
}</code></pre>
</div>
</div>
</p>

<p>Test:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';
import renderer from 'react-test-renderer'

it('snapshot testing', () =&gt; {
    const tree = renderer.create(
        &lt;App /&gt;
    ).toJSON()
    expect(tree).toMatchSnapshot()  
})</code></pre>
</div>
</div>
</p>

<p>As a result, console.log outputs null. But I would expect P tag</p>
","Please add the relevant bits of code directly to the question."
"40859351","Play Scala JSON - conditionally add field to JSON object in Writes","0","<p>In our app, we have pretty complex structure of objects that is getting converted to JSON and back. Until now most of the formatted are symmetrical (except some very specific cases, and even these for security reasons).</p>

<p>Now we are facing a more complex case where conversion of an object into JSON (writes) needs to create an additional field at a time of conversion while the case class does not have that field.
For example, here is one of our existing formatters:</p>

<pre><code>case class ChecklistColumn(kind: ColumnKind.Value, descriptor: Descriptor.Value, data: JsValue) extends Column

implicit val checklistResultChecklistDataFormat: Format[ChecklistColumn] = (
  (__ \ ""kind"").format[ColumnKind.Value] and
  (__ \ ""descriptor"").format[Descriptor.Value] and
  (__ \ ""data"").format[JsValue]
)(ChecklistColumn.apply, unlift(ChecklistColumn.unapply))
</code></pre>

<p>This one creates a json that will looks like:</p>

<pre><code>{
  ""kind"": &lt;String&gt;,
  ""descriptor"": &lt;String&gt;,
  ""data"": &lt;JsValue&gt;
}
</code></pre>

<p>What we need to achieve is:</p>

<pre><code>{
  ""kind"": &lt;String&gt;,
  ""descriptor"": &lt;String&gt;,
  ""data"": &lt;JsValue&gt;,
  ""normalized_data"": &lt;JsString&gt;
}
</code></pre>

<p>But, only in case when the data is type of <code>JsString</code> (in any other case <code>normalized_data</code> can be left empty, byt ideally should not even exist).</p>

<p>I do understand that we have to create separate Reads &amp; Writes for that. 
But, I am not sure, how to implement the logic that will react differently to a different type of <code>data</code>.</p>

<p>Of course, there is always an option to create fully custom <code>writes</code>:</p>

<pre><code>override def writes(column: ChecklistColumn): JsValue = {...}
</code></pre>

<p>But, this will create a huge complexity in a code that will be hard to maintain.</p>

<p>What is the cleanest way to implement something like that?</p>
",""
"41482306","How to run Jest test for react-native and web","6","<p>I want to run my test for <strong>Button.js, Button.ios.js, Button.androind.js</strong> and take separate snapshots for different platforms. How can i do this ?</p>

<pre><code>import ""react-native"";
import React from ""react"";
import renderer from ""react-test-renderer"";
import Button from ""..../Button"";

test('Example of test', () =&gt; {
    const c = renderer.create(
        &lt;Button text=""asd"" /&gt;
    );
    expect(c.toJSON()).toMatchSnapshot();
});
</code></pre>

<p>This example creates snapshot only for native Button and ignores regular HTML component.</p>

<p>Versions:</p>

<pre><code> ""react-native"": ""^0.39.2"",
 ""jest"": ""^18.0.0"",
</code></pre>
","@Codesingh, yes"
"41482306","How to run Jest test for react-native and web","6","<p>I want to run my test for <strong>Button.js, Button.ios.js, Button.androind.js</strong> and take separate snapshots for different platforms. How can i do this ?</p>

<pre><code>import ""react-native"";
import React from ""react"";
import renderer from ""react-test-renderer"";
import Button from ""..../Button"";

test('Example of test', () =&gt; {
    const c = renderer.create(
        &lt;Button text=""asd"" /&gt;
    );
    expect(c.toJSON()).toMatchSnapshot();
});
</code></pre>

<p>This example creates snapshot only for native Button and ignores regular HTML component.</p>

<p>Versions:</p>

<pre><code> ""react-native"": ""^0.39.2"",
 ""jest"": ""^18.0.0"",
</code></pre>
","show me your package.json"
"41482306","How to run Jest test for react-native and web","6","<p>I want to run my test for <strong>Button.js, Button.ios.js, Button.androind.js</strong> and take separate snapshots for different platforms. How can i do this ?</p>

<pre><code>import ""react-native"";
import React from ""react"";
import renderer from ""react-test-renderer"";
import Button from ""..../Button"";

test('Example of test', () =&gt; {
    const c = renderer.create(
        &lt;Button text=""asd"" /&gt;
    );
    expect(c.toJSON()).toMatchSnapshot();
});
</code></pre>

<p>This example creates snapshot only for native Button and ignores regular HTML component.</p>

<p>Versions:</p>

<pre><code> ""react-native"": ""^0.39.2"",
 ""jest"": ""^18.0.0"",
</code></pre>
","did you upgraded react native for jest ?"
"41482306","How to run Jest test for react-native and web","6","<p>I want to run my test for <strong>Button.js, Button.ios.js, Button.androind.js</strong> and take separate snapshots for different platforms. How can i do this ?</p>

<pre><code>import ""react-native"";
import React from ""react"";
import renderer from ""react-test-renderer"";
import Button from ""..../Button"";

test('Example of test', () =&gt; {
    const c = renderer.create(
        &lt;Button text=""asd"" /&gt;
    );
    expect(c.toJSON()).toMatchSnapshot();
});
</code></pre>

<p>This example creates snapshot only for native Button and ignores regular HTML component.</p>

<p>Versions:</p>

<pre><code> ""react-native"": ""^0.39.2"",
 ""jest"": ""^18.0.0"",
</code></pre>
","react native version?"
"41482306","How to run Jest test for react-native and web","6","<p>I want to run my test for <strong>Button.js, Button.ios.js, Button.androind.js</strong> and take separate snapshots for different platforms. How can i do this ?</p>

<pre><code>import ""react-native"";
import React from ""react"";
import renderer from ""react-test-renderer"";
import Button from ""..../Button"";

test('Example of test', () =&gt; {
    const c = renderer.create(
        &lt;Button text=""asd"" /&gt;
    );
    expect(c.toJSON()).toMatchSnapshot();
});
</code></pre>

<p>This example creates snapshot only for native Button and ignores regular HTML component.</p>

<p>Versions:</p>

<pre><code> ""react-native"": ""^0.39.2"",
 ""jest"": ""^18.0.0"",
</code></pre>
","@Codesingh, react-native: ^0.39.2"
"41482306","How to run Jest test for react-native and web","6","<p>I want to run my test for <strong>Button.js, Button.ios.js, Button.androind.js</strong> and take separate snapshots for different platforms. How can i do this ?</p>

<pre><code>import ""react-native"";
import React from ""react"";
import renderer from ""react-test-renderer"";
import Button from ""..../Button"";

test('Example of test', () =&gt; {
    const c = renderer.create(
        &lt;Button text=""asd"" /&gt;
    );
    expect(c.toJSON()).toMatchSnapshot();
});
</code></pre>

<p>This example creates snapshot only for native Button and ignores regular HTML component.</p>

<p>Versions:</p>

<pre><code> ""react-native"": ""^0.39.2"",
 ""jest"": ""^18.0.0"",
</code></pre>
","@Codesingh, still can not find out how do do this. Here is my package.json http://pastebin.com/ZfVX2MVm"
"41578246","react native fetch api error with jwt","2","<p>I am trying to implement Jsonwebtoken in my react native app. I followed the video tutorial on their official site and it worked fine. However, I kept getting errors ""UnauthorizedError: No authorization token was found"" every time I try to make api calls. The api calls all work as expected except I would still get errors like that. I tried the same api calls in postman, they don't give me errors. I found it's possibly because I didn't pass the token back after the api calls?</p>

<p>Here is where I initiate the express-jwt</p>

<pre><code>var expressJWT = require('express-jwt')
app.use(expressJWT({secret: 'I like different tastes'}).unless({path:['/api/users/login', '/api/users/register', '/api/users/register/facebook']}))
</code></pre>

<p>Here is where I log in and create and pass back a jwt to my client side</p>

<pre><code>login: function(req,res){
if (req.body.purpose == 'login'){
  User.findOne({'localUser.email': req.body.email,}, function(err, user){
    if (err){
      console.log(err)
      res.status(500).json('error')
    }
    else if(user == null){
      res.status(404).json('not found');
    }
    else{
      if (passwordHash.compareSync(req.body.password, user.localUser.password)){
        var myToken = jwt.sign({username: user.localUser.name}, 'I like different tastes')
        var tmpUser = user.toJSON()
        tmpUser.token = myToken
        res.status(200).json(tmpUser);
      }
      else{
        res.status(401).json('wrong credentials')
      }
    }
  })
}
else{
  res.status(400).json('You are hacked bro')
}
</code></pre>

<p>And this is an example of the api calls I make after I log in.</p>

<pre><code>fetchPost() {
var _this = this
return fetch(uri.network.uri + '/api/posts/fetch', {
    method: 'POST',
    headers: {
      'Authorization': 'Bearer '+this.props.activeUser.token,
      'Accept': 'application/json',
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      purpose: 'fetchPost',
      latitude: this.state.currentRegion.latitude,
      longitude: this.state.currentRegion.longitude,
      maxSearch: MAX_SEARCH
    })
  })
  .then((response) =&gt; {
    if (response.status != 200){
      Alert.alert(
       'Sorry',
       'Unexpected errors!'
      );
      return
    }
    else{
      return response.json();
    }
  })
  .then((responseJson)=&gt;{
    console.log(responseJson)
  })
  .catch((error) =&gt; {
    console.error(error);
  });
</code></pre>

<p>}</p>

<p>this.props.activeUser.token is the token I passed back from the second function in server side 
it worked fine and I get the data I want. I also believe I was passing the right token since I tried passing a random token which resulted in incorrect response. </p>

<p>The problem is that I would get UnauthorizedError: No authorization token was found.</p>
","What the value of err in console.log?"
"41578246","react native fetch api error with jwt","2","<p>I am trying to implement Jsonwebtoken in my react native app. I followed the video tutorial on their official site and it worked fine. However, I kept getting errors ""UnauthorizedError: No authorization token was found"" every time I try to make api calls. The api calls all work as expected except I would still get errors like that. I tried the same api calls in postman, they don't give me errors. I found it's possibly because I didn't pass the token back after the api calls?</p>

<p>Here is where I initiate the express-jwt</p>

<pre><code>var expressJWT = require('express-jwt')
app.use(expressJWT({secret: 'I like different tastes'}).unless({path:['/api/users/login', '/api/users/register', '/api/users/register/facebook']}))
</code></pre>

<p>Here is where I log in and create and pass back a jwt to my client side</p>

<pre><code>login: function(req,res){
if (req.body.purpose == 'login'){
  User.findOne({'localUser.email': req.body.email,}, function(err, user){
    if (err){
      console.log(err)
      res.status(500).json('error')
    }
    else if(user == null){
      res.status(404).json('not found');
    }
    else{
      if (passwordHash.compareSync(req.body.password, user.localUser.password)){
        var myToken = jwt.sign({username: user.localUser.name}, 'I like different tastes')
        var tmpUser = user.toJSON()
        tmpUser.token = myToken
        res.status(200).json(tmpUser);
      }
      else{
        res.status(401).json('wrong credentials')
      }
    }
  })
}
else{
  res.status(400).json('You are hacked bro')
}
</code></pre>

<p>And this is an example of the api calls I make after I log in.</p>

<pre><code>fetchPost() {
var _this = this
return fetch(uri.network.uri + '/api/posts/fetch', {
    method: 'POST',
    headers: {
      'Authorization': 'Bearer '+this.props.activeUser.token,
      'Accept': 'application/json',
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      purpose: 'fetchPost',
      latitude: this.state.currentRegion.latitude,
      longitude: this.state.currentRegion.longitude,
      maxSearch: MAX_SEARCH
    })
  })
  .then((response) =&gt; {
    if (response.status != 200){
      Alert.alert(
       'Sorry',
       'Unexpected errors!'
      );
      return
    }
    else{
      return response.json();
    }
  })
  .then((responseJson)=&gt;{
    console.log(responseJson)
  })
  .catch((error) =&gt; {
    console.error(error);
  });
</code></pre>

<p>}</p>

<p>this.props.activeUser.token is the token I passed back from the second function in server side 
it worked fine and I get the data I want. I also believe I was passing the right token since I tried passing a random token which resulted in incorrect response. </p>

<p>The problem is that I would get UnauthorizedError: No authorization token was found.</p>
","console.log(responseJson)? It's the expected values. I can guarantee there is nothing wrong with that"
"42266679","Why is this test using Jest & react-test-renderer throwing error because it's trying to parse a .graphql file?","0","<p>I am trying to run a simple test to get going with Jest and it seems like it's parsing the whole app. The file where the error is being thrown is referenced by the services file.</p>

<p>If I do not include <code>graphql</code> in the regex for <code>moduleNameMapper</code> Jest tries to parse the <code>.graphql</code> file itself.</p>

<p>When the file <code>app-container</code> is being parsed, <code>graphql.js</code> from apollo-client is throwing an error trying to parse an imported <code>.graphql</code> file.</p>

<p><strong>Edit:</strong> If I put the queries inline using <code>gql</code> those errors stop. Any ideas with using imported queries? </p>

<p>From <code>package.json</code>:</p>

<pre><code> ""jest"": {
    ""testEnvironment"": ""jsdom"",
    ""transform"": {
      ""\\.(gql|graphql)$"": ""jest-transform-graphql"",
      "".*"": ""babel-jest""
    },
    ""modulePaths"": [
      ""&lt;rootDir&gt;/src/modules""
    ],
    ""moduleFileExtensions"": [
      ""js""
    ],
    ""moduleNameMapper"": {
      ""\\.(graphql|jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga|yml)$"": ""&lt;rootDir&gt;/src/__mocks__/fileMock.js""
    }
  }
</code></pre>

<p>webpack-config:</p>

<pre><code>loaders: [{
            test: /\.(sass|scss|css)$/,
            loader: LOCAL_ENV ? `style!${CSS_LOADERS}` : ExtractTextPlugin.extract(CSS_LOADERS)
        }, {
            test: /\.json$/,
            exclude: /node_modules/,
            loader: 'json'
        }, {
            test: /\.yml$/,
            exclude: /node_modules/,
            loader: 'json!yaml'
        }, {
            test: /\.js$/,
            exclude: /node_modules/,
            loader: 'babel'
        }, {
            test: /\.(jpe?g|png|gif)$/,
            exclude: /node_modules/,
            loader: 'url?limit=1000' // 1KB
        }, {
            test: /\.(graphql|gql)$/,
            exclude: /node_modules/,
            loader: 'graphql-tag/loader',
        }]
</code></pre>

<p>Test:</p>

<pre><code>import React from 'react';
import { Provider } from 'react-redux';
import renderer from 'react-test-renderer';
import services from 'app-system/services';

test('Component should render with a Provider', () =&gt; {
    const component = renderer.create(
        &lt;Provider store={services.reduxStore}&gt;
            &lt;div&gt;This is a test&lt;/div&gt;
        &lt;/Provider&gt;
    );

    const tree = component.toJSON();
    expect(tree.type).toBe('div');
});
</code></pre>

<p>Error:
     FAIL  src/app/<strong>tests</strong>/store.test.js
      ● Test suite failed to run</p>

<pre><code>    TypeError: Cannot read property 'filter' of undefined

      at Object.parser (node_modules/react-apollo/lib/parser.js:12:41)
      at graphql (node_modules/react-apollo/lib/graphql.js:74:30)
      at Object.&lt;anonymous&gt; (src/app/modules/group/components/app-container/index.js:52:52)
      at Object.&lt;anonymous&gt; (src/app/modules/group/components/index.js:1:418)
      at Object.&lt;anonymous&gt; (src/app/modules/team/components/hello/index.js:2:45)
      at Object.&lt;anonymous&gt; (src/app/modules/team/components/index.js:1:378)
      at Object.&lt;anonymous&gt; (src/app/modules/team/index.js:1:209)
      at Object.&lt;anonymous&gt; (src/app/modules/system/register-modals.js:17:57)
      at Object.&lt;anonymous&gt; (src/app/modules/system/services.js:26:49)
      at Object.&lt;anonymous&gt; (src/app/__tests__/store.test.js:4:43)
</code></pre>

<p>Line 74 from <code>graphql.js</code>:</p>

<pre><code>var operation = parser_1.parser(document);
</code></pre>
",""
"43367896","Access global javascript variables using react","1","<p>I have a JavaScript file and want to use it in an React Component.
The Script looks following:</p>

<pre><code>function XMLtoJSON() {
    ....
} 
var xml2json = new XMLtoJSON();
</code></pre>

<p>And an <code>d.ts</code> File with</p>

<pre><code>interface XMLtoJSON {
    ...
}
declare var xml2json: XMLtoJSON;
</code></pre>

<p>I tried to use <code>import './xml2json.js'</code> and the js-code is included in the generated js file, but the part that creates the variable xml2json is not executed.</p>

<p>I recive following error in the browser console <code>'xml2json' is undefined</code></p>

<p>If it should be important, I use typescript and <code>.tsx</code>-files.<br>
The Project was created with <code>create-react-app MyProject --scripts-version=react-scripts-ts</code></p>
","xml2json.js should export something in order to be used as import"
"43771517","Using Jest to test a Link from react-router v4","0","<p>I'm using <code>jest</code> to test a component with a <code>&lt;Link&gt;</code> from react-router v4.</p>

<p>I get a warning that <code>&lt;Link /&gt;</code> requires the context from a react-router <code>&lt;Router /&gt;</code> component.</p>

<p>How can I mock or provide a router context in my test? (Basically how do I resolve this warning?)</p>

<p><strong>Link.test.js</strong></p>

<pre><code>import React from 'react';
import renderer from 'react-test-renderer';
import { Link } from 'react-router-dom';

test('Link matches snapshot', () =&gt; {
  const component = renderer.create(
    &lt;Link to=""#"" /&gt;
  );

  let tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});
</code></pre>

<p><strong>The warning when the test is run:</strong></p>

<pre><code>Warning: Failed context type: The context `router` is marked 
as required in `Link`, but its value is `undefined`.
</code></pre>
",""
"43776760","convert html table data into JSON array object in reactjs","0","<p>I have an HTML table data now I want to convert that data into JSON array object.</p>

<p>Created one table in reactjs I want to export that data into excel for that I need to convert that html data into Json object </p>
",""
"44291592","How to write react native ""native module"" ( bridge ) that reuses common JavaScript code?","0","<p>How can a native module callback to a JavaScript internal bridge method, then do processing in the internal method, for example parsing data into JSON, and then raise an event that the react native app receives?</p>

<p>For cross-platform bridge modules, I want to avoid duplicating code in <em>both</em> Objective C and Java. When possible, I want to write cross-platform bridge module code in JavaScript and reuse for Android and iOS.</p>

<p><strong>My Current Solution:</strong></p>

<p>This works. </p>

<p>This will result in two calls to sendEventWithName:</p>

<ol>
<li>sendEventWithName with the ""_processResponseInJavaScriptMethod"" </li>
<li>forwardEventWithName to sendEventWithName to the react native app.</li>
</ol>

<p><strong>Question:</strong> </p>

<p>Is there an approach for native code to process data synchronously using a JS call, then send results immediately with sendEventWithName?</p>

<p>Or does every native > JS call require an async <code>_bridge enqueueJSCall</code>?</p>

<p><strong>File: MyNativeModule.m</strong></p>

<pre>
// Use forwardEventWithName to forward events 
// processed by common cross-platform JS to the react native app
RCT_EXPORT_METHOD(forwardEventWithName:(NSString*)name
                  body:(NSString*)body) {
    [self sendEventWithName:name body:body];
}

// 1 - react native app calls sendQueryToBluetoothDevice
// 2 - device calls commandResponse when response received
RCT_EXPORT_METHOD(sendQueryToBluetoothDevice:(NSString*)command {
    [_device sendCommand:command];
}

// 1 - Receives XML response from external Bluetooth device
// 2 - Sends XML to internal JS method for processing
// 3 - Internal JS method uses forwardEventWithName 
//     to send event to react native app
- (void) commandResponse:(NSString *) xml {    
    [self sendEventWithName:@""_processResponseInJavaScriptMethod""
                       body:@{@""xml"": configuration}];

}
</pre>

<p><strong>File: index.js ( native module )</strong></p>

<pre>
 // Parse xml in common JS code for both Android and iOS native modules
emitter.addListener(""_processResponseInJavaScriptMethod"", (e) => {
    const body = parseXml(e.xml);

    // ?? Is there a way to send event directly using JS to the react native app ??

    // Hack - Call native method forwardEventWithName to sendEventWithName to react native app.
    ///
    // This makes two _bridge enqueueJSCall's
    // 1 - One call to sendEventWithName ""_myNativeModuleInternalMethod""
    // 2 - Second call to sendEventWithName ""myNativeModuleEvent
    MyNativeModule.forwardEventWithName(
      'myNativeModuleEventResponseReceived', 
       JSON.stringify(body));
  }
})
</pre>
",""
"44308754","How to test a react component renders a list with jest","7","<p>I'm trying to understand how unit testing works and have built a small React app that renders out a list of Pokemon.
What I am trying to do is write a unit test that checks to see if the list is rendering properly. However, the snapshot that is generated shows that it only renders the 'loading ...' text which is what it is supposed to do while waiting for a response from the API.
What am I doing wrong?</p>

<p><strong>PokemonList.test.js</strong></p>

<pre><code>import React from 'react';
import PokemonList from '../components/PokemonList';
import renderer from 'react-test-renderer';

describe('PokemonList component renders a list of Pokemon', () =&gt; {
    it('renders correctly', () =&gt; {
        const fetched = true;
        const loading = true;
        const species = [{
            ""0"": {""name"": ""bulbasaur""},
            ""1"": {""name"": ""ivysaur""},
            ""2"": {""name"": ""venusaur""}
        }];
        const rendered = renderer.create(
            &lt;PokemonList fetched={fetched} loading={loading} species={species} /&gt;
        );
        expect(rendered.toJSON()).toMatchSnapshot();
    });
});
</code></pre>

<p><strong>PokemonList.js</strong></p>

<pre><code>// The PokemonList component show nothing when it mounts for the first time.
// But right before it mounts to the DOM, it makes an API call to fetch the
// first 151 Pokemon for the API and then displays them using the Pokemon component.

import React from 'react';
import Pokemon from './Pokemon';

class PokemonList extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            species: [],
            fetched: false,
            loading: false,
        };
    }

    componentWillMount() {
        this.setState({
            loading: true
        });
        fetch('http://pokeapi.co/api/v2/pokemon?limit=151').then(res=&gt;res.json())
        .then(response=&gt;{
            this.setState({
                species: response.results,
                loading: true,
                fetched: true
            });
        });
    }

    render() {
        const {fetched, loading, species} = this.state;
        let content ;
        if (fetched) {
            content = &lt;div className=""pokemon--species--list""&gt;{species.map((pokemon, index) =&gt; &lt;Pokemon key={pokemon.name} id={index+1} pokemon={pokemon} /&gt;)}&lt;/div&gt;
        } else if (loading &amp;&amp; !fetched) {
            content = &lt;p className=""loading""&gt; Loading ...&lt;/p&gt;
        } else {
            content = &lt;div/&gt;
        }
        return (
            &lt;div&gt;
                {content}
            &lt;/div&gt;
        )
    }
}

export default PokemonList;
</code></pre>

<p><strong>PokemonList.test.js.snap</strong></p>

<pre><code>exports[`PokemonList component renders a list of Pokemon renders correctly 1`] = `
&lt;div&gt;
  &lt;p
    className=""loading""&gt;
     Loading ...
  &lt;/p&gt;
&lt;/div&gt;
`;
</code></pre>
","@dcodesmith I've fixed that now and the app still works as expected but the test still outputs ""loading ..."" in the snapshot :("
"44308754","How to test a react component renders a list with jest","7","<p>I'm trying to understand how unit testing works and have built a small React app that renders out a list of Pokemon.
What I am trying to do is write a unit test that checks to see if the list is rendering properly. However, the snapshot that is generated shows that it only renders the 'loading ...' text which is what it is supposed to do while waiting for a response from the API.
What am I doing wrong?</p>

<p><strong>PokemonList.test.js</strong></p>

<pre><code>import React from 'react';
import PokemonList from '../components/PokemonList';
import renderer from 'react-test-renderer';

describe('PokemonList component renders a list of Pokemon', () =&gt; {
    it('renders correctly', () =&gt; {
        const fetched = true;
        const loading = true;
        const species = [{
            ""0"": {""name"": ""bulbasaur""},
            ""1"": {""name"": ""ivysaur""},
            ""2"": {""name"": ""venusaur""}
        }];
        const rendered = renderer.create(
            &lt;PokemonList fetched={fetched} loading={loading} species={species} /&gt;
        );
        expect(rendered.toJSON()).toMatchSnapshot();
    });
});
</code></pre>

<p><strong>PokemonList.js</strong></p>

<pre><code>// The PokemonList component show nothing when it mounts for the first time.
// But right before it mounts to the DOM, it makes an API call to fetch the
// first 151 Pokemon for the API and then displays them using the Pokemon component.

import React from 'react';
import Pokemon from './Pokemon';

class PokemonList extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            species: [],
            fetched: false,
            loading: false,
        };
    }

    componentWillMount() {
        this.setState({
            loading: true
        });
        fetch('http://pokeapi.co/api/v2/pokemon?limit=151').then(res=&gt;res.json())
        .then(response=&gt;{
            this.setState({
                species: response.results,
                loading: true,
                fetched: true
            });
        });
    }

    render() {
        const {fetched, loading, species} = this.state;
        let content ;
        if (fetched) {
            content = &lt;div className=""pokemon--species--list""&gt;{species.map((pokemon, index) =&gt; &lt;Pokemon key={pokemon.name} id={index+1} pokemon={pokemon} /&gt;)}&lt;/div&gt;
        } else if (loading &amp;&amp; !fetched) {
            content = &lt;p className=""loading""&gt; Loading ...&lt;/p&gt;
        } else {
            content = &lt;div/&gt;
        }
        return (
            &lt;div&gt;
                {content}
            &lt;/div&gt;
        )
    }
}

export default PokemonList;
</code></pre>

<p><strong>PokemonList.test.js.snap</strong></p>

<pre><code>exports[`PokemonList component renders a list of Pokemon renders correctly 1`] = `
&lt;div&gt;
  &lt;p
    className=""loading""&gt;
     Loading ...
  &lt;/p&gt;
&lt;/div&gt;
`;
</code></pre>
","@dcodesmith I tried changing those values but I still get the same output in the snapshot"
"44308754","How to test a react component renders a list with jest","7","<p>I'm trying to understand how unit testing works and have built a small React app that renders out a list of Pokemon.
What I am trying to do is write a unit test that checks to see if the list is rendering properly. However, the snapshot that is generated shows that it only renders the 'loading ...' text which is what it is supposed to do while waiting for a response from the API.
What am I doing wrong?</p>

<p><strong>PokemonList.test.js</strong></p>

<pre><code>import React from 'react';
import PokemonList from '../components/PokemonList';
import renderer from 'react-test-renderer';

describe('PokemonList component renders a list of Pokemon', () =&gt; {
    it('renders correctly', () =&gt; {
        const fetched = true;
        const loading = true;
        const species = [{
            ""0"": {""name"": ""bulbasaur""},
            ""1"": {""name"": ""ivysaur""},
            ""2"": {""name"": ""venusaur""}
        }];
        const rendered = renderer.create(
            &lt;PokemonList fetched={fetched} loading={loading} species={species} /&gt;
        );
        expect(rendered.toJSON()).toMatchSnapshot();
    });
});
</code></pre>

<p><strong>PokemonList.js</strong></p>

<pre><code>// The PokemonList component show nothing when it mounts for the first time.
// But right before it mounts to the DOM, it makes an API call to fetch the
// first 151 Pokemon for the API and then displays them using the Pokemon component.

import React from 'react';
import Pokemon from './Pokemon';

class PokemonList extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            species: [],
            fetched: false,
            loading: false,
        };
    }

    componentWillMount() {
        this.setState({
            loading: true
        });
        fetch('http://pokeapi.co/api/v2/pokemon?limit=151').then(res=&gt;res.json())
        .then(response=&gt;{
            this.setState({
                species: response.results,
                loading: true,
                fetched: true
            });
        });
    }

    render() {
        const {fetched, loading, species} = this.state;
        let content ;
        if (fetched) {
            content = &lt;div className=""pokemon--species--list""&gt;{species.map((pokemon, index) =&gt; &lt;Pokemon key={pokemon.name} id={index+1} pokemon={pokemon} /&gt;)}&lt;/div&gt;
        } else if (loading &amp;&amp; !fetched) {
            content = &lt;p className=""loading""&gt; Loading ...&lt;/p&gt;
        } else {
            content = &lt;div/&gt;
        }
        return (
            &lt;div&gt;
                {content}
            &lt;/div&gt;
        )
    }
}

export default PokemonList;
</code></pre>

<p><strong>PokemonList.test.js.snap</strong></p>

<pre><code>exports[`PokemonList component renders a list of Pokemon renders correctly 1`] = `
&lt;div&gt;
  &lt;p
    className=""loading""&gt;
     Loading ...
  &lt;/p&gt;
&lt;/div&gt;
`;
</code></pre>
","When you successfully fetch your data, your `loading` state should be `false` not `true` coz you're done fetching the data. Fix that and see what happens"
"44308754","How to test a react component renders a list with jest","7","<p>I'm trying to understand how unit testing works and have built a small React app that renders out a list of Pokemon.
What I am trying to do is write a unit test that checks to see if the list is rendering properly. However, the snapshot that is generated shows that it only renders the 'loading ...' text which is what it is supposed to do while waiting for a response from the API.
What am I doing wrong?</p>

<p><strong>PokemonList.test.js</strong></p>

<pre><code>import React from 'react';
import PokemonList from '../components/PokemonList';
import renderer from 'react-test-renderer';

describe('PokemonList component renders a list of Pokemon', () =&gt; {
    it('renders correctly', () =&gt; {
        const fetched = true;
        const loading = true;
        const species = [{
            ""0"": {""name"": ""bulbasaur""},
            ""1"": {""name"": ""ivysaur""},
            ""2"": {""name"": ""venusaur""}
        }];
        const rendered = renderer.create(
            &lt;PokemonList fetched={fetched} loading={loading} species={species} /&gt;
        );
        expect(rendered.toJSON()).toMatchSnapshot();
    });
});
</code></pre>

<p><strong>PokemonList.js</strong></p>

<pre><code>// The PokemonList component show nothing when it mounts for the first time.
// But right before it mounts to the DOM, it makes an API call to fetch the
// first 151 Pokemon for the API and then displays them using the Pokemon component.

import React from 'react';
import Pokemon from './Pokemon';

class PokemonList extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            species: [],
            fetched: false,
            loading: false,
        };
    }

    componentWillMount() {
        this.setState({
            loading: true
        });
        fetch('http://pokeapi.co/api/v2/pokemon?limit=151').then(res=&gt;res.json())
        .then(response=&gt;{
            this.setState({
                species: response.results,
                loading: true,
                fetched: true
            });
        });
    }

    render() {
        const {fetched, loading, species} = this.state;
        let content ;
        if (fetched) {
            content = &lt;div className=""pokemon--species--list""&gt;{species.map((pokemon, index) =&gt; &lt;Pokemon key={pokemon.name} id={index+1} pokemon={pokemon} /&gt;)}&lt;/div&gt;
        } else if (loading &amp;&amp; !fetched) {
            content = &lt;p className=""loading""&gt; Loading ...&lt;/p&gt;
        } else {
            content = &lt;div/&gt;
        }
        return (
            &lt;div&gt;
                {content}
            &lt;/div&gt;
        )
    }
}

export default PokemonList;
</code></pre>

<p><strong>PokemonList.test.js.snap</strong></p>

<pre><code>exports[`PokemonList component renders a list of Pokemon renders correctly 1`] = `
&lt;div&gt;
  &lt;p
    className=""loading""&gt;
     Loading ...
  &lt;/p&gt;
&lt;/div&gt;
`;
</code></pre>
","Check the answer below. Hope that helps."
"44308754","How to test a react component renders a list with jest","7","<p>I'm trying to understand how unit testing works and have built a small React app that renders out a list of Pokemon.
What I am trying to do is write a unit test that checks to see if the list is rendering properly. However, the snapshot that is generated shows that it only renders the 'loading ...' text which is what it is supposed to do while waiting for a response from the API.
What am I doing wrong?</p>

<p><strong>PokemonList.test.js</strong></p>

<pre><code>import React from 'react';
import PokemonList from '../components/PokemonList';
import renderer from 'react-test-renderer';

describe('PokemonList component renders a list of Pokemon', () =&gt; {
    it('renders correctly', () =&gt; {
        const fetched = true;
        const loading = true;
        const species = [{
            ""0"": {""name"": ""bulbasaur""},
            ""1"": {""name"": ""ivysaur""},
            ""2"": {""name"": ""venusaur""}
        }];
        const rendered = renderer.create(
            &lt;PokemonList fetched={fetched} loading={loading} species={species} /&gt;
        );
        expect(rendered.toJSON()).toMatchSnapshot();
    });
});
</code></pre>

<p><strong>PokemonList.js</strong></p>

<pre><code>// The PokemonList component show nothing when it mounts for the first time.
// But right before it mounts to the DOM, it makes an API call to fetch the
// first 151 Pokemon for the API and then displays them using the Pokemon component.

import React from 'react';
import Pokemon from './Pokemon';

class PokemonList extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            species: [],
            fetched: false,
            loading: false,
        };
    }

    componentWillMount() {
        this.setState({
            loading: true
        });
        fetch('http://pokeapi.co/api/v2/pokemon?limit=151').then(res=&gt;res.json())
        .then(response=&gt;{
            this.setState({
                species: response.results,
                loading: true,
                fetched: true
            });
        });
    }

    render() {
        const {fetched, loading, species} = this.state;
        let content ;
        if (fetched) {
            content = &lt;div className=""pokemon--species--list""&gt;{species.map((pokemon, index) =&gt; &lt;Pokemon key={pokemon.name} id={index+1} pokemon={pokemon} /&gt;)}&lt;/div&gt;
        } else if (loading &amp;&amp; !fetched) {
            content = &lt;p className=""loading""&gt; Loading ...&lt;/p&gt;
        } else {
            content = &lt;div/&gt;
        }
        return (
            &lt;div&gt;
                {content}
            &lt;/div&gt;
        )
    }
}

export default PokemonList;
</code></pre>

<p><strong>PokemonList.test.js.snap</strong></p>

<pre><code>exports[`PokemonList component renders a list of Pokemon renders correctly 1`] = `
&lt;div&gt;
  &lt;p
    className=""loading""&gt;
     Loading ...
  &lt;/p&gt;
&lt;/div&gt;
`;
</code></pre>
","`loading` and `fetched` shouldn't both be true and the same time. Data is either being fetched `loading` or `fetched`"
"44308754","How to test a react component renders a list with jest","7","<p>I'm trying to understand how unit testing works and have built a small React app that renders out a list of Pokemon.
What I am trying to do is write a unit test that checks to see if the list is rendering properly. However, the snapshot that is generated shows that it only renders the 'loading ...' text which is what it is supposed to do while waiting for a response from the API.
What am I doing wrong?</p>

<p><strong>PokemonList.test.js</strong></p>

<pre><code>import React from 'react';
import PokemonList from '../components/PokemonList';
import renderer from 'react-test-renderer';

describe('PokemonList component renders a list of Pokemon', () =&gt; {
    it('renders correctly', () =&gt; {
        const fetched = true;
        const loading = true;
        const species = [{
            ""0"": {""name"": ""bulbasaur""},
            ""1"": {""name"": ""ivysaur""},
            ""2"": {""name"": ""venusaur""}
        }];
        const rendered = renderer.create(
            &lt;PokemonList fetched={fetched} loading={loading} species={species} /&gt;
        );
        expect(rendered.toJSON()).toMatchSnapshot();
    });
});
</code></pre>

<p><strong>PokemonList.js</strong></p>

<pre><code>// The PokemonList component show nothing when it mounts for the first time.
// But right before it mounts to the DOM, it makes an API call to fetch the
// first 151 Pokemon for the API and then displays them using the Pokemon component.

import React from 'react';
import Pokemon from './Pokemon';

class PokemonList extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            species: [],
            fetched: false,
            loading: false,
        };
    }

    componentWillMount() {
        this.setState({
            loading: true
        });
        fetch('http://pokeapi.co/api/v2/pokemon?limit=151').then(res=&gt;res.json())
        .then(response=&gt;{
            this.setState({
                species: response.results,
                loading: true,
                fetched: true
            });
        });
    }

    render() {
        const {fetched, loading, species} = this.state;
        let content ;
        if (fetched) {
            content = &lt;div className=""pokemon--species--list""&gt;{species.map((pokemon, index) =&gt; &lt;Pokemon key={pokemon.name} id={index+1} pokemon={pokemon} /&gt;)}&lt;/div&gt;
        } else if (loading &amp;&amp; !fetched) {
            content = &lt;p className=""loading""&gt; Loading ...&lt;/p&gt;
        } else {
            content = &lt;div/&gt;
        }
        return (
            &lt;div&gt;
                {content}
            &lt;/div&gt;
        )
    }
}

export default PokemonList;
</code></pre>

<p><strong>PokemonList.test.js.snap</strong></p>

<pre><code>exports[`PokemonList component renders a list of Pokemon renders correctly 1`] = `
&lt;div&gt;
  &lt;p
    className=""loading""&gt;
     Loading ...
  &lt;/p&gt;
&lt;/div&gt;
`;
</code></pre>
","@dcodesmith what answer?"
"44308754","How to test a react component renders a list with jest","7","<p>I'm trying to understand how unit testing works and have built a small React app that renders out a list of Pokemon.
What I am trying to do is write a unit test that checks to see if the list is rendering properly. However, the snapshot that is generated shows that it only renders the 'loading ...' text which is what it is supposed to do while waiting for a response from the API.
What am I doing wrong?</p>

<p><strong>PokemonList.test.js</strong></p>

<pre><code>import React from 'react';
import PokemonList from '../components/PokemonList';
import renderer from 'react-test-renderer';

describe('PokemonList component renders a list of Pokemon', () =&gt; {
    it('renders correctly', () =&gt; {
        const fetched = true;
        const loading = true;
        const species = [{
            ""0"": {""name"": ""bulbasaur""},
            ""1"": {""name"": ""ivysaur""},
            ""2"": {""name"": ""venusaur""}
        }];
        const rendered = renderer.create(
            &lt;PokemonList fetched={fetched} loading={loading} species={species} /&gt;
        );
        expect(rendered.toJSON()).toMatchSnapshot();
    });
});
</code></pre>

<p><strong>PokemonList.js</strong></p>

<pre><code>// The PokemonList component show nothing when it mounts for the first time.
// But right before it mounts to the DOM, it makes an API call to fetch the
// first 151 Pokemon for the API and then displays them using the Pokemon component.

import React from 'react';
import Pokemon from './Pokemon';

class PokemonList extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            species: [],
            fetched: false,
            loading: false,
        };
    }

    componentWillMount() {
        this.setState({
            loading: true
        });
        fetch('http://pokeapi.co/api/v2/pokemon?limit=151').then(res=&gt;res.json())
        .then(response=&gt;{
            this.setState({
                species: response.results,
                loading: true,
                fetched: true
            });
        });
    }

    render() {
        const {fetched, loading, species} = this.state;
        let content ;
        if (fetched) {
            content = &lt;div className=""pokemon--species--list""&gt;{species.map((pokemon, index) =&gt; &lt;Pokemon key={pokemon.name} id={index+1} pokemon={pokemon} /&gt;)}&lt;/div&gt;
        } else if (loading &amp;&amp; !fetched) {
            content = &lt;p className=""loading""&gt; Loading ...&lt;/p&gt;
        } else {
            content = &lt;div/&gt;
        }
        return (
            &lt;div&gt;
                {content}
            &lt;/div&gt;
        )
    }
}

export default PokemonList;
</code></pre>

<p><strong>PokemonList.test.js.snap</strong></p>

<pre><code>exports[`PokemonList component renders a list of Pokemon renders correctly 1`] = `
&lt;div&gt;
  &lt;p
    className=""loading""&gt;
     Loading ...
  &lt;/p&gt;
&lt;/div&gt;
`;
</code></pre>
","Let us [continue this discussion in chat](http://chat.stackoverflow.com/rooms/145697/discussion-between-dcodesmith-and-john-thomson)."
"44654440","Storyshots jest - Cannot find module '@storybook/react' from 'index.js'","0","<p>I am trying to incorporate storyshots in my project.
I have this jest config:</p>

<pre><code>""moduleFileExtensions"": [
  ""json"",
  ""js"",
  ""jsx""
],
</code></pre>

<p>Here is my test file content:</p>

<pre><code>import React from 'react';
import renderer from 'react-test-renderer';
import initStoryshots from '@storybook/addon-storyshots';

import IconCell from './';
initStoryshots({
    framework: 'react'
});
test('iconcell', () =&gt; {
    expect(renderer.create(&lt;IconCell size=""normal"" type=""pause"" /&gt;).toJSON()).toMatchSnapshot();
});
</code></pre>

<p>But it throws error:</p>

<pre><code>Cannot find module '@storybook/react' from 'index.js'
</code></pre>

<p>The error thrown in <code>node_modules/jest-resolve/build/index.js</code></p>
",""
"44680414","Cannot find module 'react/lib/ReactComponentTreeHook' from 'ReactDebugTool.js'","0","<p>I'm trying to get Jest to run a snapshot test of my React app.  The versions from my package.json:</p>

<pre><code>  ""react"": ""15.6.1"",
  ""react-dom"": ""15.6.1"",
  ""react-test-renderer"": ""15.6.1"",
</code></pre>

<p>I can't get past this error:</p>

<pre><code>● Test suite failed to run


Cannot find module 'react/lib/ReactComponentTreeHook' from 'ReactDebugTool.js'

  at Resolver.resolveModule (node_modules/jest-resolve/build/index.js:179:17)
  at Object.&lt;anonymous&gt; (node_modules/react-test-renderer/lib/ReactDebugTool.js:16:30)
</code></pre>

<p>I have tried removing and reinstalling my node_modules dir and I've verified that the path to my component is correct but still get this same error.</p>

<p>My test looks like this:</p>

<pre><code>import React from 'react';
import renderer from 'react-test-renderer';
import { Section } from '../../app/views/containers/section';

it('renders correctly', () =&gt; {
  const section = renderer.create(
    &lt;Section key=""1"" section=""finance""/&gt;
  ).toJSON();
  expect(section).toMatchSnapshot();
});
</code></pre>

<p>What am I doing wrong?</p>
",""
"44888988","Mocha: TypeError: Converting circular structure to JSON","3","<p>Mocha suddenly is throwing </p>

<blockquote>
  <p>TypeError: Converting circular structure to JSON</p>
</blockquote>

<p>I have done a new setup for executing the test cases.
The test cases were running fine till yesterday.
I am using: Mocha, Chai, Sinon, Enzyme</p>

<p>This is my package.json:</p>

<pre><code>{
      ""name"": ""abc"",
      ""version"": ""1.0.0"",
      ""description"": ""desc"",
      ""scripts"": {
        ""build"": ""webpack --config webpack-client.config.js"",
        ""devbuild"": ""webpack --config webpack-client-dev.config.js"",
        ""test"": ""mocha --compilers js:babel-register --require ./test/dom.js --require ./test/helpers.js  --recursive"",
        ""tdd"": ""npm test -- --watch"",
        ""coverage"": ""nyc --reporter=html --reporter=text npm test""
      },
      ""repository"": {
        ""type"": ""git"",
        ""url"": """"
      },
      ""author"": ""author"",
      ""license"": ""ISC"",
      ""devDependencies"": {
        ""babel-core"": ""^6.0.0"",
        ""babel-loader"": ""^6.0.0"",
        ""babel-preset-es2015"": ""^6.24.1"",
        ""chai"": ""^4.0.2"",
        ""compression-webpack-plugin"": ""^0.3.2"",
        ""coveralls"": ""^2.13.1"",
        ""enzyme"": ""^2.9.0"",
        ""istanbul"": ""^0.4.5"",
        ""jquery"": ""^3.2.1"",
        ""jsdom"": ""11.0.0"",
        ""jsdom-global"": ""3.0.2"",
        ""mocha"": ""3.2.0"",
        ""nyc"": ""^11.0.3"",
        ""react-addons-test-utils"": ""^15.6.0"",
        ""sinon"": ""^2.3.5"",
        ""webpack"": ""^1.12.2"",
        ""webpack-bundle-analyzer"": ""^2.3.1""
      },
      ""dependencies"": {
        ""exenv"": ""^1.2.1"",
        ""expose-loader"": ""^0.7.0"",
        ""flux"": ""2.0.1"",
        ""html-webpack-plugin"": ""^2.28.0"",
        ""htmlescape"": ""1.0.0"",
        ""intl"": ""^1.2.5"",
        ""intl-locales-supported"": ""^1.0.0"",
        ""keymirror"": ""^0.1.1"",
        ""morgan"": ""1.5.2"",
        ""object-assign"": ""^4.1.1"",
        ""prop-types"": ""^15.5.4"",
        ""react"": ""^15.4.2"",
        ""react-bootstrap"": ""^0.31.0"",
        ""react-dom"": ""^15.4.2"",
        ""react-intl"": ""^2.0.0-beta-2"",
        ""react-toastr"": ""^2.8.2"",
        ""zxcvbn"": ""^4.4.2""
      }
    }
</code></pre>

<p>Please find the error thrown on the console : 
<a href=""https://i.stack.imgur.com/YZqzd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YZqzd.png"" alt=""please find the error thrown on the console""></a>
Please help.
Thank you</p>
","We have no idea why your code is breaking if you don't actually post it. The stack trace that accompanies the error should provide some clues where the error originates from."
"44888988","Mocha: TypeError: Converting circular structure to JSON","3","<p>Mocha suddenly is throwing </p>

<blockquote>
  <p>TypeError: Converting circular structure to JSON</p>
</blockquote>

<p>I have done a new setup for executing the test cases.
The test cases were running fine till yesterday.
I am using: Mocha, Chai, Sinon, Enzyme</p>

<p>This is my package.json:</p>

<pre><code>{
      ""name"": ""abc"",
      ""version"": ""1.0.0"",
      ""description"": ""desc"",
      ""scripts"": {
        ""build"": ""webpack --config webpack-client.config.js"",
        ""devbuild"": ""webpack --config webpack-client-dev.config.js"",
        ""test"": ""mocha --compilers js:babel-register --require ./test/dom.js --require ./test/helpers.js  --recursive"",
        ""tdd"": ""npm test -- --watch"",
        ""coverage"": ""nyc --reporter=html --reporter=text npm test""
      },
      ""repository"": {
        ""type"": ""git"",
        ""url"": """"
      },
      ""author"": ""author"",
      ""license"": ""ISC"",
      ""devDependencies"": {
        ""babel-core"": ""^6.0.0"",
        ""babel-loader"": ""^6.0.0"",
        ""babel-preset-es2015"": ""^6.24.1"",
        ""chai"": ""^4.0.2"",
        ""compression-webpack-plugin"": ""^0.3.2"",
        ""coveralls"": ""^2.13.1"",
        ""enzyme"": ""^2.9.0"",
        ""istanbul"": ""^0.4.5"",
        ""jquery"": ""^3.2.1"",
        ""jsdom"": ""11.0.0"",
        ""jsdom-global"": ""3.0.2"",
        ""mocha"": ""3.2.0"",
        ""nyc"": ""^11.0.3"",
        ""react-addons-test-utils"": ""^15.6.0"",
        ""sinon"": ""^2.3.5"",
        ""webpack"": ""^1.12.2"",
        ""webpack-bundle-analyzer"": ""^2.3.1""
      },
      ""dependencies"": {
        ""exenv"": ""^1.2.1"",
        ""expose-loader"": ""^0.7.0"",
        ""flux"": ""2.0.1"",
        ""html-webpack-plugin"": ""^2.28.0"",
        ""htmlescape"": ""1.0.0"",
        ""intl"": ""^1.2.5"",
        ""intl-locales-supported"": ""^1.0.0"",
        ""keymirror"": ""^0.1.1"",
        ""morgan"": ""1.5.2"",
        ""object-assign"": ""^4.1.1"",
        ""prop-types"": ""^15.5.4"",
        ""react"": ""^15.4.2"",
        ""react-bootstrap"": ""^0.31.0"",
        ""react-dom"": ""^15.4.2"",
        ""react-intl"": ""^2.0.0-beta-2"",
        ""react-toastr"": ""^2.8.2"",
        ""zxcvbn"": ""^4.4.2""
      }
    }
</code></pre>

<p>Please find the error thrown on the console : 
<a href=""https://i.stack.imgur.com/YZqzd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YZqzd.png"" alt=""please find the error thrown on the console""></a>
Please help.
Thank you</p>
","Did you ever find out what the issue was? Having the same problem, with a setup that works on other projects."
"44888988","Mocha: TypeError: Converting circular structure to JSON","3","<p>Mocha suddenly is throwing </p>

<blockquote>
  <p>TypeError: Converting circular structure to JSON</p>
</blockquote>

<p>I have done a new setup for executing the test cases.
The test cases were running fine till yesterday.
I am using: Mocha, Chai, Sinon, Enzyme</p>

<p>This is my package.json:</p>

<pre><code>{
      ""name"": ""abc"",
      ""version"": ""1.0.0"",
      ""description"": ""desc"",
      ""scripts"": {
        ""build"": ""webpack --config webpack-client.config.js"",
        ""devbuild"": ""webpack --config webpack-client-dev.config.js"",
        ""test"": ""mocha --compilers js:babel-register --require ./test/dom.js --require ./test/helpers.js  --recursive"",
        ""tdd"": ""npm test -- --watch"",
        ""coverage"": ""nyc --reporter=html --reporter=text npm test""
      },
      ""repository"": {
        ""type"": ""git"",
        ""url"": """"
      },
      ""author"": ""author"",
      ""license"": ""ISC"",
      ""devDependencies"": {
        ""babel-core"": ""^6.0.0"",
        ""babel-loader"": ""^6.0.0"",
        ""babel-preset-es2015"": ""^6.24.1"",
        ""chai"": ""^4.0.2"",
        ""compression-webpack-plugin"": ""^0.3.2"",
        ""coveralls"": ""^2.13.1"",
        ""enzyme"": ""^2.9.0"",
        ""istanbul"": ""^0.4.5"",
        ""jquery"": ""^3.2.1"",
        ""jsdom"": ""11.0.0"",
        ""jsdom-global"": ""3.0.2"",
        ""mocha"": ""3.2.0"",
        ""nyc"": ""^11.0.3"",
        ""react-addons-test-utils"": ""^15.6.0"",
        ""sinon"": ""^2.3.5"",
        ""webpack"": ""^1.12.2"",
        ""webpack-bundle-analyzer"": ""^2.3.1""
      },
      ""dependencies"": {
        ""exenv"": ""^1.2.1"",
        ""expose-loader"": ""^0.7.0"",
        ""flux"": ""2.0.1"",
        ""html-webpack-plugin"": ""^2.28.0"",
        ""htmlescape"": ""1.0.0"",
        ""intl"": ""^1.2.5"",
        ""intl-locales-supported"": ""^1.0.0"",
        ""keymirror"": ""^0.1.1"",
        ""morgan"": ""1.5.2"",
        ""object-assign"": ""^4.1.1"",
        ""prop-types"": ""^15.5.4"",
        ""react"": ""^15.4.2"",
        ""react-bootstrap"": ""^0.31.0"",
        ""react-dom"": ""^15.4.2"",
        ""react-intl"": ""^2.0.0-beta-2"",
        ""react-toastr"": ""^2.8.2"",
        ""zxcvbn"": ""^4.4.2""
      }
    }
</code></pre>

<p>Please find the error thrown on the console : 
<a href=""https://i.stack.imgur.com/YZqzd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YZqzd.png"" alt=""please find the error thrown on the console""></a>
Please help.
Thank you</p>
","Not really....i deleted the node_modules folder, revisited the package.js json and removed the unwanted dependencies i had in my package.json related to the unit testing setup which i had added while i was doing the initial setup. So i guess an unwanted package was creating a problem."
"44966887","How to write data to JSON file while using Reactjs","2","<p>Or actually the question should be</p>

<blockquote>
  <p>How to write data to JSON file using Reactjs and Nodejs</p>
</blockquote>

<p>I'm very first to react and do not understand which database should I use with.</p>

<p>PS. It's can easily to read json file with </p>

<p><code>var data = require('./data.json');</code></p>

<p>but to write data I try using npm '<strong>jsonfile</strong>' package and both try to used Nodejs 
and got this error </p>

<p><code>TypeError: fs.writeFileSync is not a function</code></p>
","If you're trying to access your filesystem/database directly from your front-end React app, that's not going to work. You need to communicate with a server via HTTP, and then have the server do the stuff that interacts with the files/database."
"44966887","How to write data to JSON file while using Reactjs","2","<p>Or actually the question should be</p>

<blockquote>
  <p>How to write data to JSON file using Reactjs and Nodejs</p>
</blockquote>

<p>I'm very first to react and do not understand which database should I use with.</p>

<p>PS. It's can easily to read json file with </p>

<p><code>var data = require('./data.json');</code></p>

<p>but to write data I try using npm '<strong>jsonfile</strong>' package and both try to used Nodejs 
and got this error </p>

<p><code>TypeError: fs.writeFileSync is not a function</code></p>
","Could you include the complete code?"
"45426356","Snapshot testing react component which depends on inject mobx store","1","<p>I've been trying to figure out how to do simple snapshot testing for a few components that have mobx stores injected into them. Here's an example:</p>

<p>At the root i have a <code>&lt;Provider&gt;</code> wrapping the whole shebang at my final <code>ReactDOM.render()</code> in the entry point. (not shown here)</p>

<pre><code>// component.js

...{imports}...
@inject('mystore')
@observer
export default class extends React.Component {
  render() {
    return (
      &lt;div&gt;Stuff&lt;/div&gt;
    )
  }
}

// component.test.js

import React from 'react';
import ReactDOM from 'react-dom';
import renderer from 'react-test-renderer';
import Component from './'

it('renders a snapshot', () =&gt; {
  const tree = renderer.create(&lt;Component/&gt;).toJSON();
  expect(tree).toMatchSnapshot();
});
</code></pre>

<p>I get a failed test because it's missing a store provided up the tree. I've tried exporting an ""undecorated"" component like so:</p>

<pre><code>// in component.js
...{same as above}...

export const undecorated = Component
</code></pre>

<p>and then importing the undecorated component in my snapshot test, however this doesn't work.</p>

<p>Ideas?</p>
","Have you tried to pass a mock of the store as a prop to your undecorated component?"
"45796610","how to unit test react reduxsauce saga using jest and enzyme?","2","<p>I am new to react and redux. 
I am developing a project and for that I want to have redux, by using reduxsauce and redux-saga, but I am struggling to write unit tests for these.
Here is my folder structure:
<a href=""https://i.stack.imgur.com/e7z6H.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/e7z6H.png"" alt=""enter image description here""></a></p>

<p>My App-test.js:</p>

<pre><code>import App from '../../../assets/src/App'
import React from 'react';
import renderer from 'react-test-renderer';
import configureStore from 'redux-mock-store'
import createStore from './Redux'


describe('App', () =&gt; {

const initialState = {output:100}
    const mockStore = configureStore()
    let store,container
        const store = createStore()
    beforeEach(()=&gt;{
        store = mockStore(initialState)
        container = shallow(&lt;App store={store} /&gt; )
    })


  it('renders correctly', () =&gt; {
    const rendered = renderer.create(
      &lt;App/&gt;
    );
    expect(rendered.toJSON()).toMatchSnapshot();
  });
});
</code></pre>

<p>Here is my App.js:</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import Index from './Screens/Index';
import { Provider } from 'react-redux'
import createStore from './Redux'

const store = createStore()

const rootElement = document.getElementById('subscription');

export default class App extends React.Component {

render() {
    return (
      &lt;Provider store={store}&gt;
        &lt;Index /&gt;
      &lt;/Provider&gt;
    );
  }

}

ReactDOM.render(&lt;App /&gt;, rootElement);
</code></pre>

<p>I have tried with both the mockStore and store variable, but I am getting following error:</p>

<p><a href=""https://i.stack.imgur.com/yewiN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yewiN.png"" alt=""enter image description here""></a></p>

<p>Any suggestions what could be wrong here?</p>

<p>Thanks</p>

<h2>UPDATE 1</h2>

<p>I muted the code now for shallow, and now my App-test.js file looks like this:</p>

<pre><code>import App from '../../../assets/src/App'
import React from 'react';
import renderer from 'react-test-renderer';
import configureStore from 'redux-mock-store'
import createStore from './Redux'


describe('App', () =&gt; {

const initialState = {output:100}
    const mockStore = configureStore()
    let store,container
        const store = createStore()
//    beforeEach(()=&gt;{
////        store = mockStore(initialState)
//        container = shallow(&lt;App store={store} /&gt; )
//    })


  it('renders correctly', () =&gt; {
    const rendered = renderer.create(
      &lt;App/&gt;
    );
    expect(rendered.toJSON()).toMatchSnapshot();
  });
});
</code></pre>

<p>But I get different error now:</p>

<p><a href=""https://i.stack.imgur.com/ryMuE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ryMuE.png"" alt=""enter image description here""></a></p>

<h2>UPDATE 2</h2>

<p>After trying the solution as suggested by Rami Enbashi in the answer, the previous error (before UPDATE 1) again started appearing.</p>
","@RamiEnbashi I have updated my question with an edit, please have a look, I am getting different error now after I muted beforeEach"
"45796610","how to unit test react reduxsauce saga using jest and enzyme?","2","<p>I am new to react and redux. 
I am developing a project and for that I want to have redux, by using reduxsauce and redux-saga, but I am struggling to write unit tests for these.
Here is my folder structure:
<a href=""https://i.stack.imgur.com/e7z6H.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/e7z6H.png"" alt=""enter image description here""></a></p>

<p>My App-test.js:</p>

<pre><code>import App from '../../../assets/src/App'
import React from 'react';
import renderer from 'react-test-renderer';
import configureStore from 'redux-mock-store'
import createStore from './Redux'


describe('App', () =&gt; {

const initialState = {output:100}
    const mockStore = configureStore()
    let store,container
        const store = createStore()
    beforeEach(()=&gt;{
        store = mockStore(initialState)
        container = shallow(&lt;App store={store} /&gt; )
    })


  it('renders correctly', () =&gt; {
    const rendered = renderer.create(
      &lt;App/&gt;
    );
    expect(rendered.toJSON()).toMatchSnapshot();
  });
});
</code></pre>

<p>Here is my App.js:</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import Index from './Screens/Index';
import { Provider } from 'react-redux'
import createStore from './Redux'

const store = createStore()

const rootElement = document.getElementById('subscription');

export default class App extends React.Component {

render() {
    return (
      &lt;Provider store={store}&gt;
        &lt;Index /&gt;
      &lt;/Provider&gt;
    );
  }

}

ReactDOM.render(&lt;App /&gt;, rootElement);
</code></pre>

<p>I have tried with both the mockStore and store variable, but I am getting following error:</p>

<p><a href=""https://i.stack.imgur.com/yewiN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yewiN.png"" alt=""enter image description here""></a></p>

<p>Any suggestions what could be wrong here?</p>

<p>Thanks</p>

<h2>UPDATE 1</h2>

<p>I muted the code now for shallow, and now my App-test.js file looks like this:</p>

<pre><code>import App from '../../../assets/src/App'
import React from 'react';
import renderer from 'react-test-renderer';
import configureStore from 'redux-mock-store'
import createStore from './Redux'


describe('App', () =&gt; {

const initialState = {output:100}
    const mockStore = configureStore()
    let store,container
        const store = createStore()
//    beforeEach(()=&gt;{
////        store = mockStore(initialState)
//        container = shallow(&lt;App store={store} /&gt; )
//    })


  it('renders correctly', () =&gt; {
    const rendered = renderer.create(
      &lt;App/&gt;
    );
    expect(rendered.toJSON()).toMatchSnapshot();
  });
});
</code></pre>

<p>But I get different error now:</p>

<p><a href=""https://i.stack.imgur.com/ryMuE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ryMuE.png"" alt=""enter image description here""></a></p>

<h2>UPDATE 2</h2>

<p>After trying the solution as suggested by Rami Enbashi in the answer, the previous error (before UPDATE 1) again started appearing.</p>
","I don't see `shallow` being imported. Are you sure you are using Enzyme's 'shallow' ?"
"45980016","Jest test rendering with react + CampusM AEK - AEK component failures","0","<p>I'm starting to look at constructing some test frameworks for use with my institution's implementation of CampusM for our mobile app. I've written a couple of apps that use CampusM's AEK2.0, tools that are based on React15, and we've got apps deploying on the platform through our CI system (jenkins, in case you're wondering).</p>

<p>Most of the AEK apps are fairly small , but we still want to have a sensible testing regime in place now that the CI stuff is working. I've been trying to get <code>enzyme</code> and <code>Jest</code> to play nicely, but have run into problems getting even the most basic AEK tests to work.</p>

<p>In <code>package.json</code> I have <code>npm test</code> setup so:</p>

<pre><code>""test"": ""jest --debug --no-cache --updateSnapshot -config=test/config.json"",
</code></pre>

<p>I have the following directory structure</p>

<pre><code>&lt;app root&gt;
    node_modules
    src
        js
            data
            pages
            components
                footer.jsx
    test
        _setup.js
        config.json 
        components
            Footer.test.js
    .babelrc
</code></pre>

<p>This is my jest config file</p>

<pre><code>{
    ""testEnvironment"": ""jsdom"",
    ""automock"": false,
    ""verbose"": true,
    ""bail"": false,
    ""notify"": true,
    ""rootDir"": ""&lt;path to my local dev repo app root&gt;"",
    ""setupFiles"": [""&lt;rootDir&gt;/test/_setup.js""],
    ""transform"": { 
        ""^.+\\.jsx?$"": ""babel-jest"",
        ""^.+\\.js?$"": ""babel-jest""
    },
    ""transformIgnorePatterns"": [],
    ""globals"": {},
    ""moduleFileExtensions"": [ ""js"", ""jsx"", ""es6"", ""es6.js"" ],
    ""modulePaths"": [ ""&lt;rootDir&gt;/src/"" ],
    ""moduleDirectories"": [ ""src"", ""test"", ""node_modules"" ],
    ""roots"": [ ""&lt;rootDir&gt;/src"", ""&lt;rootDir&gt;/test"" ],
    ""testMatch"": [ ""&lt;rootDir&gt;/test/(pages|components)/*.js?(x)"" ],
    ""testPathIgnorePatterns"": [ ""&lt;rootDir&gt;/test/_setup.js"" ],
    ""useStderr"": true
}
</code></pre>

<p>The <code>_setup.js</code> file is just there to do some <code>enzyme</code> includes for convenience:</p>

<pre><code>import { shallow, render, mount } from 'enzyme';
global.shallow = shallow;
global.render = render;
global.mount = mount;
// Fail tests on any warning
console.error = message =&gt; {
    throw new Error(message);
};
</code></pre>

<p>I'm also using babel to transpile, and my .babelrc looks like this, the module resolver stuff is there to make sure the AEK libraries get included properly:</p>

<pre><code>    {
    ""env"": {
        ""test"": {
            ""presets"": [ ""es2015"", ""react"" ],
            ""plugins"": [
                [""module-resolver"", {
                    ""root"": [""./src""],
                    ""alias"": {
                        ""-components"": ""npm:@ombiel/aek-lib/react/components"",
                        ""-aek"": ""npm:@ombiel/aek-lib""
                    },
                    ""extensions"": [ "".js"", "".jsx"", "".es6"" ]
                }]
            ]
        }
    }
}
</code></pre>

<p>Here's my basic AEK test that's failing (the same output happens without the snapshot renderer code too) </p>

<pre><code>/* Footer test */

import renderer from 'react-test-renderer';
import Footer from ""../../src/js/components/footer"";

test(""renders the page footer correctly"", () =&gt; {
    const wrapper = renderer.create(&lt;Footer/&gt;).toJSON;
    console.log(wrapper.debug());
    expect(wrapper).toMatchSnapshot(""Durham University"");
});
</code></pre>

<p>...and this is the AEK Footer component I'm trying to test. these imports are why I need the resolver aliases from earlier.</p>

<pre><code>import React from ""react"";
import {BasicSegment} from ""-components/segment"";
import moment from ""moment"";

class Footer extends React.Component {

    constructor(props) {
        super(props);
        this.state = {};
    }

    render() {
        var this_year = moment().format('YYYY');
        var dates = """" + this_year;
        if (this_year &gt; 2017) {
            dates = ""2017-"" + this_year;
        }

        return (
            &lt;BasicSegment style={{""backgroundColor"": ""#643265""}}&gt;
                &lt;span style={{""color"": ""white""}}&gt;&amp;copy; Durham University {dates}&lt;/span&gt;
            &lt;/BasicSegment&gt;
        );
    }
}

export default Footer;
</code></pre>

<p>Running the first, most basic, example test in the jest example docs, for summing two numbers, I have included in my tests as a dummy, and that works fine with this setup; it passes ok, which makes me think the basic jest setup is sound. But every time this initial AEK test runs, I get the following error:</p>

<pre><code> FAIL  test/components/Footer.test.js
  ● Test suite failed to run

    &lt;my local dev app root&gt;/node_modules/@ombiel/aek-lib/react/components/layout.jsx: Unexpected token, expected , (206:5)
        204 | 
        205 |       }
      &gt; 206 |     }.bind(this));
            |      ^
        207 |     if(measured) {
        208 |       measured = _.extend({},this.state.measured,measured);
        209 |       this.setState({measured:measured});
</code></pre>

<p>It looks like the transpilation of the AEK modules is failing, but I can't work out why, as I think I have babel set to work on the the node_modules paths correctly, or am I doing something so boneheadedly brain-dead I can't see past it?. </p>
",""
"46244442","Cannot find module 'react/lib/ReactCurrentOwner' from 'ReactFiberTreeReflection.js'","4","<p>I trying to start unit test in react-native folowing this <a href=""http://facebook.github.io/jest/docs/en/tutorial-react-native.html"" rel=""nofollow noreferrer"">jest tutorial</a>. But when i run <code>npm test</code> i get the error <code>Cannot find module 'react/lib/ReactCurrentOwner' from 'ReactFiberTreeReflection.js'</code></p>

<p>My Component is the most simple as possible
</p>

<pre><code>// /SimpleComp.js
import React, { Component } from 'react';
import {
    View,
} from 'react-native';

export default class SimpleComp extends Component {
    constructor(props){
        super(props);
        this.state = {}
    }

    render() {
        return (
            &lt;View&gt;&lt;/View&gt;
        );
    }
}
</code></pre>

<p>And here are my test file
</p>

<pre><code>// /__tests__/SimpleComp-test.js
import 'react-native';
import React from 'react';
import SimpleComp from '../SimpleComp';

// Note: test renderer must be required after react-native.
import renderer from 'react-test-renderer';

test('renders correctly', () =&gt; {
    const tree = renderer.create(
        &lt;SimpleComp /&gt;
    ).toJSON();
    expect(tree).toMatchSnapshot();
});
</code></pre>

<h2>Full test output</h2>

<pre><code> FAIL  __tests__/SimpleComp-test.js
    ● Test suite failed to run

        Cannot find module 'react/lib/ReactCurrentOwner' from 'ReactFiberTreeReflection.js'

        at Resolver.resolveModule (node_modules/jest-resolve/build/index.js:169:17)
        at Object.&lt;anonymous&gt; (node_modules/react-test-renderer/lib/ReactFiberTreeReflection.js:15:25)

    Test Suites: 1 failed, 1 total
    Tests:       0 total
    Snapshots:   0 total
    Time:        0.42s
    Ran all test suites.
    npm ERR! Test failed.  See above for more details.
</code></pre>

<h2>Aditional info</h2>

<h3>Versions</h3>

<p>react-native:</p>

<pre><code>react-native-cli: 2.0.1
react-native: 0.45.1
</code></pre>

<p>yarn: v0.27.5</p>

<p>npm: 3.10.10</p>

<p>node: v6.11.1</p>

<h3>Package.json</h3>

<pre class=""lang-json prettyprint-override""><code>{
    ""name"": ""PrimeiraMesa2"",
    ""version"": ""0.0.1"",
    ""private"": true,
    ""scripts"": {
        ""start"": ""node node_modules/react-native/local-cli/cli.js start"",
        ""test"": ""jest"",
        ""flow"": ""flow""
    },
    ""dependencies"": {
        ""axios"": ""^0.16.2"",
        ""jest-haste-map"": ""^20.0.4"",
        ""moment"": ""^2.18.1"",
        ""native-base"": ""2.2.0"",
        ""prop-types"": ""^15.5.10"",
        ""react"": ""16.0.0-alpha.12"",
        ""react-devtools-core"": ""^2.3.3"",
        ""react-native"": ""0.45.1"",
        ""react-native-check-box"": ""^1.0.4"",
        ""react-native-communications"": ""^2.2.1"",
        ""react-native-credit-card-input"": ""^0.3.3"",
        ""react-native-fbsdk"": ""^0.6.0"",
        ""react-native-google-places-autocomplete"": ""^1.2.12"",
        ""react-native-gps-state"": ""git+https://github.com/neuberoliveira/react-native-gps-state.git"",
        ""react-native-image-picker"": ""^0.26.3"",
        ""react-native-keyboard-aware-scroll-view"": ""^0.2.9"",
        ""react-native-linear-gradient"": ""react-native-community/react-native-linear-gradient"",
        ""react-native-masked-text"": ""^1.5.1"",
        ""react-native-modal"": ""^2.4.0"",
        ""react-native-multiple-select"": ""^0.2.1"",
        ""react-native-navigation"": ""^1.1.134"",
        ""react-native-onesignal"": ""^3.0.5"",
        ""react-native-push-notification"": ""^3.0.0"",
        ""react-native-scrollable-tab-view"": ""^0.6.7"",
        ""react-native-star-rating"": ""^1.0.7"",
        ""react-native-swiper"": ""^1.5.4"",
        ""react-native-textinput-effects"": ""git+https://github.com/multisolution/react-native-textinput-effects"",
        ""react-native-vector-icons"": ""^4.0.1"",
        ""react-redux"": ""^5.0.6"",
        ""redux"": ""^3.7.2"",
        ""redux-logger"": ""^3.0.6"",
        ""redux-thunk"": ""^2.2.0"",
        ""tcomb-form-native"": ""^0.6.9"",
        ""underscore"": ""^1.8.3""
    },
    ""devDependencies"": {
        ""react-test-renderer"": ""16.0.0-alpha.6"",
        ""babel-preset-react-native"": ""1.9.1"",
        ""babel-jest"": ""19.0.0"",
        ""eslint"": ""^4.4.1"",
        ""jest"": ""19.0.2"",
    },
    ""jest"": {
        ""preset"": ""react-native""
    }
}
</code></pre>
","tried that issue too,mainly the `import *` things (dont use expo), same result"
"46244442","Cannot find module 'react/lib/ReactCurrentOwner' from 'ReactFiberTreeReflection.js'","4","<p>I trying to start unit test in react-native folowing this <a href=""http://facebook.github.io/jest/docs/en/tutorial-react-native.html"" rel=""nofollow noreferrer"">jest tutorial</a>. But when i run <code>npm test</code> i get the error <code>Cannot find module 'react/lib/ReactCurrentOwner' from 'ReactFiberTreeReflection.js'</code></p>

<p>My Component is the most simple as possible
</p>

<pre><code>// /SimpleComp.js
import React, { Component } from 'react';
import {
    View,
} from 'react-native';

export default class SimpleComp extends Component {
    constructor(props){
        super(props);
        this.state = {}
    }

    render() {
        return (
            &lt;View&gt;&lt;/View&gt;
        );
    }
}
</code></pre>

<p>And here are my test file
</p>

<pre><code>// /__tests__/SimpleComp-test.js
import 'react-native';
import React from 'react';
import SimpleComp from '../SimpleComp';

// Note: test renderer must be required after react-native.
import renderer from 'react-test-renderer';

test('renders correctly', () =&gt; {
    const tree = renderer.create(
        &lt;SimpleComp /&gt;
    ).toJSON();
    expect(tree).toMatchSnapshot();
});
</code></pre>

<h2>Full test output</h2>

<pre><code> FAIL  __tests__/SimpleComp-test.js
    ● Test suite failed to run

        Cannot find module 'react/lib/ReactCurrentOwner' from 'ReactFiberTreeReflection.js'

        at Resolver.resolveModule (node_modules/jest-resolve/build/index.js:169:17)
        at Object.&lt;anonymous&gt; (node_modules/react-test-renderer/lib/ReactFiberTreeReflection.js:15:25)

    Test Suites: 1 failed, 1 total
    Tests:       0 total
    Snapshots:   0 total
    Time:        0.42s
    Ran all test suites.
    npm ERR! Test failed.  See above for more details.
</code></pre>

<h2>Aditional info</h2>

<h3>Versions</h3>

<p>react-native:</p>

<pre><code>react-native-cli: 2.0.1
react-native: 0.45.1
</code></pre>

<p>yarn: v0.27.5</p>

<p>npm: 3.10.10</p>

<p>node: v6.11.1</p>

<h3>Package.json</h3>

<pre class=""lang-json prettyprint-override""><code>{
    ""name"": ""PrimeiraMesa2"",
    ""version"": ""0.0.1"",
    ""private"": true,
    ""scripts"": {
        ""start"": ""node node_modules/react-native/local-cli/cli.js start"",
        ""test"": ""jest"",
        ""flow"": ""flow""
    },
    ""dependencies"": {
        ""axios"": ""^0.16.2"",
        ""jest-haste-map"": ""^20.0.4"",
        ""moment"": ""^2.18.1"",
        ""native-base"": ""2.2.0"",
        ""prop-types"": ""^15.5.10"",
        ""react"": ""16.0.0-alpha.12"",
        ""react-devtools-core"": ""^2.3.3"",
        ""react-native"": ""0.45.1"",
        ""react-native-check-box"": ""^1.0.4"",
        ""react-native-communications"": ""^2.2.1"",
        ""react-native-credit-card-input"": ""^0.3.3"",
        ""react-native-fbsdk"": ""^0.6.0"",
        ""react-native-google-places-autocomplete"": ""^1.2.12"",
        ""react-native-gps-state"": ""git+https://github.com/neuberoliveira/react-native-gps-state.git"",
        ""react-native-image-picker"": ""^0.26.3"",
        ""react-native-keyboard-aware-scroll-view"": ""^0.2.9"",
        ""react-native-linear-gradient"": ""react-native-community/react-native-linear-gradient"",
        ""react-native-masked-text"": ""^1.5.1"",
        ""react-native-modal"": ""^2.4.0"",
        ""react-native-multiple-select"": ""^0.2.1"",
        ""react-native-navigation"": ""^1.1.134"",
        ""react-native-onesignal"": ""^3.0.5"",
        ""react-native-push-notification"": ""^3.0.0"",
        ""react-native-scrollable-tab-view"": ""^0.6.7"",
        ""react-native-star-rating"": ""^1.0.7"",
        ""react-native-swiper"": ""^1.5.4"",
        ""react-native-textinput-effects"": ""git+https://github.com/multisolution/react-native-textinput-effects"",
        ""react-native-vector-icons"": ""^4.0.1"",
        ""react-redux"": ""^5.0.6"",
        ""redux"": ""^3.7.2"",
        ""redux-logger"": ""^3.0.6"",
        ""redux-thunk"": ""^2.2.0"",
        ""tcomb-form-native"": ""^0.6.9"",
        ""underscore"": ""^1.8.3""
    },
    ""devDependencies"": {
        ""react-test-renderer"": ""16.0.0-alpha.6"",
        ""babel-preset-react-native"": ""1.9.1"",
        ""babel-jest"": ""19.0.0"",
        ""eslint"": ""^4.4.1"",
        ""jest"": ""19.0.2"",
    },
    ""jest"": {
        ""preset"": ""react-native""
    }
}
</code></pre>
","I assume that you've run `npm install`, right? If you have, try deleting the `node_modules` folder and rerunning `npm install`."
"46244442","Cannot find module 'react/lib/ReactCurrentOwner' from 'ReactFiberTreeReflection.js'","4","<p>I trying to start unit test in react-native folowing this <a href=""http://facebook.github.io/jest/docs/en/tutorial-react-native.html"" rel=""nofollow noreferrer"">jest tutorial</a>. But when i run <code>npm test</code> i get the error <code>Cannot find module 'react/lib/ReactCurrentOwner' from 'ReactFiberTreeReflection.js'</code></p>

<p>My Component is the most simple as possible
</p>

<pre><code>// /SimpleComp.js
import React, { Component } from 'react';
import {
    View,
} from 'react-native';

export default class SimpleComp extends Component {
    constructor(props){
        super(props);
        this.state = {}
    }

    render() {
        return (
            &lt;View&gt;&lt;/View&gt;
        );
    }
}
</code></pre>

<p>And here are my test file
</p>

<pre><code>// /__tests__/SimpleComp-test.js
import 'react-native';
import React from 'react';
import SimpleComp from '../SimpleComp';

// Note: test renderer must be required after react-native.
import renderer from 'react-test-renderer';

test('renders correctly', () =&gt; {
    const tree = renderer.create(
        &lt;SimpleComp /&gt;
    ).toJSON();
    expect(tree).toMatchSnapshot();
});
</code></pre>

<h2>Full test output</h2>

<pre><code> FAIL  __tests__/SimpleComp-test.js
    ● Test suite failed to run

        Cannot find module 'react/lib/ReactCurrentOwner' from 'ReactFiberTreeReflection.js'

        at Resolver.resolveModule (node_modules/jest-resolve/build/index.js:169:17)
        at Object.&lt;anonymous&gt; (node_modules/react-test-renderer/lib/ReactFiberTreeReflection.js:15:25)

    Test Suites: 1 failed, 1 total
    Tests:       0 total
    Snapshots:   0 total
    Time:        0.42s
    Ran all test suites.
    npm ERR! Test failed.  See above for more details.
</code></pre>

<h2>Aditional info</h2>

<h3>Versions</h3>

<p>react-native:</p>

<pre><code>react-native-cli: 2.0.1
react-native: 0.45.1
</code></pre>

<p>yarn: v0.27.5</p>

<p>npm: 3.10.10</p>

<p>node: v6.11.1</p>

<h3>Package.json</h3>

<pre class=""lang-json prettyprint-override""><code>{
    ""name"": ""PrimeiraMesa2"",
    ""version"": ""0.0.1"",
    ""private"": true,
    ""scripts"": {
        ""start"": ""node node_modules/react-native/local-cli/cli.js start"",
        ""test"": ""jest"",
        ""flow"": ""flow""
    },
    ""dependencies"": {
        ""axios"": ""^0.16.2"",
        ""jest-haste-map"": ""^20.0.4"",
        ""moment"": ""^2.18.1"",
        ""native-base"": ""2.2.0"",
        ""prop-types"": ""^15.5.10"",
        ""react"": ""16.0.0-alpha.12"",
        ""react-devtools-core"": ""^2.3.3"",
        ""react-native"": ""0.45.1"",
        ""react-native-check-box"": ""^1.0.4"",
        ""react-native-communications"": ""^2.2.1"",
        ""react-native-credit-card-input"": ""^0.3.3"",
        ""react-native-fbsdk"": ""^0.6.0"",
        ""react-native-google-places-autocomplete"": ""^1.2.12"",
        ""react-native-gps-state"": ""git+https://github.com/neuberoliveira/react-native-gps-state.git"",
        ""react-native-image-picker"": ""^0.26.3"",
        ""react-native-keyboard-aware-scroll-view"": ""^0.2.9"",
        ""react-native-linear-gradient"": ""react-native-community/react-native-linear-gradient"",
        ""react-native-masked-text"": ""^1.5.1"",
        ""react-native-modal"": ""^2.4.0"",
        ""react-native-multiple-select"": ""^0.2.1"",
        ""react-native-navigation"": ""^1.1.134"",
        ""react-native-onesignal"": ""^3.0.5"",
        ""react-native-push-notification"": ""^3.0.0"",
        ""react-native-scrollable-tab-view"": ""^0.6.7"",
        ""react-native-star-rating"": ""^1.0.7"",
        ""react-native-swiper"": ""^1.5.4"",
        ""react-native-textinput-effects"": ""git+https://github.com/multisolution/react-native-textinput-effects"",
        ""react-native-vector-icons"": ""^4.0.1"",
        ""react-redux"": ""^5.0.6"",
        ""redux"": ""^3.7.2"",
        ""redux-logger"": ""^3.0.6"",
        ""redux-thunk"": ""^2.2.0"",
        ""tcomb-form-native"": ""^0.6.9"",
        ""underscore"": ""^1.8.3""
    },
    ""devDependencies"": {
        ""react-test-renderer"": ""16.0.0-alpha.6"",
        ""babel-preset-react-native"": ""1.9.1"",
        ""babel-jest"": ""19.0.0"",
        ""eslint"": ""^4.4.1"",
        ""jest"": ""19.0.2"",
    },
    ""jest"": {
        ""preset"": ""react-native""
    }
}
</code></pre>
","Already did this a few times, same result"
"46244442","Cannot find module 'react/lib/ReactCurrentOwner' from 'ReactFiberTreeReflection.js'","4","<p>I trying to start unit test in react-native folowing this <a href=""http://facebook.github.io/jest/docs/en/tutorial-react-native.html"" rel=""nofollow noreferrer"">jest tutorial</a>. But when i run <code>npm test</code> i get the error <code>Cannot find module 'react/lib/ReactCurrentOwner' from 'ReactFiberTreeReflection.js'</code></p>

<p>My Component is the most simple as possible
</p>

<pre><code>// /SimpleComp.js
import React, { Component } from 'react';
import {
    View,
} from 'react-native';

export default class SimpleComp extends Component {
    constructor(props){
        super(props);
        this.state = {}
    }

    render() {
        return (
            &lt;View&gt;&lt;/View&gt;
        );
    }
}
</code></pre>

<p>And here are my test file
</p>

<pre><code>// /__tests__/SimpleComp-test.js
import 'react-native';
import React from 'react';
import SimpleComp from '../SimpleComp';

// Note: test renderer must be required after react-native.
import renderer from 'react-test-renderer';

test('renders correctly', () =&gt; {
    const tree = renderer.create(
        &lt;SimpleComp /&gt;
    ).toJSON();
    expect(tree).toMatchSnapshot();
});
</code></pre>

<h2>Full test output</h2>

<pre><code> FAIL  __tests__/SimpleComp-test.js
    ● Test suite failed to run

        Cannot find module 'react/lib/ReactCurrentOwner' from 'ReactFiberTreeReflection.js'

        at Resolver.resolveModule (node_modules/jest-resolve/build/index.js:169:17)
        at Object.&lt;anonymous&gt; (node_modules/react-test-renderer/lib/ReactFiberTreeReflection.js:15:25)

    Test Suites: 1 failed, 1 total
    Tests:       0 total
    Snapshots:   0 total
    Time:        0.42s
    Ran all test suites.
    npm ERR! Test failed.  See above for more details.
</code></pre>

<h2>Aditional info</h2>

<h3>Versions</h3>

<p>react-native:</p>

<pre><code>react-native-cli: 2.0.1
react-native: 0.45.1
</code></pre>

<p>yarn: v0.27.5</p>

<p>npm: 3.10.10</p>

<p>node: v6.11.1</p>

<h3>Package.json</h3>

<pre class=""lang-json prettyprint-override""><code>{
    ""name"": ""PrimeiraMesa2"",
    ""version"": ""0.0.1"",
    ""private"": true,
    ""scripts"": {
        ""start"": ""node node_modules/react-native/local-cli/cli.js start"",
        ""test"": ""jest"",
        ""flow"": ""flow""
    },
    ""dependencies"": {
        ""axios"": ""^0.16.2"",
        ""jest-haste-map"": ""^20.0.4"",
        ""moment"": ""^2.18.1"",
        ""native-base"": ""2.2.0"",
        ""prop-types"": ""^15.5.10"",
        ""react"": ""16.0.0-alpha.12"",
        ""react-devtools-core"": ""^2.3.3"",
        ""react-native"": ""0.45.1"",
        ""react-native-check-box"": ""^1.0.4"",
        ""react-native-communications"": ""^2.2.1"",
        ""react-native-credit-card-input"": ""^0.3.3"",
        ""react-native-fbsdk"": ""^0.6.0"",
        ""react-native-google-places-autocomplete"": ""^1.2.12"",
        ""react-native-gps-state"": ""git+https://github.com/neuberoliveira/react-native-gps-state.git"",
        ""react-native-image-picker"": ""^0.26.3"",
        ""react-native-keyboard-aware-scroll-view"": ""^0.2.9"",
        ""react-native-linear-gradient"": ""react-native-community/react-native-linear-gradient"",
        ""react-native-masked-text"": ""^1.5.1"",
        ""react-native-modal"": ""^2.4.0"",
        ""react-native-multiple-select"": ""^0.2.1"",
        ""react-native-navigation"": ""^1.1.134"",
        ""react-native-onesignal"": ""^3.0.5"",
        ""react-native-push-notification"": ""^3.0.0"",
        ""react-native-scrollable-tab-view"": ""^0.6.7"",
        ""react-native-star-rating"": ""^1.0.7"",
        ""react-native-swiper"": ""^1.5.4"",
        ""react-native-textinput-effects"": ""git+https://github.com/multisolution/react-native-textinput-effects"",
        ""react-native-vector-icons"": ""^4.0.1"",
        ""react-redux"": ""^5.0.6"",
        ""redux"": ""^3.7.2"",
        ""redux-logger"": ""^3.0.6"",
        ""redux-thunk"": ""^2.2.0"",
        ""tcomb-form-native"": ""^0.6.9"",
        ""underscore"": ""^1.8.3""
    },
    ""devDependencies"": {
        ""react-test-renderer"": ""16.0.0-alpha.6"",
        ""babel-preset-react-native"": ""1.9.1"",
        ""babel-jest"": ""19.0.0"",
        ""eslint"": ""^4.4.1"",
        ""jest"": ""19.0.2"",
    },
    ""jest"": {
        ""preset"": ""react-native""
    }
}
</code></pre>
","Try referencing [this issue](https://github.com/dalcib/jest-expo-ts/issues/1) on GitHub. Could have some useful info."
"46485056","withRouter, connect() and react-compose","1","<p>I am using <code>react-redux</code> connect function with <code>withRouter</code> function, and also I am trying to use <code>compose()</code> here. This is the code:</p>

<pre><code>export default compose (
    withRouter,
    connect(mapStateToProps)
)(Dashboard);
</code></pre>

<p>But I receive the next error:</p>

<pre><code>Uncaught TypeError: Converting circular structure to JSON
    at Object.stringify (&lt;anonymous&gt;)
    at wrapWithConnect (connectAdvanced.js:84)
    at applyFunctor (index.js:124)
    at index.js:144
    at Array.reduce (&lt;anonymous&gt;)
    at ComposedComponent (index.js:143)
    at ReactCompositeComponent.js:305
    at measureLifeCyclePerf (ReactCompositeComponent.js:75)
    at ReactCompositeComponentWrapper._constructComponentWithoutOwner (ReactCompositeComponent.js:304)
    at ReactCompositeComponentWrapper._constructComponent (ReactCompositeComponent.js:279)
    at ReactCompositeComponentWrapper.mountComponent (ReactCompositeComponent.js:187)
    at Object.mountComponent (ReactReconciler.js:45)
    at ReactCompositeComponentWrapper.performInitialMount (ReactCompositeComponent.js:370)
    at ReactCompositeComponentWrapper.mountComponent (ReactCompositeComponent.js:257)
    at Object.mountComponent (ReactReconciler.js:45)
    at ReactDOMComponent.mountChildren (ReactMultiChild.js:236)
    at ReactDOMComponent._createInitialChildren (ReactDOMComponent.js:703)
    at ReactDOMComponent.mountComponent (ReactDOMComponent.js:522)
    at Object.mountComponent (ReactReconciler.js:45)
    at ReactCompositeComponentWrapper.performInitialMount (ReactCompositeComponent.js:370)
    at ReactCompositeComponentWrapper.mountComponent (ReactCompositeComponent.js:257)
    at Object.mountComponent (ReactReconciler.js:45)
    at ReactCompositeComponentWrapper.performInitialMount (ReactCompositeComponent.js:370)
    at ReactCompositeComponentWrapper.mountComponent (ReactCompositeComponent.js:257)
    at Object.mountComponent (ReactReconciler.js:45)
    at ReactDOMComponent.mountChildren (ReactMultiChild.js:236)
    at ReactDOMComponent._createInitialChildren (ReactDOMComponent.js:703)
    at ReactDOMComponent.mountComponent (ReactDOMComponent.js:522)
    at Object.mountComponent (ReactReconciler.js:45)
    at ReactCompositeComponentWrapper.performInitialMount (ReactCompositeComponent.js:370)
    at ReactCompositeComponentWrapper.mountComponent (ReactCompositeComponent.js:257)
    at Object.mountComponent (ReactReconciler.js:45)
    at ReactCompositeComponentWrapper.performInitialMount (ReactCompositeComponent.js:370)
    at ReactCompositeComponentWrapper.mountComponent (ReactCompositeComponent.js:257)
    at Object.mountComponent (ReactReconciler.js:45)
    at ReactCompositeComponentWrapper.performInitialMount (ReactCompositeComponent.js:370)
    at ReactCompositeComponentWrapper.mountComponent (ReactCompositeComponent.js:257)
    at Object.mountComponent (ReactReconciler.js:45)
    at ReactCompositeComponentWrapper.performInitialMount (ReactCompositeComponent.js:370)
    at ReactCompositeComponentWrapper.mountComponent (ReactCompositeComponent.js:257)
    at Object.mountComponent (ReactReconciler.js:45)
    at mountComponentIntoNode (ReactMount.js:104)
    at ReactReconcileTransaction.perform (Transaction.js:143)
    at batchedMountComponentIntoNode (ReactMount.js:126)
    at ReactDefaultBatchingStrategyTransaction.perform (Transaction.js:143)
    at Object.batchedUpdates (ReactDefaultBatchingStrategy.js:62)
    at Object.batchedUpdates (ReactUpdates.js:97)
    at Object._renderNewRootComponent (ReactMount.js:319)
    at Object._renderSubtreeIntoContainer (ReactMount.js:401)
    at Object.render (ReactMount.js:422)
</code></pre>

<p>What is the problem here?</p>
","are you doing JSON.stringify on an object in your state that is not stringify-able?"
"46536565","Error in node_modules/react-native/Libraries/Modal/Modal.js while testing with Jest","0","<p>I'm making a simple snapshot test with Jest and just get this error: <a href=""https://i.stack.imgur.com/JosPt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/JosPt.png"" alt=""enter image description here""></a></p>

<p><strong>home.test.js</strong>    </p>

<pre><code>import React from 'react';
import Home from './index';
import renderer from 'react-test-renderer';

it('renders home', ()=&gt; {
  const view = renderer.create(
    &lt;Home&gt;&lt;/Home&gt;
  ).toJSON();
  expect(view).toMatchSnapshot();
});
</code></pre>

<p>Unfortunately I don't have idea what is the problem here. I thought the test is well written.</p>

<p>Any help would be great.</p>
",""
"46653807","Importing data from excel and displaying in a react component","2","<p>I am trying to import an excel sheet with multiple columns having different set of data and display it in a react component.</p>

<p>Currently i am doing,</p>

<pre><code>&lt;ReactFileReader handleFiles={this.handleFiles} fileType={'.xlsx'}&gt;
    &lt;button&gt;Import&lt;/button&gt;
    &lt;/ReactFileReader&gt;
</code></pre>

<p>and then </p>

<pre><code> handleFiles = files =&gt;{
    var fileDisplayArea = this.refs.fileDisplayArea;
    var reader = new FileReader();
    reader.onload = function(e){
    fileDisplayArea.innerHTML = reader.result;
    }
    reader.readAsText(files[0], 'utf-8');
    }
</code></pre>

<p>Although this imports the file but when rendered it displays all garbage characters. 
Any help would be much appreciated.</p>

<p>Thanks,</p>

<p>Vikram</p>
","@TimWilliams: Makes sense! I guess i should parse it to JSON and then use that output to feed into a reactjs table component. Thanks a lot. Good day!"
"47167609","Using Async/Await in firebase | react-redux | react-native","1","<p>The code works, but I was wondering if someone could help me translate that into a better async/await syntax. </p>

<p>The code is fetching data using firebase api and handling the response with react-redux and thunk middleware. </p>

<p>I'm building an React-Native app. The ""forEach"" in ""childSnapshot"" is where I can't seem to make it neater, and I needed that to sort the score values in JSON => <a href=""https://stackoverflow.com/questions/40382225/node-js-firebase-orderbychild-not-working"">Node.js + Firebase orderByChild not working</a> </p>

<pre><code>  export const getScores = () =&gt; async dispatch =&gt; {
  try {
    let res =[];
    await firebase.database().ref(""game_score_ref"").orderByChild(""score"").once(""value"", snapshot =&gt; {
      snapshot.forEach(childSnapshot =&gt;{
        res.push(childSnapshot.toJSON())
      })
    });
    dispatch({ type: GET_SCORES, payload: res });
  }catch(err){
    dispatch({ type: GET_SCORES_ERROR, payload: err });
  }
}
</code></pre>

<p>Any suggestions would be greatly appreciated!</p>
","sort `res` after the forEach loop perhaps?"
"47269957","Cannot find module from 'react-native-implementation.js'","1","<p>I have the following Jest test:</p>

<pre><code>import React from 'react';
import IndexSign from '../IndexSign';
import renderer from 'react-test-renderer';

it('renders correctly', () =&gt; {
  const tree = renderer.create(
    &lt;IndexSign index={1}/&gt;
  ).toJSON();
  expect(tree).toMatchSnapshot();
});
</code></pre>

<p>The <code>IndexSign</code> component that I am calling calls this <code>StyleSheet</code> component: </p>

<pre><code>import {StyleSheet} from 'react-native';

export default StyleSheet.create({
  //some styles
});
</code></pre>

<p>For testing, I am using Gulp:</p>

<pre><code>gulp.task('tests', () =&gt; {
    process.env.NODE_ENV = 'test';
    return gulp.src('src').pipe(jest({
    }));
});
</code></pre>

<p>The problem is that when I run this test, I get:</p>

<pre><code>● Test suite failed to run

Cannot find module 'StyleSheet' from 'react-native-implementation.js'

  at Resolver.resolveModule (../node_modules/jest-resolve/build/index.js:142:17)
  at Object.StyleSheet (../node_modules/react-native/Libraries/react-native/react-native-implementation.js:98:25)
  at Object.&lt;anonymous&gt; (styles/Styles.js:5:13)
</code></pre>

<p>Any idea why this is happening?</p>

<p>Why is it searching for <code>StyleSheet</code> in <code>react-native-implementation.js</code> rather than <code>react-native</code>, which I imported?</p>

<p>And why can it not find <code>StyleSheet</code>?</p>
","Have you found a solution? Stumbled upon this as well"
"47361668","Why we need toJSON when comparing to two components equality?","0","<p>I write component which convert text with \n line break to html paragraph</p>

<p>Text.js</p>

<pre><code>const Text = props =&gt; ((
  &lt;div&gt;
    { props.paragraph.split('\n').map((line, index) =&gt; {
      if (line.length === 0) return;
      return &lt;p key={index}&gt;{ line }&lt;/p&gt;;
    })}
  &lt;/div&gt;
)
);
</code></pre>

<p>When I want to compare to Components, there is error if I call it without <code>toJSON</code> to rendered Component. (Even though result is the same when I check with toMatchSnapshot())</p>

<p>Text.spec.js</p>

<pre><code>it('ignores \\n at last', () =&gt; {
  const paragraphA = 'aa\nbbb\n';
  const paragraphB = 'aa\nbbb';
  const cA = renderer.create(&lt;Text paragraph={paragraphA} /&gt;);
  const cB = renderer.create(&lt;Text paragraph={paragraphB} /&gt;);
  expect(cA).toEqual(cB); // NG
  expect(cA.toJSON()).toEqual(cB.toJSON()); // OK
});
</code></pre>

<p>jest tells Difference as below</p>

<blockquote>
  <p>Compared values serialize to the same structure.
  Printing internal object structure without calling <code>toJSON</code> instead.</p>
</blockquote>

<p>I google it but could not find any clue about toJSON</p>

<ul>
<li>Why do we need <code>toJSON</code> here?</li>
<li>what <code>toJSON</code> do generally?</li>
<li>Where can I find reference about toJSON?</li>
</ul>

<p>Env</p>

<p>react: 16.1
jest-cli"": ""^21.2.1""</p>

<p>Thanks in advance!!</p>
",""
"47937200","""TypeError: Converting circular structure to JSON"" when running babel-node","0","<p>I have a simple express server that I'm attempting to run on Heroku. Everything works fine locally but when I deploy to Heroku, I get the following error.</p>

<pre><code>/app/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.symbol.js:223
return _stringify.apply($JSON, args);
                       ^

TypeError: Converting circular structure to JSON
     at Object.stringify (native)
     at Object.stringify (/app/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.symbol.js:223:23)
     at stringify (/app/node_modules/babel-runtime/node_modules/core-js/library/fn/json/stringify.js:4:26)
     at compile (/app/node_modules/babel-cli/node_modules/babel-register/lib/node.js:105:42)
     at loader (/app/node_modules/babel-cli/node_modules/babel-register/lib/node.js:144:14)
     at Object.require.extensions.(anonymous function) [as .js] (/app/node_modules/babel-cli/node_modules/babel-register/lib/node.js:154:7)
     at Module.load (module.js:355:32)
     at Function.Module._load (module.js:310:12)
     at Function.Module.runMain (module.js:475:10)
     at Object.&lt;anonymous&gt; (/app/node_modules/babel-cli/lib/_babel-node.js:154:22)
</code></pre>

<p>Having a lot of trouble diagnosing this. Here are the dependencies in my package.json.</p>

<pre><code>""babel-cli"": ""^6.26.0"",
""babel-core"": ""^6.26.0"",
""babel-plugin-transform-runtime"": ""^6.23.0"",
""babel-preset-es2015"": ""^6.24.1"",
""babel-preset-stage-2"": ""^6.24.1"",
""babel-preset-stage-3"": ""^6.24.1"",
""babel-runtime"": ""^6.26.0"",
</code></pre>

<p>And my .babelrc file:</p>

<pre><code>    {
        ""presets"": [""react"", ""es2015"", ""stage-2"", ""stage-3""],
         ""plugins"": [
            [""transform-runtime"", {
              ""polyfill"": false,
              ""regenerator"": true
            }]
          ],
          ""ignore"": [""node_modules""]
    }
</code></pre>
",""
"48144412","reactjs / jest : unable to populate react-apollo component with data using MockedProvider?","0","<p>I have written simple react-apollo component which uses graphql query to retrieve data from schema. On execution component works fine but, when I am writing test case for this component using jest framework together with MockedProvider(i.e. component of react-apollo/test-utils). I am unable to populate component with data. I had refered this article on MockedProvider: <a href=""https://paradite.com/2017/11/16/test-react-apollo-components-enzyme-examples/"" rel=""nofollow noreferrer"">https://paradite.com/2017/11/16/test-react-apollo-components-enzyme-examples/</a></p>

<p>my component and test script is as below:</p>

<pre><code>//MyComponent.js
import React, { Component } from ""react"";
import { gql, graphql, compose } from ""react-apollo"";

export class MyComp extends Component {

render() {
  console.log(""data"",this.props);
  return (
    &lt;div&gt;Hello  welcome {this.props.msg}
      {!this.props.data.loading &amp;&amp; this.props.data.person.edges.map((person,i)=&gt;(
        &lt;p key={i}&gt;{person.node.name}&lt;/p&gt;
      )
    )}
    &lt;/div&gt;
  );
 }
}

export const PERSON_QUERY = gql`query Info {
person{
 edges{
   node{
    id
    name
    __typename
   }
  __typename
 }
 __typename
 }
}`;

export default compose(graphql(PERSON_QUERY,{}))(MyComp);
</code></pre>

<p>//MyComponent.test.js</p>

<pre><code>import React from 'react';
import { configure, mount } from 'enzyme';
import toJSON from 'enzyme-to-json';
import { MockedProvider } from 'react-apollo/test-utils';
import { addTypenameToDocument } from 'apollo-client';
import { gql, graphql, compose } from ""react-apollo"";
import MyComponent,{MyComp, PERSON_QUERY} from 'components/MyComponent';
import Adapter from 'enzyme-adapter-react-15';
import {store} from ""stores/store"";

configure({adapter: new Adapter()});

const data1 = {
  person: {
   edges: [
    {
      node: {
        id: ""00000000-0002-972"",
        name: ""Magic Mad"",
        __typename: ""Person""
      },
      __typename: ""PersonEdge""
    },
    {
      node: {
        id: ""000-0001-972"",
        name: ""Donald Durm"",
        __typename: ""Person""
      },
      __typename: ""PersonEdge""
    },
    {
      node: {
        id: ""00-0000-fccd3"",
        name: ""Peter Hogwarts"",
        __typename: ""Person""
      },
      __typename: ""PersonEdge""
    }
  ],
  __typename: ""PersonConnection""
  }
};

describe(""MockedProvider"",()=&gt;{
 test(""Load with data"",()=&gt;{
  const wrap = mount(&lt;MockedProvider mocks={[
   {
    request: {
      query: addTypenameToDocument(PERSON_QUERY)
    },
    result: { data: data1 }
   }
    ]}&gt;
   &lt;MyComponent msg={""2018""}/&gt;
  &lt;/MockedProvider&gt;);
 console.log(""Mock"",wrap.props());
 console.log(""html"",wrap.html());
 wrap.update();
});
});
</code></pre>
",""
"48155782","Importing a withrouter component in react jest testing","0","<p>I'm trying to do testing using jest for my react application and On trying to create a snapshot for the component,I'm getting the following error.</p>

<p>Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in.</p>

<p>I tried to debug and couldn't find a solution.Is there any fix for this problem?</p>

<p>myWrapper.jsx :</p>

<pre><code>const myWrapper = ({ myData }) =&gt; (
  &lt;Card className=""myCard""&gt;
    &lt;CardText style={{ padding: '0px' }}&gt;
      &lt;TableOfContentsComponent

      /&gt;
    &lt;/CardText&gt;
  &lt;/Card&gt;
);

myWrapper.propTypes = {
  myData: PropTypes.object.isRequired
};

export default withRouter(myWrapper);
</code></pre>

<p>And  the test file :</p>

<p>myWrapper.test.jsx</p>

<pre><code>import  myWrapper ,{TableOfContentsComponent} from '../../../../../../myWrapper';

it('Renders Course card correctly', () =&gt; {
    const tree = renderer.create(&lt;MuiThemeProvider&gt;
    &lt;IntlProvider locale=""en""&gt;
    &lt;myWrapper.WrappedComponent/&gt;
&lt;/IntlProvider&gt;&lt;/MuiThemeProvider&gt;).toJSON();
    expect(tree).toMatchSnapshot();
  });
</code></pre>
",""
"48274723","Text file to JSON, last few lines are not included in the result","9","<p>I'm reading a text file and converting it to JSON format using regex in my react project.It is working fine but not including last 20-30 lines of the text file. There is some problem while converting it to JSON but I am unable to understand the problem.</p>

<p>Here is my code:</p>

<pre><code>    readTextFile = file =&gt; {
        let rawFile = new XMLHttpRequest();
        rawFile.open(""GET"", file, false);
        rawFile.onreadystatechange = () =&gt; {
            if (rawFile.readyState === 4) {
                if (rawFile.status === 200 || rawFile.status === 0) {
                    let allText = rawFile.responseText;
                    // console.log(allText)

                    let reg = /\d\d\d\d-(0?[1-9]|1[0-2])-(0?[1-9]|[12][0-9]|3[01]) (00|[0-9]|1[0-9]|2[0-3]):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9])/g;

                    let arr = [];
                    let start = null;
                    let line, lastSpacePos;
                    let match;
                    while ((match = reg.exec(allText)) != null) {
                        if(start) {
                            line = allText.slice(start, match.index).trim();
                            lastSpacePos = line.lastIndexOf(' ');
                            arr.push({
                                date: line.slice(0, 19),
                                text: line.slice(20, lastSpacePos).trim(),
                                user_id: line.slice(lastSpacePos).trim()
                            });
                        }

                        start = match.index
                    }
                    console.log(arr);

                    this.setState({
                        // text: JSON.stringify(arr)
                        text: allText
                    });
                }
            }
        };
</code></pre>
","Click `<>`, remove the AJAX and post an example file using \`\` and the parsing - like this non-working example: https://jsfiddle.net/sumfzt02/"
"48274723","Text file to JSON, last few lines are not included in the result","9","<p>I'm reading a text file and converting it to JSON format using regex in my react project.It is working fine but not including last 20-30 lines of the text file. There is some problem while converting it to JSON but I am unable to understand the problem.</p>

<p>Here is my code:</p>

<pre><code>    readTextFile = file =&gt; {
        let rawFile = new XMLHttpRequest();
        rawFile.open(""GET"", file, false);
        rawFile.onreadystatechange = () =&gt; {
            if (rawFile.readyState === 4) {
                if (rawFile.status === 200 || rawFile.status === 0) {
                    let allText = rawFile.responseText;
                    // console.log(allText)

                    let reg = /\d\d\d\d-(0?[1-9]|1[0-2])-(0?[1-9]|[12][0-9]|3[01]) (00|[0-9]|1[0-9]|2[0-3]):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9])/g;

                    let arr = [];
                    let start = null;
                    let line, lastSpacePos;
                    let match;
                    while ((match = reg.exec(allText)) != null) {
                        if(start) {
                            line = allText.slice(start, match.index).trim();
                            lastSpacePos = line.lastIndexOf(' ');
                            arr.push({
                                date: line.slice(0, 19),
                                text: line.slice(20, lastSpacePos).trim(),
                                user_id: line.slice(lastSpacePos).trim()
                            });
                        }

                        start = match.index
                    }
                    console.log(arr);

                    this.setState({
                        // text: JSON.stringify(arr)
                        text: allText
                    });
                }
            }
        };
</code></pre>
","Click `<>`, remove the AJAX and post an example file using `` and the parsing like this: https://jsfiddle.net/mplungjan/a158wmf0/"
"48337487","testing reactnavigation drawerstack with jest gives Invariant Violation: React.Children.only","0","<p>I am writing a test for my DrawerNavigation using ReactNavigation and React-Native.</p>

<p>my index.js</p>

<pre><code>import { DrawerNavigator } from 'react-navigation';
import DrawerMenu from './DrawerMenu';
import Screen1 from './Screen1';
import ServiceStackNavigation from '../ServiceStackNavigation/index';

const DrawerNavigation = DrawerNavigator({
    Service: { screen: ServiceStackNavigation },
    MyProfile: {
    screen: Screen1,
  },
}, {
    gesturesEnabled: false,
    contentComponent: DrawerMenu,
});

export default DrawerNavigation;`
</code></pre>

<p>My test file index.test.js</p>

<pre><code>import React from 'react';
import { Provider } from 'react-redux';
import renderer from 'react-test-renderer';
import store from '../../src/store/store';    
import DrawerNavigation from '../../src/DrawerNavigation/index';

describe('&lt;DrawerNavigation&gt;', () =&gt; {
   test('renders correctly', () =&gt; {
       const tree = renderer.create(&lt;Provider store={store}&gt; 
           &lt;DrawerNavigation /&gt; &lt;/Provider&gt;).toJSON();
        expect(tree).toMatchSnapshot();
   });
});
</code></pre>

<p>In my store.js is where the store is created for the app. I'm passing the same store to my test component</p>

<pre><code>import { createStore, applyMiddleware } from 'redux';
import thunk from 'redux-thunk';  
import rootReducer from '../reducer/rootReducer';

const store = createStore(
   rootReducer,
   applyMiddleware(thunk),
);

export default store;
</code></pre>

<p>My rootreducer.js is where I have combined all the reducers. Now I dont have a specific reducer for this drawer component as the reducer exists for a root component.</p>

<pre><code>import { combineReducers } from 'redux';
import rootNavigationReducer from '../RootNavigation/reducer';
import CentreReducer from '../CentreScreen/reducer';

export default combineReducers({
   rootNavigation: rootNavigationReducer,
   Centre: CentreReducer,
});
</code></pre>

<p>When I run my test the error which I get is:</p>

<pre><code>Invariant Violation: React.Children.only expected to receive a single React element child.
 Warning: Failed prop type: Invalid prop `children` of type `array` supplied to `Provider`, expected a single ReactElement.
    in Provider
</code></pre>

<p>Usually this error occurs when there are more there is an array of child components being rendered, which in my case is clearly not.</p>
",""
"48576239","Warning: Shallow renderer has been moved to react-test-renderer/shallow","2","<p>I am getting following warnings while executing my unit test cases with jest in React app:</p>

<blockquote>
  <p>Warning: Shallow renderer has been moved to
  react-test-renderer/shallow. Update references to remove this warning.</p>
  
  <p>Warning: ReactTestUtils has been moved to react-dom/test-utils. Update
  references to remove this warning.</p>
</blockquote>

<p>I have used shallow from enzyme. Installed all needed dependencies as well but still getting this warning though the test cases execute fine. Below is the package json snapshot:</p>

<pre><code>""jest"": ""^22.1.4"",
""enzyme"": ""^3.2.0"",
""enzyme-adapter-react-15.4"": ""^1.0.5"",
""react-test-renderer"": ""^15.6.1""
</code></pre>

<p>I found the similar issue on git <a href=""https://github.com/airbnb/enzyme/pull/876"" rel=""nofollow noreferrer"">here</a>, but the conversation is so cumbersome and unfruitfull with no clear solution. I wont be able to update React so looking for the fix for v15.1. </p>

<p>Here is my test file:</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import renderer from 'react-test-renderer'
import Button from '../src/component/Button';
import { shallow, mount, render } from 'enzyme';

it('renders correctly', () =&gt; {
  const tree = renderer.create(&lt;Button /&gt;
  ).toJSON();
  expect(tree).toMatchSnapshot();
});
describe('Button', () =&gt; {
    it('renders without crashing', () =&gt; {
        mount(&lt;Button /&gt;);
    });
});
</code></pre>
","@VasylGutnyk nope mate!"
"48576239","Warning: Shallow renderer has been moved to react-test-renderer/shallow","2","<p>I am getting following warnings while executing my unit test cases with jest in React app:</p>

<blockquote>
  <p>Warning: Shallow renderer has been moved to
  react-test-renderer/shallow. Update references to remove this warning.</p>
  
  <p>Warning: ReactTestUtils has been moved to react-dom/test-utils. Update
  references to remove this warning.</p>
</blockquote>

<p>I have used shallow from enzyme. Installed all needed dependencies as well but still getting this warning though the test cases execute fine. Below is the package json snapshot:</p>

<pre><code>""jest"": ""^22.1.4"",
""enzyme"": ""^3.2.0"",
""enzyme-adapter-react-15.4"": ""^1.0.5"",
""react-test-renderer"": ""^15.6.1""
</code></pre>

<p>I found the similar issue on git <a href=""https://github.com/airbnb/enzyme/pull/876"" rel=""nofollow noreferrer"">here</a>, but the conversation is so cumbersome and unfruitfull with no clear solution. I wont be able to update React so looking for the fix for v15.1. </p>

<p>Here is my test file:</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import renderer from 'react-test-renderer'
import Button from '../src/component/Button';
import { shallow, mount, render } from 'enzyme';

it('renders correctly', () =&gt; {
  const tree = renderer.create(&lt;Button /&gt;
  ).toJSON();
  expect(tree).toMatchSnapshot();
});
describe('Button', () =&gt; {
    it('renders without crashing', () =&gt; {
        mount(&lt;Button /&gt;);
    });
});
</code></pre>
","did You find solution for this problem?"
"48974583","Jest snapshot test failing due to react navigation generated key","0","<p>My Jest test is failing because of the timestamp in the key being different every time the test is run:</p>

<pre><code> FAIL  ./App.test.js
  ✕ renders without crashing (72ms)

  ● renders without crashing

expect(value).toMatchSnapshot()

Received value does not match stored snapshot 1.

- Snapshot
+ Received

@@ -347,11 +347,11 @@
              ""index"": 0,
              ""isTransitioning"": false,
              ""key"": ""StackRouterRoot"",
              ""routes"": Array [
                Object {
-                 ""key"": ""id-1519567169760-0"",
+                 ""key"": ""id-1519567814666-0"",
                  ""routeName"": ""Menu"",
                },
              ],
            },
          }
</code></pre>

<p>Here is my App.js file:</p>

<pre><code>import React from 'react';
import { StackNavigator } from 'react-navigation';
import Menu from './components/Menu';
import List from './components/List';

const RootStack = StackNavigator(
  {
    Menu: {
      screen: Menu,
    },
    List: {
      screen: List,
    },
  },
  {
    initialRouteName: 'Menu',
  }
);

export default class App extends React.Component {
   render() {
     return &lt;RootStack /&gt;;
   }
}
</code></pre>

<p>Here is my test file:</p>

<pre><code>import React from 'react';
import App from './App';

import renderer from 'react-test-renderer';

test('renders without crashing', () =&gt; {
  const rendered = renderer.create(&lt;App /&gt;).toJSON();
  expect(rendered).toBeTruthy();
  expect(rendered).toMatchSnapshot();
});
</code></pre>

<p>Is it possible override the key value or is there a way to ignore key when the test runs?</p>
",""
"49129308","Component updated in react-test-renderer when Redirect is rendered","0","<p>I'm currently writing test for my login form written in react-redux using react-router-dom.</p>

<p>My component looks like this:</p>

<pre><code>class LoginForm extends Component {

  render() {
    const {
      isAuthenticated,
      ...
    } = this.props

    if (isAuthenticated) {
      return (
        &lt;Redirect to=""/"" /&gt;
      )
    }

    return (
      &lt;div style={{ ...styles.main }}&gt;
        ...
      &lt;/div&gt;
    )
  }
}
</code></pre>

<p>To test this component I have written the following test:</p>

<pre><code>import React from ""react""
import renderer from ""react-test-renderer""
import { MemoryRouter } from ""react-router-dom""

import LoginPage from ""./LoginPage""

it(""renders a redirect if the user is authenticated"", () =&gt; {

  const tree = renderer
    .create(
      &lt;MemoryRouter&gt;
        &lt;LoginPage
          isAuthenticated={ true } /&gt;
      &lt;/MemoryRouter&gt;
    )
    .toJSON()

  expect(tree).toMatchSnapshot()
})
</code></pre>

<p>This test mounts the component correctly and ""renders"" the Redirect, but it also seems to triggers an update. This rerenders the redirect and gives me the following warning in my test output:</p>

<pre><code>console.error node_modules\warning\warning.js:51
  Warning: You tried to redirect to the same route you're currently on: ""/""
</code></pre>

<p>How can I prevent this warning from showing up?</p>

<p>Thanks!</p>
",""
"49701000","How to do unit testing in react native that uses firebase?","2","<p>Im quite new to jest unit testing, so stuff like mocking modules is confusing.</p>

<p>In react native, there is a component that uses firebase databse that returns data from a given ref:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>// when the data of the current user is available
userRef.child(user.uid).on('value', snap =&gt; {
  // check of val() consists data
  if (snap.val()) {
    let
      authUser = snap.val(),
      isPatient = authUser.type === ""Patient"",
      // We update the state object so that the component is re-rendered
      this.setState({
        // the ID of the current user
        authUserUID: user.uid,
        // the type of the current user (i.e. Doctor or Patient)
        authUserType: snap.val().type,
        // title of the dashboard based on the current user type
        activeTitle: snap.val().type === ""Doctor"" ? ""My Patients"" : ""My Doctors"",
      });
  }
});</code></pre>
</div>
</div>
</p>

<p>I'm now trying to do unit testing which uses this component:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import 'react-native'
import React from 'react'
import renderer from 'react-test-renderer'
import LaunchScreen from ""../../App/Containers/LaunchScreen"";

test('LaunchScreen', () =&gt; {
  const tree = renderer.create( &lt;LaunchScreen / &gt; ).toJSON()
  expect(tree).toMatchSnapshot()
})</code></pre>
</div>
</div>
</p>

<p>But it gives a weird error</p>

<blockquote>
  <p>RNFirebase core module was not found natively on iOS, ensure you have correctly included the RNFirebase pod in your projects <code>Podfile</code> and have run <code>pod install</code></p>
</blockquote>

<p>I have no idea since the firebase does return data if I run it. So why is it saying that RNFirebase cannot be found?</p>

<p>Thanks</p>

<h1>Update</h1>

<p>One of the answers have given a nice step by step instructions, and although it solves partially the proposed question; the error still persists. For example; I'm now getting this new error:</p>

<blockquote>
  <p>console.error node_modules\react-test-renderer\cjs\react-test-renderer.development.js:5530
      The above error occurred in the  component:
          in LaunchScreen</p>
  
  <p>Consider adding an error boundary to your tree to customize error handling behavior.</p>
  
  <p>TypeError: _reactNativeFirebase2.default.app is not a function</p>
</blockquote>
","Was this resolved ? If no then kindly let us know the problem and lets close this already :)"
"49701000","How to do unit testing in react native that uses firebase?","2","<p>Im quite new to jest unit testing, so stuff like mocking modules is confusing.</p>

<p>In react native, there is a component that uses firebase databse that returns data from a given ref:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>// when the data of the current user is available
userRef.child(user.uid).on('value', snap =&gt; {
  // check of val() consists data
  if (snap.val()) {
    let
      authUser = snap.val(),
      isPatient = authUser.type === ""Patient"",
      // We update the state object so that the component is re-rendered
      this.setState({
        // the ID of the current user
        authUserUID: user.uid,
        // the type of the current user (i.e. Doctor or Patient)
        authUserType: snap.val().type,
        // title of the dashboard based on the current user type
        activeTitle: snap.val().type === ""Doctor"" ? ""My Patients"" : ""My Doctors"",
      });
  }
});</code></pre>
</div>
</div>
</p>

<p>I'm now trying to do unit testing which uses this component:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import 'react-native'
import React from 'react'
import renderer from 'react-test-renderer'
import LaunchScreen from ""../../App/Containers/LaunchScreen"";

test('LaunchScreen', () =&gt; {
  const tree = renderer.create( &lt;LaunchScreen / &gt; ).toJSON()
  expect(tree).toMatchSnapshot()
})</code></pre>
</div>
</div>
</p>

<p>But it gives a weird error</p>

<blockquote>
  <p>RNFirebase core module was not found natively on iOS, ensure you have correctly included the RNFirebase pod in your projects <code>Podfile</code> and have run <code>pod install</code></p>
</blockquote>

<p>I have no idea since the firebase does return data if I run it. So why is it saying that RNFirebase cannot be found?</p>

<p>Thanks</p>

<h1>Update</h1>

<p>One of the answers have given a nice step by step instructions, and although it solves partially the proposed question; the error still persists. For example; I'm now getting this new error:</p>

<blockquote>
  <p>console.error node_modules\react-test-renderer\cjs\react-test-renderer.development.js:5530
      The above error occurred in the  component:
          in LaunchScreen</p>
  
  <p>Consider adding an error boundary to your tree to customize error handling behavior.</p>
  
  <p>TypeError: _reactNativeFirebase2.default.app is not a function</p>
</blockquote>
","I have updated my answer. Let know the results after applying the patch."
"50085575","react native with firebase phone auth validation failed","6","<p>I'm trying to make react native with firebase phone auth through <a href=""https://rnfirebase.io/docs/v4.0.x/auth/phone-auth"" rel=""nofollow noreferrer"">react-native-firebase docs</a>
and I get this error</p>

<blockquote>
  <p>Error: This app is not authorized to use Firebase Authentication. Please verifythat the correct package name and SHA-1 are configured in the Firebase Console. [ App validation failed ]</p>
</blockquote>

<p>I have already created debug.keystore</p>

<pre><code>keytool -genkey -v -keystore debug.keystore -alias androiddebugkey -storepass android -keypass android -keyalg RSA -validity 14000
</code></pre>

<p>then I get the SHA1</p>

<pre><code>keytool -list -alias androiddebugkey -keystore ""C:\Users\adirz\.android\debug.keystore"" -storepass android -keypass android
</code></pre>

<p>and paste into firebase console and download the google-services.json and add to my react native app.
then into my code I wrote </p>

<pre><code>    import React, { Component } from 'react';
import {
  View,
  Button,
  Text,
  TextInput,
  Image,
  ActivityIndicator,
  Platform,
} from 'react-native';

import firebase from 'react-native-firebase'

const imageUrl =
  'https://www.shareicon.net/data/512x512/2016/07/19/798524_sms_512x512.png';

export default class PhoneAuth extends Component {
  static getDefaultState() {
    return {
      error: '',
      codeInput: '',
      phoneNumber: '+44',
      auto: Platform.OS === 'android',
      autoVerifyCountDown: 0,
      sent: false,
      started: false,
      user: null,
    };
  }

  constructor(props) {
    super(props);
    this.timeout = 20;
    this._autoVerifyInterval = null;
    this.state = PhoneAuth.getDefaultState();
  }

  _tick() {
    this.setState({
      autoVerifyCountDown: this.state.autoVerifyCountDown - 1,
    });
  }

  /**
   * Called when confirm code is pressed - we should have the code and verificationId now in state.
   */
  afterVerify = () =&gt; {
    const { codeInput, verificationId } = this.state;
    const credential = firebase.auth.PhoneAuthProvider.credential(
      verificationId,
      codeInput
    );

    // TODO do something with credential for example:
    firebase
      .auth()
      .signInWithCredential(credential)
      .then(user =&gt; {
        console.log('PHONE AUTH USER -&gt;&gt;&gt;&gt;&gt;', user.toJSON());
        this.setState({ user: user.toJSON() });
      })
      .catch(console.error);
  };

  signIn = () =&gt; {
    const { phoneNumber } = this.state;
    this.setState(
      {
        error: '',
        started: true,
        autoVerifyCountDown: this.timeout,
      },
      () =&gt; {
        firebase
          .auth()
          .verifyPhoneNumber(phoneNumber)
          .on('state_changed', phoneAuthSnapshot =&gt; {
            console.log(phoneAuthSnapshot);
            switch (phoneAuthSnapshot.state) {
              case firebase.auth.PhoneAuthState.CODE_SENT: // or 'sent'
                // update state with code sent and if android start a interval timer
                // for auto verify - to provide visual feedback
                this.setState(
                  {
                    sent: true,
                    verificationId: phoneAuthSnapshot.verificationId,
                    autoVerifyCountDown: this.timeout,
                  },
                  () =&gt; {
                    if (this.state.auto) {
                      this._autoVerifyInterval = setInterval(
                        this._tick.bind(this),
                        1000
                      );
                    }
                  }
                );
                break;
              case firebase.auth.PhoneAuthState.ERROR: // or 'error'
                // restart the phone flow again on error
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  ...PhoneAuth.getDefaultState(),
                  error: phoneAuthSnapshot.error.message,
                });
                break;

              // ---------------------
              // ANDROID ONLY EVENTS
              // ---------------------
              case firebase.auth.PhoneAuthState.AUTO_VERIFY_TIMEOUT: // or 'timeout'
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  sent: true,
                  auto: false,
                  verificationId: phoneAuthSnapshot.verificationId,
                });
                break;
              case firebase.auth.PhoneAuthState.AUTO_VERIFIED: // or 'verified'
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  sent: true,
                  codeInput: phoneAuthSnapshot.code,
                  verificationId: phoneAuthSnapshot.verificationId,
                });
                break;
              default:
              // will never get here - just for linting
            }
          });
      }
    );
  };

  renderInputPhoneNumber() {
    const { phoneNumber } = this.state;
    return (
      &lt;View style={{ flex: 1 }}&gt;
        &lt;Text&gt;Enter phone number:&lt;/Text&gt;
        &lt;TextInput
          autoFocus
          style={{ height: 40, marginTop: 15, marginBottom: 15 }}
          onChangeText={value =&gt; this.setState({ phoneNumber: value })}
          placeholder=""Phone number ... ""
          value={phoneNumber}
          keyboardType = 'phone-pad'
        /&gt;
        &lt;Button
          title=""Begin Verification""
          color=""green""
          onPress={this.signIn}
        /&gt;
      &lt;/View&gt;
    );
  }

  renderSendingCode() {
    const { phoneNumber } = this.state;

    return (
      &lt;View style={{ paddingBottom: 15 }}&gt;
        &lt;Text style={{ paddingBottom: 25 }}&gt;
          {`Sending verification code to '${phoneNumber}'.`}
        &lt;/Text&gt;
        &lt;ActivityIndicator animating style={{ padding: 50 }} size=""large"" /&gt;
      &lt;/View&gt;
    );
  }

  renderAutoVerifyProgress() {
    const {
      autoVerifyCountDown,
      started,
      error,
      sent,
      phoneNumber,
    } = this.state;
    if (!sent &amp;&amp; started &amp;&amp; !error.length) {
      return this.renderSendingCode();
    }
    return (
      &lt;View style={{ padding: 0 }}&gt;
        &lt;Text style={{ paddingBottom: 25 }}&gt;
          {`Verification code has been successfully sent to '${phoneNumber}'.`}
        &lt;/Text&gt;
        &lt;Text style={{ marginBottom: 25 }}&gt;
          {`We'll now attempt to automatically verify the code for you. This will timeout in ${autoVerifyCountDown} seconds.`}
        &lt;/Text&gt;
        &lt;Button
          style={{ paddingTop: 25 }}
          title=""I have a code already""
          color=""green""
          onPress={() =&gt; this.setState({ auto: false })}
        /&gt;
      &lt;/View&gt;
    );
  }

  renderError() {
    const { error } = this.state;

    return (
      &lt;View
        style={{
          padding: 10,
          borderRadius: 5,
          margin: 10,
          backgroundColor: 'rgb(255,0,0)',
        }}
      &gt;
        &lt;Text style={{ color: '#fff' }}&gt;{error}&lt;/Text&gt;
      &lt;/View&gt;
    );
  }

  render() {
    const { started, error, codeInput, sent, auto, user } = this.state;
    return (
      &lt;View
        style={{ flex: 1, backgroundColor: user ? 'rgb(0, 200, 0)' : '#fff' }}
      &gt;
        &lt;View
          style={{
            padding: 5,
            justifyContent: 'center',
            alignItems: 'center',
            flex: 1,
          }}
        &gt;
          &lt;Image
            source={{ uri: imageUrl }}
            style={{
              width: 128,
              height: 128,
              marginTop: 25,
              marginBottom: 15,
            }}
          /&gt;
          &lt;Text style={{ fontSize: 25, marginBottom: 20 }}&gt;
            Phone Auth Example
          &lt;/Text&gt;
          {error &amp;&amp; error.length ? this.renderError() : null}
          {!started &amp;&amp; !sent ? this.renderInputPhoneNumber() : null}
          {started &amp;&amp; auto &amp;&amp; !codeInput.length
            ? this.renderAutoVerifyProgress()
            : null}
          {!user &amp;&amp; started &amp;&amp; sent &amp;&amp; (codeInput.length || !auto) ? (
            &lt;View style={{ marginTop: 15 }}&gt;
              &lt;Text&gt;Enter verification code below:&lt;/Text&gt;
              &lt;TextInput
                autoFocus
                style={{ height: 40, marginTop: 15, marginBottom: 15 }}
                onChangeText={value =&gt; this.setState({ codeInput: value })}
                placeholder=""Code ... ""
                value={codeInput}
              /&gt;
              &lt;Button
                title=""Confirm Code""
                color=""#841584""
                onPress={this.afterVerify}
              /&gt;
            &lt;/View&gt;
          ) : null}
          {user ? (
            &lt;View style={{ marginTop: 15 }}&gt;
              &lt;Text&gt;{`Signed in with new user id: '${user.uid}'`}&lt;/Text&gt;
            &lt;/View&gt;
          ) : null}
        &lt;/View&gt;
      &lt;/View&gt;
    );
  }
}

/*
 { user ? (
 &lt;View
 style={{
 padding: 15,
 justifyContent: 'center',
 alignItems: 'center',
 backgroundColor: '#77dd77',
 flex: 1,
 }}
 &gt;
 &lt;Image source={{ uri: successImageUri }} style={{ width: 100, height: 100, marginBottom: 25 }} /&gt;
 &lt;Text style={{ fontSize: 25 }}&gt;Signed In!&lt;/Text&gt;
 &lt;Text&gt;{JSON.stringify(user)}&lt;/Text&gt;
 &lt;/View&gt;
 ) : null}
 */

// Example usage if handling here and not in optionalCompleteCb:
// const { verificationId, code } = phoneAuthSnapshot;
// const credential = firebase.auth.PhoneAuthProvider.credential(verificationId, code);

// Do something with your new credential, e.g.:
// firebase.auth().signInWithCredential(credential);
// firebase.auth().linkWithCredential(credential);
// etc ...
</code></pre>

<p>and I still get this error.</p>

<p>I generated sha1
<a href=""https://i.stack.imgur.com/06zFu.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/06zFu.jpg"" alt=""enter image description here""></a>
then I copy in my project
<a href=""https://i.stack.imgur.com/jFxI4.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jFxI4.jpg"" alt=""enter image description here""></a>
I checked in AndroidManifest.xml I have the same packagename.</p>
","the sign in with phone? yes I enabled"
"50085575","react native with firebase phone auth validation failed","6","<p>I'm trying to make react native with firebase phone auth through <a href=""https://rnfirebase.io/docs/v4.0.x/auth/phone-auth"" rel=""nofollow noreferrer"">react-native-firebase docs</a>
and I get this error</p>

<blockquote>
  <p>Error: This app is not authorized to use Firebase Authentication. Please verifythat the correct package name and SHA-1 are configured in the Firebase Console. [ App validation failed ]</p>
</blockquote>

<p>I have already created debug.keystore</p>

<pre><code>keytool -genkey -v -keystore debug.keystore -alias androiddebugkey -storepass android -keypass android -keyalg RSA -validity 14000
</code></pre>

<p>then I get the SHA1</p>

<pre><code>keytool -list -alias androiddebugkey -keystore ""C:\Users\adirz\.android\debug.keystore"" -storepass android -keypass android
</code></pre>

<p>and paste into firebase console and download the google-services.json and add to my react native app.
then into my code I wrote </p>

<pre><code>    import React, { Component } from 'react';
import {
  View,
  Button,
  Text,
  TextInput,
  Image,
  ActivityIndicator,
  Platform,
} from 'react-native';

import firebase from 'react-native-firebase'

const imageUrl =
  'https://www.shareicon.net/data/512x512/2016/07/19/798524_sms_512x512.png';

export default class PhoneAuth extends Component {
  static getDefaultState() {
    return {
      error: '',
      codeInput: '',
      phoneNumber: '+44',
      auto: Platform.OS === 'android',
      autoVerifyCountDown: 0,
      sent: false,
      started: false,
      user: null,
    };
  }

  constructor(props) {
    super(props);
    this.timeout = 20;
    this._autoVerifyInterval = null;
    this.state = PhoneAuth.getDefaultState();
  }

  _tick() {
    this.setState({
      autoVerifyCountDown: this.state.autoVerifyCountDown - 1,
    });
  }

  /**
   * Called when confirm code is pressed - we should have the code and verificationId now in state.
   */
  afterVerify = () =&gt; {
    const { codeInput, verificationId } = this.state;
    const credential = firebase.auth.PhoneAuthProvider.credential(
      verificationId,
      codeInput
    );

    // TODO do something with credential for example:
    firebase
      .auth()
      .signInWithCredential(credential)
      .then(user =&gt; {
        console.log('PHONE AUTH USER -&gt;&gt;&gt;&gt;&gt;', user.toJSON());
        this.setState({ user: user.toJSON() });
      })
      .catch(console.error);
  };

  signIn = () =&gt; {
    const { phoneNumber } = this.state;
    this.setState(
      {
        error: '',
        started: true,
        autoVerifyCountDown: this.timeout,
      },
      () =&gt; {
        firebase
          .auth()
          .verifyPhoneNumber(phoneNumber)
          .on('state_changed', phoneAuthSnapshot =&gt; {
            console.log(phoneAuthSnapshot);
            switch (phoneAuthSnapshot.state) {
              case firebase.auth.PhoneAuthState.CODE_SENT: // or 'sent'
                // update state with code sent and if android start a interval timer
                // for auto verify - to provide visual feedback
                this.setState(
                  {
                    sent: true,
                    verificationId: phoneAuthSnapshot.verificationId,
                    autoVerifyCountDown: this.timeout,
                  },
                  () =&gt; {
                    if (this.state.auto) {
                      this._autoVerifyInterval = setInterval(
                        this._tick.bind(this),
                        1000
                      );
                    }
                  }
                );
                break;
              case firebase.auth.PhoneAuthState.ERROR: // or 'error'
                // restart the phone flow again on error
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  ...PhoneAuth.getDefaultState(),
                  error: phoneAuthSnapshot.error.message,
                });
                break;

              // ---------------------
              // ANDROID ONLY EVENTS
              // ---------------------
              case firebase.auth.PhoneAuthState.AUTO_VERIFY_TIMEOUT: // or 'timeout'
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  sent: true,
                  auto: false,
                  verificationId: phoneAuthSnapshot.verificationId,
                });
                break;
              case firebase.auth.PhoneAuthState.AUTO_VERIFIED: // or 'verified'
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  sent: true,
                  codeInput: phoneAuthSnapshot.code,
                  verificationId: phoneAuthSnapshot.verificationId,
                });
                break;
              default:
              // will never get here - just for linting
            }
          });
      }
    );
  };

  renderInputPhoneNumber() {
    const { phoneNumber } = this.state;
    return (
      &lt;View style={{ flex: 1 }}&gt;
        &lt;Text&gt;Enter phone number:&lt;/Text&gt;
        &lt;TextInput
          autoFocus
          style={{ height: 40, marginTop: 15, marginBottom: 15 }}
          onChangeText={value =&gt; this.setState({ phoneNumber: value })}
          placeholder=""Phone number ... ""
          value={phoneNumber}
          keyboardType = 'phone-pad'
        /&gt;
        &lt;Button
          title=""Begin Verification""
          color=""green""
          onPress={this.signIn}
        /&gt;
      &lt;/View&gt;
    );
  }

  renderSendingCode() {
    const { phoneNumber } = this.state;

    return (
      &lt;View style={{ paddingBottom: 15 }}&gt;
        &lt;Text style={{ paddingBottom: 25 }}&gt;
          {`Sending verification code to '${phoneNumber}'.`}
        &lt;/Text&gt;
        &lt;ActivityIndicator animating style={{ padding: 50 }} size=""large"" /&gt;
      &lt;/View&gt;
    );
  }

  renderAutoVerifyProgress() {
    const {
      autoVerifyCountDown,
      started,
      error,
      sent,
      phoneNumber,
    } = this.state;
    if (!sent &amp;&amp; started &amp;&amp; !error.length) {
      return this.renderSendingCode();
    }
    return (
      &lt;View style={{ padding: 0 }}&gt;
        &lt;Text style={{ paddingBottom: 25 }}&gt;
          {`Verification code has been successfully sent to '${phoneNumber}'.`}
        &lt;/Text&gt;
        &lt;Text style={{ marginBottom: 25 }}&gt;
          {`We'll now attempt to automatically verify the code for you. This will timeout in ${autoVerifyCountDown} seconds.`}
        &lt;/Text&gt;
        &lt;Button
          style={{ paddingTop: 25 }}
          title=""I have a code already""
          color=""green""
          onPress={() =&gt; this.setState({ auto: false })}
        /&gt;
      &lt;/View&gt;
    );
  }

  renderError() {
    const { error } = this.state;

    return (
      &lt;View
        style={{
          padding: 10,
          borderRadius: 5,
          margin: 10,
          backgroundColor: 'rgb(255,0,0)',
        }}
      &gt;
        &lt;Text style={{ color: '#fff' }}&gt;{error}&lt;/Text&gt;
      &lt;/View&gt;
    );
  }

  render() {
    const { started, error, codeInput, sent, auto, user } = this.state;
    return (
      &lt;View
        style={{ flex: 1, backgroundColor: user ? 'rgb(0, 200, 0)' : '#fff' }}
      &gt;
        &lt;View
          style={{
            padding: 5,
            justifyContent: 'center',
            alignItems: 'center',
            flex: 1,
          }}
        &gt;
          &lt;Image
            source={{ uri: imageUrl }}
            style={{
              width: 128,
              height: 128,
              marginTop: 25,
              marginBottom: 15,
            }}
          /&gt;
          &lt;Text style={{ fontSize: 25, marginBottom: 20 }}&gt;
            Phone Auth Example
          &lt;/Text&gt;
          {error &amp;&amp; error.length ? this.renderError() : null}
          {!started &amp;&amp; !sent ? this.renderInputPhoneNumber() : null}
          {started &amp;&amp; auto &amp;&amp; !codeInput.length
            ? this.renderAutoVerifyProgress()
            : null}
          {!user &amp;&amp; started &amp;&amp; sent &amp;&amp; (codeInput.length || !auto) ? (
            &lt;View style={{ marginTop: 15 }}&gt;
              &lt;Text&gt;Enter verification code below:&lt;/Text&gt;
              &lt;TextInput
                autoFocus
                style={{ height: 40, marginTop: 15, marginBottom: 15 }}
                onChangeText={value =&gt; this.setState({ codeInput: value })}
                placeholder=""Code ... ""
                value={codeInput}
              /&gt;
              &lt;Button
                title=""Confirm Code""
                color=""#841584""
                onPress={this.afterVerify}
              /&gt;
            &lt;/View&gt;
          ) : null}
          {user ? (
            &lt;View style={{ marginTop: 15 }}&gt;
              &lt;Text&gt;{`Signed in with new user id: '${user.uid}'`}&lt;/Text&gt;
            &lt;/View&gt;
          ) : null}
        &lt;/View&gt;
      &lt;/View&gt;
    );
  }
}

/*
 { user ? (
 &lt;View
 style={{
 padding: 15,
 justifyContent: 'center',
 alignItems: 'center',
 backgroundColor: '#77dd77',
 flex: 1,
 }}
 &gt;
 &lt;Image source={{ uri: successImageUri }} style={{ width: 100, height: 100, marginBottom: 25 }} /&gt;
 &lt;Text style={{ fontSize: 25 }}&gt;Signed In!&lt;/Text&gt;
 &lt;Text&gt;{JSON.stringify(user)}&lt;/Text&gt;
 &lt;/View&gt;
 ) : null}
 */

// Example usage if handling here and not in optionalCompleteCb:
// const { verificationId, code } = phoneAuthSnapshot;
// const credential = firebase.auth.PhoneAuthProvider.credential(verificationId, code);

// Do something with your new credential, e.g.:
// firebase.auth().signInWithCredential(credential);
// firebase.auth().linkWithCredential(credential);
// etc ...
</code></pre>

<p>and I still get this error.</p>

<p>I generated sha1
<a href=""https://i.stack.imgur.com/06zFu.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/06zFu.jpg"" alt=""enter image description here""></a>
then I copy in my project
<a href=""https://i.stack.imgur.com/jFxI4.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jFxI4.jpg"" alt=""enter image description here""></a>
I checked in AndroidManifest.xml I have the same packagename.</p>
","Have you actually enabled it in the console online though?"
"50085575","react native with firebase phone auth validation failed","6","<p>I'm trying to make react native with firebase phone auth through <a href=""https://rnfirebase.io/docs/v4.0.x/auth/phone-auth"" rel=""nofollow noreferrer"">react-native-firebase docs</a>
and I get this error</p>

<blockquote>
  <p>Error: This app is not authorized to use Firebase Authentication. Please verifythat the correct package name and SHA-1 are configured in the Firebase Console. [ App validation failed ]</p>
</blockquote>

<p>I have already created debug.keystore</p>

<pre><code>keytool -genkey -v -keystore debug.keystore -alias androiddebugkey -storepass android -keypass android -keyalg RSA -validity 14000
</code></pre>

<p>then I get the SHA1</p>

<pre><code>keytool -list -alias androiddebugkey -keystore ""C:\Users\adirz\.android\debug.keystore"" -storepass android -keypass android
</code></pre>

<p>and paste into firebase console and download the google-services.json and add to my react native app.
then into my code I wrote </p>

<pre><code>    import React, { Component } from 'react';
import {
  View,
  Button,
  Text,
  TextInput,
  Image,
  ActivityIndicator,
  Platform,
} from 'react-native';

import firebase from 'react-native-firebase'

const imageUrl =
  'https://www.shareicon.net/data/512x512/2016/07/19/798524_sms_512x512.png';

export default class PhoneAuth extends Component {
  static getDefaultState() {
    return {
      error: '',
      codeInput: '',
      phoneNumber: '+44',
      auto: Platform.OS === 'android',
      autoVerifyCountDown: 0,
      sent: false,
      started: false,
      user: null,
    };
  }

  constructor(props) {
    super(props);
    this.timeout = 20;
    this._autoVerifyInterval = null;
    this.state = PhoneAuth.getDefaultState();
  }

  _tick() {
    this.setState({
      autoVerifyCountDown: this.state.autoVerifyCountDown - 1,
    });
  }

  /**
   * Called when confirm code is pressed - we should have the code and verificationId now in state.
   */
  afterVerify = () =&gt; {
    const { codeInput, verificationId } = this.state;
    const credential = firebase.auth.PhoneAuthProvider.credential(
      verificationId,
      codeInput
    );

    // TODO do something with credential for example:
    firebase
      .auth()
      .signInWithCredential(credential)
      .then(user =&gt; {
        console.log('PHONE AUTH USER -&gt;&gt;&gt;&gt;&gt;', user.toJSON());
        this.setState({ user: user.toJSON() });
      })
      .catch(console.error);
  };

  signIn = () =&gt; {
    const { phoneNumber } = this.state;
    this.setState(
      {
        error: '',
        started: true,
        autoVerifyCountDown: this.timeout,
      },
      () =&gt; {
        firebase
          .auth()
          .verifyPhoneNumber(phoneNumber)
          .on('state_changed', phoneAuthSnapshot =&gt; {
            console.log(phoneAuthSnapshot);
            switch (phoneAuthSnapshot.state) {
              case firebase.auth.PhoneAuthState.CODE_SENT: // or 'sent'
                // update state with code sent and if android start a interval timer
                // for auto verify - to provide visual feedback
                this.setState(
                  {
                    sent: true,
                    verificationId: phoneAuthSnapshot.verificationId,
                    autoVerifyCountDown: this.timeout,
                  },
                  () =&gt; {
                    if (this.state.auto) {
                      this._autoVerifyInterval = setInterval(
                        this._tick.bind(this),
                        1000
                      );
                    }
                  }
                );
                break;
              case firebase.auth.PhoneAuthState.ERROR: // or 'error'
                // restart the phone flow again on error
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  ...PhoneAuth.getDefaultState(),
                  error: phoneAuthSnapshot.error.message,
                });
                break;

              // ---------------------
              // ANDROID ONLY EVENTS
              // ---------------------
              case firebase.auth.PhoneAuthState.AUTO_VERIFY_TIMEOUT: // or 'timeout'
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  sent: true,
                  auto: false,
                  verificationId: phoneAuthSnapshot.verificationId,
                });
                break;
              case firebase.auth.PhoneAuthState.AUTO_VERIFIED: // or 'verified'
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  sent: true,
                  codeInput: phoneAuthSnapshot.code,
                  verificationId: phoneAuthSnapshot.verificationId,
                });
                break;
              default:
              // will never get here - just for linting
            }
          });
      }
    );
  };

  renderInputPhoneNumber() {
    const { phoneNumber } = this.state;
    return (
      &lt;View style={{ flex: 1 }}&gt;
        &lt;Text&gt;Enter phone number:&lt;/Text&gt;
        &lt;TextInput
          autoFocus
          style={{ height: 40, marginTop: 15, marginBottom: 15 }}
          onChangeText={value =&gt; this.setState({ phoneNumber: value })}
          placeholder=""Phone number ... ""
          value={phoneNumber}
          keyboardType = 'phone-pad'
        /&gt;
        &lt;Button
          title=""Begin Verification""
          color=""green""
          onPress={this.signIn}
        /&gt;
      &lt;/View&gt;
    );
  }

  renderSendingCode() {
    const { phoneNumber } = this.state;

    return (
      &lt;View style={{ paddingBottom: 15 }}&gt;
        &lt;Text style={{ paddingBottom: 25 }}&gt;
          {`Sending verification code to '${phoneNumber}'.`}
        &lt;/Text&gt;
        &lt;ActivityIndicator animating style={{ padding: 50 }} size=""large"" /&gt;
      &lt;/View&gt;
    );
  }

  renderAutoVerifyProgress() {
    const {
      autoVerifyCountDown,
      started,
      error,
      sent,
      phoneNumber,
    } = this.state;
    if (!sent &amp;&amp; started &amp;&amp; !error.length) {
      return this.renderSendingCode();
    }
    return (
      &lt;View style={{ padding: 0 }}&gt;
        &lt;Text style={{ paddingBottom: 25 }}&gt;
          {`Verification code has been successfully sent to '${phoneNumber}'.`}
        &lt;/Text&gt;
        &lt;Text style={{ marginBottom: 25 }}&gt;
          {`We'll now attempt to automatically verify the code for you. This will timeout in ${autoVerifyCountDown} seconds.`}
        &lt;/Text&gt;
        &lt;Button
          style={{ paddingTop: 25 }}
          title=""I have a code already""
          color=""green""
          onPress={() =&gt; this.setState({ auto: false })}
        /&gt;
      &lt;/View&gt;
    );
  }

  renderError() {
    const { error } = this.state;

    return (
      &lt;View
        style={{
          padding: 10,
          borderRadius: 5,
          margin: 10,
          backgroundColor: 'rgb(255,0,0)',
        }}
      &gt;
        &lt;Text style={{ color: '#fff' }}&gt;{error}&lt;/Text&gt;
      &lt;/View&gt;
    );
  }

  render() {
    const { started, error, codeInput, sent, auto, user } = this.state;
    return (
      &lt;View
        style={{ flex: 1, backgroundColor: user ? 'rgb(0, 200, 0)' : '#fff' }}
      &gt;
        &lt;View
          style={{
            padding: 5,
            justifyContent: 'center',
            alignItems: 'center',
            flex: 1,
          }}
        &gt;
          &lt;Image
            source={{ uri: imageUrl }}
            style={{
              width: 128,
              height: 128,
              marginTop: 25,
              marginBottom: 15,
            }}
          /&gt;
          &lt;Text style={{ fontSize: 25, marginBottom: 20 }}&gt;
            Phone Auth Example
          &lt;/Text&gt;
          {error &amp;&amp; error.length ? this.renderError() : null}
          {!started &amp;&amp; !sent ? this.renderInputPhoneNumber() : null}
          {started &amp;&amp; auto &amp;&amp; !codeInput.length
            ? this.renderAutoVerifyProgress()
            : null}
          {!user &amp;&amp; started &amp;&amp; sent &amp;&amp; (codeInput.length || !auto) ? (
            &lt;View style={{ marginTop: 15 }}&gt;
              &lt;Text&gt;Enter verification code below:&lt;/Text&gt;
              &lt;TextInput
                autoFocus
                style={{ height: 40, marginTop: 15, marginBottom: 15 }}
                onChangeText={value =&gt; this.setState({ codeInput: value })}
                placeholder=""Code ... ""
                value={codeInput}
              /&gt;
              &lt;Button
                title=""Confirm Code""
                color=""#841584""
                onPress={this.afterVerify}
              /&gt;
            &lt;/View&gt;
          ) : null}
          {user ? (
            &lt;View style={{ marginTop: 15 }}&gt;
              &lt;Text&gt;{`Signed in with new user id: '${user.uid}'`}&lt;/Text&gt;
            &lt;/View&gt;
          ) : null}
        &lt;/View&gt;
      &lt;/View&gt;
    );
  }
}

/*
 { user ? (
 &lt;View
 style={{
 padding: 15,
 justifyContent: 'center',
 alignItems: 'center',
 backgroundColor: '#77dd77',
 flex: 1,
 }}
 &gt;
 &lt;Image source={{ uri: successImageUri }} style={{ width: 100, height: 100, marginBottom: 25 }} /&gt;
 &lt;Text style={{ fontSize: 25 }}&gt;Signed In!&lt;/Text&gt;
 &lt;Text&gt;{JSON.stringify(user)}&lt;/Text&gt;
 &lt;/View&gt;
 ) : null}
 */

// Example usage if handling here and not in optionalCompleteCb:
// const { verificationId, code } = phoneAuthSnapshot;
// const credential = firebase.auth.PhoneAuthProvider.credential(verificationId, code);

// Do something with your new credential, e.g.:
// firebase.auth().signInWithCredential(credential);
// firebase.auth().linkWithCredential(credential);
// etc ...
</code></pre>

<p>and I still get this error.</p>

<p>I generated sha1
<a href=""https://i.stack.imgur.com/06zFu.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/06zFu.jpg"" alt=""enter image description here""></a>
then I copy in my project
<a href=""https://i.stack.imgur.com/jFxI4.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jFxI4.jpg"" alt=""enter image description here""></a>
I checked in AndroidManifest.xml I have the same packagename.</p>
","Why your project has two SHA-1? @AdirZoari"
"50085575","react native with firebase phone auth validation failed","6","<p>I'm trying to make react native with firebase phone auth through <a href=""https://rnfirebase.io/docs/v4.0.x/auth/phone-auth"" rel=""nofollow noreferrer"">react-native-firebase docs</a>
and I get this error</p>

<blockquote>
  <p>Error: This app is not authorized to use Firebase Authentication. Please verifythat the correct package name and SHA-1 are configured in the Firebase Console. [ App validation failed ]</p>
</blockquote>

<p>I have already created debug.keystore</p>

<pre><code>keytool -genkey -v -keystore debug.keystore -alias androiddebugkey -storepass android -keypass android -keyalg RSA -validity 14000
</code></pre>

<p>then I get the SHA1</p>

<pre><code>keytool -list -alias androiddebugkey -keystore ""C:\Users\adirz\.android\debug.keystore"" -storepass android -keypass android
</code></pre>

<p>and paste into firebase console and download the google-services.json and add to my react native app.
then into my code I wrote </p>

<pre><code>    import React, { Component } from 'react';
import {
  View,
  Button,
  Text,
  TextInput,
  Image,
  ActivityIndicator,
  Platform,
} from 'react-native';

import firebase from 'react-native-firebase'

const imageUrl =
  'https://www.shareicon.net/data/512x512/2016/07/19/798524_sms_512x512.png';

export default class PhoneAuth extends Component {
  static getDefaultState() {
    return {
      error: '',
      codeInput: '',
      phoneNumber: '+44',
      auto: Platform.OS === 'android',
      autoVerifyCountDown: 0,
      sent: false,
      started: false,
      user: null,
    };
  }

  constructor(props) {
    super(props);
    this.timeout = 20;
    this._autoVerifyInterval = null;
    this.state = PhoneAuth.getDefaultState();
  }

  _tick() {
    this.setState({
      autoVerifyCountDown: this.state.autoVerifyCountDown - 1,
    });
  }

  /**
   * Called when confirm code is pressed - we should have the code and verificationId now in state.
   */
  afterVerify = () =&gt; {
    const { codeInput, verificationId } = this.state;
    const credential = firebase.auth.PhoneAuthProvider.credential(
      verificationId,
      codeInput
    );

    // TODO do something with credential for example:
    firebase
      .auth()
      .signInWithCredential(credential)
      .then(user =&gt; {
        console.log('PHONE AUTH USER -&gt;&gt;&gt;&gt;&gt;', user.toJSON());
        this.setState({ user: user.toJSON() });
      })
      .catch(console.error);
  };

  signIn = () =&gt; {
    const { phoneNumber } = this.state;
    this.setState(
      {
        error: '',
        started: true,
        autoVerifyCountDown: this.timeout,
      },
      () =&gt; {
        firebase
          .auth()
          .verifyPhoneNumber(phoneNumber)
          .on('state_changed', phoneAuthSnapshot =&gt; {
            console.log(phoneAuthSnapshot);
            switch (phoneAuthSnapshot.state) {
              case firebase.auth.PhoneAuthState.CODE_SENT: // or 'sent'
                // update state with code sent and if android start a interval timer
                // for auto verify - to provide visual feedback
                this.setState(
                  {
                    sent: true,
                    verificationId: phoneAuthSnapshot.verificationId,
                    autoVerifyCountDown: this.timeout,
                  },
                  () =&gt; {
                    if (this.state.auto) {
                      this._autoVerifyInterval = setInterval(
                        this._tick.bind(this),
                        1000
                      );
                    }
                  }
                );
                break;
              case firebase.auth.PhoneAuthState.ERROR: // or 'error'
                // restart the phone flow again on error
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  ...PhoneAuth.getDefaultState(),
                  error: phoneAuthSnapshot.error.message,
                });
                break;

              // ---------------------
              // ANDROID ONLY EVENTS
              // ---------------------
              case firebase.auth.PhoneAuthState.AUTO_VERIFY_TIMEOUT: // or 'timeout'
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  sent: true,
                  auto: false,
                  verificationId: phoneAuthSnapshot.verificationId,
                });
                break;
              case firebase.auth.PhoneAuthState.AUTO_VERIFIED: // or 'verified'
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  sent: true,
                  codeInput: phoneAuthSnapshot.code,
                  verificationId: phoneAuthSnapshot.verificationId,
                });
                break;
              default:
              // will never get here - just for linting
            }
          });
      }
    );
  };

  renderInputPhoneNumber() {
    const { phoneNumber } = this.state;
    return (
      &lt;View style={{ flex: 1 }}&gt;
        &lt;Text&gt;Enter phone number:&lt;/Text&gt;
        &lt;TextInput
          autoFocus
          style={{ height: 40, marginTop: 15, marginBottom: 15 }}
          onChangeText={value =&gt; this.setState({ phoneNumber: value })}
          placeholder=""Phone number ... ""
          value={phoneNumber}
          keyboardType = 'phone-pad'
        /&gt;
        &lt;Button
          title=""Begin Verification""
          color=""green""
          onPress={this.signIn}
        /&gt;
      &lt;/View&gt;
    );
  }

  renderSendingCode() {
    const { phoneNumber } = this.state;

    return (
      &lt;View style={{ paddingBottom: 15 }}&gt;
        &lt;Text style={{ paddingBottom: 25 }}&gt;
          {`Sending verification code to '${phoneNumber}'.`}
        &lt;/Text&gt;
        &lt;ActivityIndicator animating style={{ padding: 50 }} size=""large"" /&gt;
      &lt;/View&gt;
    );
  }

  renderAutoVerifyProgress() {
    const {
      autoVerifyCountDown,
      started,
      error,
      sent,
      phoneNumber,
    } = this.state;
    if (!sent &amp;&amp; started &amp;&amp; !error.length) {
      return this.renderSendingCode();
    }
    return (
      &lt;View style={{ padding: 0 }}&gt;
        &lt;Text style={{ paddingBottom: 25 }}&gt;
          {`Verification code has been successfully sent to '${phoneNumber}'.`}
        &lt;/Text&gt;
        &lt;Text style={{ marginBottom: 25 }}&gt;
          {`We'll now attempt to automatically verify the code for you. This will timeout in ${autoVerifyCountDown} seconds.`}
        &lt;/Text&gt;
        &lt;Button
          style={{ paddingTop: 25 }}
          title=""I have a code already""
          color=""green""
          onPress={() =&gt; this.setState({ auto: false })}
        /&gt;
      &lt;/View&gt;
    );
  }

  renderError() {
    const { error } = this.state;

    return (
      &lt;View
        style={{
          padding: 10,
          borderRadius: 5,
          margin: 10,
          backgroundColor: 'rgb(255,0,0)',
        }}
      &gt;
        &lt;Text style={{ color: '#fff' }}&gt;{error}&lt;/Text&gt;
      &lt;/View&gt;
    );
  }

  render() {
    const { started, error, codeInput, sent, auto, user } = this.state;
    return (
      &lt;View
        style={{ flex: 1, backgroundColor: user ? 'rgb(0, 200, 0)' : '#fff' }}
      &gt;
        &lt;View
          style={{
            padding: 5,
            justifyContent: 'center',
            alignItems: 'center',
            flex: 1,
          }}
        &gt;
          &lt;Image
            source={{ uri: imageUrl }}
            style={{
              width: 128,
              height: 128,
              marginTop: 25,
              marginBottom: 15,
            }}
          /&gt;
          &lt;Text style={{ fontSize: 25, marginBottom: 20 }}&gt;
            Phone Auth Example
          &lt;/Text&gt;
          {error &amp;&amp; error.length ? this.renderError() : null}
          {!started &amp;&amp; !sent ? this.renderInputPhoneNumber() : null}
          {started &amp;&amp; auto &amp;&amp; !codeInput.length
            ? this.renderAutoVerifyProgress()
            : null}
          {!user &amp;&amp; started &amp;&amp; sent &amp;&amp; (codeInput.length || !auto) ? (
            &lt;View style={{ marginTop: 15 }}&gt;
              &lt;Text&gt;Enter verification code below:&lt;/Text&gt;
              &lt;TextInput
                autoFocus
                style={{ height: 40, marginTop: 15, marginBottom: 15 }}
                onChangeText={value =&gt; this.setState({ codeInput: value })}
                placeholder=""Code ... ""
                value={codeInput}
              /&gt;
              &lt;Button
                title=""Confirm Code""
                color=""#841584""
                onPress={this.afterVerify}
              /&gt;
            &lt;/View&gt;
          ) : null}
          {user ? (
            &lt;View style={{ marginTop: 15 }}&gt;
              &lt;Text&gt;{`Signed in with new user id: '${user.uid}'`}&lt;/Text&gt;
            &lt;/View&gt;
          ) : null}
        &lt;/View&gt;
      &lt;/View&gt;
    );
  }
}

/*
 { user ? (
 &lt;View
 style={{
 padding: 15,
 justifyContent: 'center',
 alignItems: 'center',
 backgroundColor: '#77dd77',
 flex: 1,
 }}
 &gt;
 &lt;Image source={{ uri: successImageUri }} style={{ width: 100, height: 100, marginBottom: 25 }} /&gt;
 &lt;Text style={{ fontSize: 25 }}&gt;Signed In!&lt;/Text&gt;
 &lt;Text&gt;{JSON.stringify(user)}&lt;/Text&gt;
 &lt;/View&gt;
 ) : null}
 */

// Example usage if handling here and not in optionalCompleteCb:
// const { verificationId, code } = phoneAuthSnapshot;
// const credential = firebase.auth.PhoneAuthProvider.credential(verificationId, code);

// Do something with your new credential, e.g.:
// firebase.auth().signInWithCredential(credential);
// firebase.auth().linkWithCredential(credential);
// etc ...
</code></pre>

<p>and I still get this error.</p>

<p>I generated sha1
<a href=""https://i.stack.imgur.com/06zFu.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/06zFu.jpg"" alt=""enter image description here""></a>
then I copy in my project
<a href=""https://i.stack.imgur.com/jFxI4.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jFxI4.jpg"" alt=""enter image description here""></a>
I checked in AndroidManifest.xml I have the same packagename.</p>
","I just try some times.. I found solution, I will publish it now"
"50085575","react native with firebase phone auth validation failed","6","<p>I'm trying to make react native with firebase phone auth through <a href=""https://rnfirebase.io/docs/v4.0.x/auth/phone-auth"" rel=""nofollow noreferrer"">react-native-firebase docs</a>
and I get this error</p>

<blockquote>
  <p>Error: This app is not authorized to use Firebase Authentication. Please verifythat the correct package name and SHA-1 are configured in the Firebase Console. [ App validation failed ]</p>
</blockquote>

<p>I have already created debug.keystore</p>

<pre><code>keytool -genkey -v -keystore debug.keystore -alias androiddebugkey -storepass android -keypass android -keyalg RSA -validity 14000
</code></pre>

<p>then I get the SHA1</p>

<pre><code>keytool -list -alias androiddebugkey -keystore ""C:\Users\adirz\.android\debug.keystore"" -storepass android -keypass android
</code></pre>

<p>and paste into firebase console and download the google-services.json and add to my react native app.
then into my code I wrote </p>

<pre><code>    import React, { Component } from 'react';
import {
  View,
  Button,
  Text,
  TextInput,
  Image,
  ActivityIndicator,
  Platform,
} from 'react-native';

import firebase from 'react-native-firebase'

const imageUrl =
  'https://www.shareicon.net/data/512x512/2016/07/19/798524_sms_512x512.png';

export default class PhoneAuth extends Component {
  static getDefaultState() {
    return {
      error: '',
      codeInput: '',
      phoneNumber: '+44',
      auto: Platform.OS === 'android',
      autoVerifyCountDown: 0,
      sent: false,
      started: false,
      user: null,
    };
  }

  constructor(props) {
    super(props);
    this.timeout = 20;
    this._autoVerifyInterval = null;
    this.state = PhoneAuth.getDefaultState();
  }

  _tick() {
    this.setState({
      autoVerifyCountDown: this.state.autoVerifyCountDown - 1,
    });
  }

  /**
   * Called when confirm code is pressed - we should have the code and verificationId now in state.
   */
  afterVerify = () =&gt; {
    const { codeInput, verificationId } = this.state;
    const credential = firebase.auth.PhoneAuthProvider.credential(
      verificationId,
      codeInput
    );

    // TODO do something with credential for example:
    firebase
      .auth()
      .signInWithCredential(credential)
      .then(user =&gt; {
        console.log('PHONE AUTH USER -&gt;&gt;&gt;&gt;&gt;', user.toJSON());
        this.setState({ user: user.toJSON() });
      })
      .catch(console.error);
  };

  signIn = () =&gt; {
    const { phoneNumber } = this.state;
    this.setState(
      {
        error: '',
        started: true,
        autoVerifyCountDown: this.timeout,
      },
      () =&gt; {
        firebase
          .auth()
          .verifyPhoneNumber(phoneNumber)
          .on('state_changed', phoneAuthSnapshot =&gt; {
            console.log(phoneAuthSnapshot);
            switch (phoneAuthSnapshot.state) {
              case firebase.auth.PhoneAuthState.CODE_SENT: // or 'sent'
                // update state with code sent and if android start a interval timer
                // for auto verify - to provide visual feedback
                this.setState(
                  {
                    sent: true,
                    verificationId: phoneAuthSnapshot.verificationId,
                    autoVerifyCountDown: this.timeout,
                  },
                  () =&gt; {
                    if (this.state.auto) {
                      this._autoVerifyInterval = setInterval(
                        this._tick.bind(this),
                        1000
                      );
                    }
                  }
                );
                break;
              case firebase.auth.PhoneAuthState.ERROR: // or 'error'
                // restart the phone flow again on error
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  ...PhoneAuth.getDefaultState(),
                  error: phoneAuthSnapshot.error.message,
                });
                break;

              // ---------------------
              // ANDROID ONLY EVENTS
              // ---------------------
              case firebase.auth.PhoneAuthState.AUTO_VERIFY_TIMEOUT: // or 'timeout'
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  sent: true,
                  auto: false,
                  verificationId: phoneAuthSnapshot.verificationId,
                });
                break;
              case firebase.auth.PhoneAuthState.AUTO_VERIFIED: // or 'verified'
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  sent: true,
                  codeInput: phoneAuthSnapshot.code,
                  verificationId: phoneAuthSnapshot.verificationId,
                });
                break;
              default:
              // will never get here - just for linting
            }
          });
      }
    );
  };

  renderInputPhoneNumber() {
    const { phoneNumber } = this.state;
    return (
      &lt;View style={{ flex: 1 }}&gt;
        &lt;Text&gt;Enter phone number:&lt;/Text&gt;
        &lt;TextInput
          autoFocus
          style={{ height: 40, marginTop: 15, marginBottom: 15 }}
          onChangeText={value =&gt; this.setState({ phoneNumber: value })}
          placeholder=""Phone number ... ""
          value={phoneNumber}
          keyboardType = 'phone-pad'
        /&gt;
        &lt;Button
          title=""Begin Verification""
          color=""green""
          onPress={this.signIn}
        /&gt;
      &lt;/View&gt;
    );
  }

  renderSendingCode() {
    const { phoneNumber } = this.state;

    return (
      &lt;View style={{ paddingBottom: 15 }}&gt;
        &lt;Text style={{ paddingBottom: 25 }}&gt;
          {`Sending verification code to '${phoneNumber}'.`}
        &lt;/Text&gt;
        &lt;ActivityIndicator animating style={{ padding: 50 }} size=""large"" /&gt;
      &lt;/View&gt;
    );
  }

  renderAutoVerifyProgress() {
    const {
      autoVerifyCountDown,
      started,
      error,
      sent,
      phoneNumber,
    } = this.state;
    if (!sent &amp;&amp; started &amp;&amp; !error.length) {
      return this.renderSendingCode();
    }
    return (
      &lt;View style={{ padding: 0 }}&gt;
        &lt;Text style={{ paddingBottom: 25 }}&gt;
          {`Verification code has been successfully sent to '${phoneNumber}'.`}
        &lt;/Text&gt;
        &lt;Text style={{ marginBottom: 25 }}&gt;
          {`We'll now attempt to automatically verify the code for you. This will timeout in ${autoVerifyCountDown} seconds.`}
        &lt;/Text&gt;
        &lt;Button
          style={{ paddingTop: 25 }}
          title=""I have a code already""
          color=""green""
          onPress={() =&gt; this.setState({ auto: false })}
        /&gt;
      &lt;/View&gt;
    );
  }

  renderError() {
    const { error } = this.state;

    return (
      &lt;View
        style={{
          padding: 10,
          borderRadius: 5,
          margin: 10,
          backgroundColor: 'rgb(255,0,0)',
        }}
      &gt;
        &lt;Text style={{ color: '#fff' }}&gt;{error}&lt;/Text&gt;
      &lt;/View&gt;
    );
  }

  render() {
    const { started, error, codeInput, sent, auto, user } = this.state;
    return (
      &lt;View
        style={{ flex: 1, backgroundColor: user ? 'rgb(0, 200, 0)' : '#fff' }}
      &gt;
        &lt;View
          style={{
            padding: 5,
            justifyContent: 'center',
            alignItems: 'center',
            flex: 1,
          }}
        &gt;
          &lt;Image
            source={{ uri: imageUrl }}
            style={{
              width: 128,
              height: 128,
              marginTop: 25,
              marginBottom: 15,
            }}
          /&gt;
          &lt;Text style={{ fontSize: 25, marginBottom: 20 }}&gt;
            Phone Auth Example
          &lt;/Text&gt;
          {error &amp;&amp; error.length ? this.renderError() : null}
          {!started &amp;&amp; !sent ? this.renderInputPhoneNumber() : null}
          {started &amp;&amp; auto &amp;&amp; !codeInput.length
            ? this.renderAutoVerifyProgress()
            : null}
          {!user &amp;&amp; started &amp;&amp; sent &amp;&amp; (codeInput.length || !auto) ? (
            &lt;View style={{ marginTop: 15 }}&gt;
              &lt;Text&gt;Enter verification code below:&lt;/Text&gt;
              &lt;TextInput
                autoFocus
                style={{ height: 40, marginTop: 15, marginBottom: 15 }}
                onChangeText={value =&gt; this.setState({ codeInput: value })}
                placeholder=""Code ... ""
                value={codeInput}
              /&gt;
              &lt;Button
                title=""Confirm Code""
                color=""#841584""
                onPress={this.afterVerify}
              /&gt;
            &lt;/View&gt;
          ) : null}
          {user ? (
            &lt;View style={{ marginTop: 15 }}&gt;
              &lt;Text&gt;{`Signed in with new user id: '${user.uid}'`}&lt;/Text&gt;
            &lt;/View&gt;
          ) : null}
        &lt;/View&gt;
      &lt;/View&gt;
    );
  }
}

/*
 { user ? (
 &lt;View
 style={{
 padding: 15,
 justifyContent: 'center',
 alignItems: 'center',
 backgroundColor: '#77dd77',
 flex: 1,
 }}
 &gt;
 &lt;Image source={{ uri: successImageUri }} style={{ width: 100, height: 100, marginBottom: 25 }} /&gt;
 &lt;Text style={{ fontSize: 25 }}&gt;Signed In!&lt;/Text&gt;
 &lt;Text&gt;{JSON.stringify(user)}&lt;/Text&gt;
 &lt;/View&gt;
 ) : null}
 */

// Example usage if handling here and not in optionalCompleteCb:
// const { verificationId, code } = phoneAuthSnapshot;
// const credential = firebase.auth.PhoneAuthProvider.credential(verificationId, code);

// Do something with your new credential, e.g.:
// firebase.auth().signInWithCredential(credential);
// firebase.auth().linkWithCredential(credential);
// etc ...
</code></pre>

<p>and I still get this error.</p>

<p>I generated sha1
<a href=""https://i.stack.imgur.com/06zFu.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/06zFu.jpg"" alt=""enter image description here""></a>
then I copy in my project
<a href=""https://i.stack.imgur.com/jFxI4.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jFxI4.jpg"" alt=""enter image description here""></a>
I checked in AndroidManifest.xml I have the same packagename.</p>
","You're using a physical device to connect, right?"
"50085575","react native with firebase phone auth validation failed","6","<p>I'm trying to make react native with firebase phone auth through <a href=""https://rnfirebase.io/docs/v4.0.x/auth/phone-auth"" rel=""nofollow noreferrer"">react-native-firebase docs</a>
and I get this error</p>

<blockquote>
  <p>Error: This app is not authorized to use Firebase Authentication. Please verifythat the correct package name and SHA-1 are configured in the Firebase Console. [ App validation failed ]</p>
</blockquote>

<p>I have already created debug.keystore</p>

<pre><code>keytool -genkey -v -keystore debug.keystore -alias androiddebugkey -storepass android -keypass android -keyalg RSA -validity 14000
</code></pre>

<p>then I get the SHA1</p>

<pre><code>keytool -list -alias androiddebugkey -keystore ""C:\Users\adirz\.android\debug.keystore"" -storepass android -keypass android
</code></pre>

<p>and paste into firebase console and download the google-services.json and add to my react native app.
then into my code I wrote </p>

<pre><code>    import React, { Component } from 'react';
import {
  View,
  Button,
  Text,
  TextInput,
  Image,
  ActivityIndicator,
  Platform,
} from 'react-native';

import firebase from 'react-native-firebase'

const imageUrl =
  'https://www.shareicon.net/data/512x512/2016/07/19/798524_sms_512x512.png';

export default class PhoneAuth extends Component {
  static getDefaultState() {
    return {
      error: '',
      codeInput: '',
      phoneNumber: '+44',
      auto: Platform.OS === 'android',
      autoVerifyCountDown: 0,
      sent: false,
      started: false,
      user: null,
    };
  }

  constructor(props) {
    super(props);
    this.timeout = 20;
    this._autoVerifyInterval = null;
    this.state = PhoneAuth.getDefaultState();
  }

  _tick() {
    this.setState({
      autoVerifyCountDown: this.state.autoVerifyCountDown - 1,
    });
  }

  /**
   * Called when confirm code is pressed - we should have the code and verificationId now in state.
   */
  afterVerify = () =&gt; {
    const { codeInput, verificationId } = this.state;
    const credential = firebase.auth.PhoneAuthProvider.credential(
      verificationId,
      codeInput
    );

    // TODO do something with credential for example:
    firebase
      .auth()
      .signInWithCredential(credential)
      .then(user =&gt; {
        console.log('PHONE AUTH USER -&gt;&gt;&gt;&gt;&gt;', user.toJSON());
        this.setState({ user: user.toJSON() });
      })
      .catch(console.error);
  };

  signIn = () =&gt; {
    const { phoneNumber } = this.state;
    this.setState(
      {
        error: '',
        started: true,
        autoVerifyCountDown: this.timeout,
      },
      () =&gt; {
        firebase
          .auth()
          .verifyPhoneNumber(phoneNumber)
          .on('state_changed', phoneAuthSnapshot =&gt; {
            console.log(phoneAuthSnapshot);
            switch (phoneAuthSnapshot.state) {
              case firebase.auth.PhoneAuthState.CODE_SENT: // or 'sent'
                // update state with code sent and if android start a interval timer
                // for auto verify - to provide visual feedback
                this.setState(
                  {
                    sent: true,
                    verificationId: phoneAuthSnapshot.verificationId,
                    autoVerifyCountDown: this.timeout,
                  },
                  () =&gt; {
                    if (this.state.auto) {
                      this._autoVerifyInterval = setInterval(
                        this._tick.bind(this),
                        1000
                      );
                    }
                  }
                );
                break;
              case firebase.auth.PhoneAuthState.ERROR: // or 'error'
                // restart the phone flow again on error
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  ...PhoneAuth.getDefaultState(),
                  error: phoneAuthSnapshot.error.message,
                });
                break;

              // ---------------------
              // ANDROID ONLY EVENTS
              // ---------------------
              case firebase.auth.PhoneAuthState.AUTO_VERIFY_TIMEOUT: // or 'timeout'
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  sent: true,
                  auto: false,
                  verificationId: phoneAuthSnapshot.verificationId,
                });
                break;
              case firebase.auth.PhoneAuthState.AUTO_VERIFIED: // or 'verified'
                clearInterval(this._autoVerifyInterval);
                this.setState({
                  sent: true,
                  codeInput: phoneAuthSnapshot.code,
                  verificationId: phoneAuthSnapshot.verificationId,
                });
                break;
              default:
              // will never get here - just for linting
            }
          });
      }
    );
  };

  renderInputPhoneNumber() {
    const { phoneNumber } = this.state;
    return (
      &lt;View style={{ flex: 1 }}&gt;
        &lt;Text&gt;Enter phone number:&lt;/Text&gt;
        &lt;TextInput
          autoFocus
          style={{ height: 40, marginTop: 15, marginBottom: 15 }}
          onChangeText={value =&gt; this.setState({ phoneNumber: value })}
          placeholder=""Phone number ... ""
          value={phoneNumber}
          keyboardType = 'phone-pad'
        /&gt;
        &lt;Button
          title=""Begin Verification""
          color=""green""
          onPress={this.signIn}
        /&gt;
      &lt;/View&gt;
    );
  }

  renderSendingCode() {
    const { phoneNumber } = this.state;

    return (
      &lt;View style={{ paddingBottom: 15 }}&gt;
        &lt;Text style={{ paddingBottom: 25 }}&gt;
          {`Sending verification code to '${phoneNumber}'.`}
        &lt;/Text&gt;
        &lt;ActivityIndicator animating style={{ padding: 50 }} size=""large"" /&gt;
      &lt;/View&gt;
    );
  }

  renderAutoVerifyProgress() {
    const {
      autoVerifyCountDown,
      started,
      error,
      sent,
      phoneNumber,
    } = this.state;
    if (!sent &amp;&amp; started &amp;&amp; !error.length) {
      return this.renderSendingCode();
    }
    return (
      &lt;View style={{ padding: 0 }}&gt;
        &lt;Text style={{ paddingBottom: 25 }}&gt;
          {`Verification code has been successfully sent to '${phoneNumber}'.`}
        &lt;/Text&gt;
        &lt;Text style={{ marginBottom: 25 }}&gt;
          {`We'll now attempt to automatically verify the code for you. This will timeout in ${autoVerifyCountDown} seconds.`}
        &lt;/Text&gt;
        &lt;Button
          style={{ paddingTop: 25 }}
          title=""I have a code already""
          color=""green""
          onPress={() =&gt; this.setState({ auto: false })}
        /&gt;
      &lt;/View&gt;
    );
  }

  renderError() {
    const { error } = this.state;

    return (
      &lt;View
        style={{
          padding: 10,
          borderRadius: 5,
          margin: 10,
          backgroundColor: 'rgb(255,0,0)',
        }}
      &gt;
        &lt;Text style={{ color: '#fff' }}&gt;{error}&lt;/Text&gt;
      &lt;/View&gt;
    );
  }

  render() {
    const { started, error, codeInput, sent, auto, user } = this.state;
    return (
      &lt;View
        style={{ flex: 1, backgroundColor: user ? 'rgb(0, 200, 0)' : '#fff' }}
      &gt;
        &lt;View
          style={{
            padding: 5,
            justifyContent: 'center',
            alignItems: 'center',
            flex: 1,
          }}
        &gt;
          &lt;Image
            source={{ uri: imageUrl }}
            style={{
              width: 128,
              height: 128,
              marginTop: 25,
              marginBottom: 15,
            }}
          /&gt;
          &lt;Text style={{ fontSize: 25, marginBottom: 20 }}&gt;
            Phone Auth Example
          &lt;/Text&gt;
          {error &amp;&amp; error.length ? this.renderError() : null}
          {!started &amp;&amp; !sent ? this.renderInputPhoneNumber() : null}
          {started &amp;&amp; auto &amp;&amp; !codeInput.length
            ? this.renderAutoVerifyProgress()
            : null}
          {!user &amp;&amp; started &amp;&amp; sent &amp;&amp; (codeInput.length || !auto) ? (
            &lt;View style={{ marginTop: 15 }}&gt;
              &lt;Text&gt;Enter verification code below:&lt;/Text&gt;
              &lt;TextInput
                autoFocus
                style={{ height: 40, marginTop: 15, marginBottom: 15 }}
                onChangeText={value =&gt; this.setState({ codeInput: value })}
                placeholder=""Code ... ""
                value={codeInput}
              /&gt;
              &lt;Button
                title=""Confirm Code""
                color=""#841584""
                onPress={this.afterVerify}
              /&gt;
            &lt;/View&gt;
          ) : null}
          {user ? (
            &lt;View style={{ marginTop: 15 }}&gt;
              &lt;Text&gt;{`Signed in with new user id: '${user.uid}'`}&lt;/Text&gt;
            &lt;/View&gt;
          ) : null}
        &lt;/View&gt;
      &lt;/View&gt;
    );
  }
}

/*
 { user ? (
 &lt;View
 style={{
 padding: 15,
 justifyContent: 'center',
 alignItems: 'center',
 backgroundColor: '#77dd77',
 flex: 1,
 }}
 &gt;
 &lt;Image source={{ uri: successImageUri }} style={{ width: 100, height: 100, marginBottom: 25 }} /&gt;
 &lt;Text style={{ fontSize: 25 }}&gt;Signed In!&lt;/Text&gt;
 &lt;Text&gt;{JSON.stringify(user)}&lt;/Text&gt;
 &lt;/View&gt;
 ) : null}
 */

// Example usage if handling here and not in optionalCompleteCb:
// const { verificationId, code } = phoneAuthSnapshot;
// const credential = firebase.auth.PhoneAuthProvider.credential(verificationId, code);

// Do something with your new credential, e.g.:
// firebase.auth().signInWithCredential(credential);
// firebase.auth().linkWithCredential(credential);
// etc ...
</code></pre>

<p>and I still get this error.</p>

<p>I generated sha1
<a href=""https://i.stack.imgur.com/06zFu.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/06zFu.jpg"" alt=""enter image description here""></a>
then I copy in my project
<a href=""https://i.stack.imgur.com/jFxI4.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jFxI4.jpg"" alt=""enter image description here""></a>
I checked in AndroidManifest.xml I have the same packagename.</p>
","Yes.Im using in physical device"
"50091299","Why do I get 'Error: Converting circular structure to JSON' with a label?","1","<p>I have the following code, verbatim from the <a href=""https://reactjs.org/docs/forms.html#the-select-tag"" rel=""nofollow noreferrer"">React docs</a>:</p>

<pre><code>class FlavorForm extends React.Component {
  constructor(props) {
    super(props);
    this.state = { value: 'coconut' };

    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleChange(event) {
    const { options } = event.target;
    console.log(options)
    this.setState({ value: event.target.value });
  }

  handleSubmit(event) {
    alert('Your favorite flavor is: ' + this.state.value);
    event.preventDefault();
  }

  render() {
    return (
      &lt;form onSubmit={this.handleSubmit}&gt;
        &lt;label&gt;
          Pick your favorite La Croix flavor:
          &lt;select value={this.state.value} onChange={this.handleChange}&gt;
            &lt;option value=""grapefruit""&gt;Grapefruit&lt;/option&gt;
            &lt;option value=""lime""&gt;Lime&lt;/option&gt;
            &lt;option value=""coconut""&gt;Coconut&lt;/option&gt;
            &lt;option value=""mango""&gt;Mango&lt;/option&gt;
          &lt;/select&gt;
          &lt;input type=""submit"" value=""Submit"" /&gt;
        &lt;/label&gt;
      &lt;/form&gt;
    );
  }
}
</code></pre>

<p>As it is, if I try <code>console.log(options)</code>, I get the error:</p>

<p><code>Error: Converting circular structure to JSON</code>.</p>

<p>However, moving the <code>&lt;label&gt;</code> tag up (so we have):</p>

<pre><code>&lt;label&gt;Pick your favorite La Croix flavor:&lt;/label&gt;
</code></pre>

<p>Allows the <code>console.log()</code> to work as intended. </p>

<p>Why does moving the label have this effect?</p>

<p>Working example <a href=""https://stackblitz.com/edit/react-ao3qce?file=index.js"" rel=""nofollow noreferrer"">here</a>.</p>
","Looks like it comes from stackblitz.com, not your code."
"50096654","unit-testing component whose props gets value from react navigation component","0","<p>How can I write a unit test for a React Native component which gets its state's value from <strong>React Navigation</strong>, more specific <code>this.props.navigation.state.params</code>? This is the component class:</p>



<pre class=""lang-js prettyprint-override""><code>  class RecAreas extends Component{ 
    static navigationOptions =({navigation}) =&gt; ({
        title: navigation.state.params.title,

        headerStyle: {
            backgroundColor: ""#000000"",
        }, 
          headerTintColor: '#facf33',
    });
    constructor(props){
        super(props); 
        const params = this.props.navigation.state.params;
        this.state={
            key:params.gymId,
            dataSource: new ListView.DataSource({
                rowHasChanged: (row1, row2) =&gt; row1 !== row2
            }),
        };
        this.mainRef = db.ref(""facilities"");

    }
    componentDidMount(){
        this.listenForItem(this.mainRef)
    }
</code></pre>

<p>I Could not figure out how to pass the nested function as props for the unit test. In this case <code>this.props.navigation</code>, <code>this.props.navigation.state</code>, <code>this.props.navigation.state.params</code> are all objects. How do I mock them for unit test? In the below example I get <strong>TypeError: Cannot read property 'gymId' of undefined</strong> which makes sense because <code>params</code> is not defined. I need help to resolve this. This is a unit test for the component. Thank you in advance! 
(PS: it would be great to know as well how to mock <code>dataSource</code> props as well. One way I thought I could do this is to make a fake <code>dataSource</code> data structure  (print out the <code>dataSource</code> and look at its structure). Any pointers would be helpful. Thanks!) </p>

<pre class=""lang-js prettyprint-override""><code>import React from ""react"";
import RecAreas from ""../../app/screens/RecAreas"";
import renderer from ""react-test-renderer"";

    describe (""&lt;RecAreas"", () =&gt; {
        it(""renders without crashing"", () =&gt; {
        const navigationMock = {state: jest.fn()};



        const rendered = renderer.create(&lt;RecAreas navigation= 
                         {navigationMock}/&gt;).toJSON();

        expect(rendered).toBeTruthy();
        expect(rendered).toMatchSnapshot();
      });
    }
</code></pre>
",""
"50302502","Flutter firebase integration getting error: Failed to turn object into JSON","3","<p>All of the sudden I am getting the following error when doing any firebase interaction (auth or firestore) in my flutter Android app.</p>

<pre><code>E/StorageHelpers(15925): Failed to turn object into JSON
E/StorageHelpers(15925): java.lang.NullPointerException: Attempt to invoke virtual method 'org.json.JSONObject com.google.firebase.auth.internal.zzm.zzbf()' on a null object reference
E/StorageHelpers(15925):    at com.google.firebase.auth.internal.zzz.zzi(Unknown Source:126)
E/StorageHelpers(15925):    at com.google.firebase.auth.internal.zzz.zzg(Unknown Source:3)
E/StorageHelpers(15925):    at com.google.firebase.auth.FirebaseAuth.zza(Unknown Source:28)
E/StorageHelpers(15925):    at com.google.firebase.auth.zzm.zza(Unknown Source:3)
E/StorageHelpers(15925):    at com.google.firebase.auth.api.internal.zzaw.zzaa(Unknown Source:27)
E/StorageHelpers(15925):    at com.google.firebase.auth.api.internal.zzcy.zzal(Unknown Source:0)
E/StorageHelpers(15925):    at com.google.firebase.auth.api.internal.zzcy.zza(Unknown Source:0)
E/StorageHelpers(15925):    at com.google.firebase.auth.api.internal.zzdb.zzb(Unknown Source:42)
E/StorageHelpers(15925):    at com.google.firebase.auth.api.internal.zzci.dispatchTransaction(Unknown Source:13)
E/StorageHelpers(15925):    at com.google.android.gms.internal.firebase_auth.zzb.onTransact(Unknown Source:22)
E/StorageHelpers(15925):    at android.os.Binder.execTransact(Binder.java:697
</code></pre>

<p>)</p>

<p>Here are my firebase dependencies:</p>

<ul>
<li>firebase_auth: ""^0.5.3""</li>
<li>cloud_firestore: ""^0.7.0+2""</li>
</ul>

<p><strong>Similar</strong> unresolved questions:</p>

<p><a href=""https://github.com/invertase/react-native-firebase/issues/1068"" rel=""nofollow noreferrer"">https://github.com/invertase/react-native-firebase/issues/1068</a></p>

<p><a href=""https://stackoverflow.com/questions/50265988/failed-to-turn-object-into-json"">Failed to turn object into JSON</a></p>
","I had this issue recently, but it turned out only on the emulator. Zhe app run fine on my phone. Wiping the emulator fixed it for me."
"50302502","Flutter firebase integration getting error: Failed to turn object into JSON","3","<p>All of the sudden I am getting the following error when doing any firebase interaction (auth or firestore) in my flutter Android app.</p>

<pre><code>E/StorageHelpers(15925): Failed to turn object into JSON
E/StorageHelpers(15925): java.lang.NullPointerException: Attempt to invoke virtual method 'org.json.JSONObject com.google.firebase.auth.internal.zzm.zzbf()' on a null object reference
E/StorageHelpers(15925):    at com.google.firebase.auth.internal.zzz.zzi(Unknown Source:126)
E/StorageHelpers(15925):    at com.google.firebase.auth.internal.zzz.zzg(Unknown Source:3)
E/StorageHelpers(15925):    at com.google.firebase.auth.FirebaseAuth.zza(Unknown Source:28)
E/StorageHelpers(15925):    at com.google.firebase.auth.zzm.zza(Unknown Source:3)
E/StorageHelpers(15925):    at com.google.firebase.auth.api.internal.zzaw.zzaa(Unknown Source:27)
E/StorageHelpers(15925):    at com.google.firebase.auth.api.internal.zzcy.zzal(Unknown Source:0)
E/StorageHelpers(15925):    at com.google.firebase.auth.api.internal.zzcy.zza(Unknown Source:0)
E/StorageHelpers(15925):    at com.google.firebase.auth.api.internal.zzdb.zzb(Unknown Source:42)
E/StorageHelpers(15925):    at com.google.firebase.auth.api.internal.zzci.dispatchTransaction(Unknown Source:13)
E/StorageHelpers(15925):    at com.google.android.gms.internal.firebase_auth.zzb.onTransact(Unknown Source:22)
E/StorageHelpers(15925):    at android.os.Binder.execTransact(Binder.java:697
</code></pre>

<p>)</p>

<p>Here are my firebase dependencies:</p>

<ul>
<li>firebase_auth: ""^0.5.3""</li>
<li>cloud_firestore: ""^0.7.0+2""</li>
</ul>

<p><strong>Similar</strong> unresolved questions:</p>

<p><a href=""https://github.com/invertase/react-native-firebase/issues/1068"" rel=""nofollow noreferrer"">https://github.com/invertase/react-native-firebase/issues/1068</a></p>

<p><a href=""https://stackoverflow.com/questions/50265988/failed-to-turn-object-into-json"">Failed to turn object into JSON</a></p>
","@AnilKumarGN I recommend trying the first answer here. If that does not work, try creating the flutter project again and just copy your dart files over. Make sure you also copy the dependencies from pubspec.yml. Hope that helps"
"50302502","Flutter firebase integration getting error: Failed to turn object into JSON","3","<p>All of the sudden I am getting the following error when doing any firebase interaction (auth or firestore) in my flutter Android app.</p>

<pre><code>E/StorageHelpers(15925): Failed to turn object into JSON
E/StorageHelpers(15925): java.lang.NullPointerException: Attempt to invoke virtual method 'org.json.JSONObject com.google.firebase.auth.internal.zzm.zzbf()' on a null object reference
E/StorageHelpers(15925):    at com.google.firebase.auth.internal.zzz.zzi(Unknown Source:126)
E/StorageHelpers(15925):    at com.google.firebase.auth.internal.zzz.zzg(Unknown Source:3)
E/StorageHelpers(15925):    at com.google.firebase.auth.FirebaseAuth.zza(Unknown Source:28)
E/StorageHelpers(15925):    at com.google.firebase.auth.zzm.zza(Unknown Source:3)
E/StorageHelpers(15925):    at com.google.firebase.auth.api.internal.zzaw.zzaa(Unknown Source:27)
E/StorageHelpers(15925):    at com.google.firebase.auth.api.internal.zzcy.zzal(Unknown Source:0)
E/StorageHelpers(15925):    at com.google.firebase.auth.api.internal.zzcy.zza(Unknown Source:0)
E/StorageHelpers(15925):    at com.google.firebase.auth.api.internal.zzdb.zzb(Unknown Source:42)
E/StorageHelpers(15925):    at com.google.firebase.auth.api.internal.zzci.dispatchTransaction(Unknown Source:13)
E/StorageHelpers(15925):    at com.google.android.gms.internal.firebase_auth.zzb.onTransact(Unknown Source:22)
E/StorageHelpers(15925):    at android.os.Binder.execTransact(Binder.java:697
</code></pre>

<p>)</p>

<p>Here are my firebase dependencies:</p>

<ul>
<li>firebase_auth: ""^0.5.3""</li>
<li>cloud_firestore: ""^0.7.0+2""</li>
</ul>

<p><strong>Similar</strong> unresolved questions:</p>

<p><a href=""https://github.com/invertase/react-native-firebase/issues/1068"" rel=""nofollow noreferrer"">https://github.com/invertase/react-native-firebase/issues/1068</a></p>

<p><a href=""https://stackoverflow.com/questions/50265988/failed-to-turn-object-into-json"">Failed to turn object into JSON</a></p>
","Hi is this issue fixed ? i am faccing the same issue in some devices i cant able  to fix this"
"50325236","Error message ""console.error in react-test-renderer"" (although test still passes)","1","<p>This is my root component:</p>

<pre><code>const App = () =&gt; (
    &lt;Provider store={store}&gt;
        &lt;PersistGate persistor={persistor} loading={&lt;LoadingView /&gt;}&gt;
            &lt;MainTabNavigator /&gt;
        &lt;/PersistGate&gt;
    &lt;/Provider&gt;
)
export default App
</code></pre>

<p>And a pretty simple snapshot test for it:</p>

<pre><code>describe('Testing root App component', () =&gt; {
    test('Renders as expected', () =&gt; {
        const tree = renderer.create(&lt;App /&gt;).toJSON()
        expect(tree).toMatchSnapshot()
    })
})
</code></pre>

<p>When I run the test, it passes but I get this error message under it:</p>

<pre><code>PASS  __tests__/App.test.tsx
  ● Console

    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5190
      The above error occurred in the &lt;TabView&gt; component:
          in TabView (created by withCachedChildNavigation(TabView))
          in withCachedChildNavigation(TabView)
          in Unknown (created by Navigator)
          in Navigator (created by NavigationContainer)
          in NavigationContainer (created by App)
          in PersistGate (created by App)
          in Provider (created by App)
          in App

      Consider adding an error boundary to your tree to customize error handling behavior.
      Visit (url) to learn more about error boundaries.
</code></pre>

<p>Because the test passes, does this even matter? What's going on?</p>
","Me too: console.error ...react-test-renderer.development.js:5190 The above error occurred in the <CardStack> component:
in CardStack (created by Transitioner)
in View (created by View)
in View (created by Transitioner)
in Transitioner (created by CardStackTransitioner)
in CardStackTransitioner
in Unknown (created by Navigator)
in Navigator (created by NavigationContainer)
in NavigationContainer (created by RootComponent)
in RootComponent (created by Connect(RootComponent))
in Connect(RootComponent) (created by App)
in PersistGate (created by App)
in Provider (created by App) in App"
"50417807","Jest snapshot is null after react instance is updated","1","<p>I would like to register a snapshot of a component after a button onPress function is run.</p>

<p>This is my testsuite:</p>

<pre class=""lang-js prettyprint-override""><code>describe('Login component', () =&gt; {
    // This runs fine. Snapshot OK
    it('Renders correctly', () =&gt; {
        const tree = renderer.create(&lt;Login /&gt;).toJSON()
        expect(tree).toMatchSnapshot()
    })

    // This does not run fine. Snapshot is 'null'
    it('Contains error message when submit with empty fields', () =&gt; {
        const login = renderer.create(&lt;Login /&gt;)
        const instance = login.getInstance()

        // Submit the form (default values = empty)
        instance.submit()

        // Force update (rerender) the component
        login.update()
        expect(login.toJSON()).toMatchSnapshot()

    })
})
</code></pre>

<p>The testsuite above creates two snapshots. The first test snapshots the component's structure under default conditions, and seems to register correctly. </p>

<p>The second test should record the component structure after a submit has been run, showing error messages alerting the user that the form cannot be submitted with empty fields.</p>

<p>Unfortunately this does not work as expected as after <code>login.update()</code> is run, <code>login.toJSON()</code> returns <code>null</code>. </p>

<p>I'm obviously doing something wrong, but what? <a href=""https://reactjs.org/docs/test-renderer.html#testrendererupdate"" rel=""nofollow noreferrer"">The docs</a> seem to indicate that <code>update</code> does what I think it does.</p>
","you have to call login.update(<Login />) instead of login.update()"
"50722668","jest could not found haste module when test react-native component","0","<p>I'm using the react-native source from git for project dependency,
I put the RN source in an external directory(instead of node_modules) and add it to the extraNodeModules in rn-cli.js, so the RN packager could find all the source correctly.
but when running jest, it couldn't find any RN builtin components.</p>

<p>test file:</p>

<pre><code>import { View } from 'react-native';
import React from 'react';
import mockCamera from '../__mocks__/camera';
import renderer from 'react-test-renderer';
jest.mock('react-native-camera', () =&gt; mockCamera);

var TableIDInputer = props =&gt; &lt;View /&gt;;
test('renders correctly', () =&gt; {
    const component = renderer.create(&lt;TableIDInputer /&gt;);
    let tree = component.toJSON();

    expect(tree.type).not.toBe('b');
    expect(tree).toMatchSnapshot();
});
</code></pre>

<p>test result:</p>

<blockquote>
  <p>● renders correctly</p>

<pre><code>Cannot find module 'View' from 'react-native-implementation.js'

  146 |   },
  147 |   get View() {
&gt; 148 |     return require('View');
  149 |   },
  150 |   get ViewPagerAndroid() {
  151 |     return require('ViewPagerAndroid');

  at Resolver.resolveModule (node_modules/jest-resolve/build/index.js:169:17)
  at Object.get View [as View] (../../libs/react-native/Libraries/react-native/react-native-implementation.js:148:12)
  at TableIDInputer (__tests__/test-component.js:7:31)
  at mountIndeterminateComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:4137:15)
  at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:4541:16)
</code></pre>
</blockquote>

<p>because the <code>View</code> component is provided by a <code>haste module</code>, which was implemented by <code>@providesModule</code> before, but today it seems it's replaced by a new mechanism, so I'm doubting is it causing the test fail??</p>

<p>env info:
jest: ^22.4.3
react-native:  2018-5-31 6e359c4589b0627de59332ce56fe28804425a609</p>
",""
"50822057","react-lazyload breaks jest snapshots?","0","<p>I've been working on optimising my react project and today I implemented lazy loading of all my images using react-lazyload (<a href=""https://github.com/jasonslyvia/react-lazyload"" rel=""nofollow noreferrer"">https://github.com/jasonslyvia/react-lazyload</a>).</p>

<p>The package works just fine but as soon as I tried to update my snapshot tests they all failed!</p>

<p>The error I'm getting is:</p>

<pre><code>Uncaught [TypeError: Cannot read property 'position' of undefined]
</code></pre>

<p>I tried seeing what I could find on google but nothing came up.</p>

<p>Here is an example of one of my snapshot tests (they're about as basic as can be):</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react';
import renderer from 'react-test-renderer';
import App from './App';

describe('App', () =&gt; {
    describe('Component Snapshot', () =&gt; {
        it('should render correctly', () =&gt; {
            const componentSnapshot = renderer.create(&lt;App /&gt;).toJSON();
            expect(componentSnapshot).toMatchSnapshot();
        });
    });
});</code></pre>
</div>
</div>
</p>

<p>Do I need to mock the lazy load package? If so does anyone have any advice of how I would go about doing that?
Any help is greatly appreciated.</p>
",""
"50939453","How to JSON encode of Hindi language in php","0","<p>How to JSON encode of Hindi language in PHP
there is already <a href=""https://stackoverflow.com/questions/30186907/php-how-to-json-encode-of-hindi-language-in-response"">Answer</a> </p>

<p>in below my code </p>

<pre><code>&gt; while($row = mysqli_fetch_assoc($res)){  $output[]=$row; } 
&gt; print(json_encode($output, JSON_PRETTY_PRINT));
</code></pre>

<p>My Questions are it's working perfect but Hindi font does not display on the browser</p>

<p><strong>Output in Browser</strong> </p>

<blockquote>
  <p>\u0938\u0902\u0916\u094d\u092f\u093e 399&lt;/sup>-350&lt;/sup>
  \u0915\u0947 \u0907\u0915\u093e\u0908 \u0938\u094d\u0925\u093e\u0928
  \u0915\u093e \u0905\u0902\u0915 \u0939\u0948</p>
</blockquote>

<p>when I fixed it on this <a href=""https://stackoverflow.com/questions/30186907/php-how-to-json-encode-of-hindi-language-in-response"">Answered</a> but my developer says Data is not fetching threw API </p>

<p>My Questions is how to display Hindi Font in JSON for android app react native framework 
i'm using PHP 7.0.2</p>

<p>Thank you </p>
",""
"51088515","Test fails when using LinkContainer from react-router-bootstrap","0","<p>So I am making a ReactJS app which includes reactstrap, react-router and react-router-bootstrap. The problem is that when I test components which contain LinkContainer, the following error occurs, making my unit tests fail:</p>

<blockquote>
  <p>console.error node_modules\prop-types\checkPropTypes.js:19
        Warning: Failed context type: The context <code>router</code> is marked as required in <code>LinkContainer</code>, but its value is <code>undefined</code>.
            in LinkContainer (at Header.js:27)</p>
</blockquote>

<p>Could anyone please help me out? This is the code, in header.js for example:</p>

<pre><code>import { LinkContainer } from ""react-router-bootstrap"";
import { ROUTE_POKEDEX } from ""../../constants/constants"";

export default class Header extends Component {
  constructor(props) {
    super(props);

    this.toggle = this.toggle.bind(this);
    this.state = {
      isOpen: false
    };
  }

  toggle() {
    this.setState({
      isOpen: !this.state.isOpen
    });
  }

  render() {
    return (
      &lt;Container fluid className=""header""&gt;
        &lt;Navbar expand=""md""&gt;
          &lt;LinkContainer to={ROUTE_POKEDEX}&gt;
            &lt;NavbarBrand&gt;Pokédex&lt;/NavbarBrand&gt;
          &lt;/LinkContainer&gt;
          &lt;NavbarToggler onClick={this.toggle} /&gt;
        &lt;/Navbar&gt;
      &lt;/Container&gt;
    );
  }
}
</code></pre>

<p>test.js</p>

<pre><code>import Header from ""./Header"";

it(""renders without crashing"", () =&gt; {
  const div = document.createElement(""div"");
  ReactDOM.render(&lt;Header /&gt;, div);
  ReactDOM.unmountComponentAtNode(div);
});

it(""has valid snapshot"", () =&gt; {
  const tree = renderer.create(&lt;Header /&gt;).toJSON();
  expect(tree).toMatchSnapshot();
});
</code></pre>
",""
"51661228","Vue-ChartJS - Circular structure to JSON","2","<p>i'm using <em>Vue-Chartjs</em> lib, and i'm trying to make a line chart. Well, i have done it with this code below, it works! The graph is drawed. But when i change the value of any variable inside my <code>Vue Data</code> (Like this <code>test</code> input, in the example.). It evals this error in console. I think it is because of VueChartJS, because if i remove the graph, everything works well.</p>

<blockquote>
  <p>TypeError: Converting circular structure to JSON</p>
</blockquote>

<p><strong>line.js</strong></p>

<pre><code>import {Line, mixins} from 'vue-chartjs'
const { reactiveProp } = mixins

export default {
   extends: Line,
   mixins: [reactiveProp],
   props: ['options'],
   mounted() {
      this.renderChart(this.chartData, this.options);
   }
}
</code></pre>

<p><strong>dashboard.vue</strong></p>

<pre><code>&lt;line-chart :chart-data=""dataCollection"" :height=""100""&gt;&lt;/line-chart&gt;
 &lt;input v-model=""test""&gt;

   import LineChart from './line-chart.js';
   export default {
      components: {LineChart},
      data: () =&gt; ({ 
         dataCollection:  {},
         test: ""some input"" 
      }),
      created () { 
         this.dataCollection =  {
                  ""labels"": [""0:00"", ""1:00"", ""2:00"", ""3:00"", ""4:00"", ""5:00""],
                  ""datasets"": [{
                     ""label"": ""Test"",
                     ""backgroundColor"": ""#00CC6A"",
                     ""borderColor"": ""#00CC6A"",
                     ""data"": [0, 23, 51.75, 27, 34, 12]
                  }]
               }
        }
    }
</code></pre>

<p>What am i doing wrong?</p>

<p>Thanks!! =)</p>
","There's a typo in `this.dataCollection: {` (it should be `this.dataCollection = {`)."
"51661228","Vue-ChartJS - Circular structure to JSON","2","<p>i'm using <em>Vue-Chartjs</em> lib, and i'm trying to make a line chart. Well, i have done it with this code below, it works! The graph is drawed. But when i change the value of any variable inside my <code>Vue Data</code> (Like this <code>test</code> input, in the example.). It evals this error in console. I think it is because of VueChartJS, because if i remove the graph, everything works well.</p>

<blockquote>
  <p>TypeError: Converting circular structure to JSON</p>
</blockquote>

<p><strong>line.js</strong></p>

<pre><code>import {Line, mixins} from 'vue-chartjs'
const { reactiveProp } = mixins

export default {
   extends: Line,
   mixins: [reactiveProp],
   props: ['options'],
   mounted() {
      this.renderChart(this.chartData, this.options);
   }
}
</code></pre>

<p><strong>dashboard.vue</strong></p>

<pre><code>&lt;line-chart :chart-data=""dataCollection"" :height=""100""&gt;&lt;/line-chart&gt;
 &lt;input v-model=""test""&gt;

   import LineChart from './line-chart.js';
   export default {
      components: {LineChart},
      data: () =&gt; ({ 
         dataCollection:  {},
         test: ""some input"" 
      }),
      created () { 
         this.dataCollection =  {
                  ""labels"": [""0:00"", ""1:00"", ""2:00"", ""3:00"", ""4:00"", ""5:00""],
                  ""datasets"": [{
                     ""label"": ""Test"",
                     ""backgroundColor"": ""#00CC6A"",
                     ""borderColor"": ""#00CC6A"",
                     ""data"": [0, 23, 51.75, 27, 34, 12]
                  }]
               }
        }
    }
</code></pre>

<p>What am i doing wrong?</p>

<p>Thanks!! =)</p>
","I can't reproduce the error in this [codesandbox](https://codesandbox.io/s/7yoxmr4wk6)"