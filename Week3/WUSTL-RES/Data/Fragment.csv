Id,Title,CommentCount,Body,Text
"16554033","ListFragment to display multiple pieces of data for each list item?","0","<p>I am using a ListFragment to display search results that are returned from a REST call.  The ListFragment only displays a single piece of data (a name), but I want it to display multiple pieces for each item in the list - address, phone number, rating.  I've searched a bunch on SO and via Google and haven't really been able to find any guidance as to how to make that happen.  I'm hoping somebody can point me in the right direction.</p>

<p>This is the activity that displays the ListFragment:</p>

<pre><code>public class ResultsActivity extends FragmentActivity implements ListFragmentClickable.OnItemSelectedListener{

private ArrayAdapter&lt;String&gt; mAdapter;

@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);

    setContentView(R.layout.activity_results);
    setupActionBar();

    Intent intent = getIntent();
    String searchTerm = intent.getStringExtra(MainActivity.SEARCH_TERM);

    mAdapter = new ArrayAdapter&lt;String&gt;(this, R.layout.item_label_list);

    FragmentManager     fm = getSupportFragmentManager();
    FragmentTransaction ft = fm.beginTransaction();

    ListFragmentClickable list = new ListFragmentClickable();
    ft.add(R.id.fragment_content, list);

    list.setListAdapter(mAdapter);

    FactualResponderFragment responder = (FactualResponderFragment) fm.findFragmentByTag(""RESTResponder"");
    if (responder == null) {
        responder = new FactualResponderFragment();            
        ft.add(responder, ""RESTResponder"");
    }

    Bundle bundle = new Bundle();
    bundle.putString(""search_term"", searchTerm);
    responder.setArguments(bundle);

    ft.commit();
}

public ArrayAdapter&lt;String&gt; getArrayAdapter() {
    return mAdapter;
}
</code></pre>

<p>There are a few other methods but they aren't pertinent.  Here is the method in the FactualResponderFragment where the items are actually added to the ArrayAdapter:</p>

<pre><code>private void setResults() { 
    ResultsActivity activity = (ResultsActivity) getActivity();

    searchThis = getArguments().getString(""search_term"");

    if (mResults == null &amp;&amp; activity != null) {
        Intent intent = new Intent(activity, RESTService.class);
        intent.setData(Uri.parse(""http://search.twitter.com/search.json""));

        Bundle params = new Bundle();
        params.putString(""q"", searchThis);

        intent.putExtra(RESTService.EXTRA_PARAMS, params);
        intent.putExtra(RESTService.EXTRA_RESULT_RECEIVER, getResultReceiver());

        activity.startService(intent);
    } else if (activity != null) {

        ArrayAdapter&lt;String&gt; adapter = activity.getArrayAdapter();
        adapter.clear();

        for (String result : mResults) {    
             adapter.add(result);
        }            
    }
}
</code></pre>

<p>Since the ResultsActivity is constructed almost completely from Java, the XML is short:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;FrameLayout xmlns:android=""http://schemas.android.com/apk/res/android""
android:id=""@+id/fragment_content""
android:layout_width=""fill_parent""
android:layout_height=""fill_parent"" /&gt;
</code></pre>

<p>And here is item_label_list.xml, which is also referenced in the Java:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;TextView xmlns:android=""http://schemas.android.com/apk/res/android""
android:layout_width=""fill_parent""
android:layout_height=""fill_parent""
android:padding=""20dp"" /&gt;
</code></pre>

<p>Can I just modify the XML for item_label_list to add a next TextView for each piece of data I want to show for each list item, and then create the view of each list entry in the XML?  If that's the case, how do I go about setting the values for each TextView?  Do I need to write a custom adapter that handles multiple pieces of data?</p>

<p>Any help or guidance is greatly appreciated.  Please let me know if I can pass along any other code snippets.  Thanks!</p>
",""
"20963714","Android ListFragment does not populate","4","<p>So I'm building an app which takes the data from this page: <a href=""http://api.androidhive.info/contacts/"" rel=""nofollow noreferrer"">http://api.androidhive.info/contacts/</a> and puts it into a listview within this fragment. I am using ListFragment. I had the hardest time getting everything to compile, especially with returning the view in the oncreateview(). I'm getting this error: </p>

<p><img src=""https://i.stack.imgur.com/Ksity.png"" alt=""enter image description here""></p>

<p>I can usually read the logcat and get an idea of where I need to look but I looked at line 299 and it was a commented section... The app begins to load the progress wheel but soon after it crashes before populating with a series of contacts from a URI. I'm confused on what the logcat is trying to tell me. Could someone explain to me which direction I'm supposed to take? </p>

<p>here is my MainActivity: </p>

<pre><code>public class MainActivity extends Activity {

// Within which the entire activity is enclosed
DrawerLayout mDrawerLayout;

// ListView represents Navigation Drawer
ListView mDrawerList;

// ActionBarDrawerToggle indicates the presence of Navigation Drawer in the action bar
ActionBarDrawerToggle mDrawerToggle;

// Title of the action bar
String mTitle="""";

@Override
protected void onCreate(Bundle savedInstanceState) {

    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    mTitle = (String) getTitle();

    // Getting reference to the DrawerLayout
    mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);

    mDrawerList = (ListView) findViewById(R.id.drawer_list);

    // Getting reference to the ActionBarDrawerToggle
    mDrawerToggle = new ActionBarDrawerToggle( this,
        mDrawerLayout,
        R.drawable.ic_drawer,
        R.string.drawer_open,
        R.string.drawer_close){

            /** Called when drawer is closed */
            public void onDrawerClosed(View view) {
                getActionBar().setTitle(mTitle);
                invalidateOptionsMenu();
            }

            /** Called when a drawer is opened */
            public void onDrawerOpened(View drawerView) {
                getActionBar().setTitle(""Select Option"");
                invalidateOptionsMenu();
            }
    };

    // Setting DrawerToggle on DrawerLayout
    mDrawerLayout.setDrawerListener(mDrawerToggle);

    // Creating an ArrayAdapter to add items to the listview mDrawerList
    ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(
        getBaseContext(),
        R.layout.drawer_list_item ,
        getResources().getStringArray(R.array.options)
    );

    // Setting the adapter on mDrawerList
    mDrawerList.setAdapter(adapter);

    // Enabling Home button
    getActionBar().setHomeButtonEnabled(true);

    // Enabling Up navigation
    getActionBar().setDisplayHomeAsUpEnabled(true);

    // Setting item click listener for the listview mDrawerList
    mDrawerList.setOnItemClickListener(new OnItemClickListener() {
        @Override
        public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {

                // Getting an array of options
                String[] options = getResources().getStringArray(R.array.options);

                //Currently selected option
                mTitle = options[position];

                if(mTitle.equalsIgnoreCase(""Home"")){
                    // Creating a fragment object
                    Fragment fragment = new AppMain();

                    // Creating a Bundle object
                    Bundle data = new Bundle();

                    // Setting the index of the currently selected item of mDrawerList
                    data.putInt(""position"", position);

                    // Setting the position to the fragment
                    fragment.setArguments(data);

                    // Getting reference to the FragmentManager
                    FragmentManager fragmentManager = getFragmentManager();

                    // Creating a fragment transaction
                    FragmentTransaction ft = fragmentManager.beginTransaction();

                    // Adding a fragment to the fragment transaction
                    ft.replace(R.id.content_frame, fragment);

                    // Committing the transaction
                    ft.commit();

                    // Closing the drawer
                    mDrawerLayout.closeDrawer(mDrawerList);

                }

                else if(mTitle.equalsIgnoreCase(""Map"")){
                    // Creating a fragment object
                    Fragment fragment = new MapFragment();

                    // Creating a Bundle object
                    Bundle data = new Bundle();

                    // Setting the index of the currently selected item of mDrawerList
                    data.putInt(""position"", position);

                    // Setting the position to the fragment
                    fragment.setArguments(data);

                    // Getting reference to the FragmentManager
                    FragmentManager fragmentManager = getFragmentManager();

                    // Creating a fragment transaction
                    FragmentTransaction ft = fragmentManager.beginTransaction();

                    // Adding a fragment to the fragment transaction
                    ft.replace(R.id.content_frame, fragment);

                    // Committing the transaction
                    ft.commit();

                    // Closing the drawer
                    mDrawerLayout.closeDrawer(mDrawerList);

                }
                //its possible to create a series of these and then 
                //initialize objects within the fragments programmably. 

                //DrawerOptions need to be removed to make things work
                else if(mTitle.equalsIgnoreCase(""ATO"")){

               // Creating a fragment object
                    Fragment fragment = new ATO();

                    // Creating a Bundle object
                    Bundle data = new Bundle();

                    // Setting the index of the currently selected item of mDrawerList
                    data.putInt(""position"", position);

                    // Setting the position to the fragment
                    fragment.setArguments(data);

                    // Getting reference to the FragmentManager
                    FragmentManager fragmentManager = getFragmentManager();

                    // Creating a fragment transaction
                    FragmentTransaction ft = fragmentManager.beginTransaction();

                    // Adding a fragment to the fragment transaction
                    ft.replace(R.id.content_frame, fragment);

                    // Committing the transaction
                    ft.commit();

                // Closing the drawer
                mDrawerLayout.closeDrawer(mDrawerList);

                // Closing the drawer
                mDrawerLayout.closeDrawer(mDrawerList);
        }
                else{

                }
       }
    });
}

    @Override
protected void onPostCreate(Bundle savedInstanceState) {
    super.onPostCreate(savedInstanceState);
    mDrawerToggle.syncState();
}

/** Handling the touch event of app icon */
@Override
public boolean onOptionsItemSelected(MenuItem item) {
    if (mDrawerToggle.onOptionsItemSelected(item)) {
        return true;
    }
    return super.onOptionsItemSelected(item);
}

/*
 * I commented out this section below because I don't see us using it.
 * It does nothing more than show a little button which says ""settings""
 * in the top right corner of the bar. If you want to enable it, de-comment
 * and then look at the main.xml within the menu folder and de-commnent there.
 * Also have to go to the Strings.xml file under values and de-comment.
 */

/** Called whenever we call invalidateOptionsMenu() */
   @Override
//    public boolean onPrepareOptionsMenu(Menu menu) {
//        // If the drawer is open, hide action items related to the content view
//        boolean drawerOpen = mDrawerLayout.isDrawerOpen(mDrawerList);
// 
//        menu.findItem(R.id.action_settings).setVisible(!drawerOpen);
//        return super.onPrepareOptionsMenu(menu);
//    }
// 

    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    } 
}
</code></pre>

<p>And this is my ATO class which im having lots of trouble with:</p>

<pre><code>public class ATO extends ListFragment {

    private ProgressDialog pDialog;

    // URL to get contacts JSON
    private static String url = ""http://api.androidhive.info/contacts/"";

    // JSON Node names
    private static final String TAG_CONTACTS = ""contacts"";
private static final String TAG_ID = ""id"";
private static final String TAG_NAME = ""name"";
private static final String TAG_EMAIL = ""email"";
private static final String TAG_ADDRESS = ""address"";
private static final String TAG_GENDER = ""gender"";
private static final String TAG_PHONE = ""phone"";
private static final String TAG_PHONE_MOBILE = ""mobile"";
private static final String TAG_PHONE_HOME = ""home"";
private static final String TAG_PHONE_OFFICE = ""office"";

// contacts JSONArray
JSONArray contacts = null;

// Hashmap for ListView
ArrayList&lt;HashMap&lt;String, String&gt;&gt; contactList;

public View onCreateView(LayoutInflater inflater, 
                         ViewGroup container, 
                         Bundle savedInstanceState) {

    // Retrieving the currently selected item number
    int position = getArguments().getInt(""position"");

    // List of options
    String[] options = getResources().getStringArray(R.array.options);

    // Creating view correspoding to the fragment
    View v = inflater.inflate(R.layout.ato, container, false);

    // Getting reference to the TextView of the Fragment
    TextView tv = (TextView) v.findViewById(R.id.textView1);

    String words = ""Home of the app"";
    // Setting currently selected river name in the TextView
    tv.setText(words);

    // Updating the action bar title
    getActivity().getActionBar().setTitle(options[position]);

    // Calling async task to get json
    new GetContacts().execute();

    return v;
}

/**
 * Async task class to get json by making HTTP call
 * */
private class GetContacts extends AsyncTask&lt;Void, Void, Void&gt; {

    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        // Showing progress dialog
         pDialog = new ProgressDialog(getActivity());
        //
        pDialog.setMessage(""Please wait..."");
        pDialog.setCancelable(false);
        pDialog.show();

    }

    @Override
    protected Void doInBackground(Void... arg0) {
        // Creating service handler class instance
        ServiceHandler sh = new ServiceHandler();

        // Making a request to url and getting response
        String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);

        Log.d(""Response: "", ""&gt; "" + jsonStr);

        if (jsonStr != null) {
            try {
                JSONObject jsonObj = new JSONObject(jsonStr);

                // Getting JSON Array node
                contacts = jsonObj.getJSONArray(TAG_CONTACTS);

                // looping through All Contacts
                for (int i = 0; i &lt; contacts.length(); i++) {
                    JSONObject c = contacts.getJSONObject(i);

                    String id = c.getString(TAG_ID);
                    String name = c.getString(TAG_NAME);
                    String email = c.getString(TAG_EMAIL);
                    String address = c.getString(TAG_ADDRESS);
                    String gender = c.getString(TAG_GENDER);

                    // Phone node is JSON Object
                    JSONObject phone = c.getJSONObject(TAG_PHONE);
                    String mobile = phone.getString(TAG_PHONE_MOBILE);
                    String home = phone.getString(TAG_PHONE_HOME);
                    String office = phone.getString(TAG_PHONE_OFFICE);

                    // tmp hashmap for single contact
                    HashMap&lt;String, String&gt; contact = new HashMap&lt;String, String&gt;();

                    // adding each child node to HashMap key =&gt; value
                    contact.put(TAG_ID, id);
                    contact.put(TAG_NAME, name);
                    contact.put(TAG_EMAIL, email);
                    contact.put(TAG_PHONE_MOBILE, mobile);

                    // adding contact to contact list
                    contactList.add(contact);
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
        } else {
            Log.e(""ServiceHandler"", ""Couldn't get any data from the url"");
        }

        return null;
    }

    @Override
    protected void onPostExecute(Void result) {
        super.onPostExecute(result);
        // Dismiss the progress dialog
        if (pDialog.isShowing())
            pDialog.dismiss();
        /**
         * Updating parsed JSON data into ListView
         * */
        SimpleAdapter adapter = new SimpleAdapter(getActivity(), contactList,
                R.layout.list_item, new String[] { TAG_NAME, TAG_EMAIL,
                        TAG_PHONE_MOBILE }, new int[] { R.id.name,
                        R.id.email, R.id.mobile });

        setListAdapter(adapter);
    }

}

/*
 * {
""contacts"": [
    {
            ""id"": ""c200"",
            ""name"": ""Ravi Tamada"",
            ""email"": ""ravi@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c201"",
            ""name"": ""Johnny Depp"",
            ""email"": ""johnny_depp@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c202"",
            ""name"": ""Leonardo Dicaprio"",
            ""email"": ""leonardo_dicaprio@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c203"",
            ""name"": ""John Wayne"",
            ""email"": ""john_wayne@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c204"",
            ""name"": ""Angelina Jolie"",
            ""email"": ""angelina_jolie@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c205"",
            ""name"": ""Dido"",
            ""email"": ""dido@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c206"",
            ""name"": ""Adele"",
            ""email"": ""adele@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c207"",
            ""name"": ""Hugh Jackman"",
            ""email"": ""hugh_jackman@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c208"",
            ""name"": ""Will Smith"",
            ""email"": ""will_smith@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c209"",
            ""name"": ""Clint Eastwood"",
            ""email"": ""clint_eastwood@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c2010"",
            ""name"": ""Barack Obama"",
            ""email"": ""barack_obama@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c2011"",
            ""name"": ""Kate Winslet"",
            ""email"": ""kate_winslet@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c2012"",
            ""name"": ""Eminem"",
            ""email"": ""eminem@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    }
]
}
     */

}
</code></pre>

<p>Any and all help is really appreciated!</p>

<p>EDIT: This is the fixed class of ATO.class:</p>

<pre><code>package com.example.fratslidemenu;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.zip.Inflater;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import android.app.ListActivity;
import android.app.ListFragment;
import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;

public class ATO extends ListFragment {

private ProgressDialog pDialog;

// URL to get contacts JSON
private static String url = ""http://api.androidhive.info/contacts/"";

// JSON Node names
private static final String TAG_CONTACTS = ""contacts"";
private static final String TAG_ID = ""id"";
private static final String TAG_NAME = ""name"";
private static final String TAG_EMAIL = ""email"";
private static final String TAG_ADDRESS = ""address"";
private static final String TAG_GENDER = ""gender"";
private static final String TAG_PHONE = ""phone"";
private static final String TAG_PHONE_MOBILE = ""mobile"";
private static final String TAG_PHONE_HOME = ""home"";
private static final String TAG_PHONE_OFFICE = ""office"";

// contacts JSONArray
JSONArray contacts = null;

// Hashmap for ListView
ArrayList&lt;HashMap&lt;String, String&gt;&gt; contactList = new ArrayList&lt;HashMap&lt;String, String&gt;&gt;();

public View onCreateView(LayoutInflater inflater, 
                         ViewGroup container, 
                         Bundle savedInstanceState) {

    // Retrieving the currently selected item number
    int position = getArguments().getInt(""position"");

    // List of options
    String[] options = getResources().getStringArray(R.array.options);

    // Creating view correspoding to the fragment
    View v = inflater.inflate(R.layout.ato, container, false);

    // Updating the action bar title
    getActivity().getActionBar().setTitle(options[position]);

    // Calling async task to get json
    new GetContacts().execute();

    return v;
}

/**
 * Async task class to get json by making HTTP call
 * */
private class GetContacts extends AsyncTask&lt;Void, Void, Void&gt; {

    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        // Showing progress dialog
         pDialog = new ProgressDialog(getActivity());
        //
        pDialog.setMessage(""Please wait..."");
        pDialog.setCancelable(false);
        pDialog.show();

    }

    @Override
    protected Void doInBackground(Void... arg0) {
        // Creating service handler class instance
        ServiceHandler sh = new ServiceHandler();

        // Making a request to url and getting response
        String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);

        Log.d(""Response: "", ""&gt; "" + jsonStr);

        if (jsonStr != null) {
            try {
                JSONObject jsonObj = new JSONObject(jsonStr);

                // Getting JSON Array node
                contacts = jsonObj.getJSONArray(TAG_CONTACTS);

                // looping through All Contacts
                for (int i = 0; i &lt; contacts.length(); i++) {
                    JSONObject c = contacts.getJSONObject(i);

                    String id = c.getString(TAG_ID);
                    String name = c.getString(TAG_NAME);
                    String email = c.getString(TAG_EMAIL);
                    String address = c.getString(TAG_ADDRESS);
                    String gender = c.getString(TAG_GENDER);

                    // Phone node is JSON Object
                    JSONObject phone = c.getJSONObject(TAG_PHONE);
                    String mobile = phone.getString(TAG_PHONE_MOBILE);
                    String home = phone.getString(TAG_PHONE_HOME);
                    String office = phone.getString(TAG_PHONE_OFFICE);

                    // tmp hashmap for single contact
                    HashMap&lt;String, String&gt; contact = new HashMap&lt;String, String&gt;();

                    // adding each child node to HashMap key =&gt; value
                    contact.put(TAG_ID, id);
                    contact.put(TAG_NAME, name);
                    contact.put(TAG_EMAIL, email);
                    contact.put(TAG_PHONE_MOBILE, mobile);

                    // adding contact to contact list
                    contactList.add(contact);
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
        } else {
            Log.e(""ServiceHandler"", ""Couldn't get any data from the url"");
        }

        return null;
    }

    @Override
    protected void onPostExecute(Void result) {
        super.onPostExecute(result);
        // Dismiss the progress dialog
        if (pDialog.isShowing())
            pDialog.dismiss();
        /**
         * Updating parsed JSON data into ListView
         * */
        SimpleAdapter adapter = new SimpleAdapter(getActivity(), contactList,
                R.layout.list_item, new String[] { TAG_NAME, TAG_EMAIL,
                        TAG_PHONE_MOBILE }, new int[] { R.id.name,
                        R.id.email, R.id.mobile });

        setListAdapter(adapter);
    }

}   

}
</code></pre>
","@booky99 because it seems you never instantiated `contactList`"
"20963714","Android ListFragment does not populate","4","<p>So I'm building an app which takes the data from this page: <a href=""http://api.androidhive.info/contacts/"" rel=""nofollow noreferrer"">http://api.androidhive.info/contacts/</a> and puts it into a listview within this fragment. I am using ListFragment. I had the hardest time getting everything to compile, especially with returning the view in the oncreateview(). I'm getting this error: </p>

<p><img src=""https://i.stack.imgur.com/Ksity.png"" alt=""enter image description here""></p>

<p>I can usually read the logcat and get an idea of where I need to look but I looked at line 299 and it was a commented section... The app begins to load the progress wheel but soon after it crashes before populating with a series of contacts from a URI. I'm confused on what the logcat is trying to tell me. Could someone explain to me which direction I'm supposed to take? </p>

<p>here is my MainActivity: </p>

<pre><code>public class MainActivity extends Activity {

// Within which the entire activity is enclosed
DrawerLayout mDrawerLayout;

// ListView represents Navigation Drawer
ListView mDrawerList;

// ActionBarDrawerToggle indicates the presence of Navigation Drawer in the action bar
ActionBarDrawerToggle mDrawerToggle;

// Title of the action bar
String mTitle="""";

@Override
protected void onCreate(Bundle savedInstanceState) {

    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    mTitle = (String) getTitle();

    // Getting reference to the DrawerLayout
    mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);

    mDrawerList = (ListView) findViewById(R.id.drawer_list);

    // Getting reference to the ActionBarDrawerToggle
    mDrawerToggle = new ActionBarDrawerToggle( this,
        mDrawerLayout,
        R.drawable.ic_drawer,
        R.string.drawer_open,
        R.string.drawer_close){

            /** Called when drawer is closed */
            public void onDrawerClosed(View view) {
                getActionBar().setTitle(mTitle);
                invalidateOptionsMenu();
            }

            /** Called when a drawer is opened */
            public void onDrawerOpened(View drawerView) {
                getActionBar().setTitle(""Select Option"");
                invalidateOptionsMenu();
            }
    };

    // Setting DrawerToggle on DrawerLayout
    mDrawerLayout.setDrawerListener(mDrawerToggle);

    // Creating an ArrayAdapter to add items to the listview mDrawerList
    ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(
        getBaseContext(),
        R.layout.drawer_list_item ,
        getResources().getStringArray(R.array.options)
    );

    // Setting the adapter on mDrawerList
    mDrawerList.setAdapter(adapter);

    // Enabling Home button
    getActionBar().setHomeButtonEnabled(true);

    // Enabling Up navigation
    getActionBar().setDisplayHomeAsUpEnabled(true);

    // Setting item click listener for the listview mDrawerList
    mDrawerList.setOnItemClickListener(new OnItemClickListener() {
        @Override
        public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {

                // Getting an array of options
                String[] options = getResources().getStringArray(R.array.options);

                //Currently selected option
                mTitle = options[position];

                if(mTitle.equalsIgnoreCase(""Home"")){
                    // Creating a fragment object
                    Fragment fragment = new AppMain();

                    // Creating a Bundle object
                    Bundle data = new Bundle();

                    // Setting the index of the currently selected item of mDrawerList
                    data.putInt(""position"", position);

                    // Setting the position to the fragment
                    fragment.setArguments(data);

                    // Getting reference to the FragmentManager
                    FragmentManager fragmentManager = getFragmentManager();

                    // Creating a fragment transaction
                    FragmentTransaction ft = fragmentManager.beginTransaction();

                    // Adding a fragment to the fragment transaction
                    ft.replace(R.id.content_frame, fragment);

                    // Committing the transaction
                    ft.commit();

                    // Closing the drawer
                    mDrawerLayout.closeDrawer(mDrawerList);

                }

                else if(mTitle.equalsIgnoreCase(""Map"")){
                    // Creating a fragment object
                    Fragment fragment = new MapFragment();

                    // Creating a Bundle object
                    Bundle data = new Bundle();

                    // Setting the index of the currently selected item of mDrawerList
                    data.putInt(""position"", position);

                    // Setting the position to the fragment
                    fragment.setArguments(data);

                    // Getting reference to the FragmentManager
                    FragmentManager fragmentManager = getFragmentManager();

                    // Creating a fragment transaction
                    FragmentTransaction ft = fragmentManager.beginTransaction();

                    // Adding a fragment to the fragment transaction
                    ft.replace(R.id.content_frame, fragment);

                    // Committing the transaction
                    ft.commit();

                    // Closing the drawer
                    mDrawerLayout.closeDrawer(mDrawerList);

                }
                //its possible to create a series of these and then 
                //initialize objects within the fragments programmably. 

                //DrawerOptions need to be removed to make things work
                else if(mTitle.equalsIgnoreCase(""ATO"")){

               // Creating a fragment object
                    Fragment fragment = new ATO();

                    // Creating a Bundle object
                    Bundle data = new Bundle();

                    // Setting the index of the currently selected item of mDrawerList
                    data.putInt(""position"", position);

                    // Setting the position to the fragment
                    fragment.setArguments(data);

                    // Getting reference to the FragmentManager
                    FragmentManager fragmentManager = getFragmentManager();

                    // Creating a fragment transaction
                    FragmentTransaction ft = fragmentManager.beginTransaction();

                    // Adding a fragment to the fragment transaction
                    ft.replace(R.id.content_frame, fragment);

                    // Committing the transaction
                    ft.commit();

                // Closing the drawer
                mDrawerLayout.closeDrawer(mDrawerList);

                // Closing the drawer
                mDrawerLayout.closeDrawer(mDrawerList);
        }
                else{

                }
       }
    });
}

    @Override
protected void onPostCreate(Bundle savedInstanceState) {
    super.onPostCreate(savedInstanceState);
    mDrawerToggle.syncState();
}

/** Handling the touch event of app icon */
@Override
public boolean onOptionsItemSelected(MenuItem item) {
    if (mDrawerToggle.onOptionsItemSelected(item)) {
        return true;
    }
    return super.onOptionsItemSelected(item);
}

/*
 * I commented out this section below because I don't see us using it.
 * It does nothing more than show a little button which says ""settings""
 * in the top right corner of the bar. If you want to enable it, de-comment
 * and then look at the main.xml within the menu folder and de-commnent there.
 * Also have to go to the Strings.xml file under values and de-comment.
 */

/** Called whenever we call invalidateOptionsMenu() */
   @Override
//    public boolean onPrepareOptionsMenu(Menu menu) {
//        // If the drawer is open, hide action items related to the content view
//        boolean drawerOpen = mDrawerLayout.isDrawerOpen(mDrawerList);
// 
//        menu.findItem(R.id.action_settings).setVisible(!drawerOpen);
//        return super.onPrepareOptionsMenu(menu);
//    }
// 

    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    } 
}
</code></pre>

<p>And this is my ATO class which im having lots of trouble with:</p>

<pre><code>public class ATO extends ListFragment {

    private ProgressDialog pDialog;

    // URL to get contacts JSON
    private static String url = ""http://api.androidhive.info/contacts/"";

    // JSON Node names
    private static final String TAG_CONTACTS = ""contacts"";
private static final String TAG_ID = ""id"";
private static final String TAG_NAME = ""name"";
private static final String TAG_EMAIL = ""email"";
private static final String TAG_ADDRESS = ""address"";
private static final String TAG_GENDER = ""gender"";
private static final String TAG_PHONE = ""phone"";
private static final String TAG_PHONE_MOBILE = ""mobile"";
private static final String TAG_PHONE_HOME = ""home"";
private static final String TAG_PHONE_OFFICE = ""office"";

// contacts JSONArray
JSONArray contacts = null;

// Hashmap for ListView
ArrayList&lt;HashMap&lt;String, String&gt;&gt; contactList;

public View onCreateView(LayoutInflater inflater, 
                         ViewGroup container, 
                         Bundle savedInstanceState) {

    // Retrieving the currently selected item number
    int position = getArguments().getInt(""position"");

    // List of options
    String[] options = getResources().getStringArray(R.array.options);

    // Creating view correspoding to the fragment
    View v = inflater.inflate(R.layout.ato, container, false);

    // Getting reference to the TextView of the Fragment
    TextView tv = (TextView) v.findViewById(R.id.textView1);

    String words = ""Home of the app"";
    // Setting currently selected river name in the TextView
    tv.setText(words);

    // Updating the action bar title
    getActivity().getActionBar().setTitle(options[position]);

    // Calling async task to get json
    new GetContacts().execute();

    return v;
}

/**
 * Async task class to get json by making HTTP call
 * */
private class GetContacts extends AsyncTask&lt;Void, Void, Void&gt; {

    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        // Showing progress dialog
         pDialog = new ProgressDialog(getActivity());
        //
        pDialog.setMessage(""Please wait..."");
        pDialog.setCancelable(false);
        pDialog.show();

    }

    @Override
    protected Void doInBackground(Void... arg0) {
        // Creating service handler class instance
        ServiceHandler sh = new ServiceHandler();

        // Making a request to url and getting response
        String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);

        Log.d(""Response: "", ""&gt; "" + jsonStr);

        if (jsonStr != null) {
            try {
                JSONObject jsonObj = new JSONObject(jsonStr);

                // Getting JSON Array node
                contacts = jsonObj.getJSONArray(TAG_CONTACTS);

                // looping through All Contacts
                for (int i = 0; i &lt; contacts.length(); i++) {
                    JSONObject c = contacts.getJSONObject(i);

                    String id = c.getString(TAG_ID);
                    String name = c.getString(TAG_NAME);
                    String email = c.getString(TAG_EMAIL);
                    String address = c.getString(TAG_ADDRESS);
                    String gender = c.getString(TAG_GENDER);

                    // Phone node is JSON Object
                    JSONObject phone = c.getJSONObject(TAG_PHONE);
                    String mobile = phone.getString(TAG_PHONE_MOBILE);
                    String home = phone.getString(TAG_PHONE_HOME);
                    String office = phone.getString(TAG_PHONE_OFFICE);

                    // tmp hashmap for single contact
                    HashMap&lt;String, String&gt; contact = new HashMap&lt;String, String&gt;();

                    // adding each child node to HashMap key =&gt; value
                    contact.put(TAG_ID, id);
                    contact.put(TAG_NAME, name);
                    contact.put(TAG_EMAIL, email);
                    contact.put(TAG_PHONE_MOBILE, mobile);

                    // adding contact to contact list
                    contactList.add(contact);
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
        } else {
            Log.e(""ServiceHandler"", ""Couldn't get any data from the url"");
        }

        return null;
    }

    @Override
    protected void onPostExecute(Void result) {
        super.onPostExecute(result);
        // Dismiss the progress dialog
        if (pDialog.isShowing())
            pDialog.dismiss();
        /**
         * Updating parsed JSON data into ListView
         * */
        SimpleAdapter adapter = new SimpleAdapter(getActivity(), contactList,
                R.layout.list_item, new String[] { TAG_NAME, TAG_EMAIL,
                        TAG_PHONE_MOBILE }, new int[] { R.id.name,
                        R.id.email, R.id.mobile });

        setListAdapter(adapter);
    }

}

/*
 * {
""contacts"": [
    {
            ""id"": ""c200"",
            ""name"": ""Ravi Tamada"",
            ""email"": ""ravi@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c201"",
            ""name"": ""Johnny Depp"",
            ""email"": ""johnny_depp@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c202"",
            ""name"": ""Leonardo Dicaprio"",
            ""email"": ""leonardo_dicaprio@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c203"",
            ""name"": ""John Wayne"",
            ""email"": ""john_wayne@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c204"",
            ""name"": ""Angelina Jolie"",
            ""email"": ""angelina_jolie@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c205"",
            ""name"": ""Dido"",
            ""email"": ""dido@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c206"",
            ""name"": ""Adele"",
            ""email"": ""adele@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c207"",
            ""name"": ""Hugh Jackman"",
            ""email"": ""hugh_jackman@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c208"",
            ""name"": ""Will Smith"",
            ""email"": ""will_smith@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c209"",
            ""name"": ""Clint Eastwood"",
            ""email"": ""clint_eastwood@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c2010"",
            ""name"": ""Barack Obama"",
            ""email"": ""barack_obama@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c2011"",
            ""name"": ""Kate Winslet"",
            ""email"": ""kate_winslet@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c2012"",
            ""name"": ""Eminem"",
            ""email"": ""eminem@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    }
]
}
     */

}
</code></pre>

<p>Any and all help is really appreciated!</p>

<p>EDIT: This is the fixed class of ATO.class:</p>

<pre><code>package com.example.fratslidemenu;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.zip.Inflater;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import android.app.ListActivity;
import android.app.ListFragment;
import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;

public class ATO extends ListFragment {

private ProgressDialog pDialog;

// URL to get contacts JSON
private static String url = ""http://api.androidhive.info/contacts/"";

// JSON Node names
private static final String TAG_CONTACTS = ""contacts"";
private static final String TAG_ID = ""id"";
private static final String TAG_NAME = ""name"";
private static final String TAG_EMAIL = ""email"";
private static final String TAG_ADDRESS = ""address"";
private static final String TAG_GENDER = ""gender"";
private static final String TAG_PHONE = ""phone"";
private static final String TAG_PHONE_MOBILE = ""mobile"";
private static final String TAG_PHONE_HOME = ""home"";
private static final String TAG_PHONE_OFFICE = ""office"";

// contacts JSONArray
JSONArray contacts = null;

// Hashmap for ListView
ArrayList&lt;HashMap&lt;String, String&gt;&gt; contactList = new ArrayList&lt;HashMap&lt;String, String&gt;&gt;();

public View onCreateView(LayoutInflater inflater, 
                         ViewGroup container, 
                         Bundle savedInstanceState) {

    // Retrieving the currently selected item number
    int position = getArguments().getInt(""position"");

    // List of options
    String[] options = getResources().getStringArray(R.array.options);

    // Creating view correspoding to the fragment
    View v = inflater.inflate(R.layout.ato, container, false);

    // Updating the action bar title
    getActivity().getActionBar().setTitle(options[position]);

    // Calling async task to get json
    new GetContacts().execute();

    return v;
}

/**
 * Async task class to get json by making HTTP call
 * */
private class GetContacts extends AsyncTask&lt;Void, Void, Void&gt; {

    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        // Showing progress dialog
         pDialog = new ProgressDialog(getActivity());
        //
        pDialog.setMessage(""Please wait..."");
        pDialog.setCancelable(false);
        pDialog.show();

    }

    @Override
    protected Void doInBackground(Void... arg0) {
        // Creating service handler class instance
        ServiceHandler sh = new ServiceHandler();

        // Making a request to url and getting response
        String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);

        Log.d(""Response: "", ""&gt; "" + jsonStr);

        if (jsonStr != null) {
            try {
                JSONObject jsonObj = new JSONObject(jsonStr);

                // Getting JSON Array node
                contacts = jsonObj.getJSONArray(TAG_CONTACTS);

                // looping through All Contacts
                for (int i = 0; i &lt; contacts.length(); i++) {
                    JSONObject c = contacts.getJSONObject(i);

                    String id = c.getString(TAG_ID);
                    String name = c.getString(TAG_NAME);
                    String email = c.getString(TAG_EMAIL);
                    String address = c.getString(TAG_ADDRESS);
                    String gender = c.getString(TAG_GENDER);

                    // Phone node is JSON Object
                    JSONObject phone = c.getJSONObject(TAG_PHONE);
                    String mobile = phone.getString(TAG_PHONE_MOBILE);
                    String home = phone.getString(TAG_PHONE_HOME);
                    String office = phone.getString(TAG_PHONE_OFFICE);

                    // tmp hashmap for single contact
                    HashMap&lt;String, String&gt; contact = new HashMap&lt;String, String&gt;();

                    // adding each child node to HashMap key =&gt; value
                    contact.put(TAG_ID, id);
                    contact.put(TAG_NAME, name);
                    contact.put(TAG_EMAIL, email);
                    contact.put(TAG_PHONE_MOBILE, mobile);

                    // adding contact to contact list
                    contactList.add(contact);
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
        } else {
            Log.e(""ServiceHandler"", ""Couldn't get any data from the url"");
        }

        return null;
    }

    @Override
    protected void onPostExecute(Void result) {
        super.onPostExecute(result);
        // Dismiss the progress dialog
        if (pDialog.isShowing())
            pDialog.dismiss();
        /**
         * Updating parsed JSON data into ListView
         * */
        SimpleAdapter adapter = new SimpleAdapter(getActivity(), contactList,
                R.layout.list_item, new String[] { TAG_NAME, TAG_EMAIL,
                        TAG_PHONE_MOBILE }, new int[] { R.id.name,
                        R.id.email, R.id.mobile });

        setListAdapter(adapter);
    }

}   

}
</code></pre>
","contactList.add(contact); that is line 130. Why would this cause an error? I see in the logcat it says nullpointer exception. I've used this code in another project but didn't have an issue of nullpointer exception."
"20963714","Android ListFragment does not populate","4","<p>So I'm building an app which takes the data from this page: <a href=""http://api.androidhive.info/contacts/"" rel=""nofollow noreferrer"">http://api.androidhive.info/contacts/</a> and puts it into a listview within this fragment. I am using ListFragment. I had the hardest time getting everything to compile, especially with returning the view in the oncreateview(). I'm getting this error: </p>

<p><img src=""https://i.stack.imgur.com/Ksity.png"" alt=""enter image description here""></p>

<p>I can usually read the logcat and get an idea of where I need to look but I looked at line 299 and it was a commented section... The app begins to load the progress wheel but soon after it crashes before populating with a series of contacts from a URI. I'm confused on what the logcat is trying to tell me. Could someone explain to me which direction I'm supposed to take? </p>

<p>here is my MainActivity: </p>

<pre><code>public class MainActivity extends Activity {

// Within which the entire activity is enclosed
DrawerLayout mDrawerLayout;

// ListView represents Navigation Drawer
ListView mDrawerList;

// ActionBarDrawerToggle indicates the presence of Navigation Drawer in the action bar
ActionBarDrawerToggle mDrawerToggle;

// Title of the action bar
String mTitle="""";

@Override
protected void onCreate(Bundle savedInstanceState) {

    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    mTitle = (String) getTitle();

    // Getting reference to the DrawerLayout
    mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);

    mDrawerList = (ListView) findViewById(R.id.drawer_list);

    // Getting reference to the ActionBarDrawerToggle
    mDrawerToggle = new ActionBarDrawerToggle( this,
        mDrawerLayout,
        R.drawable.ic_drawer,
        R.string.drawer_open,
        R.string.drawer_close){

            /** Called when drawer is closed */
            public void onDrawerClosed(View view) {
                getActionBar().setTitle(mTitle);
                invalidateOptionsMenu();
            }

            /** Called when a drawer is opened */
            public void onDrawerOpened(View drawerView) {
                getActionBar().setTitle(""Select Option"");
                invalidateOptionsMenu();
            }
    };

    // Setting DrawerToggle on DrawerLayout
    mDrawerLayout.setDrawerListener(mDrawerToggle);

    // Creating an ArrayAdapter to add items to the listview mDrawerList
    ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(
        getBaseContext(),
        R.layout.drawer_list_item ,
        getResources().getStringArray(R.array.options)
    );

    // Setting the adapter on mDrawerList
    mDrawerList.setAdapter(adapter);

    // Enabling Home button
    getActionBar().setHomeButtonEnabled(true);

    // Enabling Up navigation
    getActionBar().setDisplayHomeAsUpEnabled(true);

    // Setting item click listener for the listview mDrawerList
    mDrawerList.setOnItemClickListener(new OnItemClickListener() {
        @Override
        public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {

                // Getting an array of options
                String[] options = getResources().getStringArray(R.array.options);

                //Currently selected option
                mTitle = options[position];

                if(mTitle.equalsIgnoreCase(""Home"")){
                    // Creating a fragment object
                    Fragment fragment = new AppMain();

                    // Creating a Bundle object
                    Bundle data = new Bundle();

                    // Setting the index of the currently selected item of mDrawerList
                    data.putInt(""position"", position);

                    // Setting the position to the fragment
                    fragment.setArguments(data);

                    // Getting reference to the FragmentManager
                    FragmentManager fragmentManager = getFragmentManager();

                    // Creating a fragment transaction
                    FragmentTransaction ft = fragmentManager.beginTransaction();

                    // Adding a fragment to the fragment transaction
                    ft.replace(R.id.content_frame, fragment);

                    // Committing the transaction
                    ft.commit();

                    // Closing the drawer
                    mDrawerLayout.closeDrawer(mDrawerList);

                }

                else if(mTitle.equalsIgnoreCase(""Map"")){
                    // Creating a fragment object
                    Fragment fragment = new MapFragment();

                    // Creating a Bundle object
                    Bundle data = new Bundle();

                    // Setting the index of the currently selected item of mDrawerList
                    data.putInt(""position"", position);

                    // Setting the position to the fragment
                    fragment.setArguments(data);

                    // Getting reference to the FragmentManager
                    FragmentManager fragmentManager = getFragmentManager();

                    // Creating a fragment transaction
                    FragmentTransaction ft = fragmentManager.beginTransaction();

                    // Adding a fragment to the fragment transaction
                    ft.replace(R.id.content_frame, fragment);

                    // Committing the transaction
                    ft.commit();

                    // Closing the drawer
                    mDrawerLayout.closeDrawer(mDrawerList);

                }
                //its possible to create a series of these and then 
                //initialize objects within the fragments programmably. 

                //DrawerOptions need to be removed to make things work
                else if(mTitle.equalsIgnoreCase(""ATO"")){

               // Creating a fragment object
                    Fragment fragment = new ATO();

                    // Creating a Bundle object
                    Bundle data = new Bundle();

                    // Setting the index of the currently selected item of mDrawerList
                    data.putInt(""position"", position);

                    // Setting the position to the fragment
                    fragment.setArguments(data);

                    // Getting reference to the FragmentManager
                    FragmentManager fragmentManager = getFragmentManager();

                    // Creating a fragment transaction
                    FragmentTransaction ft = fragmentManager.beginTransaction();

                    // Adding a fragment to the fragment transaction
                    ft.replace(R.id.content_frame, fragment);

                    // Committing the transaction
                    ft.commit();

                // Closing the drawer
                mDrawerLayout.closeDrawer(mDrawerList);

                // Closing the drawer
                mDrawerLayout.closeDrawer(mDrawerList);
        }
                else{

                }
       }
    });
}

    @Override
protected void onPostCreate(Bundle savedInstanceState) {
    super.onPostCreate(savedInstanceState);
    mDrawerToggle.syncState();
}

/** Handling the touch event of app icon */
@Override
public boolean onOptionsItemSelected(MenuItem item) {
    if (mDrawerToggle.onOptionsItemSelected(item)) {
        return true;
    }
    return super.onOptionsItemSelected(item);
}

/*
 * I commented out this section below because I don't see us using it.
 * It does nothing more than show a little button which says ""settings""
 * in the top right corner of the bar. If you want to enable it, de-comment
 * and then look at the main.xml within the menu folder and de-commnent there.
 * Also have to go to the Strings.xml file under values and de-comment.
 */

/** Called whenever we call invalidateOptionsMenu() */
   @Override
//    public boolean onPrepareOptionsMenu(Menu menu) {
//        // If the drawer is open, hide action items related to the content view
//        boolean drawerOpen = mDrawerLayout.isDrawerOpen(mDrawerList);
// 
//        menu.findItem(R.id.action_settings).setVisible(!drawerOpen);
//        return super.onPrepareOptionsMenu(menu);
//    }
// 

    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    } 
}
</code></pre>

<p>And this is my ATO class which im having lots of trouble with:</p>

<pre><code>public class ATO extends ListFragment {

    private ProgressDialog pDialog;

    // URL to get contacts JSON
    private static String url = ""http://api.androidhive.info/contacts/"";

    // JSON Node names
    private static final String TAG_CONTACTS = ""contacts"";
private static final String TAG_ID = ""id"";
private static final String TAG_NAME = ""name"";
private static final String TAG_EMAIL = ""email"";
private static final String TAG_ADDRESS = ""address"";
private static final String TAG_GENDER = ""gender"";
private static final String TAG_PHONE = ""phone"";
private static final String TAG_PHONE_MOBILE = ""mobile"";
private static final String TAG_PHONE_HOME = ""home"";
private static final String TAG_PHONE_OFFICE = ""office"";

// contacts JSONArray
JSONArray contacts = null;

// Hashmap for ListView
ArrayList&lt;HashMap&lt;String, String&gt;&gt; contactList;

public View onCreateView(LayoutInflater inflater, 
                         ViewGroup container, 
                         Bundle savedInstanceState) {

    // Retrieving the currently selected item number
    int position = getArguments().getInt(""position"");

    // List of options
    String[] options = getResources().getStringArray(R.array.options);

    // Creating view correspoding to the fragment
    View v = inflater.inflate(R.layout.ato, container, false);

    // Getting reference to the TextView of the Fragment
    TextView tv = (TextView) v.findViewById(R.id.textView1);

    String words = ""Home of the app"";
    // Setting currently selected river name in the TextView
    tv.setText(words);

    // Updating the action bar title
    getActivity().getActionBar().setTitle(options[position]);

    // Calling async task to get json
    new GetContacts().execute();

    return v;
}

/**
 * Async task class to get json by making HTTP call
 * */
private class GetContacts extends AsyncTask&lt;Void, Void, Void&gt; {

    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        // Showing progress dialog
         pDialog = new ProgressDialog(getActivity());
        //
        pDialog.setMessage(""Please wait..."");
        pDialog.setCancelable(false);
        pDialog.show();

    }

    @Override
    protected Void doInBackground(Void... arg0) {
        // Creating service handler class instance
        ServiceHandler sh = new ServiceHandler();

        // Making a request to url and getting response
        String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);

        Log.d(""Response: "", ""&gt; "" + jsonStr);

        if (jsonStr != null) {
            try {
                JSONObject jsonObj = new JSONObject(jsonStr);

                // Getting JSON Array node
                contacts = jsonObj.getJSONArray(TAG_CONTACTS);

                // looping through All Contacts
                for (int i = 0; i &lt; contacts.length(); i++) {
                    JSONObject c = contacts.getJSONObject(i);

                    String id = c.getString(TAG_ID);
                    String name = c.getString(TAG_NAME);
                    String email = c.getString(TAG_EMAIL);
                    String address = c.getString(TAG_ADDRESS);
                    String gender = c.getString(TAG_GENDER);

                    // Phone node is JSON Object
                    JSONObject phone = c.getJSONObject(TAG_PHONE);
                    String mobile = phone.getString(TAG_PHONE_MOBILE);
                    String home = phone.getString(TAG_PHONE_HOME);
                    String office = phone.getString(TAG_PHONE_OFFICE);

                    // tmp hashmap for single contact
                    HashMap&lt;String, String&gt; contact = new HashMap&lt;String, String&gt;();

                    // adding each child node to HashMap key =&gt; value
                    contact.put(TAG_ID, id);
                    contact.put(TAG_NAME, name);
                    contact.put(TAG_EMAIL, email);
                    contact.put(TAG_PHONE_MOBILE, mobile);

                    // adding contact to contact list
                    contactList.add(contact);
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
        } else {
            Log.e(""ServiceHandler"", ""Couldn't get any data from the url"");
        }

        return null;
    }

    @Override
    protected void onPostExecute(Void result) {
        super.onPostExecute(result);
        // Dismiss the progress dialog
        if (pDialog.isShowing())
            pDialog.dismiss();
        /**
         * Updating parsed JSON data into ListView
         * */
        SimpleAdapter adapter = new SimpleAdapter(getActivity(), contactList,
                R.layout.list_item, new String[] { TAG_NAME, TAG_EMAIL,
                        TAG_PHONE_MOBILE }, new int[] { R.id.name,
                        R.id.email, R.id.mobile });

        setListAdapter(adapter);
    }

}

/*
 * {
""contacts"": [
    {
            ""id"": ""c200"",
            ""name"": ""Ravi Tamada"",
            ""email"": ""ravi@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c201"",
            ""name"": ""Johnny Depp"",
            ""email"": ""johnny_depp@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c202"",
            ""name"": ""Leonardo Dicaprio"",
            ""email"": ""leonardo_dicaprio@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c203"",
            ""name"": ""John Wayne"",
            ""email"": ""john_wayne@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c204"",
            ""name"": ""Angelina Jolie"",
            ""email"": ""angelina_jolie@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c205"",
            ""name"": ""Dido"",
            ""email"": ""dido@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c206"",
            ""name"": ""Adele"",
            ""email"": ""adele@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c207"",
            ""name"": ""Hugh Jackman"",
            ""email"": ""hugh_jackman@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c208"",
            ""name"": ""Will Smith"",
            ""email"": ""will_smith@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c209"",
            ""name"": ""Clint Eastwood"",
            ""email"": ""clint_eastwood@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c2010"",
            ""name"": ""Barack Obama"",
            ""email"": ""barack_obama@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c2011"",
            ""name"": ""Kate Winslet"",
            ""email"": ""kate_winslet@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c2012"",
            ""name"": ""Eminem"",
            ""email"": ""eminem@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    }
]
}
     */

}
</code></pre>

<p>Any and all help is really appreciated!</p>

<p>EDIT: This is the fixed class of ATO.class:</p>

<pre><code>package com.example.fratslidemenu;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.zip.Inflater;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import android.app.ListActivity;
import android.app.ListFragment;
import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;

public class ATO extends ListFragment {

private ProgressDialog pDialog;

// URL to get contacts JSON
private static String url = ""http://api.androidhive.info/contacts/"";

// JSON Node names
private static final String TAG_CONTACTS = ""contacts"";
private static final String TAG_ID = ""id"";
private static final String TAG_NAME = ""name"";
private static final String TAG_EMAIL = ""email"";
private static final String TAG_ADDRESS = ""address"";
private static final String TAG_GENDER = ""gender"";
private static final String TAG_PHONE = ""phone"";
private static final String TAG_PHONE_MOBILE = ""mobile"";
private static final String TAG_PHONE_HOME = ""home"";
private static final String TAG_PHONE_OFFICE = ""office"";

// contacts JSONArray
JSONArray contacts = null;

// Hashmap for ListView
ArrayList&lt;HashMap&lt;String, String&gt;&gt; contactList = new ArrayList&lt;HashMap&lt;String, String&gt;&gt;();

public View onCreateView(LayoutInflater inflater, 
                         ViewGroup container, 
                         Bundle savedInstanceState) {

    // Retrieving the currently selected item number
    int position = getArguments().getInt(""position"");

    // List of options
    String[] options = getResources().getStringArray(R.array.options);

    // Creating view correspoding to the fragment
    View v = inflater.inflate(R.layout.ato, container, false);

    // Updating the action bar title
    getActivity().getActionBar().setTitle(options[position]);

    // Calling async task to get json
    new GetContacts().execute();

    return v;
}

/**
 * Async task class to get json by making HTTP call
 * */
private class GetContacts extends AsyncTask&lt;Void, Void, Void&gt; {

    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        // Showing progress dialog
         pDialog = new ProgressDialog(getActivity());
        //
        pDialog.setMessage(""Please wait..."");
        pDialog.setCancelable(false);
        pDialog.show();

    }

    @Override
    protected Void doInBackground(Void... arg0) {
        // Creating service handler class instance
        ServiceHandler sh = new ServiceHandler();

        // Making a request to url and getting response
        String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);

        Log.d(""Response: "", ""&gt; "" + jsonStr);

        if (jsonStr != null) {
            try {
                JSONObject jsonObj = new JSONObject(jsonStr);

                // Getting JSON Array node
                contacts = jsonObj.getJSONArray(TAG_CONTACTS);

                // looping through All Contacts
                for (int i = 0; i &lt; contacts.length(); i++) {
                    JSONObject c = contacts.getJSONObject(i);

                    String id = c.getString(TAG_ID);
                    String name = c.getString(TAG_NAME);
                    String email = c.getString(TAG_EMAIL);
                    String address = c.getString(TAG_ADDRESS);
                    String gender = c.getString(TAG_GENDER);

                    // Phone node is JSON Object
                    JSONObject phone = c.getJSONObject(TAG_PHONE);
                    String mobile = phone.getString(TAG_PHONE_MOBILE);
                    String home = phone.getString(TAG_PHONE_HOME);
                    String office = phone.getString(TAG_PHONE_OFFICE);

                    // tmp hashmap for single contact
                    HashMap&lt;String, String&gt; contact = new HashMap&lt;String, String&gt;();

                    // adding each child node to HashMap key =&gt; value
                    contact.put(TAG_ID, id);
                    contact.put(TAG_NAME, name);
                    contact.put(TAG_EMAIL, email);
                    contact.put(TAG_PHONE_MOBILE, mobile);

                    // adding contact to contact list
                    contactList.add(contact);
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
        } else {
            Log.e(""ServiceHandler"", ""Couldn't get any data from the url"");
        }

        return null;
    }

    @Override
    protected void onPostExecute(Void result) {
        super.onPostExecute(result);
        // Dismiss the progress dialog
        if (pDialog.isShowing())
            pDialog.dismiss();
        /**
         * Updating parsed JSON data into ListView
         * */
        SimpleAdapter adapter = new SimpleAdapter(getActivity(), contactList,
                R.layout.list_item, new String[] { TAG_NAME, TAG_EMAIL,
                        TAG_PHONE_MOBILE }, new int[] { R.id.name,
                        R.id.email, R.id.mobile });

        setListAdapter(adapter);
    }

}   

}
</code></pre>
","Which line is 130 (`doInBackground()` method)?"
"20963714","Android ListFragment does not populate","4","<p>So I'm building an app which takes the data from this page: <a href=""http://api.androidhive.info/contacts/"" rel=""nofollow noreferrer"">http://api.androidhive.info/contacts/</a> and puts it into a listview within this fragment. I am using ListFragment. I had the hardest time getting everything to compile, especially with returning the view in the oncreateview(). I'm getting this error: </p>

<p><img src=""https://i.stack.imgur.com/Ksity.png"" alt=""enter image description here""></p>

<p>I can usually read the logcat and get an idea of where I need to look but I looked at line 299 and it was a commented section... The app begins to load the progress wheel but soon after it crashes before populating with a series of contacts from a URI. I'm confused on what the logcat is trying to tell me. Could someone explain to me which direction I'm supposed to take? </p>

<p>here is my MainActivity: </p>

<pre><code>public class MainActivity extends Activity {

// Within which the entire activity is enclosed
DrawerLayout mDrawerLayout;

// ListView represents Navigation Drawer
ListView mDrawerList;

// ActionBarDrawerToggle indicates the presence of Navigation Drawer in the action bar
ActionBarDrawerToggle mDrawerToggle;

// Title of the action bar
String mTitle="""";

@Override
protected void onCreate(Bundle savedInstanceState) {

    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    mTitle = (String) getTitle();

    // Getting reference to the DrawerLayout
    mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);

    mDrawerList = (ListView) findViewById(R.id.drawer_list);

    // Getting reference to the ActionBarDrawerToggle
    mDrawerToggle = new ActionBarDrawerToggle( this,
        mDrawerLayout,
        R.drawable.ic_drawer,
        R.string.drawer_open,
        R.string.drawer_close){

            /** Called when drawer is closed */
            public void onDrawerClosed(View view) {
                getActionBar().setTitle(mTitle);
                invalidateOptionsMenu();
            }

            /** Called when a drawer is opened */
            public void onDrawerOpened(View drawerView) {
                getActionBar().setTitle(""Select Option"");
                invalidateOptionsMenu();
            }
    };

    // Setting DrawerToggle on DrawerLayout
    mDrawerLayout.setDrawerListener(mDrawerToggle);

    // Creating an ArrayAdapter to add items to the listview mDrawerList
    ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(
        getBaseContext(),
        R.layout.drawer_list_item ,
        getResources().getStringArray(R.array.options)
    );

    // Setting the adapter on mDrawerList
    mDrawerList.setAdapter(adapter);

    // Enabling Home button
    getActionBar().setHomeButtonEnabled(true);

    // Enabling Up navigation
    getActionBar().setDisplayHomeAsUpEnabled(true);

    // Setting item click listener for the listview mDrawerList
    mDrawerList.setOnItemClickListener(new OnItemClickListener() {
        @Override
        public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {

                // Getting an array of options
                String[] options = getResources().getStringArray(R.array.options);

                //Currently selected option
                mTitle = options[position];

                if(mTitle.equalsIgnoreCase(""Home"")){
                    // Creating a fragment object
                    Fragment fragment = new AppMain();

                    // Creating a Bundle object
                    Bundle data = new Bundle();

                    // Setting the index of the currently selected item of mDrawerList
                    data.putInt(""position"", position);

                    // Setting the position to the fragment
                    fragment.setArguments(data);

                    // Getting reference to the FragmentManager
                    FragmentManager fragmentManager = getFragmentManager();

                    // Creating a fragment transaction
                    FragmentTransaction ft = fragmentManager.beginTransaction();

                    // Adding a fragment to the fragment transaction
                    ft.replace(R.id.content_frame, fragment);

                    // Committing the transaction
                    ft.commit();

                    // Closing the drawer
                    mDrawerLayout.closeDrawer(mDrawerList);

                }

                else if(mTitle.equalsIgnoreCase(""Map"")){
                    // Creating a fragment object
                    Fragment fragment = new MapFragment();

                    // Creating a Bundle object
                    Bundle data = new Bundle();

                    // Setting the index of the currently selected item of mDrawerList
                    data.putInt(""position"", position);

                    // Setting the position to the fragment
                    fragment.setArguments(data);

                    // Getting reference to the FragmentManager
                    FragmentManager fragmentManager = getFragmentManager();

                    // Creating a fragment transaction
                    FragmentTransaction ft = fragmentManager.beginTransaction();

                    // Adding a fragment to the fragment transaction
                    ft.replace(R.id.content_frame, fragment);

                    // Committing the transaction
                    ft.commit();

                    // Closing the drawer
                    mDrawerLayout.closeDrawer(mDrawerList);

                }
                //its possible to create a series of these and then 
                //initialize objects within the fragments programmably. 

                //DrawerOptions need to be removed to make things work
                else if(mTitle.equalsIgnoreCase(""ATO"")){

               // Creating a fragment object
                    Fragment fragment = new ATO();

                    // Creating a Bundle object
                    Bundle data = new Bundle();

                    // Setting the index of the currently selected item of mDrawerList
                    data.putInt(""position"", position);

                    // Setting the position to the fragment
                    fragment.setArguments(data);

                    // Getting reference to the FragmentManager
                    FragmentManager fragmentManager = getFragmentManager();

                    // Creating a fragment transaction
                    FragmentTransaction ft = fragmentManager.beginTransaction();

                    // Adding a fragment to the fragment transaction
                    ft.replace(R.id.content_frame, fragment);

                    // Committing the transaction
                    ft.commit();

                // Closing the drawer
                mDrawerLayout.closeDrawer(mDrawerList);

                // Closing the drawer
                mDrawerLayout.closeDrawer(mDrawerList);
        }
                else{

                }
       }
    });
}

    @Override
protected void onPostCreate(Bundle savedInstanceState) {
    super.onPostCreate(savedInstanceState);
    mDrawerToggle.syncState();
}

/** Handling the touch event of app icon */
@Override
public boolean onOptionsItemSelected(MenuItem item) {
    if (mDrawerToggle.onOptionsItemSelected(item)) {
        return true;
    }
    return super.onOptionsItemSelected(item);
}

/*
 * I commented out this section below because I don't see us using it.
 * It does nothing more than show a little button which says ""settings""
 * in the top right corner of the bar. If you want to enable it, de-comment
 * and then look at the main.xml within the menu folder and de-commnent there.
 * Also have to go to the Strings.xml file under values and de-comment.
 */

/** Called whenever we call invalidateOptionsMenu() */
   @Override
//    public boolean onPrepareOptionsMenu(Menu menu) {
//        // If the drawer is open, hide action items related to the content view
//        boolean drawerOpen = mDrawerLayout.isDrawerOpen(mDrawerList);
// 
//        menu.findItem(R.id.action_settings).setVisible(!drawerOpen);
//        return super.onPrepareOptionsMenu(menu);
//    }
// 

    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    } 
}
</code></pre>

<p>And this is my ATO class which im having lots of trouble with:</p>

<pre><code>public class ATO extends ListFragment {

    private ProgressDialog pDialog;

    // URL to get contacts JSON
    private static String url = ""http://api.androidhive.info/contacts/"";

    // JSON Node names
    private static final String TAG_CONTACTS = ""contacts"";
private static final String TAG_ID = ""id"";
private static final String TAG_NAME = ""name"";
private static final String TAG_EMAIL = ""email"";
private static final String TAG_ADDRESS = ""address"";
private static final String TAG_GENDER = ""gender"";
private static final String TAG_PHONE = ""phone"";
private static final String TAG_PHONE_MOBILE = ""mobile"";
private static final String TAG_PHONE_HOME = ""home"";
private static final String TAG_PHONE_OFFICE = ""office"";

// contacts JSONArray
JSONArray contacts = null;

// Hashmap for ListView
ArrayList&lt;HashMap&lt;String, String&gt;&gt; contactList;

public View onCreateView(LayoutInflater inflater, 
                         ViewGroup container, 
                         Bundle savedInstanceState) {

    // Retrieving the currently selected item number
    int position = getArguments().getInt(""position"");

    // List of options
    String[] options = getResources().getStringArray(R.array.options);

    // Creating view correspoding to the fragment
    View v = inflater.inflate(R.layout.ato, container, false);

    // Getting reference to the TextView of the Fragment
    TextView tv = (TextView) v.findViewById(R.id.textView1);

    String words = ""Home of the app"";
    // Setting currently selected river name in the TextView
    tv.setText(words);

    // Updating the action bar title
    getActivity().getActionBar().setTitle(options[position]);

    // Calling async task to get json
    new GetContacts().execute();

    return v;
}

/**
 * Async task class to get json by making HTTP call
 * */
private class GetContacts extends AsyncTask&lt;Void, Void, Void&gt; {

    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        // Showing progress dialog
         pDialog = new ProgressDialog(getActivity());
        //
        pDialog.setMessage(""Please wait..."");
        pDialog.setCancelable(false);
        pDialog.show();

    }

    @Override
    protected Void doInBackground(Void... arg0) {
        // Creating service handler class instance
        ServiceHandler sh = new ServiceHandler();

        // Making a request to url and getting response
        String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);

        Log.d(""Response: "", ""&gt; "" + jsonStr);

        if (jsonStr != null) {
            try {
                JSONObject jsonObj = new JSONObject(jsonStr);

                // Getting JSON Array node
                contacts = jsonObj.getJSONArray(TAG_CONTACTS);

                // looping through All Contacts
                for (int i = 0; i &lt; contacts.length(); i++) {
                    JSONObject c = contacts.getJSONObject(i);

                    String id = c.getString(TAG_ID);
                    String name = c.getString(TAG_NAME);
                    String email = c.getString(TAG_EMAIL);
                    String address = c.getString(TAG_ADDRESS);
                    String gender = c.getString(TAG_GENDER);

                    // Phone node is JSON Object
                    JSONObject phone = c.getJSONObject(TAG_PHONE);
                    String mobile = phone.getString(TAG_PHONE_MOBILE);
                    String home = phone.getString(TAG_PHONE_HOME);
                    String office = phone.getString(TAG_PHONE_OFFICE);

                    // tmp hashmap for single contact
                    HashMap&lt;String, String&gt; contact = new HashMap&lt;String, String&gt;();

                    // adding each child node to HashMap key =&gt; value
                    contact.put(TAG_ID, id);
                    contact.put(TAG_NAME, name);
                    contact.put(TAG_EMAIL, email);
                    contact.put(TAG_PHONE_MOBILE, mobile);

                    // adding contact to contact list
                    contactList.add(contact);
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
        } else {
            Log.e(""ServiceHandler"", ""Couldn't get any data from the url"");
        }

        return null;
    }

    @Override
    protected void onPostExecute(Void result) {
        super.onPostExecute(result);
        // Dismiss the progress dialog
        if (pDialog.isShowing())
            pDialog.dismiss();
        /**
         * Updating parsed JSON data into ListView
         * */
        SimpleAdapter adapter = new SimpleAdapter(getActivity(), contactList,
                R.layout.list_item, new String[] { TAG_NAME, TAG_EMAIL,
                        TAG_PHONE_MOBILE }, new int[] { R.id.name,
                        R.id.email, R.id.mobile });

        setListAdapter(adapter);
    }

}

/*
 * {
""contacts"": [
    {
            ""id"": ""c200"",
            ""name"": ""Ravi Tamada"",
            ""email"": ""ravi@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c201"",
            ""name"": ""Johnny Depp"",
            ""email"": ""johnny_depp@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c202"",
            ""name"": ""Leonardo Dicaprio"",
            ""email"": ""leonardo_dicaprio@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c203"",
            ""name"": ""John Wayne"",
            ""email"": ""john_wayne@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c204"",
            ""name"": ""Angelina Jolie"",
            ""email"": ""angelina_jolie@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c205"",
            ""name"": ""Dido"",
            ""email"": ""dido@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c206"",
            ""name"": ""Adele"",
            ""email"": ""adele@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c207"",
            ""name"": ""Hugh Jackman"",
            ""email"": ""hugh_jackman@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c208"",
            ""name"": ""Will Smith"",
            ""email"": ""will_smith@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c209"",
            ""name"": ""Clint Eastwood"",
            ""email"": ""clint_eastwood@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c2010"",
            ""name"": ""Barack Obama"",
            ""email"": ""barack_obama@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c2011"",
            ""name"": ""Kate Winslet"",
            ""email"": ""kate_winslet@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""female"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    },
    {
            ""id"": ""c2012"",
            ""name"": ""Eminem"",
            ""email"": ""eminem@gmail.com"",
            ""address"": ""xx-xx-xxxx,x - street, x - country"",
            ""gender"" : ""male"",
            ""phone"": {
                ""mobile"": ""+91 0000000000"",
                ""home"": ""00 000000"",
                ""office"": ""00 000000""
            }
    }
]
}
     */

}
</code></pre>

<p>Any and all help is really appreciated!</p>

<p>EDIT: This is the fixed class of ATO.class:</p>

<pre><code>package com.example.fratslidemenu;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.zip.Inflater;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import android.app.ListActivity;
import android.app.ListFragment;
import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;

public class ATO extends ListFragment {

private ProgressDialog pDialog;

// URL to get contacts JSON
private static String url = ""http://api.androidhive.info/contacts/"";

// JSON Node names
private static final String TAG_CONTACTS = ""contacts"";
private static final String TAG_ID = ""id"";
private static final String TAG_NAME = ""name"";
private static final String TAG_EMAIL = ""email"";
private static final String TAG_ADDRESS = ""address"";
private static final String TAG_GENDER = ""gender"";
private static final String TAG_PHONE = ""phone"";
private static final String TAG_PHONE_MOBILE = ""mobile"";
private static final String TAG_PHONE_HOME = ""home"";
private static final String TAG_PHONE_OFFICE = ""office"";

// contacts JSONArray
JSONArray contacts = null;

// Hashmap for ListView
ArrayList&lt;HashMap&lt;String, String&gt;&gt; contactList = new ArrayList&lt;HashMap&lt;String, String&gt;&gt;();

public View onCreateView(LayoutInflater inflater, 
                         ViewGroup container, 
                         Bundle savedInstanceState) {

    // Retrieving the currently selected item number
    int position = getArguments().getInt(""position"");

    // List of options
    String[] options = getResources().getStringArray(R.array.options);

    // Creating view correspoding to the fragment
    View v = inflater.inflate(R.layout.ato, container, false);

    // Updating the action bar title
    getActivity().getActionBar().setTitle(options[position]);

    // Calling async task to get json
    new GetContacts().execute();

    return v;
}

/**
 * Async task class to get json by making HTTP call
 * */
private class GetContacts extends AsyncTask&lt;Void, Void, Void&gt; {

    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        // Showing progress dialog
         pDialog = new ProgressDialog(getActivity());
        //
        pDialog.setMessage(""Please wait..."");
        pDialog.setCancelable(false);
        pDialog.show();

    }

    @Override
    protected Void doInBackground(Void... arg0) {
        // Creating service handler class instance
        ServiceHandler sh = new ServiceHandler();

        // Making a request to url and getting response
        String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);

        Log.d(""Response: "", ""&gt; "" + jsonStr);

        if (jsonStr != null) {
            try {
                JSONObject jsonObj = new JSONObject(jsonStr);

                // Getting JSON Array node
                contacts = jsonObj.getJSONArray(TAG_CONTACTS);

                // looping through All Contacts
                for (int i = 0; i &lt; contacts.length(); i++) {
                    JSONObject c = contacts.getJSONObject(i);

                    String id = c.getString(TAG_ID);
                    String name = c.getString(TAG_NAME);
                    String email = c.getString(TAG_EMAIL);
                    String address = c.getString(TAG_ADDRESS);
                    String gender = c.getString(TAG_GENDER);

                    // Phone node is JSON Object
                    JSONObject phone = c.getJSONObject(TAG_PHONE);
                    String mobile = phone.getString(TAG_PHONE_MOBILE);
                    String home = phone.getString(TAG_PHONE_HOME);
                    String office = phone.getString(TAG_PHONE_OFFICE);

                    // tmp hashmap for single contact
                    HashMap&lt;String, String&gt; contact = new HashMap&lt;String, String&gt;();

                    // adding each child node to HashMap key =&gt; value
                    contact.put(TAG_ID, id);
                    contact.put(TAG_NAME, name);
                    contact.put(TAG_EMAIL, email);
                    contact.put(TAG_PHONE_MOBILE, mobile);

                    // adding contact to contact list
                    contactList.add(contact);
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
        } else {
            Log.e(""ServiceHandler"", ""Couldn't get any data from the url"");
        }

        return null;
    }

    @Override
    protected void onPostExecute(Void result) {
        super.onPostExecute(result);
        // Dismiss the progress dialog
        if (pDialog.isShowing())
            pDialog.dismiss();
        /**
         * Updating parsed JSON data into ListView
         * */
        SimpleAdapter adapter = new SimpleAdapter(getActivity(), contactList,
                R.layout.list_item, new String[] { TAG_NAME, TAG_EMAIL,
                        TAG_PHONE_MOBILE }, new int[] { R.id.name,
                        R.id.email, R.id.mobile });

        setListAdapter(adapter);
    }

}   

}
</code></pre>
","Your error is occurring on line `130` of ATO, not `299`."
"27278576","My items in my listview are not reacting to OnItemClick","6","<p>This is my Layout file for a row with all them parameters need to prevent the elements from being clickable (at least i thought they are all).</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
android:layout_width=""match_parent""
android:layout_height=""wrap_content""
android:clickable=""true""
android:background=""?android:attr/selectableItemBackground""
android:orientation=""horizontal"" &gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_date""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_time""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_value""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;ImageView
    android:id=""@+id/measuredata_list_row_imageview_mood""
    android:layout_width=""0dp""
    android:layout_height=""wrap_content""
    android:layout_weight=""1.0""
    android:clickable=""false""
    android:focusable=""false""
    android:contentDescription=""@string/imageview_photo_description"" /&gt;

 &lt;/LinearLayout&gt;
</code></pre>

<p>and the code from the activity:</p>

<pre><code>public class MeasureDataListFragment extends Fragment implements OnClickListener, OnItemClickListener, MeasureDataGetSelectionCallback, MeasureDataGetCallback {
    private SessionManagerPreferences sessionManagerPreferences = null;
    private SessionManagerSingleton sessionManagerSingleton = null;
    private SessionManagerMeasureDataList sessionManagerMeasureDataList = null;
    private MeasureDataListAdapter adapter = null;
    private ListView listRowParent = null;
    private Button buttonChoose = null;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        this.sessionManagerPreferences = new SessionManagerPreferences(this.getActivity());
        this.sessionManagerSingleton = SessionManagerSingleton.getInstance(this.getActivity());
        this.sessionManagerMeasureDataList = SessionManagerMeasureDataList.getInstance();

        if(this.sessionManagerMeasureDataList.getMeasureDataList() == null) {
            this.sessionManagerMeasureDataList.setMeasureDataList(new MeasureDataList());
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        return inflater.inflate(R.layout.activity_measuredata_list_fragment, container, false);
    }

    @SuppressLint(""InflateParams"")
    @Override
    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        this.listRowParent = (ListView) view.findViewById(R.id.measuredata_list_row_parent);
        this.buttonChoose = (Button) view.findViewById(R.id.measuredata_list_fragment_button_choose);
        this.buttonChoose.setOnClickListener(this);

        this.adapter = new MeasureDataListAdapter(this.getActivity(), this.sessionManagerMeasureDataList.getMeasureDataList().getMeasureDataListEntries());
        this.listRowParent.setAdapter(this.adapter);
        this.listRowParent.setOnItemClickListener(this);
    }

    @Override
    public void onClick(View view) {
        switch(view.getId()) {
            case  R.id.measuredata_list_fragment_button_choose : {
                this.performChooseDates();
            } break;
        }
    }

    @Override
    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {
        Log.v(""MeasureDataListFragment"", ""Position: "" + position);
    }

    @Override
    public void onMeasureDataGetSelectionCompleted(final String fromYear, final String fromMonth, final String fromDay, final String toYear, final String toMonth, final String toDay) {
        String email = null;
        String password = null;
        String from = fromDay + ""."" + fromMonth + ""."" + fromYear;
        String to = toDay + ""."" + toMonth + ""."" + toYear;

        if(this.sessionManagerSingleton.isLoggedIn()) {
            email = this.sessionManagerSingleton.getEmail();
            password = this.sessionManagerSingleton.getPassword();
        } else {
            Map&lt;String, String&gt; userData = this.sessionManagerPreferences.getUserDetails();

            email = userData.get(Globals.KEY_EMAIL);
            password = userData.get(Globals.KEY_PASSWORD);
        }

        FragmentTransaction fragmentTransaction = this.getFragmentManager().beginTransaction();
        MeasureDataGetTask measureDataGetTask = new MeasureDataGetTask(email, password, from, to);
        MeasureDataGetDialogFragment measureDataGetDialogFragment = new MeasureDataGetDialogFragment(measureDataGetTask, this);

        measureDataGetDialogFragment.show(fragmentTransaction, null);
    }

    @Override
    public void onMeasureDataGetCompleted(StatusMeasureDataGet status, MeasureDataGetPOJO measureDataGetPOJO) {
        switch(status) {
            case MEASUREDATA_TRANSFER_SUCCESSFUL: {
                this.sessionManagerMeasureDataList.setMeasureDataList(measureDataGetPOJO);
                this.adapter.notifyDataSetChanged();
            } break;
            case ERROR_CONNECTION_FAILED: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_connection_failed);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_IO_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_io_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_JSON_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_json_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_NO_DATA_FOUND: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_not_data_found);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_PROTOCOL_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_protocol_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_WRONG_PARAMETERS: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_wrong_parameters);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_WRONG_USER_OR_PW: {
                String title = this.getResources().getString(R.string.title_input_error);
                String message = this.getResources().getString(R.string.message_wrong_mail_or_pw);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
        }
    }

    private void performChooseDates() {
        FragmentTransaction fragmentTransaction = this.getFragmentManager().beginTransaction();
        MeasureDataSelectionDialogFragment measureDataGetSelectionDialogFragment = new MeasureDataSelectionDialogFragment(this);

        measureDataGetSelectionDialogFragment.show(fragmentTransaction, null);
    }
}   
</code></pre>

<p>Unfortunately none of my rows is reacting to the click from OnItemClickListener.
What else do i have to declear to get this working? There is no output at all to the log file when i click any row. its like i never added an OnItemClickListener to the ListView.</p>
","edited the post."
"27278576","My items in my listview are not reacting to OnItemClick","6","<p>This is my Layout file for a row with all them parameters need to prevent the elements from being clickable (at least i thought they are all).</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
android:layout_width=""match_parent""
android:layout_height=""wrap_content""
android:clickable=""true""
android:background=""?android:attr/selectableItemBackground""
android:orientation=""horizontal"" &gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_date""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_time""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_value""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;ImageView
    android:id=""@+id/measuredata_list_row_imageview_mood""
    android:layout_width=""0dp""
    android:layout_height=""wrap_content""
    android:layout_weight=""1.0""
    android:clickable=""false""
    android:focusable=""false""
    android:contentDescription=""@string/imageview_photo_description"" /&gt;

 &lt;/LinearLayout&gt;
</code></pre>

<p>and the code from the activity:</p>

<pre><code>public class MeasureDataListFragment extends Fragment implements OnClickListener, OnItemClickListener, MeasureDataGetSelectionCallback, MeasureDataGetCallback {
    private SessionManagerPreferences sessionManagerPreferences = null;
    private SessionManagerSingleton sessionManagerSingleton = null;
    private SessionManagerMeasureDataList sessionManagerMeasureDataList = null;
    private MeasureDataListAdapter adapter = null;
    private ListView listRowParent = null;
    private Button buttonChoose = null;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        this.sessionManagerPreferences = new SessionManagerPreferences(this.getActivity());
        this.sessionManagerSingleton = SessionManagerSingleton.getInstance(this.getActivity());
        this.sessionManagerMeasureDataList = SessionManagerMeasureDataList.getInstance();

        if(this.sessionManagerMeasureDataList.getMeasureDataList() == null) {
            this.sessionManagerMeasureDataList.setMeasureDataList(new MeasureDataList());
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        return inflater.inflate(R.layout.activity_measuredata_list_fragment, container, false);
    }

    @SuppressLint(""InflateParams"")
    @Override
    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        this.listRowParent = (ListView) view.findViewById(R.id.measuredata_list_row_parent);
        this.buttonChoose = (Button) view.findViewById(R.id.measuredata_list_fragment_button_choose);
        this.buttonChoose.setOnClickListener(this);

        this.adapter = new MeasureDataListAdapter(this.getActivity(), this.sessionManagerMeasureDataList.getMeasureDataList().getMeasureDataListEntries());
        this.listRowParent.setAdapter(this.adapter);
        this.listRowParent.setOnItemClickListener(this);
    }

    @Override
    public void onClick(View view) {
        switch(view.getId()) {
            case  R.id.measuredata_list_fragment_button_choose : {
                this.performChooseDates();
            } break;
        }
    }

    @Override
    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {
        Log.v(""MeasureDataListFragment"", ""Position: "" + position);
    }

    @Override
    public void onMeasureDataGetSelectionCompleted(final String fromYear, final String fromMonth, final String fromDay, final String toYear, final String toMonth, final String toDay) {
        String email = null;
        String password = null;
        String from = fromDay + ""."" + fromMonth + ""."" + fromYear;
        String to = toDay + ""."" + toMonth + ""."" + toYear;

        if(this.sessionManagerSingleton.isLoggedIn()) {
            email = this.sessionManagerSingleton.getEmail();
            password = this.sessionManagerSingleton.getPassword();
        } else {
            Map&lt;String, String&gt; userData = this.sessionManagerPreferences.getUserDetails();

            email = userData.get(Globals.KEY_EMAIL);
            password = userData.get(Globals.KEY_PASSWORD);
        }

        FragmentTransaction fragmentTransaction = this.getFragmentManager().beginTransaction();
        MeasureDataGetTask measureDataGetTask = new MeasureDataGetTask(email, password, from, to);
        MeasureDataGetDialogFragment measureDataGetDialogFragment = new MeasureDataGetDialogFragment(measureDataGetTask, this);

        measureDataGetDialogFragment.show(fragmentTransaction, null);
    }

    @Override
    public void onMeasureDataGetCompleted(StatusMeasureDataGet status, MeasureDataGetPOJO measureDataGetPOJO) {
        switch(status) {
            case MEASUREDATA_TRANSFER_SUCCESSFUL: {
                this.sessionManagerMeasureDataList.setMeasureDataList(measureDataGetPOJO);
                this.adapter.notifyDataSetChanged();
            } break;
            case ERROR_CONNECTION_FAILED: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_connection_failed);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_IO_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_io_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_JSON_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_json_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_NO_DATA_FOUND: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_not_data_found);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_PROTOCOL_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_protocol_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_WRONG_PARAMETERS: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_wrong_parameters);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_WRONG_USER_OR_PW: {
                String title = this.getResources().getString(R.string.title_input_error);
                String message = this.getResources().getString(R.string.message_wrong_mail_or_pw);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
        }
    }

    private void performChooseDates() {
        FragmentTransaction fragmentTransaction = this.getFragmentManager().beginTransaction();
        MeasureDataSelectionDialogFragment measureDataGetSelectionDialogFragment = new MeasureDataSelectionDialogFragment(this);

        measureDataGetSelectionDialogFragment.show(fragmentTransaction, null);
    }
}   
</code></pre>

<p>Unfortunately none of my rows is reacting to the click from OnItemClickListener.
What else do i have to declear to get this working? There is no output at all to the log file when i click any row. its like i never added an OnItemClickListener to the ListView.</p>
","Can you post whole activity?"
"27278576","My items in my listview are not reacting to OnItemClick","6","<p>This is my Layout file for a row with all them parameters need to prevent the elements from being clickable (at least i thought they are all).</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
android:layout_width=""match_parent""
android:layout_height=""wrap_content""
android:clickable=""true""
android:background=""?android:attr/selectableItemBackground""
android:orientation=""horizontal"" &gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_date""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_time""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_value""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;ImageView
    android:id=""@+id/measuredata_list_row_imageview_mood""
    android:layout_width=""0dp""
    android:layout_height=""wrap_content""
    android:layout_weight=""1.0""
    android:clickable=""false""
    android:focusable=""false""
    android:contentDescription=""@string/imageview_photo_description"" /&gt;

 &lt;/LinearLayout&gt;
</code></pre>

<p>and the code from the activity:</p>

<pre><code>public class MeasureDataListFragment extends Fragment implements OnClickListener, OnItemClickListener, MeasureDataGetSelectionCallback, MeasureDataGetCallback {
    private SessionManagerPreferences sessionManagerPreferences = null;
    private SessionManagerSingleton sessionManagerSingleton = null;
    private SessionManagerMeasureDataList sessionManagerMeasureDataList = null;
    private MeasureDataListAdapter adapter = null;
    private ListView listRowParent = null;
    private Button buttonChoose = null;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        this.sessionManagerPreferences = new SessionManagerPreferences(this.getActivity());
        this.sessionManagerSingleton = SessionManagerSingleton.getInstance(this.getActivity());
        this.sessionManagerMeasureDataList = SessionManagerMeasureDataList.getInstance();

        if(this.sessionManagerMeasureDataList.getMeasureDataList() == null) {
            this.sessionManagerMeasureDataList.setMeasureDataList(new MeasureDataList());
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        return inflater.inflate(R.layout.activity_measuredata_list_fragment, container, false);
    }

    @SuppressLint(""InflateParams"")
    @Override
    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        this.listRowParent = (ListView) view.findViewById(R.id.measuredata_list_row_parent);
        this.buttonChoose = (Button) view.findViewById(R.id.measuredata_list_fragment_button_choose);
        this.buttonChoose.setOnClickListener(this);

        this.adapter = new MeasureDataListAdapter(this.getActivity(), this.sessionManagerMeasureDataList.getMeasureDataList().getMeasureDataListEntries());
        this.listRowParent.setAdapter(this.adapter);
        this.listRowParent.setOnItemClickListener(this);
    }

    @Override
    public void onClick(View view) {
        switch(view.getId()) {
            case  R.id.measuredata_list_fragment_button_choose : {
                this.performChooseDates();
            } break;
        }
    }

    @Override
    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {
        Log.v(""MeasureDataListFragment"", ""Position: "" + position);
    }

    @Override
    public void onMeasureDataGetSelectionCompleted(final String fromYear, final String fromMonth, final String fromDay, final String toYear, final String toMonth, final String toDay) {
        String email = null;
        String password = null;
        String from = fromDay + ""."" + fromMonth + ""."" + fromYear;
        String to = toDay + ""."" + toMonth + ""."" + toYear;

        if(this.sessionManagerSingleton.isLoggedIn()) {
            email = this.sessionManagerSingleton.getEmail();
            password = this.sessionManagerSingleton.getPassword();
        } else {
            Map&lt;String, String&gt; userData = this.sessionManagerPreferences.getUserDetails();

            email = userData.get(Globals.KEY_EMAIL);
            password = userData.get(Globals.KEY_PASSWORD);
        }

        FragmentTransaction fragmentTransaction = this.getFragmentManager().beginTransaction();
        MeasureDataGetTask measureDataGetTask = new MeasureDataGetTask(email, password, from, to);
        MeasureDataGetDialogFragment measureDataGetDialogFragment = new MeasureDataGetDialogFragment(measureDataGetTask, this);

        measureDataGetDialogFragment.show(fragmentTransaction, null);
    }

    @Override
    public void onMeasureDataGetCompleted(StatusMeasureDataGet status, MeasureDataGetPOJO measureDataGetPOJO) {
        switch(status) {
            case MEASUREDATA_TRANSFER_SUCCESSFUL: {
                this.sessionManagerMeasureDataList.setMeasureDataList(measureDataGetPOJO);
                this.adapter.notifyDataSetChanged();
            } break;
            case ERROR_CONNECTION_FAILED: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_connection_failed);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_IO_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_io_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_JSON_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_json_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_NO_DATA_FOUND: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_not_data_found);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_PROTOCOL_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_protocol_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_WRONG_PARAMETERS: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_wrong_parameters);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_WRONG_USER_OR_PW: {
                String title = this.getResources().getString(R.string.title_input_error);
                String message = this.getResources().getString(R.string.message_wrong_mail_or_pw);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
        }
    }

    private void performChooseDates() {
        FragmentTransaction fragmentTransaction = this.getFragmentManager().beginTransaction();
        MeasureDataSelectionDialogFragment measureDataGetSelectionDialogFragment = new MeasureDataSelectionDialogFragment(this);

        measureDataGetSelectionDialogFragment.show(fragmentTransaction, null);
    }
}   
</code></pre>

<p>Unfortunately none of my rows is reacting to the click from OnItemClickListener.
What else do i have to declear to get this working? There is no output at all to the log file when i click any row. its like i never added an OnItemClickListener to the ListView.</p>
","check this http://stackoverflow.com/questions/23602924/android-listview-item-click-is-not-working/23603110#23603110"
"27278576","My items in my listview are not reacting to OnItemClick","6","<p>This is my Layout file for a row with all them parameters need to prevent the elements from being clickable (at least i thought they are all).</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
android:layout_width=""match_parent""
android:layout_height=""wrap_content""
android:clickable=""true""
android:background=""?android:attr/selectableItemBackground""
android:orientation=""horizontal"" &gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_date""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_time""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_value""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;ImageView
    android:id=""@+id/measuredata_list_row_imageview_mood""
    android:layout_width=""0dp""
    android:layout_height=""wrap_content""
    android:layout_weight=""1.0""
    android:clickable=""false""
    android:focusable=""false""
    android:contentDescription=""@string/imageview_photo_description"" /&gt;

 &lt;/LinearLayout&gt;
</code></pre>

<p>and the code from the activity:</p>

<pre><code>public class MeasureDataListFragment extends Fragment implements OnClickListener, OnItemClickListener, MeasureDataGetSelectionCallback, MeasureDataGetCallback {
    private SessionManagerPreferences sessionManagerPreferences = null;
    private SessionManagerSingleton sessionManagerSingleton = null;
    private SessionManagerMeasureDataList sessionManagerMeasureDataList = null;
    private MeasureDataListAdapter adapter = null;
    private ListView listRowParent = null;
    private Button buttonChoose = null;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        this.sessionManagerPreferences = new SessionManagerPreferences(this.getActivity());
        this.sessionManagerSingleton = SessionManagerSingleton.getInstance(this.getActivity());
        this.sessionManagerMeasureDataList = SessionManagerMeasureDataList.getInstance();

        if(this.sessionManagerMeasureDataList.getMeasureDataList() == null) {
            this.sessionManagerMeasureDataList.setMeasureDataList(new MeasureDataList());
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        return inflater.inflate(R.layout.activity_measuredata_list_fragment, container, false);
    }

    @SuppressLint(""InflateParams"")
    @Override
    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        this.listRowParent = (ListView) view.findViewById(R.id.measuredata_list_row_parent);
        this.buttonChoose = (Button) view.findViewById(R.id.measuredata_list_fragment_button_choose);
        this.buttonChoose.setOnClickListener(this);

        this.adapter = new MeasureDataListAdapter(this.getActivity(), this.sessionManagerMeasureDataList.getMeasureDataList().getMeasureDataListEntries());
        this.listRowParent.setAdapter(this.adapter);
        this.listRowParent.setOnItemClickListener(this);
    }

    @Override
    public void onClick(View view) {
        switch(view.getId()) {
            case  R.id.measuredata_list_fragment_button_choose : {
                this.performChooseDates();
            } break;
        }
    }

    @Override
    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {
        Log.v(""MeasureDataListFragment"", ""Position: "" + position);
    }

    @Override
    public void onMeasureDataGetSelectionCompleted(final String fromYear, final String fromMonth, final String fromDay, final String toYear, final String toMonth, final String toDay) {
        String email = null;
        String password = null;
        String from = fromDay + ""."" + fromMonth + ""."" + fromYear;
        String to = toDay + ""."" + toMonth + ""."" + toYear;

        if(this.sessionManagerSingleton.isLoggedIn()) {
            email = this.sessionManagerSingleton.getEmail();
            password = this.sessionManagerSingleton.getPassword();
        } else {
            Map&lt;String, String&gt; userData = this.sessionManagerPreferences.getUserDetails();

            email = userData.get(Globals.KEY_EMAIL);
            password = userData.get(Globals.KEY_PASSWORD);
        }

        FragmentTransaction fragmentTransaction = this.getFragmentManager().beginTransaction();
        MeasureDataGetTask measureDataGetTask = new MeasureDataGetTask(email, password, from, to);
        MeasureDataGetDialogFragment measureDataGetDialogFragment = new MeasureDataGetDialogFragment(measureDataGetTask, this);

        measureDataGetDialogFragment.show(fragmentTransaction, null);
    }

    @Override
    public void onMeasureDataGetCompleted(StatusMeasureDataGet status, MeasureDataGetPOJO measureDataGetPOJO) {
        switch(status) {
            case MEASUREDATA_TRANSFER_SUCCESSFUL: {
                this.sessionManagerMeasureDataList.setMeasureDataList(measureDataGetPOJO);
                this.adapter.notifyDataSetChanged();
            } break;
            case ERROR_CONNECTION_FAILED: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_connection_failed);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_IO_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_io_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_JSON_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_json_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_NO_DATA_FOUND: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_not_data_found);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_PROTOCOL_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_protocol_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_WRONG_PARAMETERS: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_wrong_parameters);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_WRONG_USER_OR_PW: {
                String title = this.getResources().getString(R.string.title_input_error);
                String message = this.getResources().getString(R.string.message_wrong_mail_or_pw);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
        }
    }

    private void performChooseDates() {
        FragmentTransaction fragmentTransaction = this.getFragmentManager().beginTransaction();
        MeasureDataSelectionDialogFragment measureDataGetSelectionDialogFragment = new MeasureDataSelectionDialogFragment(this);

        measureDataGetSelectionDialogFragment.show(fragmentTransaction, null);
    }
}   
</code></pre>

<p>Unfortunately none of my rows is reacting to the click from OnItemClickListener.
What else do i have to declear to get this working? There is no output at all to the log file when i click any row. its like i never added an OnItemClickListener to the ListView.</p>
","it wokrs but in my opinion it is not a good looking workaround. i would rather understand why the ontimeclicklistener isnt reacting."
"27278576","My items in my listview are not reacting to OnItemClick","6","<p>This is my Layout file for a row with all them parameters need to prevent the elements from being clickable (at least i thought they are all).</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
android:layout_width=""match_parent""
android:layout_height=""wrap_content""
android:clickable=""true""
android:background=""?android:attr/selectableItemBackground""
android:orientation=""horizontal"" &gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_date""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_time""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_value""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;ImageView
    android:id=""@+id/measuredata_list_row_imageview_mood""
    android:layout_width=""0dp""
    android:layout_height=""wrap_content""
    android:layout_weight=""1.0""
    android:clickable=""false""
    android:focusable=""false""
    android:contentDescription=""@string/imageview_photo_description"" /&gt;

 &lt;/LinearLayout&gt;
</code></pre>

<p>and the code from the activity:</p>

<pre><code>public class MeasureDataListFragment extends Fragment implements OnClickListener, OnItemClickListener, MeasureDataGetSelectionCallback, MeasureDataGetCallback {
    private SessionManagerPreferences sessionManagerPreferences = null;
    private SessionManagerSingleton sessionManagerSingleton = null;
    private SessionManagerMeasureDataList sessionManagerMeasureDataList = null;
    private MeasureDataListAdapter adapter = null;
    private ListView listRowParent = null;
    private Button buttonChoose = null;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        this.sessionManagerPreferences = new SessionManagerPreferences(this.getActivity());
        this.sessionManagerSingleton = SessionManagerSingleton.getInstance(this.getActivity());
        this.sessionManagerMeasureDataList = SessionManagerMeasureDataList.getInstance();

        if(this.sessionManagerMeasureDataList.getMeasureDataList() == null) {
            this.sessionManagerMeasureDataList.setMeasureDataList(new MeasureDataList());
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        return inflater.inflate(R.layout.activity_measuredata_list_fragment, container, false);
    }

    @SuppressLint(""InflateParams"")
    @Override
    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        this.listRowParent = (ListView) view.findViewById(R.id.measuredata_list_row_parent);
        this.buttonChoose = (Button) view.findViewById(R.id.measuredata_list_fragment_button_choose);
        this.buttonChoose.setOnClickListener(this);

        this.adapter = new MeasureDataListAdapter(this.getActivity(), this.sessionManagerMeasureDataList.getMeasureDataList().getMeasureDataListEntries());
        this.listRowParent.setAdapter(this.adapter);
        this.listRowParent.setOnItemClickListener(this);
    }

    @Override
    public void onClick(View view) {
        switch(view.getId()) {
            case  R.id.measuredata_list_fragment_button_choose : {
                this.performChooseDates();
            } break;
        }
    }

    @Override
    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {
        Log.v(""MeasureDataListFragment"", ""Position: "" + position);
    }

    @Override
    public void onMeasureDataGetSelectionCompleted(final String fromYear, final String fromMonth, final String fromDay, final String toYear, final String toMonth, final String toDay) {
        String email = null;
        String password = null;
        String from = fromDay + ""."" + fromMonth + ""."" + fromYear;
        String to = toDay + ""."" + toMonth + ""."" + toYear;

        if(this.sessionManagerSingleton.isLoggedIn()) {
            email = this.sessionManagerSingleton.getEmail();
            password = this.sessionManagerSingleton.getPassword();
        } else {
            Map&lt;String, String&gt; userData = this.sessionManagerPreferences.getUserDetails();

            email = userData.get(Globals.KEY_EMAIL);
            password = userData.get(Globals.KEY_PASSWORD);
        }

        FragmentTransaction fragmentTransaction = this.getFragmentManager().beginTransaction();
        MeasureDataGetTask measureDataGetTask = new MeasureDataGetTask(email, password, from, to);
        MeasureDataGetDialogFragment measureDataGetDialogFragment = new MeasureDataGetDialogFragment(measureDataGetTask, this);

        measureDataGetDialogFragment.show(fragmentTransaction, null);
    }

    @Override
    public void onMeasureDataGetCompleted(StatusMeasureDataGet status, MeasureDataGetPOJO measureDataGetPOJO) {
        switch(status) {
            case MEASUREDATA_TRANSFER_SUCCESSFUL: {
                this.sessionManagerMeasureDataList.setMeasureDataList(measureDataGetPOJO);
                this.adapter.notifyDataSetChanged();
            } break;
            case ERROR_CONNECTION_FAILED: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_connection_failed);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_IO_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_io_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_JSON_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_json_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_NO_DATA_FOUND: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_not_data_found);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_PROTOCOL_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_protocol_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_WRONG_PARAMETERS: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_wrong_parameters);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_WRONG_USER_OR_PW: {
                String title = this.getResources().getString(R.string.title_input_error);
                String message = this.getResources().getString(R.string.message_wrong_mail_or_pw);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
        }
    }

    private void performChooseDates() {
        FragmentTransaction fragmentTransaction = this.getFragmentManager().beginTransaction();
        MeasureDataSelectionDialogFragment measureDataGetSelectionDialogFragment = new MeasureDataSelectionDialogFragment(this);

        measureDataGetSelectionDialogFragment.show(fragmentTransaction, null);
    }
}   
</code></pre>

<p>Unfortunately none of my rows is reacting to the click from OnItemClickListener.
What else do i have to declear to get this working? There is no output at all to the log file when i click any row. its like i never added an OnItemClickListener to the ListView.</p>
","try this http://stackoverflow.com/questions/20486114/when-focus-edittext-edittext-didnot-pop-out-the-softkeyboard, add `android:descendantFocusability=""blocksDescendants""` on your inflated linearlayout"
"27278576","My items in my listview are not reacting to OnItemClick","6","<p>This is my Layout file for a row with all them parameters need to prevent the elements from being clickable (at least i thought they are all).</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
android:layout_width=""match_parent""
android:layout_height=""wrap_content""
android:clickable=""true""
android:background=""?android:attr/selectableItemBackground""
android:orientation=""horizontal"" &gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_date""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_time""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;TextView
    android:id=""@+id/measuredata_list_row_textview_value""
    android:layout_width=""0dp""
    android:layout_height=""match_parent""
    android:layout_weight=""2.0""
    android:gravity=""center""
    android:clickable=""false""
    android:focusable=""false""
    android:textAppearance=""?android:attr/textAppearanceMedium"" /&gt;

&lt;ImageView
    android:id=""@+id/measuredata_list_row_imageview_mood""
    android:layout_width=""0dp""
    android:layout_height=""wrap_content""
    android:layout_weight=""1.0""
    android:clickable=""false""
    android:focusable=""false""
    android:contentDescription=""@string/imageview_photo_description"" /&gt;

 &lt;/LinearLayout&gt;
</code></pre>

<p>and the code from the activity:</p>

<pre><code>public class MeasureDataListFragment extends Fragment implements OnClickListener, OnItemClickListener, MeasureDataGetSelectionCallback, MeasureDataGetCallback {
    private SessionManagerPreferences sessionManagerPreferences = null;
    private SessionManagerSingleton sessionManagerSingleton = null;
    private SessionManagerMeasureDataList sessionManagerMeasureDataList = null;
    private MeasureDataListAdapter adapter = null;
    private ListView listRowParent = null;
    private Button buttonChoose = null;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        this.sessionManagerPreferences = new SessionManagerPreferences(this.getActivity());
        this.sessionManagerSingleton = SessionManagerSingleton.getInstance(this.getActivity());
        this.sessionManagerMeasureDataList = SessionManagerMeasureDataList.getInstance();

        if(this.sessionManagerMeasureDataList.getMeasureDataList() == null) {
            this.sessionManagerMeasureDataList.setMeasureDataList(new MeasureDataList());
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        return inflater.inflate(R.layout.activity_measuredata_list_fragment, container, false);
    }

    @SuppressLint(""InflateParams"")
    @Override
    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        this.listRowParent = (ListView) view.findViewById(R.id.measuredata_list_row_parent);
        this.buttonChoose = (Button) view.findViewById(R.id.measuredata_list_fragment_button_choose);
        this.buttonChoose.setOnClickListener(this);

        this.adapter = new MeasureDataListAdapter(this.getActivity(), this.sessionManagerMeasureDataList.getMeasureDataList().getMeasureDataListEntries());
        this.listRowParent.setAdapter(this.adapter);
        this.listRowParent.setOnItemClickListener(this);
    }

    @Override
    public void onClick(View view) {
        switch(view.getId()) {
            case  R.id.measuredata_list_fragment_button_choose : {
                this.performChooseDates();
            } break;
        }
    }

    @Override
    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {
        Log.v(""MeasureDataListFragment"", ""Position: "" + position);
    }

    @Override
    public void onMeasureDataGetSelectionCompleted(final String fromYear, final String fromMonth, final String fromDay, final String toYear, final String toMonth, final String toDay) {
        String email = null;
        String password = null;
        String from = fromDay + ""."" + fromMonth + ""."" + fromYear;
        String to = toDay + ""."" + toMonth + ""."" + toYear;

        if(this.sessionManagerSingleton.isLoggedIn()) {
            email = this.sessionManagerSingleton.getEmail();
            password = this.sessionManagerSingleton.getPassword();
        } else {
            Map&lt;String, String&gt; userData = this.sessionManagerPreferences.getUserDetails();

            email = userData.get(Globals.KEY_EMAIL);
            password = userData.get(Globals.KEY_PASSWORD);
        }

        FragmentTransaction fragmentTransaction = this.getFragmentManager().beginTransaction();
        MeasureDataGetTask measureDataGetTask = new MeasureDataGetTask(email, password, from, to);
        MeasureDataGetDialogFragment measureDataGetDialogFragment = new MeasureDataGetDialogFragment(measureDataGetTask, this);

        measureDataGetDialogFragment.show(fragmentTransaction, null);
    }

    @Override
    public void onMeasureDataGetCompleted(StatusMeasureDataGet status, MeasureDataGetPOJO measureDataGetPOJO) {
        switch(status) {
            case MEASUREDATA_TRANSFER_SUCCESSFUL: {
                this.sessionManagerMeasureDataList.setMeasureDataList(measureDataGetPOJO);
                this.adapter.notifyDataSetChanged();
            } break;
            case ERROR_CONNECTION_FAILED: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_connection_failed);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_IO_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_io_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_JSON_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_json_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_NO_DATA_FOUND: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_not_data_found);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_PROTOCOL_EXCEPTION: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_protocol_exception);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_WRONG_PARAMETERS: {
                String title = this.getResources().getString(R.string.title_error);
                String message = this.getResources().getString(R.string.message_wrong_parameters);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
            case ERROR_WRONG_USER_OR_PW: {
                String title = this.getResources().getString(R.string.title_input_error);
                String message = this.getResources().getString(R.string.message_wrong_mail_or_pw);

                DialogManager.showAlertDialog(title, message, this.getFragmentManager());
            } break;
        }
    }

    private void performChooseDates() {
        FragmentTransaction fragmentTransaction = this.getFragmentManager().beginTransaction();
        MeasureDataSelectionDialogFragment measureDataGetSelectionDialogFragment = new MeasureDataSelectionDialogFragment(this);

        measureDataGetSelectionDialogFragment.show(fragmentTransaction, null);
    }
}   
</code></pre>

<p>Unfortunately none of my rows is reacting to the click from OnItemClickListener.
What else do i have to declear to get this working? There is no output at all to the log file when i click any row. its like i never added an OnItemClickListener to the ListView.</p>
","Unfortunately it does not change anything."
"29116260","FragmentManager findFragmentByTag different behavior on Android 4.0.4 and Android 4.4.2","0","<p>I have a problem concerning this issue:
<a href=""https://code.google.com/p/android/issues/detail?id=13252"" rel=""nofollow"">https://code.google.com/p/android/issues/detail?id=13252</a></p>

<p>The issue is when changing the language of the Android device, some components such as RadioButton and CheckBox are not updated to the new language. I have two Fragments, FragmentA and FragmentB. In my FragmentActivity, I added FragmentA. And from Fragment A, I added FragmentB. I applied a workaround where I call a method either FragmentA or FragmentB to explicitly set the language to the correct one. </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>@Override
protected void onRestoreInstanceState(Bundle savedInstanceState) {
    super.onRestoreInstanceState(savedInstanceState);
    FragmentManager fm = getSupportFragmentManager();
    if (fm != null) {
	Fragment f = null;
			
	if ((f = fm.findFragmentByTag(FragmentB.TAG)) != null) {
		Log.e(TAG, FragmentB.TAG+ "" is visible"");
		((FragmentB)f).refreshLocale();
	} else {
		Log.e(TAG, FragmentB.TAG+ "" is NOT visible"");
	}

	if ((f = fm.findFragmentByTag(FragmentA.TAG)) != null) {
		Log.e(TAG, FragmentA.TAG+ "" is visible"");
		((FragmentA)f).refreshLocale();
        } else {
                Log.e(TAG, FragmentA.TAG+ "" is NOT visible"");
	}
    }
}</code></pre>
</div>
</div>
</p>

<p>What I'm doing above is finding the Fragments by their TAG when the Activity is restored, then calling the refreshLocale() method in each Fragment, so that the correct language is applied. The fix works, but there is a situation where the behavior is inconsistent in my two test devices.</p>

<p>In my Galaxy S5(4.4.2) both FragmentA and FragmentB's language is updated using the workaround. But for my Xperia Mini Pro (4.0.4) only FragmentB, the currently visible Fragment, is updated. I put Logs in my code and I found that both FragmentA and FragmentB are actually visible, my code reaching FragmentA's refreshLocale() method, but somehow the text is STILL not updated to the new language. </p>

<p>A sample of the refreshLocale() method:</p>

<pre><code>public void refreshLocale() {
    if (m_recallValues != null) {
        m_recallValues.setText(R.string.recall_values);
    }

    if (m_recallValuesRun != null) {
        m_recallValuesRun.setText(R.string.recall_run);
    }
}
</code></pre>

<p>Any idea about this issue?
Thank you.</p>
",""
"30084651","listview in Fragment","6","<p>Something wrong the XML,Please correct me and thank you in advance, below is the code?</p>

<p>Sorry i don't speak english 100/100.</p>

<pre><code>public class Les_agences
    extends Fragment {
        /* ****************************************** */
        /*              Les Variables                */
        /* ****************************************** */

    public String string_ip = ""192.168.42.168"";
    public Resources res;
    public JSONObject json;
    public ListView les_agence_tete_lsiteview;
    public TextView les_agence_tv_item_adresse;
    public TextView les_agence_tv_item_nom;
    public ImageView les_agences_iv_item_image;
    public ListView liste_view;
    ArrayList&lt;item_Les_agences_liste_view&gt; liste;
    item_Les_agences_liste_view item;
    JSONArray jsonoarray = null;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
            /* pour creer le fragment*/
        les_agence_tv_item_adresse = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
        les_agence_tv_item_nom = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
        les_agences_iv_item_image = (ImageView) getActivity().findViewById(R.id.les_agences_iv_item_image);
        View x = inflater.inflate(R.layout.les_agences, container, false);
        return x;
    }

    @Override
    public void onStart() {
        super.onStart();
        res = getResources();
    }

    @Override
    public void onResume() {
        super.onResume();
        connecter();
    }

    void connecter() {
        new AsyncTask&lt;Void, Void, Boolean&gt;() {
            ProgressDialog progress;

            @Override
            protected void onPreExecute() {
                super.onPreExecute();
                progress = ProgressDialog.show(getActivity(), res.getString(R.string.act2_connexion), res.getString(R.string.act2_attendre), false, false);
            }

            @Override
            protected Boolean doInBackground(Void... params) {
                thread processus = new thread();
                processus.setPaire(null);
                processus.seturl(""http://"" + string_ip + ""/agence_de_location/les_agences.php"");
                processus.start();
                try {
                    processus.join();
                } catch (InterruptedException e1) {
                    e1.printStackTrace();
                }
                json = processus.getJson();
                if (json == null) {
                    return (false);
                } else {
                    return (true);
                }
            }

            @Override
            protected void onPostExecute(Boolean result) {
                progress.dismiss();
                if (result == false) {
                    Toast.makeText(getActivity(), res.getString(R.string.act2_erreur_connexion), 10000).show();
                } else {
                    int val = 0;
                    try {
                        val = json.getInt(""val"");
                    } catch (JSONException e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                    }
                    if (val == 0) {
                        Toast.makeText(getActivity(), res.getString(R.string.act2_erreur_connexion), 10000).show();
                    } else {
                        /******************************************************** */
                                /*              Pour afficher les agences                 */
                        /******************************************************** */
                        // pour afficher    
                        liste = new ArrayList&lt;item_Les_agences_liste_view&gt;();
                        try {
                            jsonoarray = (JSONArray) json.get(""agence"");
                        } catch (JSONException e) {
                        }
                                    /* Yes return les champs  */
                        int indice;
                        item_Les_agences_liste_view item;
                        for (indice = 0; indice &lt;= jsonoarray.length() - 1; indice++) {

                                        /* new array , grand array agence 0 : 1 : 2 : ... 
                                         *petit array 0: .... 
                                         */
                            JSONObject petitearray = null;
                            try {
                                petitearray = jsonoarray.getJSONObject(indice);
                            } catch (JSONException e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                            }
                                        /* catch entre new class */
                            try {
                                Log.i(petitearray.getString(""nom_agence""), petitearray.getString(""nom_agence""));
                                item = new item_Les_agences_liste_view(petitearray.getString(""nom_agence""), petitearray.getString(""adresse_agence""), petitearray.getString(""image_agence""));
                                liste.add(item);
                            } catch (JSONException e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                            }
                        }
                    }
                }
                liste_view = (ListView) getActivity().findViewById(R.id.Les_agences_lv);
                Adapter_les_agences_list_view adapter = new Adapter_les_agences_list_view(getActivity().getApplicationContext(), liste);
                liste_view.setAdapter(adapter);
            }
        }.execute();
    }
    /******************************************************** */
        /*              class adapter                             */

    /**
     * *****************************************************
     */

    class Adapter_les_agences_list_view
        extends ArrayAdapter&lt;item_Les_agences_liste_view&gt; {

        private Context context;
        private ArrayList&lt;item_Les_agences_liste_view&gt; liste;

        public Adapter_les_agences_list_view(Context context, ArrayList&lt;item_Les_agences_liste_view&gt; liste) {
            super(context, R.layout.les_agences_liste_view, liste);
            this.context = context;
            this.liste = liste;
        }

        // le nombre des élements de la lsite 
        @Override
        public int getCount() {
            return liste.size();  // nmbre des element 
        }

        @Override
        public long getItemId(int position) {
            return position;
        }

        @Override
        public View getView(final int position, View convertView, ViewGroup parent) {
            View new_place = convertView;
            if (convertView == null)//adapter le 1er fois s 
            {
                // style
                LayoutInflater li = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                View rowView = li.inflate(R.layout.les_agences_liste_view, null);
            }
            les_agence_tv_item_adresse = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
            les_agence_tv_item_nom = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
            //les_agences_iv_item_image=(ImageView)convertView.findViewById(R.id.les_agences_iv_item_image);
            return convertView;
        }
    }
}
</code></pre>

<p>the file of network is true .</p>

<pre><code>public class Menu
    extends FragmentActivity {
    private ViewPager menu_viewpager;
    private android.support.v4.view.PagerAdapter pageradapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.menu);
        menu_viewpager = (ViewPager) findViewById(R.id.menu_viewpager);
        pageradapter = new Adapter_menu(getSupportFragmentManager());
        menu_viewpager.setAdapter(pageradapter);
    }

    @Override
    protected void onStart() {
        super.onStart();
        le_swap();
    }

    @Override
    protected void onResume() {
        super.onResume();
        TextView les_agence_tv_item_adresse = (TextView) findViewById(R.id.les_agence_tv_item_adresse);
        TextView les_agence_tv_item_nom = (TextView) findViewById(R.id.les_agence_tv_item_adresse);
        ImageView les_agences_iv_item_image = (ImageView) findViewById(R.id.les_agences_iv_item_image);
        les_agences_iv_item_image.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(Menu.this, ""ss"", 1000);
            }
        });
    }

    void le_swap() {
    }
}
</code></pre>

<p>the menu , main of programm</p>

<p>the menu , main of programm</p>

<pre><code>package PFD.agence_d_allocation;

import PFD.agence_d_allocation.R.string;
import android.R.integer;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.Fragment;
import android.content.res.Resources;
import android.graphics.Point;
import android.os.Bundle;
import android.provider.ContactsContract.CommonDataKinds.Event;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.app.FragmentStatePagerAdapter;
import android.support.v4.internal.view.SupportMenu;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.DisplayMetrics;
import android.util.Log;
import android.util.TypedValue;
import android.view.Display;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewDebug.IntToString;
import android.view.MotionEvent;
import android.view.ViewTreeObserver;
import android.view.Window;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import android.widget.ViewFlipper;
public class Menu extends FragmentActivity  {
    private ViewPager menu_viewpager ; 
    private android.support.v4.view.PagerAdapter pageradapter;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.menu);

        menu_viewpager = (ViewPager) findViewById(R.id.menu_viewpager);
        pageradapter = new Adapter_menu(getSupportFragmentManager());
        menu_viewpager.setAdapter(pageradapter);


    }


    @Override
    protected void onStart() {
        super.onStart();
        le_swap();
    }

    @Override
    protected void onResume() {

        super.onResume();



    }




    void le_swap()
    {

    }








}
</code></pre>

<p>the log cat </p>

<pre><code>05-09 11:40:06.158: D/dalvikvm(544): GC_FOR_ALLOC freed 3K, 3% free 10326K/10631K, paused 41ms
05-09 11:40:06.348: D/AndroidRuntime(544): Shutting down VM
05-09 11:40:06.348: W/dalvikvm(544): threadid=1: thread exiting with uncaught exception (group=0x409c01f8)
05-09 11:40:06.408: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:06.459: E/AndroidRuntime(544): FATAL EXCEPTION: main
05-09 11:40:06.459: E/AndroidRuntime(544): java.lang.NullPointerException
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences$1.onPreExecute(Les_agences.java:94)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.AsyncTask.executeOnExecutor(AsyncTask.java:561)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.AsyncTask.execute(AsyncTask.java:511)
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences.connecter(Les_agences.java:204)
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences.onCreateView(Les_agences.java:56)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.Fragment.performCreateView(Fragment.java:1789)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:955)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1138)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:740)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1501)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.executePendingTransactions(FragmentManager.java:490)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentPagerAdapter.finishUpdate(FragmentPagerAdapter.java:141)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.populate(ViewPager.java:1072)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.populate(ViewPager.java:918)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.onMeasure(ViewPager.java:1440)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureVertical(LinearLayout.java:812)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.onMeasure(LinearLayout.java:553)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.FrameLayout.onMeasure(FrameLayout.java:293)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1369)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureVertical(LinearLayout.java:660)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.onMeasure(LinearLayout.java:553)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.FrameLayout.onMeasure(FrameLayout.java:293)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.policy.impl.PhoneWindow$DecorView.onMeasure(PhoneWindow.java:2092)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1064)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewRootImpl.handleMessage(ViewRootImpl.java:2442)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.Handler.dispatchMessage(Handler.java:99)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.Looper.loop(Looper.java:137)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.app.ActivityThread.main(ActivityThread.java:4424)
05-09 11:40:06.459: E/AndroidRuntime(544):  at java.lang.reflect.Method.invokeNative(Native Method)
05-09 11:40:06.459: E/AndroidRuntime(544):  at java.lang.reflect.Method.invoke(Method.java:511)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551)
05-09 11:40:06.459: E/AndroidRuntime(544):  at dalvik.system.NativeStart.main(Native Method)
05-09 11:40:06.478: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
05-09 11:40:06.768: D/dalvikvm(544): GC_CONCURRENT freed 159K, 3% free 10645K/10951K, paused 39ms+24ms
05-09 11:40:06.909: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:06.918: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
05-09 11:40:07.189: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:07.218: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
</code></pre>
","you get android.os.NetworkOnMainThreadException?"
"30084651","listview in Fragment","6","<p>Something wrong the XML,Please correct me and thank you in advance, below is the code?</p>

<p>Sorry i don't speak english 100/100.</p>

<pre><code>public class Les_agences
    extends Fragment {
        /* ****************************************** */
        /*              Les Variables                */
        /* ****************************************** */

    public String string_ip = ""192.168.42.168"";
    public Resources res;
    public JSONObject json;
    public ListView les_agence_tete_lsiteview;
    public TextView les_agence_tv_item_adresse;
    public TextView les_agence_tv_item_nom;
    public ImageView les_agences_iv_item_image;
    public ListView liste_view;
    ArrayList&lt;item_Les_agences_liste_view&gt; liste;
    item_Les_agences_liste_view item;
    JSONArray jsonoarray = null;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
            /* pour creer le fragment*/
        les_agence_tv_item_adresse = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
        les_agence_tv_item_nom = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
        les_agences_iv_item_image = (ImageView) getActivity().findViewById(R.id.les_agences_iv_item_image);
        View x = inflater.inflate(R.layout.les_agences, container, false);
        return x;
    }

    @Override
    public void onStart() {
        super.onStart();
        res = getResources();
    }

    @Override
    public void onResume() {
        super.onResume();
        connecter();
    }

    void connecter() {
        new AsyncTask&lt;Void, Void, Boolean&gt;() {
            ProgressDialog progress;

            @Override
            protected void onPreExecute() {
                super.onPreExecute();
                progress = ProgressDialog.show(getActivity(), res.getString(R.string.act2_connexion), res.getString(R.string.act2_attendre), false, false);
            }

            @Override
            protected Boolean doInBackground(Void... params) {
                thread processus = new thread();
                processus.setPaire(null);
                processus.seturl(""http://"" + string_ip + ""/agence_de_location/les_agences.php"");
                processus.start();
                try {
                    processus.join();
                } catch (InterruptedException e1) {
                    e1.printStackTrace();
                }
                json = processus.getJson();
                if (json == null) {
                    return (false);
                } else {
                    return (true);
                }
            }

            @Override
            protected void onPostExecute(Boolean result) {
                progress.dismiss();
                if (result == false) {
                    Toast.makeText(getActivity(), res.getString(R.string.act2_erreur_connexion), 10000).show();
                } else {
                    int val = 0;
                    try {
                        val = json.getInt(""val"");
                    } catch (JSONException e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                    }
                    if (val == 0) {
                        Toast.makeText(getActivity(), res.getString(R.string.act2_erreur_connexion), 10000).show();
                    } else {
                        /******************************************************** */
                                /*              Pour afficher les agences                 */
                        /******************************************************** */
                        // pour afficher    
                        liste = new ArrayList&lt;item_Les_agences_liste_view&gt;();
                        try {
                            jsonoarray = (JSONArray) json.get(""agence"");
                        } catch (JSONException e) {
                        }
                                    /* Yes return les champs  */
                        int indice;
                        item_Les_agences_liste_view item;
                        for (indice = 0; indice &lt;= jsonoarray.length() - 1; indice++) {

                                        /* new array , grand array agence 0 : 1 : 2 : ... 
                                         *petit array 0: .... 
                                         */
                            JSONObject petitearray = null;
                            try {
                                petitearray = jsonoarray.getJSONObject(indice);
                            } catch (JSONException e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                            }
                                        /* catch entre new class */
                            try {
                                Log.i(petitearray.getString(""nom_agence""), petitearray.getString(""nom_agence""));
                                item = new item_Les_agences_liste_view(petitearray.getString(""nom_agence""), petitearray.getString(""adresse_agence""), petitearray.getString(""image_agence""));
                                liste.add(item);
                            } catch (JSONException e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                            }
                        }
                    }
                }
                liste_view = (ListView) getActivity().findViewById(R.id.Les_agences_lv);
                Adapter_les_agences_list_view adapter = new Adapter_les_agences_list_view(getActivity().getApplicationContext(), liste);
                liste_view.setAdapter(adapter);
            }
        }.execute();
    }
    /******************************************************** */
        /*              class adapter                             */

    /**
     * *****************************************************
     */

    class Adapter_les_agences_list_view
        extends ArrayAdapter&lt;item_Les_agences_liste_view&gt; {

        private Context context;
        private ArrayList&lt;item_Les_agences_liste_view&gt; liste;

        public Adapter_les_agences_list_view(Context context, ArrayList&lt;item_Les_agences_liste_view&gt; liste) {
            super(context, R.layout.les_agences_liste_view, liste);
            this.context = context;
            this.liste = liste;
        }

        // le nombre des élements de la lsite 
        @Override
        public int getCount() {
            return liste.size();  // nmbre des element 
        }

        @Override
        public long getItemId(int position) {
            return position;
        }

        @Override
        public View getView(final int position, View convertView, ViewGroup parent) {
            View new_place = convertView;
            if (convertView == null)//adapter le 1er fois s 
            {
                // style
                LayoutInflater li = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                View rowView = li.inflate(R.layout.les_agences_liste_view, null);
            }
            les_agence_tv_item_adresse = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
            les_agence_tv_item_nom = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
            //les_agences_iv_item_image=(ImageView)convertView.findViewById(R.id.les_agences_iv_item_image);
            return convertView;
        }
    }
}
</code></pre>

<p>the file of network is true .</p>

<pre><code>public class Menu
    extends FragmentActivity {
    private ViewPager menu_viewpager;
    private android.support.v4.view.PagerAdapter pageradapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.menu);
        menu_viewpager = (ViewPager) findViewById(R.id.menu_viewpager);
        pageradapter = new Adapter_menu(getSupportFragmentManager());
        menu_viewpager.setAdapter(pageradapter);
    }

    @Override
    protected void onStart() {
        super.onStart();
        le_swap();
    }

    @Override
    protected void onResume() {
        super.onResume();
        TextView les_agence_tv_item_adresse = (TextView) findViewById(R.id.les_agence_tv_item_adresse);
        TextView les_agence_tv_item_nom = (TextView) findViewById(R.id.les_agence_tv_item_adresse);
        ImageView les_agences_iv_item_image = (ImageView) findViewById(R.id.les_agences_iv_item_image);
        les_agences_iv_item_image.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(Menu.this, ""ss"", 1000);
            }
        });
    }

    void le_swap() {
    }
}
</code></pre>

<p>the menu , main of programm</p>

<p>the menu , main of programm</p>

<pre><code>package PFD.agence_d_allocation;

import PFD.agence_d_allocation.R.string;
import android.R.integer;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.Fragment;
import android.content.res.Resources;
import android.graphics.Point;
import android.os.Bundle;
import android.provider.ContactsContract.CommonDataKinds.Event;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.app.FragmentStatePagerAdapter;
import android.support.v4.internal.view.SupportMenu;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.DisplayMetrics;
import android.util.Log;
import android.util.TypedValue;
import android.view.Display;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewDebug.IntToString;
import android.view.MotionEvent;
import android.view.ViewTreeObserver;
import android.view.Window;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import android.widget.ViewFlipper;
public class Menu extends FragmentActivity  {
    private ViewPager menu_viewpager ; 
    private android.support.v4.view.PagerAdapter pageradapter;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.menu);

        menu_viewpager = (ViewPager) findViewById(R.id.menu_viewpager);
        pageradapter = new Adapter_menu(getSupportFragmentManager());
        menu_viewpager.setAdapter(pageradapter);


    }


    @Override
    protected void onStart() {
        super.onStart();
        le_swap();
    }

    @Override
    protected void onResume() {

        super.onResume();



    }




    void le_swap()
    {

    }








}
</code></pre>

<p>the log cat </p>

<pre><code>05-09 11:40:06.158: D/dalvikvm(544): GC_FOR_ALLOC freed 3K, 3% free 10326K/10631K, paused 41ms
05-09 11:40:06.348: D/AndroidRuntime(544): Shutting down VM
05-09 11:40:06.348: W/dalvikvm(544): threadid=1: thread exiting with uncaught exception (group=0x409c01f8)
05-09 11:40:06.408: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:06.459: E/AndroidRuntime(544): FATAL EXCEPTION: main
05-09 11:40:06.459: E/AndroidRuntime(544): java.lang.NullPointerException
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences$1.onPreExecute(Les_agences.java:94)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.AsyncTask.executeOnExecutor(AsyncTask.java:561)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.AsyncTask.execute(AsyncTask.java:511)
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences.connecter(Les_agences.java:204)
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences.onCreateView(Les_agences.java:56)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.Fragment.performCreateView(Fragment.java:1789)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:955)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1138)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:740)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1501)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.executePendingTransactions(FragmentManager.java:490)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentPagerAdapter.finishUpdate(FragmentPagerAdapter.java:141)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.populate(ViewPager.java:1072)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.populate(ViewPager.java:918)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.onMeasure(ViewPager.java:1440)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureVertical(LinearLayout.java:812)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.onMeasure(LinearLayout.java:553)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.FrameLayout.onMeasure(FrameLayout.java:293)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1369)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureVertical(LinearLayout.java:660)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.onMeasure(LinearLayout.java:553)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.FrameLayout.onMeasure(FrameLayout.java:293)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.policy.impl.PhoneWindow$DecorView.onMeasure(PhoneWindow.java:2092)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1064)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewRootImpl.handleMessage(ViewRootImpl.java:2442)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.Handler.dispatchMessage(Handler.java:99)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.Looper.loop(Looper.java:137)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.app.ActivityThread.main(ActivityThread.java:4424)
05-09 11:40:06.459: E/AndroidRuntime(544):  at java.lang.reflect.Method.invokeNative(Native Method)
05-09 11:40:06.459: E/AndroidRuntime(544):  at java.lang.reflect.Method.invoke(Method.java:511)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551)
05-09 11:40:06.459: E/AndroidRuntime(544):  at dalvik.system.NativeStart.main(Native Method)
05-09 11:40:06.478: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
05-09 11:40:06.768: D/dalvikvm(544): GC_CONCURRENT freed 159K, 3% free 10645K/10951K, paused 39ms+24ms
05-09 11:40:06.909: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:06.918: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
05-09 11:40:07.189: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:07.218: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
</code></pre>
","Contact True file"
"30084651","listview in Fragment","6","<p>Something wrong the XML,Please correct me and thank you in advance, below is the code?</p>

<p>Sorry i don't speak english 100/100.</p>

<pre><code>public class Les_agences
    extends Fragment {
        /* ****************************************** */
        /*              Les Variables                */
        /* ****************************************** */

    public String string_ip = ""192.168.42.168"";
    public Resources res;
    public JSONObject json;
    public ListView les_agence_tete_lsiteview;
    public TextView les_agence_tv_item_adresse;
    public TextView les_agence_tv_item_nom;
    public ImageView les_agences_iv_item_image;
    public ListView liste_view;
    ArrayList&lt;item_Les_agences_liste_view&gt; liste;
    item_Les_agences_liste_view item;
    JSONArray jsonoarray = null;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
            /* pour creer le fragment*/
        les_agence_tv_item_adresse = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
        les_agence_tv_item_nom = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
        les_agences_iv_item_image = (ImageView) getActivity().findViewById(R.id.les_agences_iv_item_image);
        View x = inflater.inflate(R.layout.les_agences, container, false);
        return x;
    }

    @Override
    public void onStart() {
        super.onStart();
        res = getResources();
    }

    @Override
    public void onResume() {
        super.onResume();
        connecter();
    }

    void connecter() {
        new AsyncTask&lt;Void, Void, Boolean&gt;() {
            ProgressDialog progress;

            @Override
            protected void onPreExecute() {
                super.onPreExecute();
                progress = ProgressDialog.show(getActivity(), res.getString(R.string.act2_connexion), res.getString(R.string.act2_attendre), false, false);
            }

            @Override
            protected Boolean doInBackground(Void... params) {
                thread processus = new thread();
                processus.setPaire(null);
                processus.seturl(""http://"" + string_ip + ""/agence_de_location/les_agences.php"");
                processus.start();
                try {
                    processus.join();
                } catch (InterruptedException e1) {
                    e1.printStackTrace();
                }
                json = processus.getJson();
                if (json == null) {
                    return (false);
                } else {
                    return (true);
                }
            }

            @Override
            protected void onPostExecute(Boolean result) {
                progress.dismiss();
                if (result == false) {
                    Toast.makeText(getActivity(), res.getString(R.string.act2_erreur_connexion), 10000).show();
                } else {
                    int val = 0;
                    try {
                        val = json.getInt(""val"");
                    } catch (JSONException e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                    }
                    if (val == 0) {
                        Toast.makeText(getActivity(), res.getString(R.string.act2_erreur_connexion), 10000).show();
                    } else {
                        /******************************************************** */
                                /*              Pour afficher les agences                 */
                        /******************************************************** */
                        // pour afficher    
                        liste = new ArrayList&lt;item_Les_agences_liste_view&gt;();
                        try {
                            jsonoarray = (JSONArray) json.get(""agence"");
                        } catch (JSONException e) {
                        }
                                    /* Yes return les champs  */
                        int indice;
                        item_Les_agences_liste_view item;
                        for (indice = 0; indice &lt;= jsonoarray.length() - 1; indice++) {

                                        /* new array , grand array agence 0 : 1 : 2 : ... 
                                         *petit array 0: .... 
                                         */
                            JSONObject petitearray = null;
                            try {
                                petitearray = jsonoarray.getJSONObject(indice);
                            } catch (JSONException e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                            }
                                        /* catch entre new class */
                            try {
                                Log.i(petitearray.getString(""nom_agence""), petitearray.getString(""nom_agence""));
                                item = new item_Les_agences_liste_view(petitearray.getString(""nom_agence""), petitearray.getString(""adresse_agence""), petitearray.getString(""image_agence""));
                                liste.add(item);
                            } catch (JSONException e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                            }
                        }
                    }
                }
                liste_view = (ListView) getActivity().findViewById(R.id.Les_agences_lv);
                Adapter_les_agences_list_view adapter = new Adapter_les_agences_list_view(getActivity().getApplicationContext(), liste);
                liste_view.setAdapter(adapter);
            }
        }.execute();
    }
    /******************************************************** */
        /*              class adapter                             */

    /**
     * *****************************************************
     */

    class Adapter_les_agences_list_view
        extends ArrayAdapter&lt;item_Les_agences_liste_view&gt; {

        private Context context;
        private ArrayList&lt;item_Les_agences_liste_view&gt; liste;

        public Adapter_les_agences_list_view(Context context, ArrayList&lt;item_Les_agences_liste_view&gt; liste) {
            super(context, R.layout.les_agences_liste_view, liste);
            this.context = context;
            this.liste = liste;
        }

        // le nombre des élements de la lsite 
        @Override
        public int getCount() {
            return liste.size();  // nmbre des element 
        }

        @Override
        public long getItemId(int position) {
            return position;
        }

        @Override
        public View getView(final int position, View convertView, ViewGroup parent) {
            View new_place = convertView;
            if (convertView == null)//adapter le 1er fois s 
            {
                // style
                LayoutInflater li = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                View rowView = li.inflate(R.layout.les_agences_liste_view, null);
            }
            les_agence_tv_item_adresse = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
            les_agence_tv_item_nom = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
            //les_agences_iv_item_image=(ImageView)convertView.findViewById(R.id.les_agences_iv_item_image);
            return convertView;
        }
    }
}
</code></pre>

<p>the file of network is true .</p>

<pre><code>public class Menu
    extends FragmentActivity {
    private ViewPager menu_viewpager;
    private android.support.v4.view.PagerAdapter pageradapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.menu);
        menu_viewpager = (ViewPager) findViewById(R.id.menu_viewpager);
        pageradapter = new Adapter_menu(getSupportFragmentManager());
        menu_viewpager.setAdapter(pageradapter);
    }

    @Override
    protected void onStart() {
        super.onStart();
        le_swap();
    }

    @Override
    protected void onResume() {
        super.onResume();
        TextView les_agence_tv_item_adresse = (TextView) findViewById(R.id.les_agence_tv_item_adresse);
        TextView les_agence_tv_item_nom = (TextView) findViewById(R.id.les_agence_tv_item_adresse);
        ImageView les_agences_iv_item_image = (ImageView) findViewById(R.id.les_agences_iv_item_image);
        les_agences_iv_item_image.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(Menu.this, ""ss"", 1000);
            }
        });
    }

    void le_swap() {
    }
}
</code></pre>

<p>the menu , main of programm</p>

<p>the menu , main of programm</p>

<pre><code>package PFD.agence_d_allocation;

import PFD.agence_d_allocation.R.string;
import android.R.integer;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.Fragment;
import android.content.res.Resources;
import android.graphics.Point;
import android.os.Bundle;
import android.provider.ContactsContract.CommonDataKinds.Event;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.app.FragmentStatePagerAdapter;
import android.support.v4.internal.view.SupportMenu;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.DisplayMetrics;
import android.util.Log;
import android.util.TypedValue;
import android.view.Display;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewDebug.IntToString;
import android.view.MotionEvent;
import android.view.ViewTreeObserver;
import android.view.Window;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import android.widget.ViewFlipper;
public class Menu extends FragmentActivity  {
    private ViewPager menu_viewpager ; 
    private android.support.v4.view.PagerAdapter pageradapter;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.menu);

        menu_viewpager = (ViewPager) findViewById(R.id.menu_viewpager);
        pageradapter = new Adapter_menu(getSupportFragmentManager());
        menu_viewpager.setAdapter(pageradapter);


    }


    @Override
    protected void onStart() {
        super.onStart();
        le_swap();
    }

    @Override
    protected void onResume() {

        super.onResume();



    }




    void le_swap()
    {

    }








}
</code></pre>

<p>the log cat </p>

<pre><code>05-09 11:40:06.158: D/dalvikvm(544): GC_FOR_ALLOC freed 3K, 3% free 10326K/10631K, paused 41ms
05-09 11:40:06.348: D/AndroidRuntime(544): Shutting down VM
05-09 11:40:06.348: W/dalvikvm(544): threadid=1: thread exiting with uncaught exception (group=0x409c01f8)
05-09 11:40:06.408: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:06.459: E/AndroidRuntime(544): FATAL EXCEPTION: main
05-09 11:40:06.459: E/AndroidRuntime(544): java.lang.NullPointerException
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences$1.onPreExecute(Les_agences.java:94)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.AsyncTask.executeOnExecutor(AsyncTask.java:561)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.AsyncTask.execute(AsyncTask.java:511)
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences.connecter(Les_agences.java:204)
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences.onCreateView(Les_agences.java:56)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.Fragment.performCreateView(Fragment.java:1789)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:955)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1138)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:740)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1501)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.executePendingTransactions(FragmentManager.java:490)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentPagerAdapter.finishUpdate(FragmentPagerAdapter.java:141)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.populate(ViewPager.java:1072)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.populate(ViewPager.java:918)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.onMeasure(ViewPager.java:1440)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureVertical(LinearLayout.java:812)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.onMeasure(LinearLayout.java:553)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.FrameLayout.onMeasure(FrameLayout.java:293)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1369)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureVertical(LinearLayout.java:660)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.onMeasure(LinearLayout.java:553)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.FrameLayout.onMeasure(FrameLayout.java:293)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.policy.impl.PhoneWindow$DecorView.onMeasure(PhoneWindow.java:2092)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1064)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewRootImpl.handleMessage(ViewRootImpl.java:2442)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.Handler.dispatchMessage(Handler.java:99)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.Looper.loop(Looper.java:137)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.app.ActivityThread.main(ActivityThread.java:4424)
05-09 11:40:06.459: E/AndroidRuntime(544):  at java.lang.reflect.Method.invokeNative(Native Method)
05-09 11:40:06.459: E/AndroidRuntime(544):  at java.lang.reflect.Method.invoke(Method.java:511)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551)
05-09 11:40:06.459: E/AndroidRuntime(544):  at dalvik.system.NativeStart.main(Native Method)
05-09 11:40:06.478: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
05-09 11:40:06.768: D/dalvikvm(544): GC_CONCURRENT freed 159K, 3% free 10645K/10951K, paused 39ms+24ms
05-09 11:40:06.909: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:06.918: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
05-09 11:40:07.189: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:07.218: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
</code></pre>
","Brahimce i'm trying to help you but i don't understand you"
"30084651","listview in Fragment","6","<p>Something wrong the XML,Please correct me and thank you in advance, below is the code?</p>

<p>Sorry i don't speak english 100/100.</p>

<pre><code>public class Les_agences
    extends Fragment {
        /* ****************************************** */
        /*              Les Variables                */
        /* ****************************************** */

    public String string_ip = ""192.168.42.168"";
    public Resources res;
    public JSONObject json;
    public ListView les_agence_tete_lsiteview;
    public TextView les_agence_tv_item_adresse;
    public TextView les_agence_tv_item_nom;
    public ImageView les_agences_iv_item_image;
    public ListView liste_view;
    ArrayList&lt;item_Les_agences_liste_view&gt; liste;
    item_Les_agences_liste_view item;
    JSONArray jsonoarray = null;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
            /* pour creer le fragment*/
        les_agence_tv_item_adresse = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
        les_agence_tv_item_nom = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
        les_agences_iv_item_image = (ImageView) getActivity().findViewById(R.id.les_agences_iv_item_image);
        View x = inflater.inflate(R.layout.les_agences, container, false);
        return x;
    }

    @Override
    public void onStart() {
        super.onStart();
        res = getResources();
    }

    @Override
    public void onResume() {
        super.onResume();
        connecter();
    }

    void connecter() {
        new AsyncTask&lt;Void, Void, Boolean&gt;() {
            ProgressDialog progress;

            @Override
            protected void onPreExecute() {
                super.onPreExecute();
                progress = ProgressDialog.show(getActivity(), res.getString(R.string.act2_connexion), res.getString(R.string.act2_attendre), false, false);
            }

            @Override
            protected Boolean doInBackground(Void... params) {
                thread processus = new thread();
                processus.setPaire(null);
                processus.seturl(""http://"" + string_ip + ""/agence_de_location/les_agences.php"");
                processus.start();
                try {
                    processus.join();
                } catch (InterruptedException e1) {
                    e1.printStackTrace();
                }
                json = processus.getJson();
                if (json == null) {
                    return (false);
                } else {
                    return (true);
                }
            }

            @Override
            protected void onPostExecute(Boolean result) {
                progress.dismiss();
                if (result == false) {
                    Toast.makeText(getActivity(), res.getString(R.string.act2_erreur_connexion), 10000).show();
                } else {
                    int val = 0;
                    try {
                        val = json.getInt(""val"");
                    } catch (JSONException e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                    }
                    if (val == 0) {
                        Toast.makeText(getActivity(), res.getString(R.string.act2_erreur_connexion), 10000).show();
                    } else {
                        /******************************************************** */
                                /*              Pour afficher les agences                 */
                        /******************************************************** */
                        // pour afficher    
                        liste = new ArrayList&lt;item_Les_agences_liste_view&gt;();
                        try {
                            jsonoarray = (JSONArray) json.get(""agence"");
                        } catch (JSONException e) {
                        }
                                    /* Yes return les champs  */
                        int indice;
                        item_Les_agences_liste_view item;
                        for (indice = 0; indice &lt;= jsonoarray.length() - 1; indice++) {

                                        /* new array , grand array agence 0 : 1 : 2 : ... 
                                         *petit array 0: .... 
                                         */
                            JSONObject petitearray = null;
                            try {
                                petitearray = jsonoarray.getJSONObject(indice);
                            } catch (JSONException e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                            }
                                        /* catch entre new class */
                            try {
                                Log.i(petitearray.getString(""nom_agence""), petitearray.getString(""nom_agence""));
                                item = new item_Les_agences_liste_view(petitearray.getString(""nom_agence""), petitearray.getString(""adresse_agence""), petitearray.getString(""image_agence""));
                                liste.add(item);
                            } catch (JSONException e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                            }
                        }
                    }
                }
                liste_view = (ListView) getActivity().findViewById(R.id.Les_agences_lv);
                Adapter_les_agences_list_view adapter = new Adapter_les_agences_list_view(getActivity().getApplicationContext(), liste);
                liste_view.setAdapter(adapter);
            }
        }.execute();
    }
    /******************************************************** */
        /*              class adapter                             */

    /**
     * *****************************************************
     */

    class Adapter_les_agences_list_view
        extends ArrayAdapter&lt;item_Les_agences_liste_view&gt; {

        private Context context;
        private ArrayList&lt;item_Les_agences_liste_view&gt; liste;

        public Adapter_les_agences_list_view(Context context, ArrayList&lt;item_Les_agences_liste_view&gt; liste) {
            super(context, R.layout.les_agences_liste_view, liste);
            this.context = context;
            this.liste = liste;
        }

        // le nombre des élements de la lsite 
        @Override
        public int getCount() {
            return liste.size();  // nmbre des element 
        }

        @Override
        public long getItemId(int position) {
            return position;
        }

        @Override
        public View getView(final int position, View convertView, ViewGroup parent) {
            View new_place = convertView;
            if (convertView == null)//adapter le 1er fois s 
            {
                // style
                LayoutInflater li = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                View rowView = li.inflate(R.layout.les_agences_liste_view, null);
            }
            les_agence_tv_item_adresse = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
            les_agence_tv_item_nom = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
            //les_agences_iv_item_image=(ImageView)convertView.findViewById(R.id.les_agences_iv_item_image);
            return convertView;
        }
    }
}
</code></pre>

<p>the file of network is true .</p>

<pre><code>public class Menu
    extends FragmentActivity {
    private ViewPager menu_viewpager;
    private android.support.v4.view.PagerAdapter pageradapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.menu);
        menu_viewpager = (ViewPager) findViewById(R.id.menu_viewpager);
        pageradapter = new Adapter_menu(getSupportFragmentManager());
        menu_viewpager.setAdapter(pageradapter);
    }

    @Override
    protected void onStart() {
        super.onStart();
        le_swap();
    }

    @Override
    protected void onResume() {
        super.onResume();
        TextView les_agence_tv_item_adresse = (TextView) findViewById(R.id.les_agence_tv_item_adresse);
        TextView les_agence_tv_item_nom = (TextView) findViewById(R.id.les_agence_tv_item_adresse);
        ImageView les_agences_iv_item_image = (ImageView) findViewById(R.id.les_agences_iv_item_image);
        les_agences_iv_item_image.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(Menu.this, ""ss"", 1000);
            }
        });
    }

    void le_swap() {
    }
}
</code></pre>

<p>the menu , main of programm</p>

<p>the menu , main of programm</p>

<pre><code>package PFD.agence_d_allocation;

import PFD.agence_d_allocation.R.string;
import android.R.integer;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.Fragment;
import android.content.res.Resources;
import android.graphics.Point;
import android.os.Bundle;
import android.provider.ContactsContract.CommonDataKinds.Event;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.app.FragmentStatePagerAdapter;
import android.support.v4.internal.view.SupportMenu;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.DisplayMetrics;
import android.util.Log;
import android.util.TypedValue;
import android.view.Display;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewDebug.IntToString;
import android.view.MotionEvent;
import android.view.ViewTreeObserver;
import android.view.Window;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import android.widget.ViewFlipper;
public class Menu extends FragmentActivity  {
    private ViewPager menu_viewpager ; 
    private android.support.v4.view.PagerAdapter pageradapter;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.menu);

        menu_viewpager = (ViewPager) findViewById(R.id.menu_viewpager);
        pageradapter = new Adapter_menu(getSupportFragmentManager());
        menu_viewpager.setAdapter(pageradapter);


    }


    @Override
    protected void onStart() {
        super.onStart();
        le_swap();
    }

    @Override
    protected void onResume() {

        super.onResume();



    }




    void le_swap()
    {

    }








}
</code></pre>

<p>the log cat </p>

<pre><code>05-09 11:40:06.158: D/dalvikvm(544): GC_FOR_ALLOC freed 3K, 3% free 10326K/10631K, paused 41ms
05-09 11:40:06.348: D/AndroidRuntime(544): Shutting down VM
05-09 11:40:06.348: W/dalvikvm(544): threadid=1: thread exiting with uncaught exception (group=0x409c01f8)
05-09 11:40:06.408: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:06.459: E/AndroidRuntime(544): FATAL EXCEPTION: main
05-09 11:40:06.459: E/AndroidRuntime(544): java.lang.NullPointerException
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences$1.onPreExecute(Les_agences.java:94)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.AsyncTask.executeOnExecutor(AsyncTask.java:561)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.AsyncTask.execute(AsyncTask.java:511)
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences.connecter(Les_agences.java:204)
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences.onCreateView(Les_agences.java:56)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.Fragment.performCreateView(Fragment.java:1789)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:955)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1138)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:740)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1501)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.executePendingTransactions(FragmentManager.java:490)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentPagerAdapter.finishUpdate(FragmentPagerAdapter.java:141)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.populate(ViewPager.java:1072)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.populate(ViewPager.java:918)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.onMeasure(ViewPager.java:1440)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureVertical(LinearLayout.java:812)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.onMeasure(LinearLayout.java:553)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.FrameLayout.onMeasure(FrameLayout.java:293)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1369)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureVertical(LinearLayout.java:660)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.onMeasure(LinearLayout.java:553)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.FrameLayout.onMeasure(FrameLayout.java:293)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.policy.impl.PhoneWindow$DecorView.onMeasure(PhoneWindow.java:2092)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1064)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewRootImpl.handleMessage(ViewRootImpl.java:2442)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.Handler.dispatchMessage(Handler.java:99)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.Looper.loop(Looper.java:137)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.app.ActivityThread.main(ActivityThread.java:4424)
05-09 11:40:06.459: E/AndroidRuntime(544):  at java.lang.reflect.Method.invokeNative(Native Method)
05-09 11:40:06.459: E/AndroidRuntime(544):  at java.lang.reflect.Method.invoke(Method.java:511)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551)
05-09 11:40:06.459: E/AndroidRuntime(544):  at dalvik.system.NativeStart.main(Native Method)
05-09 11:40:06.478: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
05-09 11:40:06.768: D/dalvikvm(544): GC_CONCURRENT freed 159K, 3% free 10645K/10951K, paused 39ms+24ms
05-09 11:40:06.909: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:06.918: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
05-09 11:40:07.189: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:07.218: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
</code></pre>
","please use https://translate.google.com/ I don't understand you"
"30084651","listview in Fragment","6","<p>Something wrong the XML,Please correct me and thank you in advance, below is the code?</p>

<p>Sorry i don't speak english 100/100.</p>

<pre><code>public class Les_agences
    extends Fragment {
        /* ****************************************** */
        /*              Les Variables                */
        /* ****************************************** */

    public String string_ip = ""192.168.42.168"";
    public Resources res;
    public JSONObject json;
    public ListView les_agence_tete_lsiteview;
    public TextView les_agence_tv_item_adresse;
    public TextView les_agence_tv_item_nom;
    public ImageView les_agences_iv_item_image;
    public ListView liste_view;
    ArrayList&lt;item_Les_agences_liste_view&gt; liste;
    item_Les_agences_liste_view item;
    JSONArray jsonoarray = null;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
            /* pour creer le fragment*/
        les_agence_tv_item_adresse = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
        les_agence_tv_item_nom = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
        les_agences_iv_item_image = (ImageView) getActivity().findViewById(R.id.les_agences_iv_item_image);
        View x = inflater.inflate(R.layout.les_agences, container, false);
        return x;
    }

    @Override
    public void onStart() {
        super.onStart();
        res = getResources();
    }

    @Override
    public void onResume() {
        super.onResume();
        connecter();
    }

    void connecter() {
        new AsyncTask&lt;Void, Void, Boolean&gt;() {
            ProgressDialog progress;

            @Override
            protected void onPreExecute() {
                super.onPreExecute();
                progress = ProgressDialog.show(getActivity(), res.getString(R.string.act2_connexion), res.getString(R.string.act2_attendre), false, false);
            }

            @Override
            protected Boolean doInBackground(Void... params) {
                thread processus = new thread();
                processus.setPaire(null);
                processus.seturl(""http://"" + string_ip + ""/agence_de_location/les_agences.php"");
                processus.start();
                try {
                    processus.join();
                } catch (InterruptedException e1) {
                    e1.printStackTrace();
                }
                json = processus.getJson();
                if (json == null) {
                    return (false);
                } else {
                    return (true);
                }
            }

            @Override
            protected void onPostExecute(Boolean result) {
                progress.dismiss();
                if (result == false) {
                    Toast.makeText(getActivity(), res.getString(R.string.act2_erreur_connexion), 10000).show();
                } else {
                    int val = 0;
                    try {
                        val = json.getInt(""val"");
                    } catch (JSONException e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                    }
                    if (val == 0) {
                        Toast.makeText(getActivity(), res.getString(R.string.act2_erreur_connexion), 10000).show();
                    } else {
                        /******************************************************** */
                                /*              Pour afficher les agences                 */
                        /******************************************************** */
                        // pour afficher    
                        liste = new ArrayList&lt;item_Les_agences_liste_view&gt;();
                        try {
                            jsonoarray = (JSONArray) json.get(""agence"");
                        } catch (JSONException e) {
                        }
                                    /* Yes return les champs  */
                        int indice;
                        item_Les_agences_liste_view item;
                        for (indice = 0; indice &lt;= jsonoarray.length() - 1; indice++) {

                                        /* new array , grand array agence 0 : 1 : 2 : ... 
                                         *petit array 0: .... 
                                         */
                            JSONObject petitearray = null;
                            try {
                                petitearray = jsonoarray.getJSONObject(indice);
                            } catch (JSONException e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                            }
                                        /* catch entre new class */
                            try {
                                Log.i(petitearray.getString(""nom_agence""), petitearray.getString(""nom_agence""));
                                item = new item_Les_agences_liste_view(petitearray.getString(""nom_agence""), petitearray.getString(""adresse_agence""), petitearray.getString(""image_agence""));
                                liste.add(item);
                            } catch (JSONException e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                            }
                        }
                    }
                }
                liste_view = (ListView) getActivity().findViewById(R.id.Les_agences_lv);
                Adapter_les_agences_list_view adapter = new Adapter_les_agences_list_view(getActivity().getApplicationContext(), liste);
                liste_view.setAdapter(adapter);
            }
        }.execute();
    }
    /******************************************************** */
        /*              class adapter                             */

    /**
     * *****************************************************
     */

    class Adapter_les_agences_list_view
        extends ArrayAdapter&lt;item_Les_agences_liste_view&gt; {

        private Context context;
        private ArrayList&lt;item_Les_agences_liste_view&gt; liste;

        public Adapter_les_agences_list_view(Context context, ArrayList&lt;item_Les_agences_liste_view&gt; liste) {
            super(context, R.layout.les_agences_liste_view, liste);
            this.context = context;
            this.liste = liste;
        }

        // le nombre des élements de la lsite 
        @Override
        public int getCount() {
            return liste.size();  // nmbre des element 
        }

        @Override
        public long getItemId(int position) {
            return position;
        }

        @Override
        public View getView(final int position, View convertView, ViewGroup parent) {
            View new_place = convertView;
            if (convertView == null)//adapter le 1er fois s 
            {
                // style
                LayoutInflater li = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                View rowView = li.inflate(R.layout.les_agences_liste_view, null);
            }
            les_agence_tv_item_adresse = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
            les_agence_tv_item_nom = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
            //les_agences_iv_item_image=(ImageView)convertView.findViewById(R.id.les_agences_iv_item_image);
            return convertView;
        }
    }
}
</code></pre>

<p>the file of network is true .</p>

<pre><code>public class Menu
    extends FragmentActivity {
    private ViewPager menu_viewpager;
    private android.support.v4.view.PagerAdapter pageradapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.menu);
        menu_viewpager = (ViewPager) findViewById(R.id.menu_viewpager);
        pageradapter = new Adapter_menu(getSupportFragmentManager());
        menu_viewpager.setAdapter(pageradapter);
    }

    @Override
    protected void onStart() {
        super.onStart();
        le_swap();
    }

    @Override
    protected void onResume() {
        super.onResume();
        TextView les_agence_tv_item_adresse = (TextView) findViewById(R.id.les_agence_tv_item_adresse);
        TextView les_agence_tv_item_nom = (TextView) findViewById(R.id.les_agence_tv_item_adresse);
        ImageView les_agences_iv_item_image = (ImageView) findViewById(R.id.les_agences_iv_item_image);
        les_agences_iv_item_image.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(Menu.this, ""ss"", 1000);
            }
        });
    }

    void le_swap() {
    }
}
</code></pre>

<p>the menu , main of programm</p>

<p>the menu , main of programm</p>

<pre><code>package PFD.agence_d_allocation;

import PFD.agence_d_allocation.R.string;
import android.R.integer;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.Fragment;
import android.content.res.Resources;
import android.graphics.Point;
import android.os.Bundle;
import android.provider.ContactsContract.CommonDataKinds.Event;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.app.FragmentStatePagerAdapter;
import android.support.v4.internal.view.SupportMenu;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.DisplayMetrics;
import android.util.Log;
import android.util.TypedValue;
import android.view.Display;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewDebug.IntToString;
import android.view.MotionEvent;
import android.view.ViewTreeObserver;
import android.view.Window;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import android.widget.ViewFlipper;
public class Menu extends FragmentActivity  {
    private ViewPager menu_viewpager ; 
    private android.support.v4.view.PagerAdapter pageradapter;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.menu);

        menu_viewpager = (ViewPager) findViewById(R.id.menu_viewpager);
        pageradapter = new Adapter_menu(getSupportFragmentManager());
        menu_viewpager.setAdapter(pageradapter);


    }


    @Override
    protected void onStart() {
        super.onStart();
        le_swap();
    }

    @Override
    protected void onResume() {

        super.onResume();



    }




    void le_swap()
    {

    }








}
</code></pre>

<p>the log cat </p>

<pre><code>05-09 11:40:06.158: D/dalvikvm(544): GC_FOR_ALLOC freed 3K, 3% free 10326K/10631K, paused 41ms
05-09 11:40:06.348: D/AndroidRuntime(544): Shutting down VM
05-09 11:40:06.348: W/dalvikvm(544): threadid=1: thread exiting with uncaught exception (group=0x409c01f8)
05-09 11:40:06.408: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:06.459: E/AndroidRuntime(544): FATAL EXCEPTION: main
05-09 11:40:06.459: E/AndroidRuntime(544): java.lang.NullPointerException
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences$1.onPreExecute(Les_agences.java:94)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.AsyncTask.executeOnExecutor(AsyncTask.java:561)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.AsyncTask.execute(AsyncTask.java:511)
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences.connecter(Les_agences.java:204)
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences.onCreateView(Les_agences.java:56)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.Fragment.performCreateView(Fragment.java:1789)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:955)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1138)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:740)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1501)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.executePendingTransactions(FragmentManager.java:490)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentPagerAdapter.finishUpdate(FragmentPagerAdapter.java:141)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.populate(ViewPager.java:1072)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.populate(ViewPager.java:918)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.onMeasure(ViewPager.java:1440)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureVertical(LinearLayout.java:812)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.onMeasure(LinearLayout.java:553)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.FrameLayout.onMeasure(FrameLayout.java:293)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1369)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureVertical(LinearLayout.java:660)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.onMeasure(LinearLayout.java:553)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.FrameLayout.onMeasure(FrameLayout.java:293)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.policy.impl.PhoneWindow$DecorView.onMeasure(PhoneWindow.java:2092)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1064)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewRootImpl.handleMessage(ViewRootImpl.java:2442)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.Handler.dispatchMessage(Handler.java:99)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.Looper.loop(Looper.java:137)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.app.ActivityThread.main(ActivityThread.java:4424)
05-09 11:40:06.459: E/AndroidRuntime(544):  at java.lang.reflect.Method.invokeNative(Native Method)
05-09 11:40:06.459: E/AndroidRuntime(544):  at java.lang.reflect.Method.invoke(Method.java:511)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551)
05-09 11:40:06.459: E/AndroidRuntime(544):  at dalvik.system.NativeStart.main(Native Method)
05-09 11:40:06.478: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
05-09 11:40:06.768: D/dalvikvm(544): GC_CONCURRENT freed 159K, 3% free 10645K/10951K, paused 39ms+24ms
05-09 11:40:06.909: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:06.918: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
05-09 11:40:07.189: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:07.218: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
</code></pre>
","the Networkmain True 100/100"
"30084651","listview in Fragment","6","<p>Something wrong the XML,Please correct me and thank you in advance, below is the code?</p>

<p>Sorry i don't speak english 100/100.</p>

<pre><code>public class Les_agences
    extends Fragment {
        /* ****************************************** */
        /*              Les Variables                */
        /* ****************************************** */

    public String string_ip = ""192.168.42.168"";
    public Resources res;
    public JSONObject json;
    public ListView les_agence_tete_lsiteview;
    public TextView les_agence_tv_item_adresse;
    public TextView les_agence_tv_item_nom;
    public ImageView les_agences_iv_item_image;
    public ListView liste_view;
    ArrayList&lt;item_Les_agences_liste_view&gt; liste;
    item_Les_agences_liste_view item;
    JSONArray jsonoarray = null;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
            /* pour creer le fragment*/
        les_agence_tv_item_adresse = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
        les_agence_tv_item_nom = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
        les_agences_iv_item_image = (ImageView) getActivity().findViewById(R.id.les_agences_iv_item_image);
        View x = inflater.inflate(R.layout.les_agences, container, false);
        return x;
    }

    @Override
    public void onStart() {
        super.onStart();
        res = getResources();
    }

    @Override
    public void onResume() {
        super.onResume();
        connecter();
    }

    void connecter() {
        new AsyncTask&lt;Void, Void, Boolean&gt;() {
            ProgressDialog progress;

            @Override
            protected void onPreExecute() {
                super.onPreExecute();
                progress = ProgressDialog.show(getActivity(), res.getString(R.string.act2_connexion), res.getString(R.string.act2_attendre), false, false);
            }

            @Override
            protected Boolean doInBackground(Void... params) {
                thread processus = new thread();
                processus.setPaire(null);
                processus.seturl(""http://"" + string_ip + ""/agence_de_location/les_agences.php"");
                processus.start();
                try {
                    processus.join();
                } catch (InterruptedException e1) {
                    e1.printStackTrace();
                }
                json = processus.getJson();
                if (json == null) {
                    return (false);
                } else {
                    return (true);
                }
            }

            @Override
            protected void onPostExecute(Boolean result) {
                progress.dismiss();
                if (result == false) {
                    Toast.makeText(getActivity(), res.getString(R.string.act2_erreur_connexion), 10000).show();
                } else {
                    int val = 0;
                    try {
                        val = json.getInt(""val"");
                    } catch (JSONException e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                    }
                    if (val == 0) {
                        Toast.makeText(getActivity(), res.getString(R.string.act2_erreur_connexion), 10000).show();
                    } else {
                        /******************************************************** */
                                /*              Pour afficher les agences                 */
                        /******************************************************** */
                        // pour afficher    
                        liste = new ArrayList&lt;item_Les_agences_liste_view&gt;();
                        try {
                            jsonoarray = (JSONArray) json.get(""agence"");
                        } catch (JSONException e) {
                        }
                                    /* Yes return les champs  */
                        int indice;
                        item_Les_agences_liste_view item;
                        for (indice = 0; indice &lt;= jsonoarray.length() - 1; indice++) {

                                        /* new array , grand array agence 0 : 1 : 2 : ... 
                                         *petit array 0: .... 
                                         */
                            JSONObject petitearray = null;
                            try {
                                petitearray = jsonoarray.getJSONObject(indice);
                            } catch (JSONException e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                            }
                                        /* catch entre new class */
                            try {
                                Log.i(petitearray.getString(""nom_agence""), petitearray.getString(""nom_agence""));
                                item = new item_Les_agences_liste_view(petitearray.getString(""nom_agence""), petitearray.getString(""adresse_agence""), petitearray.getString(""image_agence""));
                                liste.add(item);
                            } catch (JSONException e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                            }
                        }
                    }
                }
                liste_view = (ListView) getActivity().findViewById(R.id.Les_agences_lv);
                Adapter_les_agences_list_view adapter = new Adapter_les_agences_list_view(getActivity().getApplicationContext(), liste);
                liste_view.setAdapter(adapter);
            }
        }.execute();
    }
    /******************************************************** */
        /*              class adapter                             */

    /**
     * *****************************************************
     */

    class Adapter_les_agences_list_view
        extends ArrayAdapter&lt;item_Les_agences_liste_view&gt; {

        private Context context;
        private ArrayList&lt;item_Les_agences_liste_view&gt; liste;

        public Adapter_les_agences_list_view(Context context, ArrayList&lt;item_Les_agences_liste_view&gt; liste) {
            super(context, R.layout.les_agences_liste_view, liste);
            this.context = context;
            this.liste = liste;
        }

        // le nombre des élements de la lsite 
        @Override
        public int getCount() {
            return liste.size();  // nmbre des element 
        }

        @Override
        public long getItemId(int position) {
            return position;
        }

        @Override
        public View getView(final int position, View convertView, ViewGroup parent) {
            View new_place = convertView;
            if (convertView == null)//adapter le 1er fois s 
            {
                // style
                LayoutInflater li = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                View rowView = li.inflate(R.layout.les_agences_liste_view, null);
            }
            les_agence_tv_item_adresse = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
            les_agence_tv_item_nom = (TextView) getActivity().findViewById(R.id.les_agence_tv_item_adresse);
            //les_agences_iv_item_image=(ImageView)convertView.findViewById(R.id.les_agences_iv_item_image);
            return convertView;
        }
    }
}
</code></pre>

<p>the file of network is true .</p>

<pre><code>public class Menu
    extends FragmentActivity {
    private ViewPager menu_viewpager;
    private android.support.v4.view.PagerAdapter pageradapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.menu);
        menu_viewpager = (ViewPager) findViewById(R.id.menu_viewpager);
        pageradapter = new Adapter_menu(getSupportFragmentManager());
        menu_viewpager.setAdapter(pageradapter);
    }

    @Override
    protected void onStart() {
        super.onStart();
        le_swap();
    }

    @Override
    protected void onResume() {
        super.onResume();
        TextView les_agence_tv_item_adresse = (TextView) findViewById(R.id.les_agence_tv_item_adresse);
        TextView les_agence_tv_item_nom = (TextView) findViewById(R.id.les_agence_tv_item_adresse);
        ImageView les_agences_iv_item_image = (ImageView) findViewById(R.id.les_agences_iv_item_image);
        les_agences_iv_item_image.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(Menu.this, ""ss"", 1000);
            }
        });
    }

    void le_swap() {
    }
}
</code></pre>

<p>the menu , main of programm</p>

<p>the menu , main of programm</p>

<pre><code>package PFD.agence_d_allocation;

import PFD.agence_d_allocation.R.string;
import android.R.integer;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.Fragment;
import android.content.res.Resources;
import android.graphics.Point;
import android.os.Bundle;
import android.provider.ContactsContract.CommonDataKinds.Event;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.app.FragmentStatePagerAdapter;
import android.support.v4.internal.view.SupportMenu;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.DisplayMetrics;
import android.util.Log;
import android.util.TypedValue;
import android.view.Display;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewDebug.IntToString;
import android.view.MotionEvent;
import android.view.ViewTreeObserver;
import android.view.Window;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import android.widget.ViewFlipper;
public class Menu extends FragmentActivity  {
    private ViewPager menu_viewpager ; 
    private android.support.v4.view.PagerAdapter pageradapter;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.menu);

        menu_viewpager = (ViewPager) findViewById(R.id.menu_viewpager);
        pageradapter = new Adapter_menu(getSupportFragmentManager());
        menu_viewpager.setAdapter(pageradapter);


    }


    @Override
    protected void onStart() {
        super.onStart();
        le_swap();
    }

    @Override
    protected void onResume() {

        super.onResume();



    }




    void le_swap()
    {

    }








}
</code></pre>

<p>the log cat </p>

<pre><code>05-09 11:40:06.158: D/dalvikvm(544): GC_FOR_ALLOC freed 3K, 3% free 10326K/10631K, paused 41ms
05-09 11:40:06.348: D/AndroidRuntime(544): Shutting down VM
05-09 11:40:06.348: W/dalvikvm(544): threadid=1: thread exiting with uncaught exception (group=0x409c01f8)
05-09 11:40:06.408: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:06.459: E/AndroidRuntime(544): FATAL EXCEPTION: main
05-09 11:40:06.459: E/AndroidRuntime(544): java.lang.NullPointerException
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences$1.onPreExecute(Les_agences.java:94)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.AsyncTask.executeOnExecutor(AsyncTask.java:561)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.AsyncTask.execute(AsyncTask.java:511)
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences.connecter(Les_agences.java:204)
05-09 11:40:06.459: E/AndroidRuntime(544):  at PFD.agence_d_allocation.Les_agences.onCreateView(Les_agences.java:56)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.Fragment.performCreateView(Fragment.java:1789)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:955)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1138)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:740)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1501)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentManagerImpl.executePendingTransactions(FragmentManager.java:490)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.app.FragmentPagerAdapter.finishUpdate(FragmentPagerAdapter.java:141)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.populate(ViewPager.java:1072)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.populate(ViewPager.java:918)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.support.v4.view.ViewPager.onMeasure(ViewPager.java:1440)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureVertical(LinearLayout.java:812)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.onMeasure(LinearLayout.java:553)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.FrameLayout.onMeasure(FrameLayout.java:293)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1369)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.measureVertical(LinearLayout.java:660)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.LinearLayout.onMeasure(LinearLayout.java:553)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:4698)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.widget.FrameLayout.onMeasure(FrameLayout.java:293)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.policy.impl.PhoneWindow$DecorView.onMeasure(PhoneWindow.java:2092)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.View.measure(View.java:12723)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1064)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.view.ViewRootImpl.handleMessage(ViewRootImpl.java:2442)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.Handler.dispatchMessage(Handler.java:99)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.os.Looper.loop(Looper.java:137)
05-09 11:40:06.459: E/AndroidRuntime(544):  at android.app.ActivityThread.main(ActivityThread.java:4424)
05-09 11:40:06.459: E/AndroidRuntime(544):  at java.lang.reflect.Method.invokeNative(Native Method)
05-09 11:40:06.459: E/AndroidRuntime(544):  at java.lang.reflect.Method.invoke(Method.java:511)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784)
05-09 11:40:06.459: E/AndroidRuntime(544):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551)
05-09 11:40:06.459: E/AndroidRuntime(544):  at dalvik.system.NativeStart.main(Native Method)
05-09 11:40:06.478: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
05-09 11:40:06.768: D/dalvikvm(544): GC_CONCURRENT freed 159K, 3% free 10645K/10951K, paused 39ms+24ms
05-09 11:40:06.909: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:06.918: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
05-09 11:40:07.189: I/dalvikvm(544): threadid=3: reacting to signal 3
05-09 11:40:07.218: I/dalvikvm(544): Wrote stack traces to '/data/anr/traces.txt'
</code></pre>
","if there is an error, you need to specify where the error is, or show the stacktrace (logcat)."
"31156310","React.Addons.CreateFragment issues","2","<p>We recently did an upgrade of React to 0.13, and this little warning starts popping up: </p>

<p>Warning: Any use of a keyed object should be wrapped in React.addons.createFragment(object) before being passed as a child.</p>

<p>Here is my code, tried to figure out how to use the createFragment, but couldnt really find any good examples on how to do it when wrapping elements from this.props.children.</p>

<p>This.props.children will in my case be other React components that should be wrapped in an li. Have any of you seen or solved this issue before?</p>

<pre><code>import React from 'react';

module.exports = React.createClass({
  displayName: ""public/src/scripts/components/info-block/infoItem.js"",
  propTypes: {
    label: React.PropTypes.string,
    children: React.PropTypes.any
  },
  renderChildren: function(){
    var elementsToRender = [].concat(this.props.children);

    return elementsToRender.map(function(elem, i){
      return &lt;li key={i}&gt;{elem}&lt;/li&gt;
    });
  },
  render : function(){
    return (
      &lt;li&gt;
        &lt;span className=""ll""&gt;{this.props.label}&lt;/span&gt;
        &lt;span className=""lr""&gt;
          &lt;ul&gt;
            {this.renderChildren()}
          &lt;/ul&gt;
        &lt;/span&gt;
      &lt;/li&gt;
    );
  }
});
</code></pre>

<p>I tried switching the renderChildren method to this:</p>

<pre><code>renderChildren: function(){
  return React.Children.map(this.props.children, function(elem){
    return React.addons.createFragment({value: &lt;li&gt;{elem}&lt;/li&gt;});
  });
}
</code></pre>

<p>It will render then, but i still get the warning</p>
","is `{elem}` a plain string? I got same error when  trying to render a javascript object without a JSON.stringify(obj) applied to it."
"31156310","React.Addons.CreateFragment issues","2","<p>We recently did an upgrade of React to 0.13, and this little warning starts popping up: </p>

<p>Warning: Any use of a keyed object should be wrapped in React.addons.createFragment(object) before being passed as a child.</p>

<p>Here is my code, tried to figure out how to use the createFragment, but couldnt really find any good examples on how to do it when wrapping elements from this.props.children.</p>

<p>This.props.children will in my case be other React components that should be wrapped in an li. Have any of you seen or solved this issue before?</p>

<pre><code>import React from 'react';

module.exports = React.createClass({
  displayName: ""public/src/scripts/components/info-block/infoItem.js"",
  propTypes: {
    label: React.PropTypes.string,
    children: React.PropTypes.any
  },
  renderChildren: function(){
    var elementsToRender = [].concat(this.props.children);

    return elementsToRender.map(function(elem, i){
      return &lt;li key={i}&gt;{elem}&lt;/li&gt;
    });
  },
  render : function(){
    return (
      &lt;li&gt;
        &lt;span className=""ll""&gt;{this.props.label}&lt;/span&gt;
        &lt;span className=""lr""&gt;
          &lt;ul&gt;
            {this.renderChildren()}
          &lt;/ul&gt;
        &lt;/span&gt;
      &lt;/li&gt;
    );
  }
});
</code></pre>

<p>I tried switching the renderChildren method to this:</p>

<pre><code>renderChildren: function(){
  return React.Children.map(this.props.children, function(elem){
    return React.addons.createFragment({value: &lt;li&gt;{elem}&lt;/li&gt;});
  });
}
</code></pre>

<p>It will render then, but i still get the warning</p>
","Ive had it happening both on strings and when this.props.children contains other react components"
"34512794","reactjs and rendering plain HTML","2","<p>First of all I'm totally new to react so I'm not sure if my code is already written the ""react way"".</p>

<p>So far I've created a couple of react classes which render a Bootstrap Modal. To set the initial states I call an Ajax function within the <code>componentsDidMount</code> function. This works fine until I try to insert plain HTML into the modal body.</p>

<p>The server request works fine and I get plain HTML code in my <code>this.state.data.content</code> but if I try to insert this into the modal body I receive following error:</p>

<blockquote>
  <p>Error: Invariant Violation: Objects are not valid as a React child (found: object with keys {__html}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons.</p>
</blockquote>

<p>Does anyone know how to fix this? Am I even doing the right thing here?</p>

<p>Thanks!</p>

<pre><code>&lt;script type=""text/babel""&gt;

    var Modal = ReactBootstrap.Modal;
    var Button = ReactBootstrap.Button;
    var ButtonToolbar = ReactBootstrap.ButtonToolbar;


    var L5fmHeaderButton = React.createClass({

        render: function() {
            var iconClass = ""glyphicon "" + this.props.buttonIcon;
            return(
                &lt;button onClick={this.props.onClick} className=""lfm-Modal-Button""&gt;
                    &lt;span className={iconClass} aria-hidden=""true""&gt;&lt;/span&gt;&amp;nbsp;
                    {this.props.buttonText}
                &lt;/button&gt;
            );
        }
    });

    var L5fmModalBody = React.createClass({

        rawMarkup: function() {
            return { __html: this.props.content };
        },

        render: function() {

            return(
                &lt;Modal.Body&gt;
                    dangerouslySetInnerHTML={this.rawMarkup()}
                &lt;/Modal.Body&gt;
            );
        }

    });

    var L5fmModal = React.createClass({

        getInitialState : function() {
            return {
                data : []
            };
        },

        componentDidMount: function() {
            $.ajax({
                url: 'L5fm/setInitialState',
                dataType: 'json',
                cache: false,
                success: function(data) {
                    this.setState({data: data});
                    console.log(data);
                    console.log(this.state.data);
                }.bind(this),
                error: function(xhr, status, err) {
                    console.error(this.props.url, status, err.toString());
                }.bind(this)
            });
        },

        changeDirectory : function() {
            if (this.state.privateDir) {
                this.setState({privateDir: false});
            }
            else {
                this.setState({privateDir: true});
            }
        },

        render: function() {

            if(this.state.data.privateDir) {
                var browseIcon = ""glyphicon-folder-open"";
                var browseText = ""browse all files"";
            }
            else {
                var browseIcon = ""glyphicon-briefcase"";
                var browseText = ""browse private files"";
            }

            return(

                &lt;Modal {...this.props} bsSize=""large"" aria-labelledby=""contained-modal-title-lg""&gt;
                    &lt;Modal.Header closeButton&gt;
                        &lt;div className=""header-button-group""&gt;
                            &lt;L5fmHeaderButton buttonIcon=""glyphicon-cloud-upload"" buttonText=""upload"" /&gt;
                            &lt;L5fmHeaderButton buttonIcon=""glyphicon-list"" buttonText=""list View"" /&gt;
                            &lt;L5fmHeaderButton onClick={this.changeDirectory} buttonIcon={browseIcon} buttonText={browseText} /&gt;
                        &lt;/div&gt;
                &lt;/Modal.Header&gt;
                    &lt;L5fmModalBody content={this.state.data.content}/&gt;
                &lt;/Modal&gt;
            );
        }

    });


    var App = React.createClass({
        getInitialState: function() {
            return { lgShow: false };
        },
        render: function() {
            let lgClose = () =&gt; this.setState({ lgShow: false });

            return (
                    &lt;ButtonToolbar&gt;
                       &lt;Button bsStyle=""primary"" onClick={()=&gt;this.setState({ lgShow: true })}&gt;
                           Launch large demo modal
                       &lt;/Button&gt;

                       &lt;L5fmModal show={this.state.lgShow} onHide={lgClose} /&gt;
                    &lt;/ButtonToolbar&gt;
            );
        }
    });

    ReactDOM.render(&lt;App /&gt;, document.getElementById(""modal""));

&lt;/script&gt;
</code></pre>
","Are you supposed to close the `<Modal.Body>` tag? I think the code where you set the `dangerouslySetInnerHTML={this.rawMarkup()}` should be a property of the Modal.Body rather than a ""child"""
"34512794","reactjs and rendering plain HTML","2","<p>First of all I'm totally new to react so I'm not sure if my code is already written the ""react way"".</p>

<p>So far I've created a couple of react classes which render a Bootstrap Modal. To set the initial states I call an Ajax function within the <code>componentsDidMount</code> function. This works fine until I try to insert plain HTML into the modal body.</p>

<p>The server request works fine and I get plain HTML code in my <code>this.state.data.content</code> but if I try to insert this into the modal body I receive following error:</p>

<blockquote>
  <p>Error: Invariant Violation: Objects are not valid as a React child (found: object with keys {__html}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons.</p>
</blockquote>

<p>Does anyone know how to fix this? Am I even doing the right thing here?</p>

<p>Thanks!</p>

<pre><code>&lt;script type=""text/babel""&gt;

    var Modal = ReactBootstrap.Modal;
    var Button = ReactBootstrap.Button;
    var ButtonToolbar = ReactBootstrap.ButtonToolbar;


    var L5fmHeaderButton = React.createClass({

        render: function() {
            var iconClass = ""glyphicon "" + this.props.buttonIcon;
            return(
                &lt;button onClick={this.props.onClick} className=""lfm-Modal-Button""&gt;
                    &lt;span className={iconClass} aria-hidden=""true""&gt;&lt;/span&gt;&amp;nbsp;
                    {this.props.buttonText}
                &lt;/button&gt;
            );
        }
    });

    var L5fmModalBody = React.createClass({

        rawMarkup: function() {
            return { __html: this.props.content };
        },

        render: function() {

            return(
                &lt;Modal.Body&gt;
                    dangerouslySetInnerHTML={this.rawMarkup()}
                &lt;/Modal.Body&gt;
            );
        }

    });

    var L5fmModal = React.createClass({

        getInitialState : function() {
            return {
                data : []
            };
        },

        componentDidMount: function() {
            $.ajax({
                url: 'L5fm/setInitialState',
                dataType: 'json',
                cache: false,
                success: function(data) {
                    this.setState({data: data});
                    console.log(data);
                    console.log(this.state.data);
                }.bind(this),
                error: function(xhr, status, err) {
                    console.error(this.props.url, status, err.toString());
                }.bind(this)
            });
        },

        changeDirectory : function() {
            if (this.state.privateDir) {
                this.setState({privateDir: false});
            }
            else {
                this.setState({privateDir: true});
            }
        },

        render: function() {

            if(this.state.data.privateDir) {
                var browseIcon = ""glyphicon-folder-open"";
                var browseText = ""browse all files"";
            }
            else {
                var browseIcon = ""glyphicon-briefcase"";
                var browseText = ""browse private files"";
            }

            return(

                &lt;Modal {...this.props} bsSize=""large"" aria-labelledby=""contained-modal-title-lg""&gt;
                    &lt;Modal.Header closeButton&gt;
                        &lt;div className=""header-button-group""&gt;
                            &lt;L5fmHeaderButton buttonIcon=""glyphicon-cloud-upload"" buttonText=""upload"" /&gt;
                            &lt;L5fmHeaderButton buttonIcon=""glyphicon-list"" buttonText=""list View"" /&gt;
                            &lt;L5fmHeaderButton onClick={this.changeDirectory} buttonIcon={browseIcon} buttonText={browseText} /&gt;
                        &lt;/div&gt;
                &lt;/Modal.Header&gt;
                    &lt;L5fmModalBody content={this.state.data.content}/&gt;
                &lt;/Modal&gt;
            );
        }

    });


    var App = React.createClass({
        getInitialState: function() {
            return { lgShow: false };
        },
        render: function() {
            let lgClose = () =&gt; this.setState({ lgShow: false });

            return (
                    &lt;ButtonToolbar&gt;
                       &lt;Button bsStyle=""primary"" onClick={()=&gt;this.setState({ lgShow: true })}&gt;
                           Launch large demo modal
                       &lt;/Button&gt;

                       &lt;L5fmModal show={this.state.lgShow} onHide={lgClose} /&gt;
                    &lt;/ButtonToolbar&gt;
            );
        }
    });

    ReactDOM.render(&lt;App /&gt;, document.getElementById(""modal""));

&lt;/script&gt;
</code></pre>
","This is how [ReactBootstrap](https://react-bootstrap.github.io/components.html) has done its markup. But you are right that in this case I need an additional `<div>` tag to get it working."
"35895302","componentDidMount() not being called when react component is mounted","7","<p>I've been attempting to fetch some data from a server and for some odd reason <code>componentDidMount()</code> is not firing as it should be. I added a <code>console.log()</code> statement inside of <code>componentDidMount()</code> to check if it was firing. I know the request to the server works as it should As I used it outside of react and it worked as it should.</p>

<pre class=""lang-js prettyprint-override""><code>class App extends React.Component {
  constructor(props, context) {
    super(props, context);
    this.state = {
      obj: {}
    };
  };

  getAllStarShips () {
    reachGraphQL('http://localhost:4000/', `{
     allStarships(first: 7) {
       edges {
         node {
           id
           name
           model
           costInCredits
           pilotConnection {
             edges {
               node {
                 ...pilotFragment
               }
             }
           }
         }
       }
     }
    }
    fragment pilotFragment on Person {
     name
     homeworld { name }
   }`, {}). then((data) =&gt; {
     console.log('getALL:', JSON.stringify(data, null, 2))
      this.setState({
        obj: data
      });
   });
  }

  componentDidMount() {
    console.log('Check to see if firing')
    this.getAllStarShips();
  }

  render() {
    console.log('state:',JSON.stringify(this.state.obj, null, 2));
  return (
    &lt;div&gt;
      &lt;h1&gt;React-Reach!&lt;/h1&gt;
      &lt;p&gt;{this.state.obj.allStarships.edges[1].node.name}&lt;/p&gt;
    &lt;/div&gt;
  );
}

}

render(
  &lt;App&gt;&lt;/App&gt;,
  document.getElementById('app')
);
</code></pre>
","You should have un TypeError while your component is rendering the first time because `allStarships` is `undefined`. If so, this may crash your app and prevents runtime execution. Just a guess."
"35895302","componentDidMount() not being called when react component is mounted","7","<p>I've been attempting to fetch some data from a server and for some odd reason <code>componentDidMount()</code> is not firing as it should be. I added a <code>console.log()</code> statement inside of <code>componentDidMount()</code> to check if it was firing. I know the request to the server works as it should As I used it outside of react and it worked as it should.</p>

<pre class=""lang-js prettyprint-override""><code>class App extends React.Component {
  constructor(props, context) {
    super(props, context);
    this.state = {
      obj: {}
    };
  };

  getAllStarShips () {
    reachGraphQL('http://localhost:4000/', `{
     allStarships(first: 7) {
       edges {
         node {
           id
           name
           model
           costInCredits
           pilotConnection {
             edges {
               node {
                 ...pilotFragment
               }
             }
           }
         }
       }
     }
    }
    fragment pilotFragment on Person {
     name
     homeworld { name }
   }`, {}). then((data) =&gt; {
     console.log('getALL:', JSON.stringify(data, null, 2))
      this.setState({
        obj: data
      });
   });
  }

  componentDidMount() {
    console.log('Check to see if firing')
    this.getAllStarShips();
  }

  render() {
    console.log('state:',JSON.stringify(this.state.obj, null, 2));
  return (
    &lt;div&gt;
      &lt;h1&gt;React-Reach!&lt;/h1&gt;
      &lt;p&gt;{this.state.obj.allStarships.edges[1].node.name}&lt;/p&gt;
    &lt;/div&gt;
  );
}

}

render(
  &lt;App&gt;&lt;/App&gt;,
  document.getElementById('app')
);
</code></pre>
","Are you using ReactDOM.render? You may have problems with rendering the component with the original state. Try providing the full this.state.obj.allStarships.edges[1].node.name to the original state (or be a little safer in its usage in your render method)."
"35895302","componentDidMount() not being called when react component is mounted","7","<p>I've been attempting to fetch some data from a server and for some odd reason <code>componentDidMount()</code> is not firing as it should be. I added a <code>console.log()</code> statement inside of <code>componentDidMount()</code> to check if it was firing. I know the request to the server works as it should As I used it outside of react and it worked as it should.</p>

<pre class=""lang-js prettyprint-override""><code>class App extends React.Component {
  constructor(props, context) {
    super(props, context);
    this.state = {
      obj: {}
    };
  };

  getAllStarShips () {
    reachGraphQL('http://localhost:4000/', `{
     allStarships(first: 7) {
       edges {
         node {
           id
           name
           model
           costInCredits
           pilotConnection {
             edges {
               node {
                 ...pilotFragment
               }
             }
           }
         }
       }
     }
    }
    fragment pilotFragment on Person {
     name
     homeworld { name }
   }`, {}). then((data) =&gt; {
     console.log('getALL:', JSON.stringify(data, null, 2))
      this.setState({
        obj: data
      });
   });
  }

  componentDidMount() {
    console.log('Check to see if firing')
    this.getAllStarShips();
  }

  render() {
    console.log('state:',JSON.stringify(this.state.obj, null, 2));
  return (
    &lt;div&gt;
      &lt;h1&gt;React-Reach!&lt;/h1&gt;
      &lt;p&gt;{this.state.obj.allStarships.edges[1].node.name}&lt;/p&gt;
    &lt;/div&gt;
  );
}

}

render(
  &lt;App&gt;&lt;/App&gt;,
  document.getElementById('app')
);
</code></pre>
","Im not sure what you mean Jim Pedid, I am using react-dom."
"35895302","componentDidMount() not being called when react component is mounted","7","<p>I've been attempting to fetch some data from a server and for some odd reason <code>componentDidMount()</code> is not firing as it should be. I added a <code>console.log()</code> statement inside of <code>componentDidMount()</code> to check if it was firing. I know the request to the server works as it should As I used it outside of react and it worked as it should.</p>

<pre class=""lang-js prettyprint-override""><code>class App extends React.Component {
  constructor(props, context) {
    super(props, context);
    this.state = {
      obj: {}
    };
  };

  getAllStarShips () {
    reachGraphQL('http://localhost:4000/', `{
     allStarships(first: 7) {
       edges {
         node {
           id
           name
           model
           costInCredits
           pilotConnection {
             edges {
               node {
                 ...pilotFragment
               }
             }
           }
         }
       }
     }
    }
    fragment pilotFragment on Person {
     name
     homeworld { name }
   }`, {}). then((data) =&gt; {
     console.log('getALL:', JSON.stringify(data, null, 2))
      this.setState({
        obj: data
      });
   });
  }

  componentDidMount() {
    console.log('Check to see if firing')
    this.getAllStarShips();
  }

  render() {
    console.log('state:',JSON.stringify(this.state.obj, null, 2));
  return (
    &lt;div&gt;
      &lt;h1&gt;React-Reach!&lt;/h1&gt;
      &lt;p&gt;{this.state.obj.allStarships.edges[1].node.name}&lt;/p&gt;
    &lt;/div&gt;
  );
}

}

render(
  &lt;App&gt;&lt;/App&gt;,
  document.getElementById('app')
);
</code></pre>
","this line is where the problem is: <p>{this.state.obj.allStarships.edges[1].node.name}</p>"
"35895302","componentDidMount() not being called when react component is mounted","7","<p>I've been attempting to fetch some data from a server and for some odd reason <code>componentDidMount()</code> is not firing as it should be. I added a <code>console.log()</code> statement inside of <code>componentDidMount()</code> to check if it was firing. I know the request to the server works as it should As I used it outside of react and it worked as it should.</p>

<pre class=""lang-js prettyprint-override""><code>class App extends React.Component {
  constructor(props, context) {
    super(props, context);
    this.state = {
      obj: {}
    };
  };

  getAllStarShips () {
    reachGraphQL('http://localhost:4000/', `{
     allStarships(first: 7) {
       edges {
         node {
           id
           name
           model
           costInCredits
           pilotConnection {
             edges {
               node {
                 ...pilotFragment
               }
             }
           }
         }
       }
     }
    }
    fragment pilotFragment on Person {
     name
     homeworld { name }
   }`, {}). then((data) =&gt; {
     console.log('getALL:', JSON.stringify(data, null, 2))
      this.setState({
        obj: data
      });
   });
  }

  componentDidMount() {
    console.log('Check to see if firing')
    this.getAllStarShips();
  }

  render() {
    console.log('state:',JSON.stringify(this.state.obj, null, 2));
  return (
    &lt;div&gt;
      &lt;h1&gt;React-Reach!&lt;/h1&gt;
      &lt;p&gt;{this.state.obj.allStarships.edges[1].node.name}&lt;/p&gt;
    &lt;/div&gt;
  );
}

}

render(
  &lt;App&gt;&lt;/App&gt;,
  document.getElementById('app')
);
</code></pre>
","Right, so make sure that you have that property in the state you set in the constructor (or don't blindly use a.b without first checking that a exists.)

Just making sure you're using reactdom to avoid any issues."
"35895302","componentDidMount() not being called when react component is mounted","7","<p>I've been attempting to fetch some data from a server and for some odd reason <code>componentDidMount()</code> is not firing as it should be. I added a <code>console.log()</code> statement inside of <code>componentDidMount()</code> to check if it was firing. I know the request to the server works as it should As I used it outside of react and it worked as it should.</p>

<pre class=""lang-js prettyprint-override""><code>class App extends React.Component {
  constructor(props, context) {
    super(props, context);
    this.state = {
      obj: {}
    };
  };

  getAllStarShips () {
    reachGraphQL('http://localhost:4000/', `{
     allStarships(first: 7) {
       edges {
         node {
           id
           name
           model
           costInCredits
           pilotConnection {
             edges {
               node {
                 ...pilotFragment
               }
             }
           }
         }
       }
     }
    }
    fragment pilotFragment on Person {
     name
     homeworld { name }
   }`, {}). then((data) =&gt; {
     console.log('getALL:', JSON.stringify(data, null, 2))
      this.setState({
        obj: data
      });
   });
  }

  componentDidMount() {
    console.log('Check to see if firing')
    this.getAllStarShips();
  }

  render() {
    console.log('state:',JSON.stringify(this.state.obj, null, 2));
  return (
    &lt;div&gt;
      &lt;h1&gt;React-Reach!&lt;/h1&gt;
      &lt;p&gt;{this.state.obj.allStarships.edges[1].node.name}&lt;/p&gt;
    &lt;/div&gt;
  );
}

}

render(
  &lt;App&gt;&lt;/App&gt;,
  document.getElementById('app')
);
</code></pre>
","I get the following error `Uncaught TypeError: Cannot read property 'edges' of undefined`"
"35895302","componentDidMount() not being called when react component is mounted","7","<p>I've been attempting to fetch some data from a server and for some odd reason <code>componentDidMount()</code> is not firing as it should be. I added a <code>console.log()</code> statement inside of <code>componentDidMount()</code> to check if it was firing. I know the request to the server works as it should As I used it outside of react and it worked as it should.</p>

<pre class=""lang-js prettyprint-override""><code>class App extends React.Component {
  constructor(props, context) {
    super(props, context);
    this.state = {
      obj: {}
    };
  };

  getAllStarShips () {
    reachGraphQL('http://localhost:4000/', `{
     allStarships(first: 7) {
       edges {
         node {
           id
           name
           model
           costInCredits
           pilotConnection {
             edges {
               node {
                 ...pilotFragment
               }
             }
           }
         }
       }
     }
    }
    fragment pilotFragment on Person {
     name
     homeworld { name }
   }`, {}). then((data) =&gt; {
     console.log('getALL:', JSON.stringify(data, null, 2))
      this.setState({
        obj: data
      });
   });
  }

  componentDidMount() {
    console.log('Check to see if firing')
    this.getAllStarShips();
  }

  render() {
    console.log('state:',JSON.stringify(this.state.obj, null, 2));
  return (
    &lt;div&gt;
      &lt;h1&gt;React-Reach!&lt;/h1&gt;
      &lt;p&gt;{this.state.obj.allStarships.edges[1].node.name}&lt;/p&gt;
    &lt;/div&gt;
  );
}

}

render(
  &lt;App&gt;&lt;/App&gt;,
  document.getElementById('app')
);
</code></pre>
","Thanks, I got it to work! If you want to post it as an answer so I can mark it correct. @JimPedid"
"36226702","Exposing Fragment in React Native Android ViewManager","4","<p>I am attempting to wrap the YouTube Android API as a UI Component for React Native. I have been successful in the Android configuration of things (getting onInitializationSuccess), however I am unable to figure out how get the YouTubePlayerView back to my React Native app.</p>

<p>According to the docs, they recommend using YouTubePlayerFragment if you can not extend YouTubeBaseActivity. Since React Native on Android does not use XML based layouts I attempted to create the views programmatically. However, when I return the wrapping View ( I tried as a FrameLayout, but not sure if that was the right choice) I created it does not render anything on the application.</p>

<p>I am looking to keep it extremely simple for now, here are the necessary bits of code:</p>

<p><strong>YouTubeManager.java</strong></p>

<pre><code>public class YouTubeManager extends SimpleViewManager&lt;FrameLayout&gt;  implements YouTubePlayer.OnInitializedListener {
// ...
@Override
    protected FrameLayout createViewInstance(ThemedReactContext reactContext) {
        this.reactContext = reactContext;

        FrameLayout view = new FrameLayout(reactContext);
        view.setId(View.generateViewId());


        FragmentManager fragmentManager = activity.getFragmentManager();
        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();

        YouTubePlayerFragment fragment = new YouTubePlayerFragment();
        fragmentTransaction.add(view.getId(), fragment);

        fragmentTransaction.commit();

        fragment.initialize(""SECRET_KEY"", this);

        return view;
    }
// ... 
}
</code></pre>

<p><strong>YouTube.js</strong></p>

<pre><code>class YouTube extends Component {
    render () {
        return &lt;YouTubeAndroid {...this.props}/&gt;;
    }
};

var iface = {
    name : 'YouTube',
    propTypes : {
        ...View.propTypes
    },
};


var YouTubeAndroid = requireNativeComponent('YouTube', iface);

module.exports = YouTube;
</code></pre>

<p><strong>index.android.js</strong></p>

<pre><code>var YouTube = require('./YouTube');

class YouTubePlayer extends Component {
  render() {
    return (
      &lt;View style={styles.container}&gt;
        &lt;Text&gt;hello&lt;/Text&gt;
        &lt;YouTube /&gt;
      &lt;/View&gt;
    );
  }
}
</code></pre>

<p>Any help would be really appreciated, thank you!</p>
","Does setting explicit height and width on youtube component help ?"
"36226702","Exposing Fragment in React Native Android ViewManager","4","<p>I am attempting to wrap the YouTube Android API as a UI Component for React Native. I have been successful in the Android configuration of things (getting onInitializationSuccess), however I am unable to figure out how get the YouTubePlayerView back to my React Native app.</p>

<p>According to the docs, they recommend using YouTubePlayerFragment if you can not extend YouTubeBaseActivity. Since React Native on Android does not use XML based layouts I attempted to create the views programmatically. However, when I return the wrapping View ( I tried as a FrameLayout, but not sure if that was the right choice) I created it does not render anything on the application.</p>

<p>I am looking to keep it extremely simple for now, here are the necessary bits of code:</p>

<p><strong>YouTubeManager.java</strong></p>

<pre><code>public class YouTubeManager extends SimpleViewManager&lt;FrameLayout&gt;  implements YouTubePlayer.OnInitializedListener {
// ...
@Override
    protected FrameLayout createViewInstance(ThemedReactContext reactContext) {
        this.reactContext = reactContext;

        FrameLayout view = new FrameLayout(reactContext);
        view.setId(View.generateViewId());


        FragmentManager fragmentManager = activity.getFragmentManager();
        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();

        YouTubePlayerFragment fragment = new YouTubePlayerFragment();
        fragmentTransaction.add(view.getId(), fragment);

        fragmentTransaction.commit();

        fragment.initialize(""SECRET_KEY"", this);

        return view;
    }
// ... 
}
</code></pre>

<p><strong>YouTube.js</strong></p>

<pre><code>class YouTube extends Component {
    render () {
        return &lt;YouTubeAndroid {...this.props}/&gt;;
    }
};

var iface = {
    name : 'YouTube',
    propTypes : {
        ...View.propTypes
    },
};


var YouTubeAndroid = requireNativeComponent('YouTube', iface);

module.exports = YouTube;
</code></pre>

<p><strong>index.android.js</strong></p>

<pre><code>var YouTube = require('./YouTube');

class YouTubePlayer extends Component {
  render() {
    return (
      &lt;View style={styles.container}&gt;
        &lt;Text&gt;hello&lt;/Text&gt;
        &lt;YouTube /&gt;
      &lt;/View&gt;
    );
  }
}
</code></pre>

<p>Any help would be really appreciated, thank you!</p>
","@agent_hunt yeah, I tried giving it a fixed height/width and backgroundColor. It just renders an empty view https://www.dropbox.com/s/3obfjs6agcux3z2/Screenshot%202016-03-26%2017.10.55.png?dl=0"
"36226702","Exposing Fragment in React Native Android ViewManager","4","<p>I am attempting to wrap the YouTube Android API as a UI Component for React Native. I have been successful in the Android configuration of things (getting onInitializationSuccess), however I am unable to figure out how get the YouTubePlayerView back to my React Native app.</p>

<p>According to the docs, they recommend using YouTubePlayerFragment if you can not extend YouTubeBaseActivity. Since React Native on Android does not use XML based layouts I attempted to create the views programmatically. However, when I return the wrapping View ( I tried as a FrameLayout, but not sure if that was the right choice) I created it does not render anything on the application.</p>

<p>I am looking to keep it extremely simple for now, here are the necessary bits of code:</p>

<p><strong>YouTubeManager.java</strong></p>

<pre><code>public class YouTubeManager extends SimpleViewManager&lt;FrameLayout&gt;  implements YouTubePlayer.OnInitializedListener {
// ...
@Override
    protected FrameLayout createViewInstance(ThemedReactContext reactContext) {
        this.reactContext = reactContext;

        FrameLayout view = new FrameLayout(reactContext);
        view.setId(View.generateViewId());


        FragmentManager fragmentManager = activity.getFragmentManager();
        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();

        YouTubePlayerFragment fragment = new YouTubePlayerFragment();
        fragmentTransaction.add(view.getId(), fragment);

        fragmentTransaction.commit();

        fragment.initialize(""SECRET_KEY"", this);

        return view;
    }
// ... 
}
</code></pre>

<p><strong>YouTube.js</strong></p>

<pre><code>class YouTube extends Component {
    render () {
        return &lt;YouTubeAndroid {...this.props}/&gt;;
    }
};

var iface = {
    name : 'YouTube',
    propTypes : {
        ...View.propTypes
    },
};


var YouTubeAndroid = requireNativeComponent('YouTube', iface);

module.exports = YouTube;
</code></pre>

<p><strong>index.android.js</strong></p>

<pre><code>var YouTube = require('./YouTube');

class YouTubePlayer extends Component {
  render() {
    return (
      &lt;View style={styles.container}&gt;
        &lt;Text&gt;hello&lt;/Text&gt;
        &lt;YouTube /&gt;
      &lt;/View&gt;
    );
  }
}
</code></pre>

<p>Any help would be really appreciated, thank you!</p>
","@ischmierer yes using Deminoth's suggestion. This required extending the ReactActivity though, and it was a bit buggy. This method broke recently (fixed in 0.32-rc, though with `getCurrentActivity()` being available by `SimpleViewManager`)."
"36226702","Exposing Fragment in React Native Android ViewManager","4","<p>I am attempting to wrap the YouTube Android API as a UI Component for React Native. I have been successful in the Android configuration of things (getting onInitializationSuccess), however I am unable to figure out how get the YouTubePlayerView back to my React Native app.</p>

<p>According to the docs, they recommend using YouTubePlayerFragment if you can not extend YouTubeBaseActivity. Since React Native on Android does not use XML based layouts I attempted to create the views programmatically. However, when I return the wrapping View ( I tried as a FrameLayout, but not sure if that was the right choice) I created it does not render anything on the application.</p>

<p>I am looking to keep it extremely simple for now, here are the necessary bits of code:</p>

<p><strong>YouTubeManager.java</strong></p>

<pre><code>public class YouTubeManager extends SimpleViewManager&lt;FrameLayout&gt;  implements YouTubePlayer.OnInitializedListener {
// ...
@Override
    protected FrameLayout createViewInstance(ThemedReactContext reactContext) {
        this.reactContext = reactContext;

        FrameLayout view = new FrameLayout(reactContext);
        view.setId(View.generateViewId());


        FragmentManager fragmentManager = activity.getFragmentManager();
        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();

        YouTubePlayerFragment fragment = new YouTubePlayerFragment();
        fragmentTransaction.add(view.getId(), fragment);

        fragmentTransaction.commit();

        fragment.initialize(""SECRET_KEY"", this);

        return view;
    }
// ... 
}
</code></pre>

<p><strong>YouTube.js</strong></p>

<pre><code>class YouTube extends Component {
    render () {
        return &lt;YouTubeAndroid {...this.props}/&gt;;
    }
};

var iface = {
    name : 'YouTube',
    propTypes : {
        ...View.propTypes
    },
};


var YouTubeAndroid = requireNativeComponent('YouTube', iface);

module.exports = YouTube;
</code></pre>

<p><strong>index.android.js</strong></p>

<pre><code>var YouTube = require('./YouTube');

class YouTubePlayer extends Component {
  render() {
    return (
      &lt;View style={styles.container}&gt;
        &lt;Text&gt;hello&lt;/Text&gt;
        &lt;YouTube /&gt;
      &lt;/View&gt;
    );
  }
}
</code></pre>

<p>Any help would be really appreciated, thank you!</p>
","Is the issue solved? Did you manage to render the Fragment?"
"36507534","react json Objects are not valid as a React child","2","<p>I am using the React-Rails gem and accessing a json object <code>items</code> from a Rails controller. </p>

<p>Rails controller:</p>

<pre><code>class ItemsController &lt; ApplicationController
  def index
    @items = Item.all
    render json: @items
  end
end
</code></pre>

<p>My React <code>App</code> component accesses these items and attempts to pass it as a prop to a child component: </p>

<pre><code>class App extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            items: {},
            activeTab: 'items'
        };
    }

    componentDidMount() {
        $.getJSON('/items.json', (response) =&gt; { 
            this.setState({ items: response }) 
        });
    }

  render () {
        return (
            &lt;div&gt;
                &lt;ItemsContent items={this.state.items}&gt; 
            &lt;/div&gt;
        );
  }
}
</code></pre>

<p>And this child component looks like this:</p>

<pre><code>class ItemsContent extends React.Component {
  render () {           
    return (
      &lt;div&gt;
        &lt;div&gt;Items: {this.props.items}&lt;/div&gt;
      &lt;/div&gt;
    );
  }
}

ItemsContent.propTypes = {
  items: React.PropTypes.object
};
</code></pre>

<p>And I get this error: </p>

<pre><code>react.js?body=1:1324 Uncaught Invariant Violation: Objects are not valid as a React child (found: object with keys {}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of `ItemsContent`.
</code></pre>

<p>How do I get around this? Is there a way to easily use JSON objects in my React components?</p>

<p>Right now I tried wrapping the JSON object in an array:</p>

<pre><code>            tabbedContent = &lt;ItemsContent items={[this.state.items]}&gt;&lt;/ItemsContent&gt;;
</code></pre>
","Are you trying to display all the items in this.props.items?"
"36507534","react json Objects are not valid as a React child","2","<p>I am using the React-Rails gem and accessing a json object <code>items</code> from a Rails controller. </p>

<p>Rails controller:</p>

<pre><code>class ItemsController &lt; ApplicationController
  def index
    @items = Item.all
    render json: @items
  end
end
</code></pre>

<p>My React <code>App</code> component accesses these items and attempts to pass it as a prop to a child component: </p>

<pre><code>class App extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            items: {},
            activeTab: 'items'
        };
    }

    componentDidMount() {
        $.getJSON('/items.json', (response) =&gt; { 
            this.setState({ items: response }) 
        });
    }

  render () {
        return (
            &lt;div&gt;
                &lt;ItemsContent items={this.state.items}&gt; 
            &lt;/div&gt;
        );
  }
}
</code></pre>

<p>And this child component looks like this:</p>

<pre><code>class ItemsContent extends React.Component {
  render () {           
    return (
      &lt;div&gt;
        &lt;div&gt;Items: {this.props.items}&lt;/div&gt;
      &lt;/div&gt;
    );
  }
}

ItemsContent.propTypes = {
  items: React.PropTypes.object
};
</code></pre>

<p>And I get this error: </p>

<pre><code>react.js?body=1:1324 Uncaught Invariant Violation: Objects are not valid as a React child (found: object with keys {}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of `ItemsContent`.
</code></pre>

<p>How do I get around this? Is there a way to easily use JSON objects in my React components?</p>

<p>Right now I tried wrapping the JSON object in an array:</p>

<pre><code>            tabbedContent = &lt;ItemsContent items={[this.state.items]}&gt;&lt;/ItemsContent&gt;;
</code></pre>
","Yes, I am trying to display all the items!"
"37274917","creating table with reactjs","0","<p>I am trying to create a table using reactjs. I wrote a class and using this as directive, passing config and data and trying to populate the table.</p>

<pre><code>function createRows() {
    let self = this;
    return  &lt;tbody&gt;{_.each(self.props.tableData, function(r) {
        &lt;tr&gt;
            {_.each(self.props.columnConfigs, function(c) {
            &lt;td&gt;{r[c.columnName]}&lt;/td&gt;
        })}
        &lt;/tr&gt;
    })}&lt;/tbody&gt;;
}

function createHeaders() {

    let self = this;
    return &lt;thead&gt;
    {_.each(self.props.columnConfigs, function(c) {
            &lt;th&gt;c.displayName&lt;/th&gt;
        })}
    &lt;/thead&gt;
}
class TableComponent extends React.Component {
    constructor(props, context) {
        super(props, context);
    }

    render() {

       return (&lt;table&gt;
            {createHeaders.call(this)}
            {createRows.call(this)}
        &lt;/table&gt;)
    }


}

function TableComponentFactory() {
    return TableComponent;
}

export default TableComponentFactory;
</code></pre>

<p>But this is not working. it throws an error:-</p>

<pre><code>Invariant Violation: Objects are not valid as a React child (found: object with keys {columnName, displayName, isSortable, path, hidden, columnStyle, editable, isId}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of `TableComponent`.
</code></pre>

<p>which is actually the columnConfig. I am not able to understand why this happening. What mistake I am doing, also a bit of explanation will be great.   </p>
",""
"38525956","How to solve a TabLayout inside a Fragment which includes four Tabs created by one Fragment with newInstance() using RecyclerView","3","<p>I implement an Activity which contains a <code>NavigationView</code> with includes several fragments. The first Fragment of the <code>NavigationView</code> contains a <code>RecyclerView</code> with a <code>TabLayout</code>, so that I can swipe between the different lists. Because I've got always the same list(UI) with different values, I decided to implement only one Fragment with a <code>newInstance()</code>.</p>

<p>My problem now is that the list does not update properly when I jump from Tab1 to Tab2 or if I change a list item and come back to the list. Can somebody help me? I can't figure it out ... </p>

<p><a href=""http://i.stack.imgur.com/1BQoT.png"" rel=""nofollow"">swipe from Tab1 to Tab2</a>
This is my fragment which contains the <code>RecyclerView</code>:
<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>public class HinweiseFragment extends Fragment {

    private static final String TAG = ""HinweiseFragment"";
    private TabLayout mTabLayout;
    private ViewPager mViewPager;
    private HinweiseTabAdapter adapter;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {

        ((MainActivity) getActivity()).getSupportActionBar().setTitle(""Hinweise"");

        ((MainActivity) getActivity()).showFloatingActionButton();

        View rootView = inflater.inflate(R.layout.fragment_hinweise, null);

        mTabLayout = (TabLayout) rootView.findViewById(R.id.tablayout_hinweise);
        mTabLayout.addTab(mTabLayout.newTab().setText(""BESAMUNG""));
        mTabLayout.addTab(mTabLayout.newTab().setText(""NICHT BESAMEN""));
        mTabLayout.addTab(mTabLayout.newTab().setText(""VERDACHT""));
        mTabLayout.addTab(mTabLayout.newTab().setText(""ALLE""));
        mTabLayout.setTabGravity(mTabLayout.GRAVITY_FILL);

        mViewPager = (ViewPager) rootView.findViewById(R.id.viewpager_hinweise);
        adapter = new HinweiseTabAdapter(getChildFragmentManager(), mTabLayout.getTabCount(), getContext());

        mViewPager.setAdapter(adapter);
        mViewPager.setOffscreenPageLimit(3);


        mViewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(mTabLayout));
        mTabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
            @Override
            public void onTabSelected(TabLayout.Tab tab) {

                mViewPager.setCurrentItem(tab.getPosition(), true);
                adapter.refreshFragment(tab.getPosition());

            }

            @Override
            public void onTabUnselected(TabLayout.Tab tab) {
            }

            @Override
            public void onTabReselected(TabLayout.Tab tab) {
            }
        });

        return rootView;

    }
}</code></pre>
</div>
</div>
</p>

<p>This is my TabAdapter:
<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>public class HinweiseTabAdapter extends FragmentPagerAdapter {
    HinweiseListFragment tab_besamung, tab_nicht, tab_verdacht, tab_alle;
    String[] tabHostTitle = {""BESAMUNG"", ""NICHT BESAMEN"", ""VERDACHT"", ""ALLE""};
    int mNumOfTabs;
    private final Context mContext;

    public HinweiseTabAdapter(FragmentManager fm, int NumOfTabs, Context context) {
        super(fm);
        this.mNumOfTabs = NumOfTabs;
        this.mContext = context;
    }

    @Override
    public Fragment getItem(int position) {
        switch (position) {
            case 0:
                tab_besamung = HinweiseListFragment.newInstance(0, ""BESAMUNG"");
                return tab_besamung;
            case 1:
                tab_nicht = HinweiseListFragment.newInstance(1, ""NICHT BESAMEN"");
                return tab_nicht;
            case 2:
                tab_verdacht = HinweiseListFragment.newInstance(2, ""VERDACHT"");
                return tab_verdacht;
            case 3:
                tab_alle = HinweiseListFragment.newInstance(3, ""ALLE"");
                return tab_alle;
            default:
                return null;
        }
    }

    public void refreshFragment(int position) {
        switch (position) {
            case 0:
                tab_besamung.update();
                break;
            case 1:
                tab_nicht.update();
                break;
            case 2:
                tab_verdacht.update();
                break;
            case 3:
                tab_alle.update();
                break;
        }
    }

    @Override
    public int getItemPosition(Object object) {
        int position = getItemPosition(object);

        if (position &gt;= 0) {
            return position;
        } else {
            return POSITION_NONE;
        }
    }

    @Override
    public int getCount() {
        return mNumOfTabs;

    }

    @Override
    public CharSequence getPageTitle(int position) {
        return tabHostTitle[position];
    }
}</code></pre>
</div>
</div>
</p>

<p>and this is my Fragment which contains the List:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>    public static HinweiseListFragment newInstance(int page, String title) {
        HinweiseListFragment fragment = new HinweiseListFragment();
        Bundle args = new Bundle();
        args.putInt(PASSED_PAGE, page);
        args.putString(PASSED_TITLE, title);
        fragment.setArguments(args);
        return fragment;
    }


    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Bundle args = getArguments();
        if (args != null) {
            tabCount = args.getInt(PASSED_PAGE);
            tabName = args.getString(PASSED_TITLE);
        }
    }

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View rootView = inflater.inflate(R.layout.fragment_hinweise_list, container, false);

        list_hinweise = new ArrayList&lt;&gt;();

        mRecyclerView = (RecyclerView) rootView.findViewById(R.id.rv_listHinweise);
        mSwipeRefreshLayout = (SwipeRefreshLayout) rootView.findViewById(R.id.swipeHinweise);

        mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
            @Override
            public void onRefresh() {
                mSwipeRefreshLayout.post(new Runnable() {
                    @Override
                    public void run() {
                        mSwipeRefreshLayout.setRefreshing(true);
                        refreshContent();
                    }
                });

            }
        });

        db = new DataBase(getActivity());
        userHitKdr();

        List&lt;String&gt; tab_ = db.getAll(""SELECT * from tab_info where user_tab ='"" + userdb + ""' "");
        if (tab_.size() != 2) {
            db.updateSql(""delete from tab_info where user_tab='"" + userdb + ""' "");
            db.updateSql(""insert into tab_info (activity_tab,tab_select,user_tab) values ('home','0','"" + userdb + ""'),('aufgabe','0','"" + userdb + ""'); "");
        } else {
        }

        mRecyclerView.setHasFixedSize(true);
        mRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
        mHinweiseAdapter = new HinweiseAdapter(getActivity(), getHinweise());
        mRecyclerView.setAdapter(mHinweiseAdapter);

        ItemClickSupport.addTo(mRecyclerView).setOnItemClickListener(new ItemClickSupport.OnItemClickListener() {
            @Override
            public void onItemClicked(RecyclerView recyclerView, int position, View v) {
                Intent detailView = new Intent(getActivity(), HinweiseDetail.class);

                String[] tierarr = new String[tier_id.size()];
                tier_id.toArray(tierarr);
                String[] hinarr = new String[hin_id.size()];
                hin_id.toArray(hinarr);
                detailView.putExtra(""detailart"", ""ovalert"");
                detailView.putExtra(""idTier"", tier_id.get(position));
                detailView.putExtra(""idDetail"", hin_id.get(position));
                int ipos = position;
                Integer integerConverter = new Integer(ipos);
                String s = integerConverter.toString();
                detailView.putExtra(""pos"", s);
                detailView.putExtra(""arrIdTier"", tierarr);
                detailView.putExtra(""arrIdHin"", hinarr);

                detailView.putExtra(""userDetail"", userdb);
                detailView.putExtra(""hitDetail"", hitdb);
                startActivity(detailView);
            }
        });

        return rootView;
    }


    @Override
    public void setUserVisibleHint(boolean isVisibleToUser) {
        super.setUserVisibleHint(isVisibleToUser);

        if (isVisibleToUser) {
            if(list_hinweise != null) {
                update();
            }
        }
    }

    public String checkTab(int tab) {
        tabCount = tab;
        //tabName = name;

        if (tabCount == 0) {
            auswahl = "" animalReproductionIndication.off='0' and (animalReproductionIndication.indicationCertainty ='IN'  or animalReproductionIndication.indicationCertainty ='ID' or animalReproductionIndication.indicationCertainty ='' ) and "";
            db.updateSql(""update tab_info set tab_select='"" + tabCount + ""' where activity_tab='home' and  user_tab='"" + userdb + ""' "");

            if (list_hinweise != null) {
                list_hinweise.clear();
                if (mHinweiseAdapter != null) {
                    mHinweiseAdapter.notifyDataSetChanged();
                }
            }
        }

        if (tabCount == 1) {
            auswahl = "" animalReproductionIndication.off='0' and  (animalReproductionIndication.indicationCertainty ='NI'  or animalReproductionIndication.indicationCertainty ='HO') and "";
            db.updateSql(""update tab_info set tab_select='"" + tabCount + ""' where activity_tab='home' and  user_tab='"" + userdb + ""' "");

            if (list_hinweise != null) {
                list_hinweise.clear();
                if (mHinweiseAdapter != null) {
                    mHinweiseAdapter.notifyDataSetChanged();
                }
            }
        }

        if (tabCount == 2) {
            auswahl = "" animalReproductionIndication.off='0' and  animalReproductionIndication.indicationCertainty ='SU' and "";
            db.updateSql(""update tab_info set tab_select='"" + tabCount + ""' where activity_tab='home' and  user_tab='"" + userdb + ""' "");

            if (list_hinweise != null) {
                list_hinweise.clear();
                if (mHinweiseAdapter != null) {
                    mHinweiseAdapter.notifyDataSetChanged();
                }
            }
        }
        if (tabCount == 3) {
            auswahl = "" animalReproductionIndication.off='0' and  (animalReproductionIndication.indicationCertainty ='IN' or animalReproductionIndication.indicationCertainty ='NI' or animalReproductionIndication.indicationCertainty ='SU' or animalReproductionIndication.indicationCertainty ='ID'  or animalReproductionIndication.indicationCertainty ='HO') and "";
            db.updateSql(""update tab_info set tab_select='"" + tabCount + ""' where activity_tab='home' and  user_tab='"" + userdb + ""' "");

            if (list_hinweise != null) {
                list_hinweise.clear();
                if (mHinweiseAdapter != null) {
                    mHinweiseAdapter.notifyDataSetChanged();
                }
            }
        }

        return auswahl;
    }

    public void update(){
        tabCount = getArguments() != null ? getArguments().getInt(PASSED_PAGE) : 0;
        tabName = getArguments() != null ? getArguments().getString(PASSED_TITLE) : ""BESAMUNG"";
        list_hinweise.clear();
        mHinweiseAdapter = new HinweiseAdapter(getActivity(), getHinweise());
        mRecyclerView.setAdapter(mHinweiseAdapter);
    }

    public void refreshContent() {
        importIndication();

        tabCount = getArguments() != null ? getArguments().getInt(PASSED_PAGE) : 0;
        tabName = getArguments() != null ? getArguments().getString(PASSED_TITLE) : ""BESAMUNG"";
        list_hinweise.clear();
        mHinweiseAdapter = new HinweiseAdapter(getActivity(), getHinweise());
        mRecyclerView.setAdapter(mHinweiseAdapter);
        // stopping swipe refresh
        mSwipeRefreshLayout.setRefreshing(false);
    }


    private List&lt;ListHinweise&gt; getHinweise() {
        checkTab(tabCount);

        tm = new DateTime();
        rg = new DateRegex();
        tt = new DateTime();

        try {
            db.checkAndCopyDatabase();
            db.openDatabase();
        } catch (SQLiteException e) {
            e.printStackTrace();
        }

        String sqlSortName = ""select nameCode from sortieren where art='1' and (disable='0' or disable='1') and user='"" + userdb + ""'  group by nameCode "";
        String sqlSortDisable = ""select disable from sortieren where art='1' and (disable='0' or disable='1') and user='"" + userdb + ""'  group by nameCode "";

        List&lt;String&gt; listSortName = db.getAll(sqlSortName);
        List&lt;String&gt; listSortDisable = db.getAll(sqlSortDisable);

        String sortSql = """";
        for (int s1 = 0; s1 &lt; listSortName.size(); s1++) {
            System.out.println(""Sort: "" + listSortDisable.get(s1));
            if (s1 == listSortName.size() - 1) {
                String orderby = "" desc "";
                if (listSortDisable.get(s1).equals(""0""))
                    orderby = "" asc "";
                if (listSortName.get(s1).equals(""indicationDateTime""))
                    sortSql = sortSql + "" animalReproductionIndication."" + listSortName.get(s1) + "" "" + orderby;
                else if (listSortName.get(s1).equals(""farmersAnimalNr""))
                    sortSql = sortSql + "" cast(OVALERTAPP."" + listSortName.get(s1) + "" as integer) "" + orderby;
                else
                    sortSql = sortSql + "" OVALERTAPP."" + listSortName.get(s1) + "" "" + orderby;
            } else {
                String orderby = "" desc ,"";
                if (listSortDisable.get(s1).equals(""0""))
                    orderby = "" asc ,"";
                if (listSortName.get(s1).equals(""indicationDateTime""))
                    sortSql = sortSql + "" animalReproductionIndication."" + listSortName.get(s1) + "" "" + orderby;
                else if (listSortName.get(s1).equals(""farmersAnimalNr""))
                    sortSql = sortSql + "" cast(OVALERTAPP."" + listSortName.get(s1) + "" as integer) "" + orderby;
                else
                    sortSql = sortSql + "" OVALERTAPP."" + listSortName.get(s1) + "" "" + orderby;
            }
        }
        String sxc = sortSql;
        sxc = sxc.trim();
        if (!sxc.equals(""""))
            sortSql = "" order by "" + sortSql;

        System.out.println(""Sort: "" + sortSql);

        try {
            sql = "" FROM OVALERTAPP, animalReproductionIndication WHERE "" + sql_user_hit + "" OVALERTAPP.AnimalNumber= animalReproductionIndication.AnimalNumber and "" + auswahl + ""1 "" + sortSql;
            String prio = db.getSelect(""select nameCode from primaeridentifikation where  user='"" + userdb + ""' and art='1' and disable='1'  "");

            List&lt;String&gt; einstellung_name = db.getAll(""SELECT name from einstellungen where user ='"" + userdb + ""' and seite='1' and disable='1' "");
            List&lt;String&gt; einstellung_nameCode = db.getAll(""SELECT nameCode from  einstellungen where user ='"" + userdb + ""' and seite='1' and disable='1' "");
            String xxInhalt = "" "";
            for (int xx = 0; xx &lt; einstellung_name.size(); xx++) {
                String namexx = einstellung_name.get(xx);
                for (int yy = 0; yy &lt; namexx_.length; yy++) {
                    namexx = namexx.replace(namexx_[yy], Abkxx_[yy]);
                }
                xxInhalt = xxInhalt + ""' "" + namexx + "": ' ||  OVALERTAPP."" + einstellung_nameCode.get(xx) + ""    ||"";
            }
            xxInhalt = "" || '&lt;br&gt;' || "" + xxInhalt + "" ''"";
            xxInhalt = xxInhalt.replace(""OVALERTAPP.participantAnimal"", ""OVALERTAPP.participantAnimalNr"");
            if (einstellung_name.size() &lt; 1) {
                xxInhalt = "" "";
            }

            tier_id = db.getAll(""SELECT OVALERTAPP.id "" + sql);
            hin_id = db.getAll(""SELECT animalReproductionIndication.id "" + sql);
            hin_besamt = db.getAll(""SELECT animalReproductionIndication.indicationCertainty "" + sql);
            hin_blaue = db.getAll(""select animalReproductionIndication.showType "" + sql);
            hin_time = db.getAll(""select animalReproductionIndication.indicationDateTime "" + sql); //gesehen

            if (prio.equals("""")) {
                String sql_ = "" SELECT  OVALERTAPP.AnimalNumber ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql; // time
                sql_ = sql_.replace(""OVALERTAPP.aktivseit"", ""animalReproductionIndication.indicationDateTime"");
                hin_info = db.getAll(sql_);
                // hin_info = db.getAll("" SELECT  OVALERTAPP.AnimalNumber ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql); // time

                System.out.println("" SELECT  OVALERTAPP.AnimalNumber ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql); // time

            } else {
                //hin_info = db.getAll("" SELECT   OVALERTAPP."" + prio + "" ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql); // time
                String sql_ = "" SELECT   OVALERTAPP."" + prio + "" ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql; // time

                sql_ = sql_.replace(""OVALERTAPP.aktivseit"", ""animalReproductionIndication.indicationDateTime"");
                hin_info = db.getAll(sql_);
                System.out.println("" SELECT   OVALERTAPP."" + prio + "" ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql); // time


            }

            for (int i = 0; i &lt; hin_besamt.size(); i++) {

                String timehin = db.getSelect(""SELECT   indicationDateTime  FROM   animalReproductionIndication  where animalReproductionIndication.id="" + hin_id.get(i));
                String animalhin = db.getSelect(""SELECT   animalNumber  FROM   animalReproductionIndication  where animalReproductionIndication.id="" + hin_id.get(i));
                // List&lt;String&gt; maxList=db.getAll(""SELECT  indicationDateTime FROM   animalReproductionIndication  where  user='""+userdb+""' and  animalNumber='""+animalhin+""'  and indicationDateTime!='""+timehin+""' and indicationExpirationDateTime !=''   order by indicationDateTime desc  "");
                String timehin_date = timehin + ""         "";
                List&lt;String&gt; maxList = db.getAll(""SELECT  indicationDateTimeHin FROM   animalReproductionIndicationHinweise  where  userHin='"" + userdb + ""' and  animalNumberHin='"" + animalhin + ""'  and indicationDateTimeHin!='"" + timehin + ""' and (indicationDateTimeHin  not LIKE '"" + timehin_date.substring(0, 8) + ""%') and indicationDateTimeHin &lt; '"" + timehin + ""'  order by indicationDateTimeHin desc  "");

                String hin = """";
                if (maxList.size() &gt; 0) {
                    hin = maxList.get(0);
                    System.out.println(""hin++++"" + hin + "" neue: "" + timehin);
                }
                //hin=tm.getDayToDay(hin,""yyyyMMddkkmmss"");
                hin = tm.getDayMinusDayDate(hin, timehin);
                String line = statusUmbenennen(hin_info.get(i));
                System.out.println(""line: "" + line);
                String info_ = statusUmbenennen(hin_info.get(i));
                System.out.println(""line1: "" + line);
                info_ = info_.replace(""--"", hin);
                System.out.println(""line2: "" + info_);
                System.out.println(info_);
                String[] anfang = {""I Kalb: "", ""I Bes: "", ""n Kalb: "", ""I Bru: "", "" Trocken: ""};
                String[] end = {"""", """", """", """", """"};


                String[] anfang1 = {""I.H: "", ""I.B: "", ""LT: ""};
                String[] end1 = {"""", """", """"};
                try {
                    info_ = lineYMDTag(info_, anfang1, end1);
                    System.out.println(""line3: "" + info_);

                } catch (ParseException e) {
                    e.printStackTrace();
                }
                String[] anfangx = {""Aktiv seit: ""};
                String[] endx = {""""};
                try {
                    info_ = lineYMDHMS(info_, anfangx, endx);
                } catch (ParseException e) {
                    e.printStackTrace();
                }
                try {
                    info_ = lineYMD(info_, anfang, end);
                    System.out.println(""line4: "" + info_);

                } catch (ParseException e) {
                    e.printStackTrace();
                }

                System.out.println(""info_: "" + info_);
                ListHinweise item = new ListHinweise();
                item.setHinId(tier_id.get(i));
                item.setHinId(hin_id.get(i));
                item.setHinBlaue(hin_blaue.get(i));
                item.setHinInfo(info_);
                item.setHinBesamt(hin_besamt.get(i));
                System.out.println(hin_time.get(i) + ""_xmmx_"" + tt.getHourDiffStartToNow(hin_time.get(i), ""yyyyMMddkkmmss""));
                item.setHinTime(String.valueOf(tt.getHourDiffStartToNow(hin_time.get(i), ""yyyyMMddkkmmss"")));
                list_hinweise.add(item);

                db.close();
            }

        } catch (SQLiteException e) {
            e.printStackTrace();
        }

        return list_hinweise;
    }</code></pre>
</div>
</div>
</p>

<p>I have already tried to update the list with onResume or setUserVisibleHint but without success. My refreshContent() method works fine, but I want to update the list automatically and not manually. If I took the onResume() method the Items will be refreshed but then my Tab1 contains the values from Tab1 and Tab2.</p>
","my problem is the effect by swiping through the tabs because I can see the values of TAB1 (see uploaded picture)"
"38525956","How to solve a TabLayout inside a Fragment which includes four Tabs created by one Fragment with newInstance() using RecyclerView","3","<p>I implement an Activity which contains a <code>NavigationView</code> with includes several fragments. The first Fragment of the <code>NavigationView</code> contains a <code>RecyclerView</code> with a <code>TabLayout</code>, so that I can swipe between the different lists. Because I've got always the same list(UI) with different values, I decided to implement only one Fragment with a <code>newInstance()</code>.</p>

<p>My problem now is that the list does not update properly when I jump from Tab1 to Tab2 or if I change a list item and come back to the list. Can somebody help me? I can't figure it out ... </p>

<p><a href=""http://i.stack.imgur.com/1BQoT.png"" rel=""nofollow"">swipe from Tab1 to Tab2</a>
This is my fragment which contains the <code>RecyclerView</code>:
<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>public class HinweiseFragment extends Fragment {

    private static final String TAG = ""HinweiseFragment"";
    private TabLayout mTabLayout;
    private ViewPager mViewPager;
    private HinweiseTabAdapter adapter;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {

        ((MainActivity) getActivity()).getSupportActionBar().setTitle(""Hinweise"");

        ((MainActivity) getActivity()).showFloatingActionButton();

        View rootView = inflater.inflate(R.layout.fragment_hinweise, null);

        mTabLayout = (TabLayout) rootView.findViewById(R.id.tablayout_hinweise);
        mTabLayout.addTab(mTabLayout.newTab().setText(""BESAMUNG""));
        mTabLayout.addTab(mTabLayout.newTab().setText(""NICHT BESAMEN""));
        mTabLayout.addTab(mTabLayout.newTab().setText(""VERDACHT""));
        mTabLayout.addTab(mTabLayout.newTab().setText(""ALLE""));
        mTabLayout.setTabGravity(mTabLayout.GRAVITY_FILL);

        mViewPager = (ViewPager) rootView.findViewById(R.id.viewpager_hinweise);
        adapter = new HinweiseTabAdapter(getChildFragmentManager(), mTabLayout.getTabCount(), getContext());

        mViewPager.setAdapter(adapter);
        mViewPager.setOffscreenPageLimit(3);


        mViewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(mTabLayout));
        mTabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
            @Override
            public void onTabSelected(TabLayout.Tab tab) {

                mViewPager.setCurrentItem(tab.getPosition(), true);
                adapter.refreshFragment(tab.getPosition());

            }

            @Override
            public void onTabUnselected(TabLayout.Tab tab) {
            }

            @Override
            public void onTabReselected(TabLayout.Tab tab) {
            }
        });

        return rootView;

    }
}</code></pre>
</div>
</div>
</p>

<p>This is my TabAdapter:
<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>public class HinweiseTabAdapter extends FragmentPagerAdapter {
    HinweiseListFragment tab_besamung, tab_nicht, tab_verdacht, tab_alle;
    String[] tabHostTitle = {""BESAMUNG"", ""NICHT BESAMEN"", ""VERDACHT"", ""ALLE""};
    int mNumOfTabs;
    private final Context mContext;

    public HinweiseTabAdapter(FragmentManager fm, int NumOfTabs, Context context) {
        super(fm);
        this.mNumOfTabs = NumOfTabs;
        this.mContext = context;
    }

    @Override
    public Fragment getItem(int position) {
        switch (position) {
            case 0:
                tab_besamung = HinweiseListFragment.newInstance(0, ""BESAMUNG"");
                return tab_besamung;
            case 1:
                tab_nicht = HinweiseListFragment.newInstance(1, ""NICHT BESAMEN"");
                return tab_nicht;
            case 2:
                tab_verdacht = HinweiseListFragment.newInstance(2, ""VERDACHT"");
                return tab_verdacht;
            case 3:
                tab_alle = HinweiseListFragment.newInstance(3, ""ALLE"");
                return tab_alle;
            default:
                return null;
        }
    }

    public void refreshFragment(int position) {
        switch (position) {
            case 0:
                tab_besamung.update();
                break;
            case 1:
                tab_nicht.update();
                break;
            case 2:
                tab_verdacht.update();
                break;
            case 3:
                tab_alle.update();
                break;
        }
    }

    @Override
    public int getItemPosition(Object object) {
        int position = getItemPosition(object);

        if (position &gt;= 0) {
            return position;
        } else {
            return POSITION_NONE;
        }
    }

    @Override
    public int getCount() {
        return mNumOfTabs;

    }

    @Override
    public CharSequence getPageTitle(int position) {
        return tabHostTitle[position];
    }
}</code></pre>
</div>
</div>
</p>

<p>and this is my Fragment which contains the List:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>    public static HinweiseListFragment newInstance(int page, String title) {
        HinweiseListFragment fragment = new HinweiseListFragment();
        Bundle args = new Bundle();
        args.putInt(PASSED_PAGE, page);
        args.putString(PASSED_TITLE, title);
        fragment.setArguments(args);
        return fragment;
    }


    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Bundle args = getArguments();
        if (args != null) {
            tabCount = args.getInt(PASSED_PAGE);
            tabName = args.getString(PASSED_TITLE);
        }
    }

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View rootView = inflater.inflate(R.layout.fragment_hinweise_list, container, false);

        list_hinweise = new ArrayList&lt;&gt;();

        mRecyclerView = (RecyclerView) rootView.findViewById(R.id.rv_listHinweise);
        mSwipeRefreshLayout = (SwipeRefreshLayout) rootView.findViewById(R.id.swipeHinweise);

        mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
            @Override
            public void onRefresh() {
                mSwipeRefreshLayout.post(new Runnable() {
                    @Override
                    public void run() {
                        mSwipeRefreshLayout.setRefreshing(true);
                        refreshContent();
                    }
                });

            }
        });

        db = new DataBase(getActivity());
        userHitKdr();

        List&lt;String&gt; tab_ = db.getAll(""SELECT * from tab_info where user_tab ='"" + userdb + ""' "");
        if (tab_.size() != 2) {
            db.updateSql(""delete from tab_info where user_tab='"" + userdb + ""' "");
            db.updateSql(""insert into tab_info (activity_tab,tab_select,user_tab) values ('home','0','"" + userdb + ""'),('aufgabe','0','"" + userdb + ""'); "");
        } else {
        }

        mRecyclerView.setHasFixedSize(true);
        mRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
        mHinweiseAdapter = new HinweiseAdapter(getActivity(), getHinweise());
        mRecyclerView.setAdapter(mHinweiseAdapter);

        ItemClickSupport.addTo(mRecyclerView).setOnItemClickListener(new ItemClickSupport.OnItemClickListener() {
            @Override
            public void onItemClicked(RecyclerView recyclerView, int position, View v) {
                Intent detailView = new Intent(getActivity(), HinweiseDetail.class);

                String[] tierarr = new String[tier_id.size()];
                tier_id.toArray(tierarr);
                String[] hinarr = new String[hin_id.size()];
                hin_id.toArray(hinarr);
                detailView.putExtra(""detailart"", ""ovalert"");
                detailView.putExtra(""idTier"", tier_id.get(position));
                detailView.putExtra(""idDetail"", hin_id.get(position));
                int ipos = position;
                Integer integerConverter = new Integer(ipos);
                String s = integerConverter.toString();
                detailView.putExtra(""pos"", s);
                detailView.putExtra(""arrIdTier"", tierarr);
                detailView.putExtra(""arrIdHin"", hinarr);

                detailView.putExtra(""userDetail"", userdb);
                detailView.putExtra(""hitDetail"", hitdb);
                startActivity(detailView);
            }
        });

        return rootView;
    }


    @Override
    public void setUserVisibleHint(boolean isVisibleToUser) {
        super.setUserVisibleHint(isVisibleToUser);

        if (isVisibleToUser) {
            if(list_hinweise != null) {
                update();
            }
        }
    }

    public String checkTab(int tab) {
        tabCount = tab;
        //tabName = name;

        if (tabCount == 0) {
            auswahl = "" animalReproductionIndication.off='0' and (animalReproductionIndication.indicationCertainty ='IN'  or animalReproductionIndication.indicationCertainty ='ID' or animalReproductionIndication.indicationCertainty ='' ) and "";
            db.updateSql(""update tab_info set tab_select='"" + tabCount + ""' where activity_tab='home' and  user_tab='"" + userdb + ""' "");

            if (list_hinweise != null) {
                list_hinweise.clear();
                if (mHinweiseAdapter != null) {
                    mHinweiseAdapter.notifyDataSetChanged();
                }
            }
        }

        if (tabCount == 1) {
            auswahl = "" animalReproductionIndication.off='0' and  (animalReproductionIndication.indicationCertainty ='NI'  or animalReproductionIndication.indicationCertainty ='HO') and "";
            db.updateSql(""update tab_info set tab_select='"" + tabCount + ""' where activity_tab='home' and  user_tab='"" + userdb + ""' "");

            if (list_hinweise != null) {
                list_hinweise.clear();
                if (mHinweiseAdapter != null) {
                    mHinweiseAdapter.notifyDataSetChanged();
                }
            }
        }

        if (tabCount == 2) {
            auswahl = "" animalReproductionIndication.off='0' and  animalReproductionIndication.indicationCertainty ='SU' and "";
            db.updateSql(""update tab_info set tab_select='"" + tabCount + ""' where activity_tab='home' and  user_tab='"" + userdb + ""' "");

            if (list_hinweise != null) {
                list_hinweise.clear();
                if (mHinweiseAdapter != null) {
                    mHinweiseAdapter.notifyDataSetChanged();
                }
            }
        }
        if (tabCount == 3) {
            auswahl = "" animalReproductionIndication.off='0' and  (animalReproductionIndication.indicationCertainty ='IN' or animalReproductionIndication.indicationCertainty ='NI' or animalReproductionIndication.indicationCertainty ='SU' or animalReproductionIndication.indicationCertainty ='ID'  or animalReproductionIndication.indicationCertainty ='HO') and "";
            db.updateSql(""update tab_info set tab_select='"" + tabCount + ""' where activity_tab='home' and  user_tab='"" + userdb + ""' "");

            if (list_hinweise != null) {
                list_hinweise.clear();
                if (mHinweiseAdapter != null) {
                    mHinweiseAdapter.notifyDataSetChanged();
                }
            }
        }

        return auswahl;
    }

    public void update(){
        tabCount = getArguments() != null ? getArguments().getInt(PASSED_PAGE) : 0;
        tabName = getArguments() != null ? getArguments().getString(PASSED_TITLE) : ""BESAMUNG"";
        list_hinweise.clear();
        mHinweiseAdapter = new HinweiseAdapter(getActivity(), getHinweise());
        mRecyclerView.setAdapter(mHinweiseAdapter);
    }

    public void refreshContent() {
        importIndication();

        tabCount = getArguments() != null ? getArguments().getInt(PASSED_PAGE) : 0;
        tabName = getArguments() != null ? getArguments().getString(PASSED_TITLE) : ""BESAMUNG"";
        list_hinweise.clear();
        mHinweiseAdapter = new HinweiseAdapter(getActivity(), getHinweise());
        mRecyclerView.setAdapter(mHinweiseAdapter);
        // stopping swipe refresh
        mSwipeRefreshLayout.setRefreshing(false);
    }


    private List&lt;ListHinweise&gt; getHinweise() {
        checkTab(tabCount);

        tm = new DateTime();
        rg = new DateRegex();
        tt = new DateTime();

        try {
            db.checkAndCopyDatabase();
            db.openDatabase();
        } catch (SQLiteException e) {
            e.printStackTrace();
        }

        String sqlSortName = ""select nameCode from sortieren where art='1' and (disable='0' or disable='1') and user='"" + userdb + ""'  group by nameCode "";
        String sqlSortDisable = ""select disable from sortieren where art='1' and (disable='0' or disable='1') and user='"" + userdb + ""'  group by nameCode "";

        List&lt;String&gt; listSortName = db.getAll(sqlSortName);
        List&lt;String&gt; listSortDisable = db.getAll(sqlSortDisable);

        String sortSql = """";
        for (int s1 = 0; s1 &lt; listSortName.size(); s1++) {
            System.out.println(""Sort: "" + listSortDisable.get(s1));
            if (s1 == listSortName.size() - 1) {
                String orderby = "" desc "";
                if (listSortDisable.get(s1).equals(""0""))
                    orderby = "" asc "";
                if (listSortName.get(s1).equals(""indicationDateTime""))
                    sortSql = sortSql + "" animalReproductionIndication."" + listSortName.get(s1) + "" "" + orderby;
                else if (listSortName.get(s1).equals(""farmersAnimalNr""))
                    sortSql = sortSql + "" cast(OVALERTAPP."" + listSortName.get(s1) + "" as integer) "" + orderby;
                else
                    sortSql = sortSql + "" OVALERTAPP."" + listSortName.get(s1) + "" "" + orderby;
            } else {
                String orderby = "" desc ,"";
                if (listSortDisable.get(s1).equals(""0""))
                    orderby = "" asc ,"";
                if (listSortName.get(s1).equals(""indicationDateTime""))
                    sortSql = sortSql + "" animalReproductionIndication."" + listSortName.get(s1) + "" "" + orderby;
                else if (listSortName.get(s1).equals(""farmersAnimalNr""))
                    sortSql = sortSql + "" cast(OVALERTAPP."" + listSortName.get(s1) + "" as integer) "" + orderby;
                else
                    sortSql = sortSql + "" OVALERTAPP."" + listSortName.get(s1) + "" "" + orderby;
            }
        }
        String sxc = sortSql;
        sxc = sxc.trim();
        if (!sxc.equals(""""))
            sortSql = "" order by "" + sortSql;

        System.out.println(""Sort: "" + sortSql);

        try {
            sql = "" FROM OVALERTAPP, animalReproductionIndication WHERE "" + sql_user_hit + "" OVALERTAPP.AnimalNumber= animalReproductionIndication.AnimalNumber and "" + auswahl + ""1 "" + sortSql;
            String prio = db.getSelect(""select nameCode from primaeridentifikation where  user='"" + userdb + ""' and art='1' and disable='1'  "");

            List&lt;String&gt; einstellung_name = db.getAll(""SELECT name from einstellungen where user ='"" + userdb + ""' and seite='1' and disable='1' "");
            List&lt;String&gt; einstellung_nameCode = db.getAll(""SELECT nameCode from  einstellungen where user ='"" + userdb + ""' and seite='1' and disable='1' "");
            String xxInhalt = "" "";
            for (int xx = 0; xx &lt; einstellung_name.size(); xx++) {
                String namexx = einstellung_name.get(xx);
                for (int yy = 0; yy &lt; namexx_.length; yy++) {
                    namexx = namexx.replace(namexx_[yy], Abkxx_[yy]);
                }
                xxInhalt = xxInhalt + ""' "" + namexx + "": ' ||  OVALERTAPP."" + einstellung_nameCode.get(xx) + ""    ||"";
            }
            xxInhalt = "" || '&lt;br&gt;' || "" + xxInhalt + "" ''"";
            xxInhalt = xxInhalt.replace(""OVALERTAPP.participantAnimal"", ""OVALERTAPP.participantAnimalNr"");
            if (einstellung_name.size() &lt; 1) {
                xxInhalt = "" "";
            }

            tier_id = db.getAll(""SELECT OVALERTAPP.id "" + sql);
            hin_id = db.getAll(""SELECT animalReproductionIndication.id "" + sql);
            hin_besamt = db.getAll(""SELECT animalReproductionIndication.indicationCertainty "" + sql);
            hin_blaue = db.getAll(""select animalReproductionIndication.showType "" + sql);
            hin_time = db.getAll(""select animalReproductionIndication.indicationDateTime "" + sql); //gesehen

            if (prio.equals("""")) {
                String sql_ = "" SELECT  OVALERTAPP.AnimalNumber ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql; // time
                sql_ = sql_.replace(""OVALERTAPP.aktivseit"", ""animalReproductionIndication.indicationDateTime"");
                hin_info = db.getAll(sql_);
                // hin_info = db.getAll("" SELECT  OVALERTAPP.AnimalNumber ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql); // time

                System.out.println("" SELECT  OVALERTAPP.AnimalNumber ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql); // time

            } else {
                //hin_info = db.getAll("" SELECT   OVALERTAPP."" + prio + "" ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql); // time
                String sql_ = "" SELECT   OVALERTAPP."" + prio + "" ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql; // time

                sql_ = sql_.replace(""OVALERTAPP.aktivseit"", ""animalReproductionIndication.indicationDateTime"");
                hin_info = db.getAll(sql_);
                System.out.println("" SELECT   OVALERTAPP."" + prio + "" ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql); // time


            }

            for (int i = 0; i &lt; hin_besamt.size(); i++) {

                String timehin = db.getSelect(""SELECT   indicationDateTime  FROM   animalReproductionIndication  where animalReproductionIndication.id="" + hin_id.get(i));
                String animalhin = db.getSelect(""SELECT   animalNumber  FROM   animalReproductionIndication  where animalReproductionIndication.id="" + hin_id.get(i));
                // List&lt;String&gt; maxList=db.getAll(""SELECT  indicationDateTime FROM   animalReproductionIndication  where  user='""+userdb+""' and  animalNumber='""+animalhin+""'  and indicationDateTime!='""+timehin+""' and indicationExpirationDateTime !=''   order by indicationDateTime desc  "");
                String timehin_date = timehin + ""         "";
                List&lt;String&gt; maxList = db.getAll(""SELECT  indicationDateTimeHin FROM   animalReproductionIndicationHinweise  where  userHin='"" + userdb + ""' and  animalNumberHin='"" + animalhin + ""'  and indicationDateTimeHin!='"" + timehin + ""' and (indicationDateTimeHin  not LIKE '"" + timehin_date.substring(0, 8) + ""%') and indicationDateTimeHin &lt; '"" + timehin + ""'  order by indicationDateTimeHin desc  "");

                String hin = """";
                if (maxList.size() &gt; 0) {
                    hin = maxList.get(0);
                    System.out.println(""hin++++"" + hin + "" neue: "" + timehin);
                }
                //hin=tm.getDayToDay(hin,""yyyyMMddkkmmss"");
                hin = tm.getDayMinusDayDate(hin, timehin);
                String line = statusUmbenennen(hin_info.get(i));
                System.out.println(""line: "" + line);
                String info_ = statusUmbenennen(hin_info.get(i));
                System.out.println(""line1: "" + line);
                info_ = info_.replace(""--"", hin);
                System.out.println(""line2: "" + info_);
                System.out.println(info_);
                String[] anfang = {""I Kalb: "", ""I Bes: "", ""n Kalb: "", ""I Bru: "", "" Trocken: ""};
                String[] end = {"""", """", """", """", """"};


                String[] anfang1 = {""I.H: "", ""I.B: "", ""LT: ""};
                String[] end1 = {"""", """", """"};
                try {
                    info_ = lineYMDTag(info_, anfang1, end1);
                    System.out.println(""line3: "" + info_);

                } catch (ParseException e) {
                    e.printStackTrace();
                }
                String[] anfangx = {""Aktiv seit: ""};
                String[] endx = {""""};
                try {
                    info_ = lineYMDHMS(info_, anfangx, endx);
                } catch (ParseException e) {
                    e.printStackTrace();
                }
                try {
                    info_ = lineYMD(info_, anfang, end);
                    System.out.println(""line4: "" + info_);

                } catch (ParseException e) {
                    e.printStackTrace();
                }

                System.out.println(""info_: "" + info_);
                ListHinweise item = new ListHinweise();
                item.setHinId(tier_id.get(i));
                item.setHinId(hin_id.get(i));
                item.setHinBlaue(hin_blaue.get(i));
                item.setHinInfo(info_);
                item.setHinBesamt(hin_besamt.get(i));
                System.out.println(hin_time.get(i) + ""_xmmx_"" + tt.getHourDiffStartToNow(hin_time.get(i), ""yyyyMMddkkmmss""));
                item.setHinTime(String.valueOf(tt.getHourDiffStartToNow(hin_time.get(i), ""yyyyMMddkkmmss"")));
                list_hinweise.add(item);

                db.close();
            }

        } catch (SQLiteException e) {
            e.printStackTrace();
        }

        return list_hinweise;
    }</code></pre>
</div>
</div>
</p>

<p>I have already tried to update the list with onResume or setUserVisibleHint but without success. My refreshContent() method works fine, but I want to update the list automatically and not manually. If I took the onResume() method the Items will be refreshed but then my Tab1 contains the values from Tab1 and Tab2.</p>
","If I start the app ...  every tab gots the same value of tab1 ... I can see it if i swipe through the tabs, but if I click on the tab everything works fine ... only if I swipe I can see the values of Tab1 and if the selected Tab is open my fragment will be refreshed by adapter in method: refreshFragment()"
"38525956","How to solve a TabLayout inside a Fragment which includes four Tabs created by one Fragment with newInstance() using RecyclerView","3","<p>I implement an Activity which contains a <code>NavigationView</code> with includes several fragments. The first Fragment of the <code>NavigationView</code> contains a <code>RecyclerView</code> with a <code>TabLayout</code>, so that I can swipe between the different lists. Because I've got always the same list(UI) with different values, I decided to implement only one Fragment with a <code>newInstance()</code>.</p>

<p>My problem now is that the list does not update properly when I jump from Tab1 to Tab2 or if I change a list item and come back to the list. Can somebody help me? I can't figure it out ... </p>

<p><a href=""http://i.stack.imgur.com/1BQoT.png"" rel=""nofollow"">swipe from Tab1 to Tab2</a>
This is my fragment which contains the <code>RecyclerView</code>:
<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>public class HinweiseFragment extends Fragment {

    private static final String TAG = ""HinweiseFragment"";
    private TabLayout mTabLayout;
    private ViewPager mViewPager;
    private HinweiseTabAdapter adapter;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {

        ((MainActivity) getActivity()).getSupportActionBar().setTitle(""Hinweise"");

        ((MainActivity) getActivity()).showFloatingActionButton();

        View rootView = inflater.inflate(R.layout.fragment_hinweise, null);

        mTabLayout = (TabLayout) rootView.findViewById(R.id.tablayout_hinweise);
        mTabLayout.addTab(mTabLayout.newTab().setText(""BESAMUNG""));
        mTabLayout.addTab(mTabLayout.newTab().setText(""NICHT BESAMEN""));
        mTabLayout.addTab(mTabLayout.newTab().setText(""VERDACHT""));
        mTabLayout.addTab(mTabLayout.newTab().setText(""ALLE""));
        mTabLayout.setTabGravity(mTabLayout.GRAVITY_FILL);

        mViewPager = (ViewPager) rootView.findViewById(R.id.viewpager_hinweise);
        adapter = new HinweiseTabAdapter(getChildFragmentManager(), mTabLayout.getTabCount(), getContext());

        mViewPager.setAdapter(adapter);
        mViewPager.setOffscreenPageLimit(3);


        mViewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(mTabLayout));
        mTabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
            @Override
            public void onTabSelected(TabLayout.Tab tab) {

                mViewPager.setCurrentItem(tab.getPosition(), true);
                adapter.refreshFragment(tab.getPosition());

            }

            @Override
            public void onTabUnselected(TabLayout.Tab tab) {
            }

            @Override
            public void onTabReselected(TabLayout.Tab tab) {
            }
        });

        return rootView;

    }
}</code></pre>
</div>
</div>
</p>

<p>This is my TabAdapter:
<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>public class HinweiseTabAdapter extends FragmentPagerAdapter {
    HinweiseListFragment tab_besamung, tab_nicht, tab_verdacht, tab_alle;
    String[] tabHostTitle = {""BESAMUNG"", ""NICHT BESAMEN"", ""VERDACHT"", ""ALLE""};
    int mNumOfTabs;
    private final Context mContext;

    public HinweiseTabAdapter(FragmentManager fm, int NumOfTabs, Context context) {
        super(fm);
        this.mNumOfTabs = NumOfTabs;
        this.mContext = context;
    }

    @Override
    public Fragment getItem(int position) {
        switch (position) {
            case 0:
                tab_besamung = HinweiseListFragment.newInstance(0, ""BESAMUNG"");
                return tab_besamung;
            case 1:
                tab_nicht = HinweiseListFragment.newInstance(1, ""NICHT BESAMEN"");
                return tab_nicht;
            case 2:
                tab_verdacht = HinweiseListFragment.newInstance(2, ""VERDACHT"");
                return tab_verdacht;
            case 3:
                tab_alle = HinweiseListFragment.newInstance(3, ""ALLE"");
                return tab_alle;
            default:
                return null;
        }
    }

    public void refreshFragment(int position) {
        switch (position) {
            case 0:
                tab_besamung.update();
                break;
            case 1:
                tab_nicht.update();
                break;
            case 2:
                tab_verdacht.update();
                break;
            case 3:
                tab_alle.update();
                break;
        }
    }

    @Override
    public int getItemPosition(Object object) {
        int position = getItemPosition(object);

        if (position &gt;= 0) {
            return position;
        } else {
            return POSITION_NONE;
        }
    }

    @Override
    public int getCount() {
        return mNumOfTabs;

    }

    @Override
    public CharSequence getPageTitle(int position) {
        return tabHostTitle[position];
    }
}</code></pre>
</div>
</div>
</p>

<p>and this is my Fragment which contains the List:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>    public static HinweiseListFragment newInstance(int page, String title) {
        HinweiseListFragment fragment = new HinweiseListFragment();
        Bundle args = new Bundle();
        args.putInt(PASSED_PAGE, page);
        args.putString(PASSED_TITLE, title);
        fragment.setArguments(args);
        return fragment;
    }


    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Bundle args = getArguments();
        if (args != null) {
            tabCount = args.getInt(PASSED_PAGE);
            tabName = args.getString(PASSED_TITLE);
        }
    }

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View rootView = inflater.inflate(R.layout.fragment_hinweise_list, container, false);

        list_hinweise = new ArrayList&lt;&gt;();

        mRecyclerView = (RecyclerView) rootView.findViewById(R.id.rv_listHinweise);
        mSwipeRefreshLayout = (SwipeRefreshLayout) rootView.findViewById(R.id.swipeHinweise);

        mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
            @Override
            public void onRefresh() {
                mSwipeRefreshLayout.post(new Runnable() {
                    @Override
                    public void run() {
                        mSwipeRefreshLayout.setRefreshing(true);
                        refreshContent();
                    }
                });

            }
        });

        db = new DataBase(getActivity());
        userHitKdr();

        List&lt;String&gt; tab_ = db.getAll(""SELECT * from tab_info where user_tab ='"" + userdb + ""' "");
        if (tab_.size() != 2) {
            db.updateSql(""delete from tab_info where user_tab='"" + userdb + ""' "");
            db.updateSql(""insert into tab_info (activity_tab,tab_select,user_tab) values ('home','0','"" + userdb + ""'),('aufgabe','0','"" + userdb + ""'); "");
        } else {
        }

        mRecyclerView.setHasFixedSize(true);
        mRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
        mHinweiseAdapter = new HinweiseAdapter(getActivity(), getHinweise());
        mRecyclerView.setAdapter(mHinweiseAdapter);

        ItemClickSupport.addTo(mRecyclerView).setOnItemClickListener(new ItemClickSupport.OnItemClickListener() {
            @Override
            public void onItemClicked(RecyclerView recyclerView, int position, View v) {
                Intent detailView = new Intent(getActivity(), HinweiseDetail.class);

                String[] tierarr = new String[tier_id.size()];
                tier_id.toArray(tierarr);
                String[] hinarr = new String[hin_id.size()];
                hin_id.toArray(hinarr);
                detailView.putExtra(""detailart"", ""ovalert"");
                detailView.putExtra(""idTier"", tier_id.get(position));
                detailView.putExtra(""idDetail"", hin_id.get(position));
                int ipos = position;
                Integer integerConverter = new Integer(ipos);
                String s = integerConverter.toString();
                detailView.putExtra(""pos"", s);
                detailView.putExtra(""arrIdTier"", tierarr);
                detailView.putExtra(""arrIdHin"", hinarr);

                detailView.putExtra(""userDetail"", userdb);
                detailView.putExtra(""hitDetail"", hitdb);
                startActivity(detailView);
            }
        });

        return rootView;
    }


    @Override
    public void setUserVisibleHint(boolean isVisibleToUser) {
        super.setUserVisibleHint(isVisibleToUser);

        if (isVisibleToUser) {
            if(list_hinweise != null) {
                update();
            }
        }
    }

    public String checkTab(int tab) {
        tabCount = tab;
        //tabName = name;

        if (tabCount == 0) {
            auswahl = "" animalReproductionIndication.off='0' and (animalReproductionIndication.indicationCertainty ='IN'  or animalReproductionIndication.indicationCertainty ='ID' or animalReproductionIndication.indicationCertainty ='' ) and "";
            db.updateSql(""update tab_info set tab_select='"" + tabCount + ""' where activity_tab='home' and  user_tab='"" + userdb + ""' "");

            if (list_hinweise != null) {
                list_hinweise.clear();
                if (mHinweiseAdapter != null) {
                    mHinweiseAdapter.notifyDataSetChanged();
                }
            }
        }

        if (tabCount == 1) {
            auswahl = "" animalReproductionIndication.off='0' and  (animalReproductionIndication.indicationCertainty ='NI'  or animalReproductionIndication.indicationCertainty ='HO') and "";
            db.updateSql(""update tab_info set tab_select='"" + tabCount + ""' where activity_tab='home' and  user_tab='"" + userdb + ""' "");

            if (list_hinweise != null) {
                list_hinweise.clear();
                if (mHinweiseAdapter != null) {
                    mHinweiseAdapter.notifyDataSetChanged();
                }
            }
        }

        if (tabCount == 2) {
            auswahl = "" animalReproductionIndication.off='0' and  animalReproductionIndication.indicationCertainty ='SU' and "";
            db.updateSql(""update tab_info set tab_select='"" + tabCount + ""' where activity_tab='home' and  user_tab='"" + userdb + ""' "");

            if (list_hinweise != null) {
                list_hinweise.clear();
                if (mHinweiseAdapter != null) {
                    mHinweiseAdapter.notifyDataSetChanged();
                }
            }
        }
        if (tabCount == 3) {
            auswahl = "" animalReproductionIndication.off='0' and  (animalReproductionIndication.indicationCertainty ='IN' or animalReproductionIndication.indicationCertainty ='NI' or animalReproductionIndication.indicationCertainty ='SU' or animalReproductionIndication.indicationCertainty ='ID'  or animalReproductionIndication.indicationCertainty ='HO') and "";
            db.updateSql(""update tab_info set tab_select='"" + tabCount + ""' where activity_tab='home' and  user_tab='"" + userdb + ""' "");

            if (list_hinweise != null) {
                list_hinweise.clear();
                if (mHinweiseAdapter != null) {
                    mHinweiseAdapter.notifyDataSetChanged();
                }
            }
        }

        return auswahl;
    }

    public void update(){
        tabCount = getArguments() != null ? getArguments().getInt(PASSED_PAGE) : 0;
        tabName = getArguments() != null ? getArguments().getString(PASSED_TITLE) : ""BESAMUNG"";
        list_hinweise.clear();
        mHinweiseAdapter = new HinweiseAdapter(getActivity(), getHinweise());
        mRecyclerView.setAdapter(mHinweiseAdapter);
    }

    public void refreshContent() {
        importIndication();

        tabCount = getArguments() != null ? getArguments().getInt(PASSED_PAGE) : 0;
        tabName = getArguments() != null ? getArguments().getString(PASSED_TITLE) : ""BESAMUNG"";
        list_hinweise.clear();
        mHinweiseAdapter = new HinweiseAdapter(getActivity(), getHinweise());
        mRecyclerView.setAdapter(mHinweiseAdapter);
        // stopping swipe refresh
        mSwipeRefreshLayout.setRefreshing(false);
    }


    private List&lt;ListHinweise&gt; getHinweise() {
        checkTab(tabCount);

        tm = new DateTime();
        rg = new DateRegex();
        tt = new DateTime();

        try {
            db.checkAndCopyDatabase();
            db.openDatabase();
        } catch (SQLiteException e) {
            e.printStackTrace();
        }

        String sqlSortName = ""select nameCode from sortieren where art='1' and (disable='0' or disable='1') and user='"" + userdb + ""'  group by nameCode "";
        String sqlSortDisable = ""select disable from sortieren where art='1' and (disable='0' or disable='1') and user='"" + userdb + ""'  group by nameCode "";

        List&lt;String&gt; listSortName = db.getAll(sqlSortName);
        List&lt;String&gt; listSortDisable = db.getAll(sqlSortDisable);

        String sortSql = """";
        for (int s1 = 0; s1 &lt; listSortName.size(); s1++) {
            System.out.println(""Sort: "" + listSortDisable.get(s1));
            if (s1 == listSortName.size() - 1) {
                String orderby = "" desc "";
                if (listSortDisable.get(s1).equals(""0""))
                    orderby = "" asc "";
                if (listSortName.get(s1).equals(""indicationDateTime""))
                    sortSql = sortSql + "" animalReproductionIndication."" + listSortName.get(s1) + "" "" + orderby;
                else if (listSortName.get(s1).equals(""farmersAnimalNr""))
                    sortSql = sortSql + "" cast(OVALERTAPP."" + listSortName.get(s1) + "" as integer) "" + orderby;
                else
                    sortSql = sortSql + "" OVALERTAPP."" + listSortName.get(s1) + "" "" + orderby;
            } else {
                String orderby = "" desc ,"";
                if (listSortDisable.get(s1).equals(""0""))
                    orderby = "" asc ,"";
                if (listSortName.get(s1).equals(""indicationDateTime""))
                    sortSql = sortSql + "" animalReproductionIndication."" + listSortName.get(s1) + "" "" + orderby;
                else if (listSortName.get(s1).equals(""farmersAnimalNr""))
                    sortSql = sortSql + "" cast(OVALERTAPP."" + listSortName.get(s1) + "" as integer) "" + orderby;
                else
                    sortSql = sortSql + "" OVALERTAPP."" + listSortName.get(s1) + "" "" + orderby;
            }
        }
        String sxc = sortSql;
        sxc = sxc.trim();
        if (!sxc.equals(""""))
            sortSql = "" order by "" + sortSql;

        System.out.println(""Sort: "" + sortSql);

        try {
            sql = "" FROM OVALERTAPP, animalReproductionIndication WHERE "" + sql_user_hit + "" OVALERTAPP.AnimalNumber= animalReproductionIndication.AnimalNumber and "" + auswahl + ""1 "" + sortSql;
            String prio = db.getSelect(""select nameCode from primaeridentifikation where  user='"" + userdb + ""' and art='1' and disable='1'  "");

            List&lt;String&gt; einstellung_name = db.getAll(""SELECT name from einstellungen where user ='"" + userdb + ""' and seite='1' and disable='1' "");
            List&lt;String&gt; einstellung_nameCode = db.getAll(""SELECT nameCode from  einstellungen where user ='"" + userdb + ""' and seite='1' and disable='1' "");
            String xxInhalt = "" "";
            for (int xx = 0; xx &lt; einstellung_name.size(); xx++) {
                String namexx = einstellung_name.get(xx);
                for (int yy = 0; yy &lt; namexx_.length; yy++) {
                    namexx = namexx.replace(namexx_[yy], Abkxx_[yy]);
                }
                xxInhalt = xxInhalt + ""' "" + namexx + "": ' ||  OVALERTAPP."" + einstellung_nameCode.get(xx) + ""    ||"";
            }
            xxInhalt = "" || '&lt;br&gt;' || "" + xxInhalt + "" ''"";
            xxInhalt = xxInhalt.replace(""OVALERTAPP.participantAnimal"", ""OVALERTAPP.participantAnimalNr"");
            if (einstellung_name.size() &lt; 1) {
                xxInhalt = "" "";
            }

            tier_id = db.getAll(""SELECT OVALERTAPP.id "" + sql);
            hin_id = db.getAll(""SELECT animalReproductionIndication.id "" + sql);
            hin_besamt = db.getAll(""SELECT animalReproductionIndication.indicationCertainty "" + sql);
            hin_blaue = db.getAll(""select animalReproductionIndication.showType "" + sql);
            hin_time = db.getAll(""select animalReproductionIndication.indicationDateTime "" + sql); //gesehen

            if (prio.equals("""")) {
                String sql_ = "" SELECT  OVALERTAPP.AnimalNumber ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql; // time
                sql_ = sql_.replace(""OVALERTAPP.aktivseit"", ""animalReproductionIndication.indicationDateTime"");
                hin_info = db.getAll(sql_);
                // hin_info = db.getAll("" SELECT  OVALERTAPP.AnimalNumber ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql); // time

                System.out.println("" SELECT  OVALERTAPP.AnimalNumber ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql); // time

            } else {
                //hin_info = db.getAll("" SELECT   OVALERTAPP."" + prio + "" ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql); // time
                String sql_ = "" SELECT   OVALERTAPP."" + prio + "" ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql; // time

                sql_ = sql_.replace(""OVALERTAPP.aktivseit"", ""animalReproductionIndication.indicationDateTime"");
                hin_info = db.getAll(sql_);
                System.out.println("" SELECT   OVALERTAPP."" + prio + "" ||  ' I.H: ' ||  '--'    || ' T I.B: ' || OVALERTAPP.lastInseminationDate    || ' T LT: '  || OVALERTAPP.calvingDate  || '  T  '||  reproductionStatus "" + xxInhalt + "" "" + sql); // time


            }

            for (int i = 0; i &lt; hin_besamt.size(); i++) {

                String timehin = db.getSelect(""SELECT   indicationDateTime  FROM   animalReproductionIndication  where animalReproductionIndication.id="" + hin_id.get(i));
                String animalhin = db.getSelect(""SELECT   animalNumber  FROM   animalReproductionIndication  where animalReproductionIndication.id="" + hin_id.get(i));
                // List&lt;String&gt; maxList=db.getAll(""SELECT  indicationDateTime FROM   animalReproductionIndication  where  user='""+userdb+""' and  animalNumber='""+animalhin+""'  and indicationDateTime!='""+timehin+""' and indicationExpirationDateTime !=''   order by indicationDateTime desc  "");
                String timehin_date = timehin + ""         "";
                List&lt;String&gt; maxList = db.getAll(""SELECT  indicationDateTimeHin FROM   animalReproductionIndicationHinweise  where  userHin='"" + userdb + ""' and  animalNumberHin='"" + animalhin + ""'  and indicationDateTimeHin!='"" + timehin + ""' and (indicationDateTimeHin  not LIKE '"" + timehin_date.substring(0, 8) + ""%') and indicationDateTimeHin &lt; '"" + timehin + ""'  order by indicationDateTimeHin desc  "");

                String hin = """";
                if (maxList.size() &gt; 0) {
                    hin = maxList.get(0);
                    System.out.println(""hin++++"" + hin + "" neue: "" + timehin);
                }
                //hin=tm.getDayToDay(hin,""yyyyMMddkkmmss"");
                hin = tm.getDayMinusDayDate(hin, timehin);
                String line = statusUmbenennen(hin_info.get(i));
                System.out.println(""line: "" + line);
                String info_ = statusUmbenennen(hin_info.get(i));
                System.out.println(""line1: "" + line);
                info_ = info_.replace(""--"", hin);
                System.out.println(""line2: "" + info_);
                System.out.println(info_);
                String[] anfang = {""I Kalb: "", ""I Bes: "", ""n Kalb: "", ""I Bru: "", "" Trocken: ""};
                String[] end = {"""", """", """", """", """"};


                String[] anfang1 = {""I.H: "", ""I.B: "", ""LT: ""};
                String[] end1 = {"""", """", """"};
                try {
                    info_ = lineYMDTag(info_, anfang1, end1);
                    System.out.println(""line3: "" + info_);

                } catch (ParseException e) {
                    e.printStackTrace();
                }
                String[] anfangx = {""Aktiv seit: ""};
                String[] endx = {""""};
                try {
                    info_ = lineYMDHMS(info_, anfangx, endx);
                } catch (ParseException e) {
                    e.printStackTrace();
                }
                try {
                    info_ = lineYMD(info_, anfang, end);
                    System.out.println(""line4: "" + info_);

                } catch (ParseException e) {
                    e.printStackTrace();
                }

                System.out.println(""info_: "" + info_);
                ListHinweise item = new ListHinweise();
                item.setHinId(tier_id.get(i));
                item.setHinId(hin_id.get(i));
                item.setHinBlaue(hin_blaue.get(i));
                item.setHinInfo(info_);
                item.setHinBesamt(hin_besamt.get(i));
                System.out.println(hin_time.get(i) + ""_xmmx_"" + tt.getHourDiffStartToNow(hin_time.get(i), ""yyyyMMddkkmmss""));
                item.setHinTime(String.valueOf(tt.getHourDiffStartToNow(hin_time.get(i), ""yyyyMMddkkmmss"")));
                list_hinweise.add(item);

                db.close();
            }

        } catch (SQLiteException e) {
            e.printStackTrace();
        }

        return list_hinweise;
    }</code></pre>
</div>
</div>
</p>

<p>I have already tried to update the list with onResume or setUserVisibleHint but without success. My refreshContent() method works fine, but I want to update the list automatically and not manually. If I took the onResume() method the Items will be refreshed but then my Tab1 contains the values from Tab1 and Tab2.</p>
","I solved this Problem by using AsyncTasks for each fragment and boolean operators in userVisibleHint() method. First boolean operator checks ""first start"" in onCreateView and second boolean checks if view is visible in userVisibleHint ... :)"
"38645808","Update react-router and react-router-relay to v2.x from v1.x (Location ""/"" did not match any routes)","0","<p>I'm trying to update react-router to v2.6 and react-router-relay to v0.7 in my app but I'm struggling to follow the changelogs to address all breaking changes. I think I addressed all changes but I still can't make it work. </p>

<blockquote>
  <p>Warning: [react-router] Location ""/"" did not match any routes</p>
</blockquote>

<p>Here is a step by step guide on what I did to address the changes. First I updated the npm modules. </p>

<p>My previous package.json where everything worked:</p>

<pre><code>""dependencies"": {
    ""babel-polyfill"": ""^6.9.1"",
    ""babel-runtime"": ""^6.9.2"",
    ""graphiql"": ""0.7.3"",
    ""graphql"": ""^0.6.2"",
    ""history"": ""1.13.1"",
    ""isomorphic-fetch"": ""^2.1.1"",
    ""react"": ""^15.2.1"",
    ""react-addons-shallow-compare"": ""^15.2.1"",
    ""react-dom"": ""^15.2.1"",
    ""react-loader"": ""^2.0.0"",
    ""react-relay"": ""^0.9.2"",
    ""react-router"": ""1.0.0-rc3"",
    ""react-router-relay"": ""^0.7.0"",
    ""superagent"": ""^1.2.0""
  },
  ""devDependencies"": {
    ""babel-core"": ""^6.11.4"",
    ""babel-eslint"": ""^6.1.2"",
    ""babel-jest"": ""^13.2.2"",
    ""babel-loader"": ""^6.2.4"",
    ""babel-plugin-add-module-exports"": ""^0.2.1"",
    ""babel-plugin-transform-runtime"": ""^6.9.0"",
    ""babel-preset-es2015"": ""^6.9.0"",
    ""babel-preset-react"": ""^6.11.1"",
    ""babel-preset-stage-0"": ""^6.5.0"",
    ""babel-preset-stage-1"": ""^6.5.0"",
    ""babel-preset-stage-2"": ""^6.11.0"",
    ""babel-relay-plugin"": ""^0.9.2"",
    ""jest-cli"": ""^12.1.1"",
    ""react-addons-test-utils"": ""^15.2.1"",
    ""webpack"": ""^1.13.1""
  },
</code></pre>

<p>My new package.json, where I'm getting errors:</p>

<pre><code>""dependencies"": {
    ""babel-polyfill"": ""^6.9.1"",
    ""babel-runtime"": ""^6.9.2"",
    ""graphiql"": ""0.7.3"",
    ""graphql"": ""^0.6.2"",
    ""isomorphic-fetch"": ""^2.1.1"",
    ""react"": ""^15.2.1"",
    ""react-addons-shallow-compare"": ""^15.2.1"",
    ""react-dom"": ""^15.2.1"",
    ""react-loader"": ""^2.0.0"",
    ""react-relay"": ""^0.9.2"",
    ""react-router"": ""^2.6.0"",
    ""react-router-relay"": ""^0.13.3"",
    ""superagent"": ""^1.2.0""
  },
  ""devDependencies"": {
    ""babel-core"": ""^6.11.4"",
    ""babel-eslint"": ""^6.1.2"",
    ""babel-jest"": ""^14.0.0"",
    ""babel-loader"": ""^6.2.4"",
    ""babel-plugin-add-module-exports"": ""^0.2.1"",
    ""babel-plugin-transform-runtime"": ""^6.9.0"",
    ""babel-preset-es2015"": ""^6.9.0"",
    ""babel-preset-react"": ""^6.11.1"",
    ""babel-preset-stage-0"": ""^6.5.0"",
    ""babel-preset-stage-1"": ""^6.5.0"",
    ""babel-preset-stage-2"": ""^6.11.0"",
    ""babel-relay-plugin"": ""^0.9.2"",
    ""jest-cli"": ""^12.1.1"",
    ""react-addons-test-utils"": ""^15.2.1"",
    ""webpack"": ""^1.13.1""
  },
</code></pre>

<p>I removed the history module because it is now a direct dependency of react-router. Once I installed the latest modules, I reloaded my page and got the following errors:</p>

<p><strong>Error 1:</strong></p>

<blockquote>
  <p>Warning: [react-router] It appears you have provided a deprecated history object to <code>&lt;Router/&gt;</code>, please use a history provided by React Router with <code>import { browserHistory } from 'react-router'</code> or <code>import { hashHistory } from 'react-router'</code>. If you are using a custom history please create it with <code>useRouterHistory</code>, see <a href=""https://github.com/reactjs/react-router/blob/master/upgrade-guides/v2.0.0.md#using-history-with-router"" rel=""nofollow noreferrer"">https://github.com/reactjs/react-router/blob/master/upgrade-guides/v2.0.0.md#using-history-with-router</a> for details.</p>
</blockquote>

<p><strong>Error 2:</strong> </p>

<blockquote>
  <p>Warning: Failed context type: Invalid prop/context <code>relay</code> supplied to <code>Relay(App)</code>, expected <code>undefined</code> to be an object conforming to the <code>RelayEnvironment</code> interface.</p>

<pre><code>in Relay(App) (created by RouterContext)
in RouterContext (created by Router)
in Router
</code></pre>
</blockquote>

<p><strong>Error 3:</strong></p>

<blockquote>
  <p>Warning: Failed context type: Required context <code>route</code> was not specified in <code>Relay(App)</code>.</p>

<pre><code>in Relay(App) (created by RouterContext)
in RouterContext (created by Router)
in Router
</code></pre>
</blockquote>

<p><strong>Error 4:</strong> </p>

<blockquote>
  <p>Uncaught Invariant Violation: RelayContainer: <code>Relay(App)</code> was rendered with invalid Relay context <code>undefined</code>. Make sure the <code>relay</code> property on the React context conforms to the <code>RelayEnvironment</code> interface.</p>
</blockquote>

<p>The first error gives a handy link to the upgrade-guides for react-router, so I followed it and updated my app.js file accordingly. </p>

<p>Before my changes it looked this:</p>

<pre><code>import babelPolyfill from 'babel-polyfill';
import React from 'react';
import ReactDOM from 'react-dom';
import ReactRouterRelay from 'react-router-relay';
import Loader from 'react-loader';
import { Router, Route } from 'react-router';
import createBrowserHistory from 'history/lib/createBrowserHistory';

import WelcomeQueries from './queries/WelcomeQueries';
import AppQueries from './queries/AppQueries';
import LandingQueries from './queries/LandingQueries';

import App from './components/app';
import Landing from './components/landing';

import './relay';

const renderProps = {
  renderLoading: () =&gt; &lt;Loader /&gt;,
};

ReactDOM.render((
  &lt;Router history={createBrowserHistory()} createElement={ReactRouterRelay.createElement}&gt;
    &lt;Route component={App} queries={AppQueries} {...renderProps}&gt;
      &lt;Route path=""/myapp"" component={Landing} queries={LandingQueries} {...renderProps} /&gt;
    &lt;/Route&gt;
    &lt;Route path=""/myapp/tracks"" component={Welcome} queries={WelcomeQueries} {...renderProps}/&gt;
  &lt;/Router&gt;
), document.getElementById('myapp-body'));
</code></pre>

<p><strong>Attempt 1</strong></p>

<p>Using the update guide to 2.x I've changed my app.js file to use a <strong>custom history</strong> like this:</p>

<pre><code>import babelPolyfill from 'babel-polyfill';
import React from 'react';
import ReactDOM from 'react-dom';
import ReactRouterRelay from 'react-router-relay';
import Loader from 'react-loader';

import { Router, Route, useRouterHistory } from 'react-router'
import { createHashHistory } from 'history'

import WelcomeQueries from './queries/WelcomeQueries';
import AppQueries from './queries/AppQueries';
import LandingQueries from './queries/LandingQueries';

import App from './components/app';
import Landing from './components/landing';

import './relay';

const renderProps = {
  renderLoading: () =&gt; &lt;Loader /&gt;,
};

const appHistory = useRouterHistory(createHashHistory)({ queryKey: false })

ReactDOM.render((
  &lt;Router history={appHistory} createElement={ReactRouterRelay.createElement}&gt;
    &lt;Route component={App} queries={AppQueries} {...renderProps}&gt;
      &lt;Route path=""/myapp"" component={Landing} queries={LandingQueries} {...renderProps} /&gt;
    &lt;/Route&gt;
    &lt;Route path=""/myapp/tracks"" component={Welcome} queries={WelcomeQueries} {...renderProps}/&gt;
  &lt;/Router&gt;
), document.getElementById('myapp-body'));
</code></pre>

<p>This then gives me the following error in the browser:</p>

<p><strong>Error 5</strong></p>

<blockquote>
  <p>Warning: [react-router] Location ""/"" did not match any routes</p>
</blockquote>

<p>I believe that is the solution I want.. However I wasn't sure, so I also tried going the <strong>Browser (HTML5 pushState) History</strong> way and tried the following change: </p>

<p><strong>Attempt 2</strong></p>

<pre><code>import babelPolyfill from 'babel-polyfill';
import React from 'react';
import ReactDOM from 'react-dom';
import ReactRouterRelay from 'react-router-relay';
import Loader from 'react-loader';

import { Router, Route, browserHistory } from 'react-router'

import WelcomeQueries from './queries/WelcomeQueries';
import AppQueries from './queries/AppQueries';
import LandingQueries from './queries/LandingQueries';

import App from './components/app';
import Landing from './components/landing';

import './relay';

const renderProps = {
  renderLoading: () =&gt; &lt;Loader /&gt;,
};

const appHistory = useRouterHistory(createHashHistory)({ queryKey: false })

ReactDOM.render((
  &lt;Router history={browserHistory} createElement={ReactRouterRelay.createElement}&gt;
    &lt;Route component={App} queries={AppQueries} {...renderProps}&gt;
      &lt;Route path=""/myapp"" component={Landing} queries={LandingQueries} {...renderProps} /&gt;
    &lt;/Route&gt;
    &lt;Route path=""/myapp/tracks"" component={Welcome} queries={WelcomeQueries} {...renderProps}/&gt;
  &lt;/Router&gt;
), document.getElementById('myapp-body'));
</code></pre>

<p>When loading this, I get back errors 2, 3 and 4. I think Attempt 1 is the correct approach but I don't know what this error means and googling it, gave me tons of answers (<a href=""https://stackoverflow.com/questions/34837138/react-router-location-did-not-match-any-routes"">1</a>, <a href=""https://github.com/reactjs/react-router/issues/2117"" rel=""nofollow noreferrer"">2</a>, which linked me to <a href=""https://github.com/reactjs/react-router/blob/master/upgrade-guides/v1.0.0.md#links"" rel=""nofollow noreferrer"">3</a> and even <a href=""https://github.com/reactjs/react-router/issues/3541"" rel=""nofollow noreferrer"">4</a> with IndexRoute), which I tried but none of the answers worked.</p>

<p>My App.js file looks like this, just for reference:</p>

<pre><code>import React from 'react';
import Relay from 'react-relay';
import Top from './top';

export class App extends React.Component {
  render() {
    return (
      &lt;div&gt;
        &lt;Top viewer={this.props.viewer}/&gt;
        {this.props.children}
      &lt;/div&gt;
    );
  }
}

export default Relay.createContainer(App, {
  fragments: {
    viewer: () =&gt; Relay.QL`
      fragment on Viewer {
        ${Top.getFragment('viewer')}
      }
    `,
  },
});
</code></pre>

<p>I'm not 100% sure if this might be the reason but I know that <a href=""https://github.com/reactjs/react-router/blob/master/CHANGES.md#v200-rc6"" rel=""nofollow noreferrer"">react-router v2.0.0-rc6</a> had a breaking change with the top level Router export being removed but I don't really know what that means for me? Does that I can't use Router anymore? If so, what am I supposed to instead?</p>

<p>After days of research and trial and error, I'm giving up and hope that someone here can help. Any pointers in the right direction would be greatly appreciated.</p>
",""
"38698542","webpack production config (react, es6)","0","<p>I have webpack configuration for site development using ES6, react and react-router. It uses developer server with hot-reload and routes.</p>

<p><strong>/config/webpack.dev:</strong></p>

<pre><code>var webpack = require('webpack');
var path = require('path');
var APP_DIR = path.join(__dirname, '..', 'app');

module.exports = {
  debug: true,
  devtool: 'eval',
  entry: ['webpack-hot-middleware/client', './app/index.js'],
  module: {
    preLoaders: [{
      test: /\.js?$/,
      loaders: [""babel-loader"", ""eslint-loader""],
      exclude: /node_modules/,
      include: APP_DIR
    }],
    loaders: [
      {test: /\.js?$/, loaders: ['react-hot', 'babel'], include: APP_DIR},
      {
        test: /\.scss$/, include: APP_DIR,
        loader: 'style!css?modules&amp;importLoaders=2&amp;sourceMap&amp;localIdentName=[local]___[hash:base64:5]!autoprefixer?browsers=last 2 version!sass?outputStyle=expanded&amp;sourceMap'
      },
      {
        test: /\.css$/, include: APP_DIR,
        loader: ""style!css!autoprefixer?browsers=last 2 version!""
      },
      {test: /\.(jpe?g|png|gif|svg)$/i, loaders: ['url?limit=8192', 'img']},
      {test: /\.woff(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=application/font-woff""},
      {test: /\.woff2(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=application/font-woff""},
      {test: /\.ttf(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=application/octet-stream""},
      {test: /\.eot(\?v=\d+\.\d+\.\d+)?$/, loader: ""file""}
    ]
  },
  output: {
    filename: 'app.js',
    path: path.join(__dirname, '..', 'build'),
    publicPath: '/static/'
  },
  plugins: [
    new webpack.HotModuleReplacementPlugin(),
    new webpack.NoErrorsPlugin()
  ],
  resolve: {
    root: [path.resolve('../app')],
    extensions: ['', '.jsx', '.js']
  },
  sassLoader: {
    includePaths: [path.resolve(__dirname, ""./app"")]
  }
};
</code></pre>

<p>I run build by <strong><em>npm start</em></strong>. Fragment of my <strong>package.json</strong>:</p>

<pre><code>...
scripts"": {
    ""build:webpack"": ""NODE_ENV=production webpack --config config/webpack.prod.js"",
    ""clean"": ""rimraf build"",
    ""start"": ""node dev_server.js""
}
...
</code></pre>

<p><strong>dev_server.js:</strong></p>

<pre><code>var path = require('path');
var express = require('express');
var webpack = require('webpack');
var config = require('./config/webpack.dev');

var app = express();
var compiler = webpack(config);
var port = process.env.PORT || 3000;

app.use(require('webpack-dev-middleware')(compiler, {
  noInfo: true,
  publicPath: config.output.publicPath
}));

app.use(require('webpack-hot-middleware')(compiler));
app.use(express.static(path.join(__dirname, '..', 'static')));

app.get('*', (req, res) =&gt; {
  res.sendFile(path.join(__dirname, 'index.html'));
});

app.listen(port, 'localhost', err =&gt; {
  if (err) {
    console.log(err);
    return;
  }

  console.log(`Listening at http://localhost:${port}`);
});
</code></pre>

<p>I also have <strong>/config/webpack.prod:</strong></p>

<pre><code>var path = require('path');
var webpack = require('webpack');
var ExtractTextPlugin = require('extract-text-webpack-plugin');
var CleanPlugin = require('clean-webpack-plugin');

var APP_DIR = path.join(__dirname, '..', 'app');

var projectRootPath = path.resolve(__dirname, '../');
var assetsPath = path.resolve(projectRootPath, './build');

module.exports = {
  devtool: 'source-map',
  context: path.resolve(__dirname, '..'),
  entry: './app/index.js',
  module: {
    loaders: [
      {
        test: /\.js?$/,
        loaders: ['babel'],
        include: APP_DIR
      },
      {
        test: /\.scss$/, include: APP_DIR,
        loader: 'style!css?modules&amp;importLoaders=2&amp;sourceMap&amp;localIdentName=[local]___[hash:base64:5]!autoprefixer?browsers=last 2 version!sass?outputStyle=expanded&amp;sourceMap'
      },
      {
        test: /\.css$/, include: APP_DIR,
        loader: ""style!css!autoprefixer?browsers=last 2 version!""
      },
      {test: /\.(jpe?g|png|gif|svg)$/i, loaders: ['url?limit=8192', 'img']},
      {test: /\.woff(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=application/font-woff""},
      {test: /\.woff2(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=application/font-woff""},
      {test: /\.ttf(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=application/octet-stream""},
      {test: /\.eot(\?v=\d+\.\d+\.\d+)?$/, loader: ""file""},
      {test: /\.svg(\?v=\d+\.\d+\.\d+)?$/, loader: ""url?limit=10000&amp;mimetype=image/svg+xml""}]
  },
  output: {
    path: assetsPath,
    filename: 'app.js',
    publicPath: '/build/'
  },
  plugins: [
    new CleanPlugin([assetsPath], { root: projectRootPath }),
    new ExtractTextPlugin('[name]-[chunkhash].css', {allChunks: true}),
    new webpack.optimize.OccurrenceOrderPlugin(),
    new webpack.optimize.DedupePlugin(),
    new webpack.DefinePlugin({
      'process.env': {
        'NODE_ENV': JSON.stringify('production')
      }
    }),
    new webpack.optimize.UglifyJsPlugin({
      compressor: {
        warnings: false
      }
    })
  ],
  progress: true,
  resolve: {
    root: [path.resolve('../app')],
    extensions: ['', '.jsx', '.js']
  },
  sassLoader: {
    includePaths: [path.resolve(__dirname, ""./app"")]
  }
};
</code></pre>

<p>I run it by <strong><em>npm run build</em></strong>. It generate file in app directory. But when i open index.html in browser, page is empty. In firefox inspector i have comment: <strong><em>react-empty: 1</em></strong></p>

<p>How can I use webpack to build my project to use it in browser without server?</p>
",""
"38917709","react-stormpath routing issue","4","<p>I am using react-stormpath with react. Whenver I am using strormapath router in place of react router, it's giving me an error.</p>

<p>stormpath router i am importing like this:-</p>

<p><code>import ReactStormpath, {Router,HomeRoute, LoginRoute, AuthenticatedRoute } from 'react-stormpath';</code></p>

<blockquote>
  <p>Error: Objects are not valid as a React child (found: object with keys
  {path, component, getChildRoutes, indexRoute}). If you meant to render
  a collection of children, use an array instead or wrap the object
  using createFragment(object) from the React add-ons. Check the render
  method of <code>Router</code>.</p>
</blockquote>

<p>Thanks in advance</p>
","The app.js code from the sample project (https://github.com/stormpath/stormpath-express-react-example) looks like this: http://pastie.org/10935200"
"39322801","error ""objects are not valid as a react child"" in react native","0","<p>""objects are not valid as a react child (found: object with keys {date, events}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of View.""</p>

<p>So I have kind of a cascade of method calls. I'm retrieving dates with events inside of those. It feels like I'm doing this correctly, but am getting the above error. I've tried setting createFragment on places, but still getting the error. Here's the code:</p>

<pre><code>  import React, { Component } from 'react';
  import {
    AppRegistry,
    Text,
    View,
    ScrollView,
    RefreshControl,
    StyleSheet,
    Dimensions,
    TextInput,
    Linking,
    TouchableNativeFeedback
   } from 'react-native';

  var _ = require('lodash');
  var {width, height} = Dimensions.get('window');
  var renderif = require('render-if');
  var createFragment = require('react-addons-create-fragment');

  var IMAGES_PER_ROW = 1

  class FunInATL extends Component {
    constructor(props) {
      super(props);
      this.state = {
        currentScreenWidth: width,
        currentScreenHeight: height,
        dates: [],
        boxIndex: 0,
        showBox: false,
        refreshing: false
      };
    }

        handleRotation(event) {
          if (!this.state) {
            return;
          }

          var layout = event.nativeEvent.layout
          this.state({currentScreenWidth: layout.width, currentScreenHeight: layout.height })
        }

        calculatedSize() {
          var size = this.state.currentScreenWidth / IMAGES_PER_ROW
          return {width: size}
        }

        renderRow(events) {
          return events.map((events, i) =&gt; {
            return (
              &lt;Image key={i} style={[this.getImageStyles(), styles.image, this.calculatedSize() ]} source={{uri: event.image}} /&gt;
            )
          })
        }

        openUrl(url) {
          Linking.canOpenURL(url).then(supported =&gt; {
              if (supported) {
                Linking.openURL(url);
              } else {
                console.log('nope :: ' + url);
              }
          }).catch(err =&gt; console.error('An error occurred', err));
        }

        getImageStyles(featured, category) {
            let options = {
              borderColor: 'gold',
              borderWidth: featured ? 1 : 0
            }

            if (!category) {
                options.height = featured ? 250 : 125
            }

            return options;
        }

        _clickImage(event, index) {
          if (event.title) {
            let new_val = !this.state.showBox
            this.setState({
                dates: this.state.dates,
                showBox: new_val,
                boxIndex: new_val ? index : 0
            });
          }

        }

        componentDidMount() {
          this.state = {
              dates: [],
              boxIndex: 0,
              showBox: false,
              refreshing: false
          };
          this.getApiData();

          Linking.addEventListener('url', this.handleUrl);
        }

        componentWillUnmount() {
            Linking.removeEventListener('url', this.handleUrl);
        }

        getApiData() {
          var _this = this;
          return fetch('https://www.funinatl.com/mobile2.php?v1')
            .then(function(response) {
              return response.json()
            })
            .then((responseJson) =&gt; {
              var dates = createFragment(responseJson.events)
              return;

              let _this = this;

              date.events.map((event, i) =&gt; (
                date.events[i] = event
              ))

              var datesData = [];
              dates.map((date, i) =&gt; (
                datesData.push({
                  date: i,
                  events: createFragment(date.events)
                })
              ))

              _this.setState({
                dates: createFragment(datesData),
                boxIndex: 0,
                showBox: false
              })

              console.error(this.state);
            })
            .catch((error) =&gt; {
              console.error(error);
            })
            .done();
        }

        renderDates() {
          return this.state.dates.map((date) =&gt;
                (
                  &lt;View&gt;
                    &lt;Text style={styles.dateHeader}&gt;{ date.date }&lt;/Text&gt;

                    &lt;View&gt;
                    {this.renderEvents(date.events)}
                    &lt;/View&gt;
                  &lt;/View&gt;

            ))
        }

        renderImage(event, index) {
            if (this.state.showBox &amp;&amp; this.state.boxIndex == index) {
              return (
                &lt;View&gt;
                  &lt;TouchableNativeFeedback onPress={()=&gt;this._clickImage(event, index)}&gt;
                      &lt;Image source={{ uri: event.image }} style={[styles.image, this.calculatedSize(), this.getImageStyles(event.featured), { height: 100 }]} /&gt;
                  &lt;/TouchableNativeFeedback&gt;
                  &lt;View style={{ flexDirection:'row', padding: 15 }}&gt;
                      &lt;Text style={styles.price}&gt;{event.price}&lt;/Text&gt;
                      &lt;Text style={styles.time}&gt;{event.time}&lt;/Text&gt;
                      &lt;TouchableNativeFeedback onPress={()=&gt;this.openUrl(event.website)}&gt;
                          &lt;Text style={styles.btn}&gt;Website&lt;/Text&gt;
                      &lt;/TouchableNativeFeedback&gt;
                  &lt;/View&gt;

                      {renderif(event.venue)(
                          &lt;TouchableNativeFeedback onPress={()=&gt;this.openUrl(event.venue)}&gt;
                              &lt;Text style={styles.btn}&gt;Venue&lt;/Text&gt;
                          &lt;/TouchableNativeFeedback&gt;
                      )}

                &lt;/View&gt;
              )
            } else {
              return (
                &lt;View&gt;
                    &lt;TouchableNativeFeedback onPress={()=&gt;this._clickImage(event, index)}&gt;
                        &lt;Image source={{ uri: event.image }} style={[styles.image, this.calculatedSize(), this.getImageStyles(event.featured)]} /&gt;
                    &lt;/TouchableNativeFeedback&gt;
                &lt;/View&gt;
              )
            }
        }

        renderEvents(events) {
          return events.map((event, i) =&gt;
            (
              &lt;View&gt;
                &lt;Text style={[styles.eventCategory, this.getImageStyles(event.featured, true)]}&gt;{event.category}&lt;/Text&gt;
                &lt;View&gt;
                  {this.renderImage(event, i)}
                &lt;/View&gt;
                &lt;Text style={[styles.eventTitle, this.getImageStyles(event.featured, true)]}&gt;{event.title}&lt;/Text&gt;
              &lt;/View&gt;
          ));
        }

        _onRefresh() {
          this.setState({refreshing: true});
          fetchData().then(() =&gt; {
            this.setState({refreshing: false});
          });
        }

        render() {
          return (
            &lt;ScrollView onLayout={this.handleRotation} contentContainerStyle={styles.scrollView} refreshControl={
                &lt;RefreshControl
                  refreshing={this.state.refreshing}
                  onRefresh={this._onRefresh.bind(this)}
                  tintColor=""#ff0000""
                  title=""Loading...""
                  titleColor=""#00ff00""
                  colors={['#ff0000', '#00ff00', '#0000ff']}
                  progressBackgroundColor=""#ffff00""
                /&gt;
              }&gt;
              &lt;Text style={styles.header}&gt;FunInATL&lt;/Text&gt;
                  {this.renderDates()}
            &lt;/ScrollView&gt;
          )
        }
      }

  var styles = StyleSheet.create({

    row: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'flex-start',
      textAlign: 'center',
      padding: 10
    },

    header: {
      fontSize: 30,
      fontWeight: 'bold',
      padding: 20,
      textAlign: 'center',
      backgroundColor: '#000',
      color: '#fff'
    },

    dateHeader: {
      fontSize: 20,
      fontWeight: 'bold',
      padding: 20,
      textAlign: 'left',
      color: '#fff',
      backgroundColor: '#283593'
    },

    eventCategory: {
        backgroundColor: '#03a9f4',
        textAlign: 'center',
        color: '#ffffff',
        padding: 3
    },

    eventTitle: {
        borderTopWidth: 0,
        textAlign: 'center',
        fontWeight: 'bold',
        padding: 3,
        fontSize: 18,
    },

    image: {
    },

    btn: {
        backgroundColor: 'green',
        padding: 10,
        color: '#fff',
        textAlign: 'center',
        flex: 1
    },

    price: {
        marginLeft: 10,
        fontSize: 16,
        flex: 1
    },

    time: {
      marginRight: 10,
      fontSize: 16,
      flex: 1,
      width: 35
    }

  });

  AppRegistry.registerComponent('FunInATL', () =&gt; FunInATL);
</code></pre>

<p>Thanks!</p>

<p><strong>EDIT</strong>: Updated code per the map suggestion, still not working. complaining about {events} only now.</p>

<p><strong>EDIT 2</strong>: Updated with FULL code.</p>
",""
"39505284","How to fetch and display item by id using Relay container, react-router and GraphQL","0","<p>I am having a really hard time trying to get my head around Relay routes, react-router params and building the queries and containers in general! </p>

<p>I want to edit a Feature when the user clicks on a specific Feature in a FeatureList. It passes a param called ""id"" which is the id of the Feature in Route.js </p>

<pre><code>  &lt;Route path='/' component={AppComponent} queries={ViewerQuery}&gt;
    &lt;IndexRoute component={FeaturesContainer} queries={ViewerQuery} /&gt;
    &lt;Route path='/feature' component={FeatureComponent} queries={ViewerQuery} /&gt;
    &lt;Route path=""/feature/edit/:id"" component={FeatureEditComponent} queries={FeatureQuery}/&gt;
    &lt;Redirect from='*' to='/' /&gt;
  &lt;/Route&gt;
</code></pre>

<p>In my FeatureQuery file I have the following query:</p>

<pre><code>export default {
  viewer: (Component) =&gt; Relay.QL`
    query {
      viewer {
        ${Component.getFragment('viewer')}
      }
    }
  `
};
</code></pre>

<p>At this point I am completely stuck. How do I expand this to include the ""id"" and query the features using the ""id""?
And what would the relating relay container fragment be shaped like? I only see examples going one level deep. </p>

<p>I tried this but I know it isn't right:</p>

<pre><code>export default {
    feature: (Component) =&gt; Relay.QL`
        query {
            viewer {
                features(id:$id) {
                  ${Component.getFragment('feature')}
                }
            }
        }
    `
};
</code></pre>

<p>This is the current relay container that gets a list of the Features, how would this be modified to just return the 1 feature by id? :</p>

<pre><code>export default Relay.createContainer(CreativeEditComponent, {
  fragments: {
    viewer: () =&gt; Relay.QL`
        fragment on User {
        id,
        features(first: 20) {
          edges {
            node {
              id
              name
              description

            }
          }
        }
      }`
  }
});
</code></pre>

<p>I have tested a query in GraphiQL and it works as expected:</p>

<pre><code>query {
  viewer {
    features(id:""1"") {
      edges {
        node {
          id
          name
          description
        } 
      }
    } 
  }
}
</code></pre>

<p>Result:</p>

<pre><code>{
  ""data"": {
    ""viewer"": {
      ""features"": {
        ""edges"": [
          {
            ""node"": {
              ""id"": ""Q3JlYXRpdmU6MQ=="",
              ""name"": ""React"",
              ""description"": ""A JavaScript library for building user interfaces.""
            }
          }
        ]
      }
    }
  }
}
</code></pre>

<p>schema.js:</p>

<pre><code>const userType = new GraphQLObjectType({
  name: 'User',
  description: 'A person who uses our app',
  fields: () =&gt; ({
    id: globalIdField('User'),

    features: {
      type: featureConnection,
      description: 'Features that I have',
      //args: connectionArgs,

      args: {
        id: {
          type: GraphQLString,
        },
        after: {
          type: GraphQLString,
        },
        first: {
          type: GraphQLInt,
        },
        before: {
          type: GraphQLString,
        },
        last: {
          type: GraphQLInt,
        },
      },

      resolve: (_, args) =&gt; {
        return resolveGetFeatures(args)
      },
    },


  }),
  interfaces: [nodeInterface]
});



const featureType = new GraphQLObjectType({
  name: 'Feature',
  description: 'Feature integrated in our starter kit',
  fields: () =&gt; ({
    id: globalIdField('Feature'),
    name: {
      type: GraphQLString,
      description: 'Name of the feature'
    },
    description: {
      type: GraphQLString,
      description: 'Description of the feature'
    }
  }),
  interfaces: [nodeInterface]
});
</code></pre>
",""
"39516184","Accessing a url parameter to use in a query using react-router-relay","0","<p>I am using react-router and react-router-relay to handle routing on my app. I am having a problem trying to access the id param that is passed in the url path. What is the correct way to do this?</p>

<p>routes.js</p>

<pre><code>import CreativeQuery from './CreativeQuery';

&lt;Route path='/creative' component={CreativeComponent} queries={ViewerQuery}&gt;
&lt;Route path=""/creative/edit/:id"" component={CreativeEditComponent} queries={CreativeQuery}/&gt;
</code></pre>

<p>CreativeQuery.js</p>

<pre><code>import Relay from 'react-relay';

export default {
  creative: (Component) =&gt; Relay.QL`
    query {
      creative(id:$id) { #&lt;--- id from the url param
        ${Component.getFragment('creative')}
      }
    }
  `
};
</code></pre>
",""
"39799739","reactjs - load json object","0","<p>I have a file data.js:</p>

<pre><code>   const sdc = [
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226752,
    ""Amount"": 55.95995977,
    ""Total"": 0.12689032
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226752,
    ""Amount"": 146.1,
    ""Total"": 0.33128467
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226684,
    ""Amount"": 150,
    ""Total"": 0.340026
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226684,
    ""Amount"": 26.79415765,
    ""Total"": 0.06073806
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226684,
    ""Amount"": 4.25269162,
    ""Total"": 0.00964017
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226659,
    ""Amount"": 25.79415765,
    ""Total"": 0.05846477
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00225784,
    ""Amount"": 4.48789501,
    ""Total"": 0.01013294
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226659,
    ""Amount"": 1,
    ""Total"": 0.00226659
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226663,
    ""Amount"": 225,
    ""Total"": 0.50999175
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226662,
    ""Amount"": 113.4736507,
    ""Total"": 0.25720164
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226659,
    ""Amount"": 26.79415765,
    ""Total"": 0.06073136
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226651,
    ""Amount"": 57.98798342,
    ""Total"": 0.13143034
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226649,
    ""Amount"": 40.19123647,
    ""Total"": 0.09109303
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00224958,
    ""Amount"": 11.83690383,
    ""Total"": 0.02662806
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00241238,
    ""Amount"": 838,
    ""Total"": 2.02157444
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00231078,
    ""Amount"": 9.95795791,
    ""Total"": 0.02301064
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.0025,
    ""Amount"": 4.1999832,
    ""Total"": 0.01049995
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.0025,
    ""Amount"": 4.99998,
    ""Total"": 0.01249995
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226702,
    ""Amount"": 3.63623022,
    ""Total"": 0.0082434
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226702,
    ""Amount"": 2.14933238,
    ""Total"": 0.00487257
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226702,
    ""Amount"": 15,
    ""Total"": 0.0340053
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00226702,
    ""Amount"": 56.80528353,
    ""Total"": 0.12877871
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00227634,
    ""Amount"": 76.88367619,
    ""Total"": 0.17501338
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.0000141,
    ""Amount"": 12444,
    ""Total"": 0.17546011
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.0000141,
    ""Amount"": 12131.09257,
    ""Total"": 0.1710484
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00001409,
    ""Amount"": 344.0847392,
    ""Total"": 0.00484815
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00249461,
    ""Amount"": 154.2853438,
    ""Total"": 0.38488176
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00249461,
    ""Amount"": 33.72938801,
    ""Total"": 0.08414166
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00246953,
    ""Amount"": 340.8737595,
    ""Total"": 0.84179797
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00246953,
    ""Amount"": 90.36231511,
    ""Total"": 0.22315244
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00246952,
    ""Amount"": 55.17093479,
    ""Total"": 0.13624572
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00246764,
    ""Amount"": 5.75660177,
    ""Total"": 0.01420522
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00245929,
    ""Amount"": 4.1587629,
    ""Total"": 0.0102276
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00252904,
    ""Amount"": 37.42985716,
    ""Total"": 0.0946616
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00252904,
    ""Amount"": 0.59310808,
    ""Total"": 0.00149999
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00252904,
    ""Amount"": 1.97703476,
    ""Total"": 0.00499999
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00252902,
    ""Amount"": 446.0229574,
    ""Total"": 1.12800097
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00252903,
    ""Amount"": 1.97704258,
    ""Total"": 0.00499999
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259459,
    ""Amount"": 38.54173491,
    ""Total"": 0.09999999
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259483,
    ""Amount"": 105.9381622,
    ""Total"": 0.27489152
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259484,
    ""Amount"": 0.03853803,
    ""Total"": 0.0001
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259484,
    ""Amount"": 0.03853803,
    ""Total"": 0.0001
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259485,
    ""Amount"": 1.91102375,
    ""Total"": 0.00495881
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259459,
    ""Amount"": 2,
    ""Total"": 0.00518918
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259464,
    ""Amount"": 1.90549392,
    ""Total"": 0.00494407
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00259465,
    ""Amount"": 28.65568722,
    ""Total"": 0.07435147
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.01740491,
    ""Amount"": 0.20683711,
    ""Total"": 0.00359998
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00238916,
    ""Amount"": 79.70696671,
    ""Total"": 0.19043269
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00237524,
    ""Amount"": 37.90636505,
    ""Total"": 0.09003671
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00237524,
    ""Amount"": 2.00494017,
    ""Total"": 0.00476221
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00237524,
    ""Amount"": 18.57724489,
    ""Total"": 0.04412541
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00585,
    ""Amount"": 56.99961222,
    ""Total"": 0.33344773
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00585,
    ""Amount"": 0.00007739,
    ""Total"": 4.5e-7
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00585,
    ""Amount"": 0.00031039,
    ""Total"": 0.00000181
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 8.6e-7,
    ""Amount"": 2070,
    ""Total"": 0.0017802
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00187861,
    ""Amount"": 65.81153335,
    ""Total"": 0.1236342
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00187858,
    ""Amount"": 15.66747734,
    ""Total"": 0.0294326
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00187857,
    ""Amount"": 7.94470487,
    ""Total"": 0.01492468
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00187853,
    ""Amount"": 0.78814015,
    ""Total"": 0.00148054
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00187852,
    ""Amount"": 0.78814429,
    ""Total"": 0.00148054
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00054142,
    ""Amount"": 0.9975,
    ""Total"": 0.00054006
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 8.6e-7,
    ""Amount"": 811.9167491,
    ""Total"": 0.00069824
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 8.6e-7,
    ""Amount"": 338.0832509,
    ""Total"": 0.00029075
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00238719,
    ""Amount"": 72,
    ""Total"": 0.17187768
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00236363,
    ""Amount"": 4,
    ""Total"": 0.00945452
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00023501,
    ""Amount"": 41.1642077,
    ""Total"": 0.009674
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00023501,
    ""Amount"": 2.7697923,
    ""Total"": 0.00065092
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00000105,
    ""Amount"": 1270,
    ""Total"": 0.0013335
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00281001,
    ""Amount"": 360,
    ""Total"": 1.0116036
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00280001,
    ""Amount"": 3.33990832,
    ""Total"": 0.00935177
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.0038,
    ""Amount"": 208,
    ""Total"": 0.7904
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00356245,
    ""Amount"": 1,
    ""Total"": 0.00356245
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00370002,
    ""Amount"": 0.02702689,
    ""Total"": 0.0001
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00370002,
    ""Amount"": 15.4008193,
    ""Total"": 0.05698333
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00370002,
    ""Amount"": 3.09119995,
    ""Total"": 0.0114375
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.02315202,
    ""Amount"": 6.98549994,
    ""Total"": 0.16172843
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.02315202,
    ""Amount"": 6e-8,
    ""Total"": 0
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00023492,
    ""Amount"": 40,
    ""Total"": 0.0093968
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00004456,
    ""Amount"": 40.3006157,
    ""Total"": 0.00179579
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00004461,
    ""Amount"": 112.0824927,
    ""Total"": 0.00499999
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00004462,
    ""Amount"": 33.61721201,
    ""Total"": 0.00149999
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00004463,
    ""Amount"": 33.60967959,
    ""Total"": 0.0015
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.0002817,
    ""Amount"": 4,
    ""Total"": 0.0011268
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00003965,
    ""Amount"": 55.13060038,
    ""Total"": 0.00218592
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00003965,
    ""Amount"": 104.8693996,
    ""Total"": 0.00415807
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00004129,
    ""Amount"": 149.625,
    ""Total"": 0.00617801
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.02215591,
    ""Amount"": 3,
    ""Total"": 0.06646773
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00004073,
    ""Amount"": 113.3174137,
    ""Total"": 0.00461541
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00004072,
    ""Amount"": 36.68258634,
    ""Total"": 0.00149371
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.0000525,
    ""Amount"": 60,
    ""Total"": 0.00315
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.01877317,
    ""Amount"": 4,
    ""Total"": 0.07509268
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00199501,
    ""Amount"": 43.10755334,
    ""Total"": 0.08599999
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00350201,
    ""Amount"": 53.48162609,
    ""Total"": 0.18729318
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00350201,
    ""Amount"": 132.1260678,
    ""Total"": 0.46270681
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.02304826,
    ""Amount"": 17.03647964,
    ""Total"": 0.39266121
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.02312381,
    ""Amount"": 3.52,
    ""Total"": 0.08139581
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.02324002,
    ""Amount"": 3.39252036,
    ""Total"": 0.07884224
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.02459958,
    ""Amount"": 7,
    ""Total"": 0.17219706
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.01378499,
    ""Amount"": 9,
    ""Total"": 0.12406491
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00581178,
    ""Amount"": 1,
    ""Total"": 0.00581178
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.01498881,
    ""Amount"": 7,
    ""Total"": 0.10492167
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00001717,
    ""Amount"": 176.6891735,
    ""Total"": 0.00303375
  },
  {
    ""Type"": ""Sell"",
    ""Price"": 0.00001718,
    ""Amount"": 87.31082654,
    ""Total"": 0.00149999
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00001464,
    ""Amount"": 182.8870467,
    ""Total"": 0.00267746
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00001464,
    ""Amount"": 32.11295335,
    ""Total"": 0.00047013
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00596086,
    ""Amount"": 26,
    ""Total"": 0.15498236
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.000017,
    ""Amount"": 50,
    ""Total"": 0.00085
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.0005388,
    ""Amount"": 1,
    ""Total"": 0.0005388
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00935588,
    ""Amount"": 0.00060288,
    ""Total"": 0.00000564
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00935588,
    ""Amount"": 0.99939712,
    ""Total"": 0.00935023
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.01475001,
    ""Amount"": 1,
    ""Total"": 0.01475001
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00555,
    ""Amount"": 21.28693846,
    ""Total"": 0.1181425
  },
  {
    ""Type"": ""Buy"",
    ""Price"": 0.00553,
    ""Amount"": 9.26025155,
    ""Total"": 0.05120919
  }
]
</code></pre>

<p>I'm trying to load it with:</p>

<pre><code>import React, {Component} from 'react';
import Header from './header/header';
import Body from './body/body';
import sdc from './data';



export default class App extends Component {
  constructor(props) {
    super();
    // Set the initial grid in
    this.state = {
      title: ""Singularity is nigh!!!"",
      sdc: sdc
    };
  }

  render() {


    return (
      // Add your component markup and other subcomponent references here.
      &lt;div&gt;
        &lt;Header title={this.state.title} /&gt;
        &lt;p&gt;{this.state.sdc}&lt;/p&gt;
        &lt;Body /&gt;
      &lt;/div&gt;

    );
  }
}
</code></pre>

<p>I have got an error saying that:</p>

<blockquote>
  <p>Uncaught Invariant Violation: Objects are not valid as a React child
  (found: object with keys {}). If you meant to render a collection of
  children, use an array instead or wrap the object using
  createFragment(object) from the React add-ons. Check the render method
  of <code>App</code>.</p>
</blockquote>

<p>Please advise. I'm trying to do some calculations on the values but first I need to load it and be able to extract values from the object.</p>

<p>Thanks</p>

<p>Edit:</p>

<p>Error:</p>

<pre><code>/scripts/App.js
Module build failed: SyntaxError: Unexpected token (32:30)

  30 | 
  31 |   render() {
&gt; 32 |     const renderedData = {this._renderData()}
     |                               ^
  33 | 
  34 | 
  35 |     return (

BabelLoaderError: SyntaxError: Unexpected token (32:30)

  30 | 
  31 |   render() {
&gt; 32 |     const renderedData = {this._renderData()}
     |                               ^
  33 | 
  34 | 
  35 |     return (
</code></pre>

<p>EDIT 2:</p>

<pre><code>import React, {Component} from 'react';
import Header from './header/header';
import Body from './body/body';
import sdc from './data';



export default class App extends Component {
  constructor(props) {
    super();
    // Set the initial grid in
    this.state = {
      title: ""Singularity is nigh!!!"",
      sdc: sdc
    };

  }

  _renderData(){
     const data = this.state.sdc
     return Object.keys(data).map(function(key,index){
       return ( &lt;div key={datum.id}&gt;
          &lt;p&gt;{datum.Type}&lt;/p&gt;
          &lt;p&gt;{datum.Price}&lt;/p&gt;
          //other properties
        &lt;/div&gt; )
     })

  }

  render() {
    const renderedData = this._renderData()


    return (
      // Add your component markup and other subcomponent references here.
      &lt;div&gt;
        &lt;p&gt;{renderedData}&lt;/p&gt;

      &lt;/div&gt;

    );
  }
}
</code></pre>
",""
"40821885","How to update react state object array","2","<p>I need to know how to update the array of users inside the state to accept a new user object.</p>

<p>The state users array contains id and name only.</p>

<p>When i try to use update addon to push an item in the users array.</p>

<pre><code>var newUser = {id:1, name:'Foo'};
let newState = update(this.state, {users: {$push: [newUser]}});
</code></pre>

<p>""react-dom.js:17858 Uncaught Error: Objects are not valid as a React child (found: object with keys {id, name}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of <code>UsersTable</code>.(…)""</p>
","Did you try the method(s) mentioned in the error message? For instance, replace the `{id:...}` with `[id:...]` and it should work?"
"40821885","How to update react state object array","2","<p>I need to know how to update the array of users inside the state to accept a new user object.</p>

<p>The state users array contains id and name only.</p>

<p>When i try to use update addon to push an item in the users array.</p>

<pre><code>var newUser = {id:1, name:'Foo'};
let newState = update(this.state, {users: {$push: [newUser]}});
</code></pre>

<p>""react-dom.js:17858 Uncaught Error: Objects are not valid as a React child (found: object with keys {id, name}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of <code>UsersTable</code>.(…)""</p>
","I have the same problem too."
"41065077","Map Fragment inside another fragment causes Activity to crash","3","<p>I am using a Tabbed activity and in first fragment i am using map fragment.It is working all right but the problem is if i change between other fragment in this activity, whole activity crashes. After removing the map fragment the code runs well.But i want to put a map inside the fragment so please help.Here is my xml code for map fragment </p>

<pre><code>     &lt;fragment xmlns:android=""http://schemas.android.com/apk/res/android""
    xmlns:tools=""http://schemas.android.com/tools""
    android:layout_width=""350dp""
    android:layout_height=""200dp""
    android:layout_marginTop=""20dp""
    android:id=""@+id/map""
    android:layout_below=""@+id/textView6""
    android:layout_alignParentLeft=""true""
    android:name=""com.google.android.gms.maps.SupportMapFragment""
    android:layout_alignParentStart=""true""
    android:layout_marginLeft=""19dp""
    android:layout_marginStart=""19dp"" 
</code></pre>

<p>This is the error every time before activity crashes-</p>

<pre><code>    Process: com.gjs.finalproject, PID: 5571
                                             android.view.InflateException: Binary XML file line #30: Error inflating class fragment
                                                 at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:767)
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:810)
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:813)
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:813)
                                                 at android.view.LayoutInflater.inflate(LayoutInflater.java:508)
                                                 at android.view.LayoutInflater.inflate(LayoutInflater.java:418)
                                                 at com.gjs.finalproject.HomeFragment.About2Fragment.onCreateView(About2Fragment.java:64)
                                                 at android.support.v4.app.Fragment.performCreateView(Fragment.java:2080)
                                                 at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1108)
                                                 at android.support.v4.app.FragmentManagerImpl.attachFragment(FragmentManager.java:1468)
                                                 at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:791)
                                                 at android.support.v4.app.FragmentManagerImpl.execSingleAction(FragmentManager.java:1638)
                                                 at android.support.v4.app.BackStackRecord.commitNowAllowingStateLoss(BackStackRecord.java:679)
                                                 at android.support.v4.app.FragmentPagerAdapter.finishUpdate(FragmentPagerAdapter.java:143)
                                                 at android.support.v4.view.ViewPager.populate(ViewPager.java:1240)
                                                 at android.support.v4.view.ViewPager.populate(ViewPager.java:1088)
                                                 at android.support.v4.view.ViewPager$3.run(ViewPager.java:275)
                                                 at android.view.Choreographer$CallbackRecord.run(Choreographer.java:775)
                                                 at android.view.Choreographer.doCallbacks(Choreographer.java:588)
                                                 at android.view.Choreographer.doFrame(Choreographer.java:557)
                                                 at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:761)
                                                 at android.os.Handler.handleCallback(Handler.java:739)
                                                 at android.os.Handler.dispatchMessage(Handler.java:95)
                                                 at android.os.Looper.loop(Looper.java:135)
                                                 at android.app.ActivityThread.main(ActivityThread.java:5276)
                                                 at java.lang.reflect.Method.invoke(Native Method)
                                                 at java.lang.reflect.Method.invoke(Method.java:372)
                                                 at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:911)
                                                 at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:706)
                                              Caused by: java.lang.IllegalArgumentException: Binary XML file line #30: Duplicate id 0x7f0e009f, tag null, or parent id 0x7f0e009d with another fragment for com.google.android.gms.maps.SupportMapFragment
                                                 at android.support.v4.app.FragmentManagerImpl.onCreateView(FragmentManager.java:2422)
                                                 at android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC.onCreateView(LayoutInflaterCompatHC.java:44)
                                                 at android.view.LayoutInflater$FactoryMerger.onCreateView(LayoutInflater.java:177)
                                                 at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:729)
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:810) 
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:813) 
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:813) 
                                                 at android.view.LayoutInflater.inflate(LayoutInflater.java:508) 
                                                 at android.view.LayoutInflater.inflate(LayoutInflater.java:418) 
                                                 at com.gjs.finalproject.HomeFragment.About2Fragment.onCreateView(About2Fragment.java:64) 
                                                 at android.support.v4.app.Fragment.performCreateView(Fragment.java:2080) 
                                                 at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1108) 
                                                 at android.support.v4.app.FragmentManagerImpl.attachFragment(FragmentManager.java:1468) 
                                                 at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:791) 
                                                 at android.support.v4.app.FragmentManagerImpl.execSingleAction(FragmentManager.java:1638) 
                                                 at android.support.v4.app.BackStackRecord.commitNowAllowingStateLoss(BackStackRecord.java:679) 
                                                 at android.support.v4.app.FragmentPagerAdapter.finishUpdate(FragmentPagerAdapter.java:143) 
                                                 at android.support.v4.view.ViewPager.populate(ViewPager.java:1240) 
                                                 at android.support.v4.view.ViewPager.populate(ViewPager.java:1088) 
                                                 at android.support.v4.view.ViewPager$3.run(ViewPager.java:275) 
                                                 at android.view.Choreographer$CallbackRecord.run(Choreographer.java:775) 
                                                 at android.view.Choreographer.doCallbacks(Choreographer.java:588) 
                                                 at android.view.Choreographer.doFrame(Choreographer.java:557) 
                                                 at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:761) 
                                                 at android.os.Handler.handleCallback(Handler.java:739) 
                                                 at android.os.Handler.dispatchMessage(Handler.java:95) 
                                                 at android.os.Looper.loop(Looper.java:135) 
                                                 at android.app.ActivityThread.main(ActivityThread.java:5276) 
                                                 at java.lang.reflect.Method.invoke(Native Method) 
                                                 at java.lang.reflect.Method.invoke(Method.java:372) 
                                                 at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:911) 
                                                 at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:706) 
</code></pre>

<p>Here is my fragment code</p>

<pre><code>   @Override
public void onActivityCreated(Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
        mapFragment = ((SupportMapFragment) getChildFragmentManager()
                .findFragmentById(R.id.map));
      mapFragment.getMapAsync(this);
}


@Override
public void onDestroy() {
    super.onDestroy();
    if (mapFragment != null) {
        //mMap = null;
        mapFragment=null;
        }
    }

@Override
public void onMapReady(GoogleMap googleMap) {
    mMap = googleMap;
    //Toast.makeText(getActivity(), lat + ""   "" + lng, Toast.LENGTH_LONG).show();

    LatLng locations = new LatLng(Util.reslatitude,Util.reslogitide);

    if (ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {

        return;
    }
    mMap.setMyLocationEnabled(true);
    mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(locations, 13));

    mMap.addMarker(new MarkerOptions()
            .title(""abc"")

            .position(locations));
}
</code></pre>

<p>Thanks in advance</p>
","share your fragment code which has the map"
"41065077","Map Fragment inside another fragment causes Activity to crash","3","<p>I am using a Tabbed activity and in first fragment i am using map fragment.It is working all right but the problem is if i change between other fragment in this activity, whole activity crashes. After removing the map fragment the code runs well.But i want to put a map inside the fragment so please help.Here is my xml code for map fragment </p>

<pre><code>     &lt;fragment xmlns:android=""http://schemas.android.com/apk/res/android""
    xmlns:tools=""http://schemas.android.com/tools""
    android:layout_width=""350dp""
    android:layout_height=""200dp""
    android:layout_marginTop=""20dp""
    android:id=""@+id/map""
    android:layout_below=""@+id/textView6""
    android:layout_alignParentLeft=""true""
    android:name=""com.google.android.gms.maps.SupportMapFragment""
    android:layout_alignParentStart=""true""
    android:layout_marginLeft=""19dp""
    android:layout_marginStart=""19dp"" 
</code></pre>

<p>This is the error every time before activity crashes-</p>

<pre><code>    Process: com.gjs.finalproject, PID: 5571
                                             android.view.InflateException: Binary XML file line #30: Error inflating class fragment
                                                 at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:767)
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:810)
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:813)
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:813)
                                                 at android.view.LayoutInflater.inflate(LayoutInflater.java:508)
                                                 at android.view.LayoutInflater.inflate(LayoutInflater.java:418)
                                                 at com.gjs.finalproject.HomeFragment.About2Fragment.onCreateView(About2Fragment.java:64)
                                                 at android.support.v4.app.Fragment.performCreateView(Fragment.java:2080)
                                                 at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1108)
                                                 at android.support.v4.app.FragmentManagerImpl.attachFragment(FragmentManager.java:1468)
                                                 at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:791)
                                                 at android.support.v4.app.FragmentManagerImpl.execSingleAction(FragmentManager.java:1638)
                                                 at android.support.v4.app.BackStackRecord.commitNowAllowingStateLoss(BackStackRecord.java:679)
                                                 at android.support.v4.app.FragmentPagerAdapter.finishUpdate(FragmentPagerAdapter.java:143)
                                                 at android.support.v4.view.ViewPager.populate(ViewPager.java:1240)
                                                 at android.support.v4.view.ViewPager.populate(ViewPager.java:1088)
                                                 at android.support.v4.view.ViewPager$3.run(ViewPager.java:275)
                                                 at android.view.Choreographer$CallbackRecord.run(Choreographer.java:775)
                                                 at android.view.Choreographer.doCallbacks(Choreographer.java:588)
                                                 at android.view.Choreographer.doFrame(Choreographer.java:557)
                                                 at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:761)
                                                 at android.os.Handler.handleCallback(Handler.java:739)
                                                 at android.os.Handler.dispatchMessage(Handler.java:95)
                                                 at android.os.Looper.loop(Looper.java:135)
                                                 at android.app.ActivityThread.main(ActivityThread.java:5276)
                                                 at java.lang.reflect.Method.invoke(Native Method)
                                                 at java.lang.reflect.Method.invoke(Method.java:372)
                                                 at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:911)
                                                 at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:706)
                                              Caused by: java.lang.IllegalArgumentException: Binary XML file line #30: Duplicate id 0x7f0e009f, tag null, or parent id 0x7f0e009d with another fragment for com.google.android.gms.maps.SupportMapFragment
                                                 at android.support.v4.app.FragmentManagerImpl.onCreateView(FragmentManager.java:2422)
                                                 at android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC.onCreateView(LayoutInflaterCompatHC.java:44)
                                                 at android.view.LayoutInflater$FactoryMerger.onCreateView(LayoutInflater.java:177)
                                                 at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:729)
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:810) 
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:813) 
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:813) 
                                                 at android.view.LayoutInflater.inflate(LayoutInflater.java:508) 
                                                 at android.view.LayoutInflater.inflate(LayoutInflater.java:418) 
                                                 at com.gjs.finalproject.HomeFragment.About2Fragment.onCreateView(About2Fragment.java:64) 
                                                 at android.support.v4.app.Fragment.performCreateView(Fragment.java:2080) 
                                                 at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1108) 
                                                 at android.support.v4.app.FragmentManagerImpl.attachFragment(FragmentManager.java:1468) 
                                                 at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:791) 
                                                 at android.support.v4.app.FragmentManagerImpl.execSingleAction(FragmentManager.java:1638) 
                                                 at android.support.v4.app.BackStackRecord.commitNowAllowingStateLoss(BackStackRecord.java:679) 
                                                 at android.support.v4.app.FragmentPagerAdapter.finishUpdate(FragmentPagerAdapter.java:143) 
                                                 at android.support.v4.view.ViewPager.populate(ViewPager.java:1240) 
                                                 at android.support.v4.view.ViewPager.populate(ViewPager.java:1088) 
                                                 at android.support.v4.view.ViewPager$3.run(ViewPager.java:275) 
                                                 at android.view.Choreographer$CallbackRecord.run(Choreographer.java:775) 
                                                 at android.view.Choreographer.doCallbacks(Choreographer.java:588) 
                                                 at android.view.Choreographer.doFrame(Choreographer.java:557) 
                                                 at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:761) 
                                                 at android.os.Handler.handleCallback(Handler.java:739) 
                                                 at android.os.Handler.dispatchMessage(Handler.java:95) 
                                                 at android.os.Looper.loop(Looper.java:135) 
                                                 at android.app.ActivityThread.main(ActivityThread.java:5276) 
                                                 at java.lang.reflect.Method.invoke(Native Method) 
                                                 at java.lang.reflect.Method.invoke(Method.java:372) 
                                                 at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:911) 
                                                 at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:706) 
</code></pre>

<p>Here is my fragment code</p>

<pre><code>   @Override
public void onActivityCreated(Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
        mapFragment = ((SupportMapFragment) getChildFragmentManager()
                .findFragmentById(R.id.map));
      mapFragment.getMapAsync(this);
}


@Override
public void onDestroy() {
    super.onDestroy();
    if (mapFragment != null) {
        //mMap = null;
        mapFragment=null;
        }
    }

@Override
public void onMapReady(GoogleMap googleMap) {
    mMap = googleMap;
    //Toast.makeText(getActivity(), lat + ""   "" + lng, Toast.LENGTH_LONG).show();

    LatLng locations = new LatLng(Util.reslatitude,Util.reslogitide);

    if (ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {

        return;
    }
    mMap.setMyLocationEnabled(true);
    mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(locations, 13));

    mMap.addMarker(new MarkerOptions()
            .title(""abc"")

            .position(locations));
}
</code></pre>

<p>Thanks in advance</p>
","Could you post your logcat output?"
"41065077","Map Fragment inside another fragment causes Activity to crash","3","<p>I am using a Tabbed activity and in first fragment i am using map fragment.It is working all right but the problem is if i change between other fragment in this activity, whole activity crashes. After removing the map fragment the code runs well.But i want to put a map inside the fragment so please help.Here is my xml code for map fragment </p>

<pre><code>     &lt;fragment xmlns:android=""http://schemas.android.com/apk/res/android""
    xmlns:tools=""http://schemas.android.com/tools""
    android:layout_width=""350dp""
    android:layout_height=""200dp""
    android:layout_marginTop=""20dp""
    android:id=""@+id/map""
    android:layout_below=""@+id/textView6""
    android:layout_alignParentLeft=""true""
    android:name=""com.google.android.gms.maps.SupportMapFragment""
    android:layout_alignParentStart=""true""
    android:layout_marginLeft=""19dp""
    android:layout_marginStart=""19dp"" 
</code></pre>

<p>This is the error every time before activity crashes-</p>

<pre><code>    Process: com.gjs.finalproject, PID: 5571
                                             android.view.InflateException: Binary XML file line #30: Error inflating class fragment
                                                 at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:767)
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:810)
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:813)
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:813)
                                                 at android.view.LayoutInflater.inflate(LayoutInflater.java:508)
                                                 at android.view.LayoutInflater.inflate(LayoutInflater.java:418)
                                                 at com.gjs.finalproject.HomeFragment.About2Fragment.onCreateView(About2Fragment.java:64)
                                                 at android.support.v4.app.Fragment.performCreateView(Fragment.java:2080)
                                                 at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1108)
                                                 at android.support.v4.app.FragmentManagerImpl.attachFragment(FragmentManager.java:1468)
                                                 at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:791)
                                                 at android.support.v4.app.FragmentManagerImpl.execSingleAction(FragmentManager.java:1638)
                                                 at android.support.v4.app.BackStackRecord.commitNowAllowingStateLoss(BackStackRecord.java:679)
                                                 at android.support.v4.app.FragmentPagerAdapter.finishUpdate(FragmentPagerAdapter.java:143)
                                                 at android.support.v4.view.ViewPager.populate(ViewPager.java:1240)
                                                 at android.support.v4.view.ViewPager.populate(ViewPager.java:1088)
                                                 at android.support.v4.view.ViewPager$3.run(ViewPager.java:275)
                                                 at android.view.Choreographer$CallbackRecord.run(Choreographer.java:775)
                                                 at android.view.Choreographer.doCallbacks(Choreographer.java:588)
                                                 at android.view.Choreographer.doFrame(Choreographer.java:557)
                                                 at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:761)
                                                 at android.os.Handler.handleCallback(Handler.java:739)
                                                 at android.os.Handler.dispatchMessage(Handler.java:95)
                                                 at android.os.Looper.loop(Looper.java:135)
                                                 at android.app.ActivityThread.main(ActivityThread.java:5276)
                                                 at java.lang.reflect.Method.invoke(Native Method)
                                                 at java.lang.reflect.Method.invoke(Method.java:372)
                                                 at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:911)
                                                 at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:706)
                                              Caused by: java.lang.IllegalArgumentException: Binary XML file line #30: Duplicate id 0x7f0e009f, tag null, or parent id 0x7f0e009d with another fragment for com.google.android.gms.maps.SupportMapFragment
                                                 at android.support.v4.app.FragmentManagerImpl.onCreateView(FragmentManager.java:2422)
                                                 at android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC.onCreateView(LayoutInflaterCompatHC.java:44)
                                                 at android.view.LayoutInflater$FactoryMerger.onCreateView(LayoutInflater.java:177)
                                                 at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:729)
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:810) 
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:813) 
                                                 at android.view.LayoutInflater.rInflate(LayoutInflater.java:813) 
                                                 at android.view.LayoutInflater.inflate(LayoutInflater.java:508) 
                                                 at android.view.LayoutInflater.inflate(LayoutInflater.java:418) 
                                                 at com.gjs.finalproject.HomeFragment.About2Fragment.onCreateView(About2Fragment.java:64) 
                                                 at android.support.v4.app.Fragment.performCreateView(Fragment.java:2080) 
                                                 at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1108) 
                                                 at android.support.v4.app.FragmentManagerImpl.attachFragment(FragmentManager.java:1468) 
                                                 at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:791) 
                                                 at android.support.v4.app.FragmentManagerImpl.execSingleAction(FragmentManager.java:1638) 
                                                 at android.support.v4.app.BackStackRecord.commitNowAllowingStateLoss(BackStackRecord.java:679) 
                                                 at android.support.v4.app.FragmentPagerAdapter.finishUpdate(FragmentPagerAdapter.java:143) 
                                                 at android.support.v4.view.ViewPager.populate(ViewPager.java:1240) 
                                                 at android.support.v4.view.ViewPager.populate(ViewPager.java:1088) 
                                                 at android.support.v4.view.ViewPager$3.run(ViewPager.java:275) 
                                                 at android.view.Choreographer$CallbackRecord.run(Choreographer.java:775) 
                                                 at android.view.Choreographer.doCallbacks(Choreographer.java:588) 
                                                 at android.view.Choreographer.doFrame(Choreographer.java:557) 
                                                 at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:761) 
                                                 at android.os.Handler.handleCallback(Handler.java:739) 
                                                 at android.os.Handler.dispatchMessage(Handler.java:95) 
                                                 at android.os.Looper.loop(Looper.java:135) 
                                                 at android.app.ActivityThread.main(ActivityThread.java:5276) 
                                                 at java.lang.reflect.Method.invoke(Native Method) 
                                                 at java.lang.reflect.Method.invoke(Method.java:372) 
                                                 at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:911) 
                                                 at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:706) 
</code></pre>

<p>Here is my fragment code</p>

<pre><code>   @Override
public void onActivityCreated(Bundle savedInstanceState) {
    super.onActivityCreated(savedInstanceState);
        mapFragment = ((SupportMapFragment) getChildFragmentManager()
                .findFragmentById(R.id.map));
      mapFragment.getMapAsync(this);
}


@Override
public void onDestroy() {
    super.onDestroy();
    if (mapFragment != null) {
        //mMap = null;
        mapFragment=null;
        }
    }

@Override
public void onMapReady(GoogleMap googleMap) {
    mMap = googleMap;
    //Toast.makeText(getActivity(), lat + ""   "" + lng, Toast.LENGTH_LONG).show();

    LatLng locations = new LatLng(Util.reslatitude,Util.reslogitide);

    if (ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {

        return;
    }
    mMap.setMyLocationEnabled(true);
    mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(locations, 13));

    mMap.addMarker(new MarkerOptions()
            .title(""abc"")

            .position(locations));
}
</code></pre>

<p>Thanks in advance</p>
","refer using android:class"
"41889309","have issue passing data in reactJS","4","<p>Having trouble in passing data in this reactjs, I am new to react js, the error shows </p>

<p>Uncaught Error: Objects are not valid as a React child (found: object with keys {sku, inventoryCount}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of <code>Batches</code>.</p>

<pre><code>export default class Batches extends React.Component {

  constructor() {
    super();

    this.state = {
      data: []
    };
  }

  componentDidMount() {
    // Example AJAX call
    ajax('/mft/api/reports/view', {
      success: data =&gt; {
        console.log(data);
        console.log(data[1]);
        this.setState({data: data.data});
      }
    });
  }


 render() {
    return &lt;div className=""content""&gt;
      &lt;Heading&gt;Batches&lt;/Heading&gt;
      &lt;div&gt;{this.state.data}&lt;/div&gt;
    &lt;/div&gt;;
  }
}
</code></pre>
","add render method please"
"41889309","have issue passing data in reactJS","4","<p>Having trouble in passing data in this reactjs, I am new to react js, the error shows </p>

<p>Uncaught Error: Objects are not valid as a React child (found: object with keys {sku, inventoryCount}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of <code>Batches</code>.</p>

<pre><code>export default class Batches extends React.Component {

  constructor() {
    super();

    this.state = {
      data: []
    };
  }

  componentDidMount() {
    // Example AJAX call
    ajax('/mft/api/reports/view', {
      success: data =&gt; {
        console.log(data);
        console.log(data[1]);
        this.setState({data: data.data});
      }
    });
  }


 render() {
    return &lt;div className=""content""&gt;
      &lt;Heading&gt;Batches&lt;/Heading&gt;
      &lt;div&gt;{this.state.data}&lt;/div&gt;
    &lt;/div&gt;;
  }
}
</code></pre>
","show your `render` method in `Batches`"
"41889309","have issue passing data in reactJS","4","<p>Having trouble in passing data in this reactjs, I am new to react js, the error shows </p>

<p>Uncaught Error: Objects are not valid as a React child (found: object with keys {sku, inventoryCount}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of <code>Batches</code>.</p>

<pre><code>export default class Batches extends React.Component {

  constructor() {
    super();

    this.state = {
      data: []
    };
  }

  componentDidMount() {
    // Example AJAX call
    ajax('/mft/api/reports/view', {
      success: data =&gt; {
        console.log(data);
        console.log(data[1]);
        this.setState({data: data.data});
      }
    });
  }


 render() {
    return &lt;div className=""content""&gt;
      &lt;Heading&gt;Batches&lt;/Heading&gt;
      &lt;div&gt;{this.state.data}&lt;/div&gt;
    &lt;/div&gt;;
  }
}
</code></pre>
","what is `typeof data.data`? If it is an array of objects, then use a map function to generate the `Batch` items. Make sure you assign a `key` to each of the `Batch` item!"
"41889309","have issue passing data in reactJS","4","<p>Having trouble in passing data in this reactjs, I am new to react js, the error shows </p>

<p>Uncaught Error: Objects are not valid as a React child (found: object with keys {sku, inventoryCount}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of <code>Batches</code>.</p>

<pre><code>export default class Batches extends React.Component {

  constructor() {
    super();

    this.state = {
      data: []
    };
  }

  componentDidMount() {
    // Example AJAX call
    ajax('/mft/api/reports/view', {
      success: data =&gt; {
        console.log(data);
        console.log(data[1]);
        this.setState({data: data.data});
      }
    });
  }


 render() {
    return &lt;div className=""content""&gt;
      &lt;Heading&gt;Batches&lt;/Heading&gt;
      &lt;div&gt;{this.state.data}&lt;/div&gt;
    &lt;/div&gt;;
  }
}
</code></pre>
","added already.."
"42604861","Dynamically adding Map Fragment into an activity using FragmentManager and FragmentTransaction","4","<p>I have been searching lot about adding Map fragment into an activity and performing fragment transaction to add and remove the map fragment just like normal fragment.I found lot of older post on stackoverflow but most of them user getMap() method to get googleMap object but current version of map does not have getMap() method but it has getMapAsync() so the solution I found was not the solution I was looking for.
I found someone using this also 
<code>GoogleMap map=((MapFragment)getActivity().getFragmentManager().findFragmentById(R.id.map)).getMap()</code> but here also getMap() is undefined in current version of map.
So can anyone please give me a proper guidance to achieve.
Here is the code, how I want to achieve this :</p>

<pre><code>public class MainActivity extends Fragment{
GoogleMap map;
MapView v;
@Nullable
@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
    View view=inflater.inflate(R.layout.activity_main,container,false);
    return view;
}
</code></pre>

<p>}</p>

<p>Where activity_main is a layout which contains Map fragment:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;RelativeLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    xmlns:tools=""http://schemas.android.com/tools""
    android:id=""@+id/activity_main""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    tools:context=""com.example.kamaloli.mapdemo.MainActivity""&gt;
    &lt;fragment xmlns:android=""http://schemas.android.com/apk/res/android""
        xmlns:tools=""http://schemas.android.com/tools""
        android:id=""@+id/main_activity_map""
        android:name=""com.google.android.gms.maps.SupportMapFragment""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""
        tools:context=""com.example.kamaloli.mapdemo.MainActivity"" /&gt;
&lt;/RelativeLayout&gt;</code></pre>
</div>
</div>
</p>

<p>So all I want to do is I want to add this Fragment into another activity using Fragment transaction like normal fragment.</p>
","see this answer: http://stackoverflow.com/questions/16029325/mapview-using-api-v2-key"
"42604861","Dynamically adding Map Fragment into an activity using FragmentManager and FragmentTransaction","4","<p>I have been searching lot about adding Map fragment into an activity and performing fragment transaction to add and remove the map fragment just like normal fragment.I found lot of older post on stackoverflow but most of them user getMap() method to get googleMap object but current version of map does not have getMap() method but it has getMapAsync() so the solution I found was not the solution I was looking for.
I found someone using this also 
<code>GoogleMap map=((MapFragment)getActivity().getFragmentManager().findFragmentById(R.id.map)).getMap()</code> but here also getMap() is undefined in current version of map.
So can anyone please give me a proper guidance to achieve.
Here is the code, how I want to achieve this :</p>

<pre><code>public class MainActivity extends Fragment{
GoogleMap map;
MapView v;
@Nullable
@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
    View view=inflater.inflate(R.layout.activity_main,container,false);
    return view;
}
</code></pre>

<p>}</p>

<p>Where activity_main is a layout which contains Map fragment:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;RelativeLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    xmlns:tools=""http://schemas.android.com/tools""
    android:id=""@+id/activity_main""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    tools:context=""com.example.kamaloli.mapdemo.MainActivity""&gt;
    &lt;fragment xmlns:android=""http://schemas.android.com/apk/res/android""
        xmlns:tools=""http://schemas.android.com/tools""
        android:id=""@+id/main_activity_map""
        android:name=""com.google.android.gms.maps.SupportMapFragment""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""
        tools:context=""com.example.kamaloli.mapdemo.MainActivity"" /&gt;
&lt;/RelativeLayout&gt;</code></pre>
</div>
</div>
</p>

<p>So all I want to do is I want to add this Fragment into another activity using Fragment transaction like normal fragment.</p>
","You can put this map fragment in a fragment then replace activity with this fragment"
"42604861","Dynamically adding Map Fragment into an activity using FragmentManager and FragmentTransaction","4","<p>I have been searching lot about adding Map fragment into an activity and performing fragment transaction to add and remove the map fragment just like normal fragment.I found lot of older post on stackoverflow but most of them user getMap() method to get googleMap object but current version of map does not have getMap() method but it has getMapAsync() so the solution I found was not the solution I was looking for.
I found someone using this also 
<code>GoogleMap map=((MapFragment)getActivity().getFragmentManager().findFragmentById(R.id.map)).getMap()</code> but here also getMap() is undefined in current version of map.
So can anyone please give me a proper guidance to achieve.
Here is the code, how I want to achieve this :</p>

<pre><code>public class MainActivity extends Fragment{
GoogleMap map;
MapView v;
@Nullable
@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
    View view=inflater.inflate(R.layout.activity_main,container,false);
    return view;
}
</code></pre>

<p>}</p>

<p>Where activity_main is a layout which contains Map fragment:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;RelativeLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    xmlns:tools=""http://schemas.android.com/tools""
    android:id=""@+id/activity_main""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    tools:context=""com.example.kamaloli.mapdemo.MainActivity""&gt;
    &lt;fragment xmlns:android=""http://schemas.android.com/apk/res/android""
        xmlns:tools=""http://schemas.android.com/tools""
        android:id=""@+id/main_activity_map""
        android:name=""com.google.android.gms.maps.SupportMapFragment""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""
        tools:context=""com.example.kamaloli.mapdemo.MainActivity"" /&gt;
&lt;/RelativeLayout&gt;</code></pre>
</div>
</div>
</p>

<p>So all I want to do is I want to add this Fragment into another activity using Fragment transaction like normal fragment.</p>
","Can you give example?"
"42604861","Dynamically adding Map Fragment into an activity using FragmentManager and FragmentTransaction","4","<p>I have been searching lot about adding Map fragment into an activity and performing fragment transaction to add and remove the map fragment just like normal fragment.I found lot of older post on stackoverflow but most of them user getMap() method to get googleMap object but current version of map does not have getMap() method but it has getMapAsync() so the solution I found was not the solution I was looking for.
I found someone using this also 
<code>GoogleMap map=((MapFragment)getActivity().getFragmentManager().findFragmentById(R.id.map)).getMap()</code> but here also getMap() is undefined in current version of map.
So can anyone please give me a proper guidance to achieve.
Here is the code, how I want to achieve this :</p>

<pre><code>public class MainActivity extends Fragment{
GoogleMap map;
MapView v;
@Nullable
@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
    View view=inflater.inflate(R.layout.activity_main,container,false);
    return view;
}
</code></pre>

<p>}</p>

<p>Where activity_main is a layout which contains Map fragment:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;RelativeLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    xmlns:tools=""http://schemas.android.com/tools""
    android:id=""@+id/activity_main""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    tools:context=""com.example.kamaloli.mapdemo.MainActivity""&gt;
    &lt;fragment xmlns:android=""http://schemas.android.com/apk/res/android""
        xmlns:tools=""http://schemas.android.com/tools""
        android:id=""@+id/main_activity_map""
        android:name=""com.google.android.gms.maps.SupportMapFragment""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""
        tools:context=""com.example.kamaloli.mapdemo.MainActivity"" /&gt;
&lt;/RelativeLayout&gt;</code></pre>
</div>
</div>
</p>

<p>So all I want to do is I want to add this Fragment into another activity using Fragment transaction like normal fragment.</p>
","sure, wait a minute."
"42988052","react-native / redux - action not working?","0","<p>I'm playing with react-native / redux and am dispatching an action that is supposed to display a number yet an error gets thrown:</p>

<blockquote>
  <p>Unhandled JS Exception: Objects are not valid as a React child (found:
  object with keys {type, payload}). If you meant to render a collection
  of children, use an array instead or wrap the object using
  createFragment(object) from the React add-ons. Check the render method
  of <code>Text</code>.</p>
</blockquote>

<p>createStore.js</p>

<pre><code>import { createStore, applyMiddleware, combineReducers } from 'redux';
import createLogger from 'redux-logger';
import numReducer from './reducers/numReducer';

const logger = createLogger();

export default (initialState = {}) =&gt; (
  createStore(
    combineReducers({
      numbers: numReducer
    }),
    initialState,
    applyMiddleware(logger)
  )
);
</code></pre>

<p>App.js</p>

<pre><code>import React from 'react';
import { Provider } from 'react-redux';
import HomeScreen from './components/HomeScreen';
import createStore from './createStore';

const store = createStore();

export default () =&gt; (
  &lt;Provider store={store}&gt;
    &lt;HomeScreen /&gt;
  &lt;/Provider&gt;
);
</code></pre>

<p>numReducer.js</p>

<pre><code>import { LIST_NUMBERS, PICK_NUMBER } from '../actions/actionTypes';

export default (state = [], action = {}) =&gt; {
  switch (action.type) {
    case LIST_NUMBERS:
      return action.payload || [];
    case PICK_NUMBER:
      return action.payload;
    default:
      return state;
  }
};
</code></pre>

<p>HomeScreen.js</p>

<pre><code>import React from 'react';
import { View } from 'react-native';
import NavContainer from '../containers/NavContainer';


const HomeScreen = () =&gt; (
  &lt;View&gt;
    &lt;NavContainer /&gt;
  &lt;/View&gt;
);

export default HomeScreen;
</code></pre>

<p>NavContainer.js</p>

<pre><code>import { bindActionCreators } from 'redux';
import { connect } from 'react-redux';

import { listNumbers, pickNumber } from '../actions/numberActions';

import Nav from '../components/Nav';

const mapStateToProps = state =&gt; ({
  numbers: state.numbers
});

const mapDispatchToProps = dispatch =&gt; (
  bindActionCreators({
    listNumbers,
    pickNumber
  }, dispatch)
);

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(Nav);
</code></pre>

<p>Nav.js</p>

<pre><code>import React, { Component, PropTypes } from 'react';
import { View, Text } from 'react-native';


export default class Nav extends Component {

  render() {
    return (
      &lt;View&gt;
        &lt;Text&gt;FirstLine&lt;/Text&gt;
        &lt;Text&gt;SecondLind&lt;/Text&gt;
        &lt;Text&gt;Number: {this.props.pickNumber(3)}&lt;/Text&gt;
      &lt;/View&gt;
    );
  }

}
</code></pre>

<p>Please advise what I am doing wrong. Thank you</p>
",""
"43058332","Graphene Django and react-router-relay","3","<p>I'm having real trouble figuring out the way that Graphene Django should be used with react-router-relay. Let's say I can use the following GraphQL query fine via the GraphiQL console on my Django server:</p>

<pre><code>query {
  allThreads {
    edges {
      node {
        id
      }
    }
  }
}
</code></pre>

<p>This is presumably Graphene's alternative to the commmon <code>viewer</code> wrapper used because Relay doesn't support connections on root queries. So I understand that allThreads is really a node (of type ThreadNodeConnection), and has an edges connections that I can query. </p>

<p>The trouble is I can't figure out how to use this with Relay, and specifically react-router-relay. I have a React view with a fragment on it like this (with a child Thread component elsewhere):</p>

<pre><code>fragments: {
      store: () =&gt; Relay.QL`
        fragment on Query {
          allThreads (first:300) {
            edges {
              node {
                // child's fragment included here
              }
            },
          }
        }
      `,
    },
</code></pre>

<p>Webpack checks this against my live schema and likes it. Then I create the following in my index.js for router:</p>

<pre><code>const ViewerQueries = {
  store: () =&gt; Relay.QL`query { allThreads(first:300) }`
};

ReactDOM.render(
  &lt;Router
    forceFetch
    environment={Relay.Store}
    render={applyRouterMiddleware(useRelay)}
    history={browserHistory}
  &gt;
    &lt;Route path='/' component={ThreadList} queries={ViewerQueries} /&gt;
  &lt;/Router&gt;
  , document.getElementById('container')
)
</code></pre>

<p>Already I'm feeling a little unsure because I figure I'm doing ViewerQueries wrong, but it's hard to know because everyone else uses this to accommodate their <code>viewer</code> wrapper on their GraphQL connections, but Graphene has a different wrapper on each connection, so this might only work for my single route, but that's okay for now. Webpack likes it against the schema again. But when I load the page, I get a 'bad request' and the error that:</p>

<blockquote>
  <p>""Fragment F1 cannot be spread here as objects of type
  ThreadNodeConnection can never be of type Query""</p>
</blockquote>

<p>To be honest, that's about where I couldn't proceed, because I'm clearly not understanding something about either how Graphene Django constructs the schema, or how the GraphQL fragments should be written, or how the Route query should be written. Trouble is I can't figure out which of these things is wrong, and there don't seem to be any resources out there around people using these particular combinations of technologies. </p>

<p>For completeness, my Graphene Django schema setup is (slightly simplified):</p>

<p>project/threads/schema.py:</p>

<pre><code>class ThreadNode(DjangoObjectType):
    class Meta:
        model = Thread
        interfaces = (relay.Node, )

...

class Query(graphene.AbstractType):
    all_threads = DjangoFilterConnectionField(ThreadNode)
    thread = relay.Node.Field(ThreadNode, id=graphene.Int())

    def resolve_all_threads(self, args, context, info):
        return Thread.objects.select_related('author__profile').all()

    def resolve_thread(self, args, context, info):
        id = args.get('id')

        if id is not None:
            return Thread.objects.get(pk=id)

        return None
</code></pre>

<p>project/schema.py:</p>

<pre><code>class Query(project.threads.schema.Query, graphene.ObjectType):
    pass

schema = graphene.Schema(query=Query)
</code></pre>

<p>If anyone has used this particular combination before and has any advice, that'd be amazing.</p>
","I noticed the line ""fragment on Query"". Have you tried fragment on ThreadNodeConnection as the error suggests?"
"43058332","Graphene Django and react-router-relay","3","<p>I'm having real trouble figuring out the way that Graphene Django should be used with react-router-relay. Let's say I can use the following GraphQL query fine via the GraphiQL console on my Django server:</p>

<pre><code>query {
  allThreads {
    edges {
      node {
        id
      }
    }
  }
}
</code></pre>

<p>This is presumably Graphene's alternative to the commmon <code>viewer</code> wrapper used because Relay doesn't support connections on root queries. So I understand that allThreads is really a node (of type ThreadNodeConnection), and has an edges connections that I can query. </p>

<p>The trouble is I can't figure out how to use this with Relay, and specifically react-router-relay. I have a React view with a fragment on it like this (with a child Thread component elsewhere):</p>

<pre><code>fragments: {
      store: () =&gt; Relay.QL`
        fragment on Query {
          allThreads (first:300) {
            edges {
              node {
                // child's fragment included here
              }
            },
          }
        }
      `,
    },
</code></pre>

<p>Webpack checks this against my live schema and likes it. Then I create the following in my index.js for router:</p>

<pre><code>const ViewerQueries = {
  store: () =&gt; Relay.QL`query { allThreads(first:300) }`
};

ReactDOM.render(
  &lt;Router
    forceFetch
    environment={Relay.Store}
    render={applyRouterMiddleware(useRelay)}
    history={browserHistory}
  &gt;
    &lt;Route path='/' component={ThreadList} queries={ViewerQueries} /&gt;
  &lt;/Router&gt;
  , document.getElementById('container')
)
</code></pre>

<p>Already I'm feeling a little unsure because I figure I'm doing ViewerQueries wrong, but it's hard to know because everyone else uses this to accommodate their <code>viewer</code> wrapper on their GraphQL connections, but Graphene has a different wrapper on each connection, so this might only work for my single route, but that's okay for now. Webpack likes it against the schema again. But when I load the page, I get a 'bad request' and the error that:</p>

<blockquote>
  <p>""Fragment F1 cannot be spread here as objects of type
  ThreadNodeConnection can never be of type Query""</p>
</blockquote>

<p>To be honest, that's about where I couldn't proceed, because I'm clearly not understanding something about either how Graphene Django constructs the schema, or how the GraphQL fragments should be written, or how the Route query should be written. Trouble is I can't figure out which of these things is wrong, and there don't seem to be any resources out there around people using these particular combinations of technologies. </p>

<p>For completeness, my Graphene Django schema setup is (slightly simplified):</p>

<p>project/threads/schema.py:</p>

<pre><code>class ThreadNode(DjangoObjectType):
    class Meta:
        model = Thread
        interfaces = (relay.Node, )

...

class Query(graphene.AbstractType):
    all_threads = DjangoFilterConnectionField(ThreadNode)
    thread = relay.Node.Field(ThreadNode, id=graphene.Int())

    def resolve_all_threads(self, args, context, info):
        return Thread.objects.select_related('author__profile').all()

    def resolve_thread(self, args, context, info):
        id = args.get('id')

        if id is not None:
            return Thread.objects.get(pk=id)

        return None
</code></pre>

<p>project/schema.py:</p>

<pre><code>class Query(project.threads.schema.Query, graphene.ObjectType):
    pass

schema = graphene.Schema(query=Query)
</code></pre>

<p>If anyone has used this particular combination before and has any advice, that'd be amazing.</p>
","This is not really about graphene. What you are trying to do is use a connection field as a root field. This is not supported in Relay 1, but should be in Relay 2. Full explanation is here: https://github.com/facebook/relay/issues/112"
"43058332","Graphene Django and react-router-relay","3","<p>I'm having real trouble figuring out the way that Graphene Django should be used with react-router-relay. Let's say I can use the following GraphQL query fine via the GraphiQL console on my Django server:</p>

<pre><code>query {
  allThreads {
    edges {
      node {
        id
      }
    }
  }
}
</code></pre>

<p>This is presumably Graphene's alternative to the commmon <code>viewer</code> wrapper used because Relay doesn't support connections on root queries. So I understand that allThreads is really a node (of type ThreadNodeConnection), and has an edges connections that I can query. </p>

<p>The trouble is I can't figure out how to use this with Relay, and specifically react-router-relay. I have a React view with a fragment on it like this (with a child Thread component elsewhere):</p>

<pre><code>fragments: {
      store: () =&gt; Relay.QL`
        fragment on Query {
          allThreads (first:300) {
            edges {
              node {
                // child's fragment included here
              }
            },
          }
        }
      `,
    },
</code></pre>

<p>Webpack checks this against my live schema and likes it. Then I create the following in my index.js for router:</p>

<pre><code>const ViewerQueries = {
  store: () =&gt; Relay.QL`query { allThreads(first:300) }`
};

ReactDOM.render(
  &lt;Router
    forceFetch
    environment={Relay.Store}
    render={applyRouterMiddleware(useRelay)}
    history={browserHistory}
  &gt;
    &lt;Route path='/' component={ThreadList} queries={ViewerQueries} /&gt;
  &lt;/Router&gt;
  , document.getElementById('container')
)
</code></pre>

<p>Already I'm feeling a little unsure because I figure I'm doing ViewerQueries wrong, but it's hard to know because everyone else uses this to accommodate their <code>viewer</code> wrapper on their GraphQL connections, but Graphene has a different wrapper on each connection, so this might only work for my single route, but that's okay for now. Webpack likes it against the schema again. But when I load the page, I get a 'bad request' and the error that:</p>

<blockquote>
  <p>""Fragment F1 cannot be spread here as objects of type
  ThreadNodeConnection can never be of type Query""</p>
</blockquote>

<p>To be honest, that's about where I couldn't proceed, because I'm clearly not understanding something about either how Graphene Django constructs the schema, or how the GraphQL fragments should be written, or how the Route query should be written. Trouble is I can't figure out which of these things is wrong, and there don't seem to be any resources out there around people using these particular combinations of technologies. </p>

<p>For completeness, my Graphene Django schema setup is (slightly simplified):</p>

<p>project/threads/schema.py:</p>

<pre><code>class ThreadNode(DjangoObjectType):
    class Meta:
        model = Thread
        interfaces = (relay.Node, )

...

class Query(graphene.AbstractType):
    all_threads = DjangoFilterConnectionField(ThreadNode)
    thread = relay.Node.Field(ThreadNode, id=graphene.Int())

    def resolve_all_threads(self, args, context, info):
        return Thread.objects.select_related('author__profile').all()

    def resolve_thread(self, args, context, info):
        id = args.get('id')

        if id is not None:
            return Thread.objects.get(pk=id)

        return None
</code></pre>

<p>project/schema.py:</p>

<pre><code>class Query(project.threads.schema.Query, graphene.ObjectType):
    pass

schema = graphene.Schema(query=Query)
</code></pre>

<p>If anyone has used this particular combination before and has any advice, that'd be amazing.</p>
","I don't think that's true and I mention that in the question. Graphene skirts the connection-as-root issue by wrapping all connections, so the connection becomes a node with an edges connection available on it."
"43532367","[react-native]update RN to 0.43.3 build failed","3","<p>when I update RN from 0.41 to 0.43.3,I suffered a crazy problem, if I run gradlew assembleRelease, the apk build failed, but when I add option --debug, the apk build successful, it should be the problem of progurad, but i cannot fix it, any help is appreciated:</p>

<pre><code>-gradlew assembleRelease
...
Loading dependency graph, done.easeJsAndAssets
warning: the transform cache was reset.
bundle: start
bundle: finish
bundle: Writing bundle output to:xxx\android\app\build\intermediates\assets\release\index.android.bundle
bundle: Done writing bundle output
bundle: Copying 5 asset files
bundle: Done copying assets

FAILURE: Build failed with an exception.

* What went wrong:
Unable to process incoming event 'ProgressComplete ' (ProgressCompleteEvent)
</code></pre>

<p>if I run gradlew assembleRelease --debug</p>

<pre><code>-gradlew assembleRelease --debug
...
[LIFECYCLE] [org.gradle.BuildResultLogger] BUILD SUCCESSFUL
</code></pre>

<p>run gradlew assembleRelease --info or --stacktrace all failed, no warning messages show.</p>

<p>When i build apk use android studio,it shows:</p>

<pre><code>    Initializing...
Note: the configuration refers to the unknown class 'com.facebook.react.uimanager.UIProp'
Note: the configuration refers to the unknown class 'sun.misc.Unsafe'
Note: the configuration refers to the unknown class 'android.text'
Note: com.facebook.common.webp.WebpSupportStatus: can't find dynamically referenced class com.facebook.webpsupport.WebpBitmapFactoryImpl
Note: com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider: can't find dynamically referenced class com.facebook.imagepipeline.animated.factory.AnimatedFactoryImplSupport
Note: com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider: can't find dynamically referenced class com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl
Note: com.facebook.imagepipeline.nativecode.WebpTranscoderFactory: can't find dynamically referenced class com.facebook.imagepipeline.nativecode.WebpTranscoderImpl
Note: okhttp3.internal.platform.AndroidPlatform: can't find dynamically referenced class com.android.org.conscrypt.SSLParametersImpl
Note: okhttp3.internal.platform.AndroidPlatform: can't find dynamically referenced class org.apache.harmony.xnet.provider.jsse.SSLParametersImpl
Note: okhttp3.internal.platform.Platform: can't find dynamically referenced class sun.security.ssl.SSLContextImpl
Note: com.facebook.react.views.textinput.ReactTextInputManager accesses a declared field 'mCursorDrawable' dynamically
Note: the configuration keeps the entry point 'com.facebook.drawee.drawable.ForwardingDrawable { void setTransformCallback(com.facebook.drawee.drawable.TransformCallback); }', but not the descriptor class 'com.facebook.drawee.drawable.TransformCallback'
Note: the configuration keeps the entry point 'com.facebook.drawee.view.DraweeView { void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy); }', but not the descriptor class 'com.facebook.drawee.interfaces.DraweeHierarchy'
Note: the configuration keeps the entry point 'com.facebook.drawee.view.DraweeView { void setController(com.facebook.drawee.interfaces.DraweeController); }', but not the descriptor class 'com.facebook.drawee.interfaces.DraweeController'
Note: the configuration keeps the entry point 'com.facebook.drawee.view.GenericDraweeView { GenericDraweeView(android.content.Context,com.facebook.drawee.generic.GenericDraweeHierarchy); }', but not the descriptor class 'com.facebook.drawee.generic.GenericDraweeHierarchy'
Note: the configuration keeps the entry point 'com.facebook.imagepipeline.request.ImageRequest { ImageRequest(com.facebook.imagepipeline.request.ImageRequestBuilder); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequestBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.animated.EventAnimationDriver { EventAnimationDriver(java.util.List,com.facebook.react.animated.ValueAnimatedNode); }', but not the descriptor class 'com.facebook.react.animated.ValueAnimatedNode'
Note: the configuration keeps the entry point 'com.facebook.react.bridge.ModuleSpec { ModuleSpec(java.lang.Class,javax.inject.Provider); }', but not the descriptor class 'javax.inject.Provider'
Note: the configuration keeps the entry point 'com.facebook.react.cxxbridge.ModuleHolder { ModuleHolder(java.lang.String,boolean,boolean,boolean,javax.inject.Provider); }', but not the descriptor class 'javax.inject.Provider'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatShadowNode { void collectState(com.facebook.react.flat.StateBuilder,float,float,float,float,float,float,float,float); }', but not the descriptor class 'com.facebook.react.flat.StateBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatShadowNode { void setNodeRegion(com.facebook.react.flat.NodeRegion); }', but not the descriptor class 'com.facebook.react.flat.NodeRegion'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatTextShadowNode { void performCollectAttachDetachListeners(com.facebook.react.flat.StateBuilder); }', but not the descriptor class 'com.facebook.react.flat.StateBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatUIViewOperationQueue$DetachAllChildrenFromViews { FlatUIViewOperationQueue$DetachAllChildrenFromViews(com.facebook.react.flat.FlatUIViewOperationQueue); }', but not the descriptor class 'com.facebook.react.flat.FlatUIViewOperationQueue'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatUIViewOperationQueue$ViewManagerCommand { FlatUIViewOperationQueue$ViewManagerCommand(com.facebook.react.flat.FlatUIViewOperationQueue,int,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.flat.FlatUIViewOperationQueue'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatViewManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatViewManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTImageViewManager { RCTImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTImageViewManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTImageViewManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTTextInput { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTTextManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTTextManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setHotspot(com.facebook.react.flat.FlatViewGroup,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void receiveCommand(com.facebook.react.flat.FlatViewGroup,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setNeedsOffscreenAlphaCompositing(com.facebook.react.flat.FlatViewGroup,boolean); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setPointerEvents(com.facebook.react.flat.FlatViewGroup,java.lang.String); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setRemoveClippedSubviews(com.facebook.react.flat.FlatViewGroup,boolean); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setHitSlop(com.facebook.react.flat.FlatViewGroup,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTVirtualText { void performCollectAttachDetachListeners(com.facebook.react.flat.StateBuilder); }', but not the descriptor class 'com.facebook.react.flat.StateBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.modules.core.Timing { com.facebook.react.modules.core.Timing$IdleCallbackRunnable access$1202(com.facebook.react.modules.core.Timing,com.facebook.react.modules.core.Timing$IdleCallbackRunnable); }', but not the descriptor class 'com.facebook.react.modules.core.Timing$IdleCallbackRunnable'
Note: the configuration keeps the entry point 'com.facebook.react.modules.dialog.AlertFragment { AlertFragment(com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener,android.os.Bundle); }', but not the descriptor class 'com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener'
Note: the configuration keeps the entry point 'com.facebook.react.modules.dialog.SupportAlertFragment { SupportAlertFragment(com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener,android.os.Bundle); }', but not the descriptor class 'com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.FrescoModule { FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipelineConfig); }', but not the descriptor class 'com.facebook.imagepipeline.core.ImagePipelineConfig'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.ReactNetworkImageRequest { com.facebook.react.modules.fresco.ReactNetworkImageRequest fromBuilderWithHeaders(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequestBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.ReactNetworkImageRequest { ReactNetworkImageRequest(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequestBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.SystraceRequestListener { void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequest'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.SystraceRequestListener { void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequest'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.SystraceRequestListener { void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequest'
Note: the configuration keeps the entry point 'com.facebook.react.modules.image.ImageLoaderModule { void registerRequest(int,com.facebook.datasource.DataSource); }', but not the descriptor class 'com.facebook.datasource.DataSource'
Note: the configuration keeps the entry point 'com.facebook.react.shell.MainPackageConfig$Builder { com.facebook.react.shell.MainPackageConfig$Builder setFrescoConfig(com.facebook.imagepipeline.core.ImagePipelineConfig); }', but not the descriptor class 'com.facebook.imagepipeline.core.ImagePipelineConfig'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.NativeViewHierarchyManager { void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[]); }', but not the descriptor class 'com.facebook.react.uimanager.ViewAtIndex'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.NativeViewHierarchyOptimizer { NativeViewHierarchyOptimizer(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ShadowNodeRegistry); }', but not the descriptor class 'com.facebook.react.uimanager.ShadowNodeRegistry'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.NativeViewHierarchyOptimizer { void handleManageChildren(com.facebook.react.uimanager.ReactShadowNode,int[],int[],com.facebook.react.uimanager.ViewAtIndex[],int[]); }', but not the descriptor class 'com.facebook.react.uimanager.ViewAtIndex'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.UIViewOperationQueue { void enqueueManageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[]); }', but not the descriptor class 'com.facebook.react.uimanager.ViewAtIndex'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,int); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void getDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageView { ReactImageView(android.content.Context,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageView { void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType); }', but not the descriptor class 'com.facebook.drawee.drawable.ScalingUtils$ScaleType'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageView { void setControllerListener(com.facebook.drawee.controller.ControllerListener); }', but not the descriptor class 'com.facebook.drawee.controller.ControllerListener'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ProgressBarShadowNode { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setStyle(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode { FrescoBasedReactTextInlineImageShadowNode(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan { FrescoBasedReactTextInlineImageSpan(android.content.res.Resources,int,int,android.net.Uri,com.facebook.react.bridge.ReadableMap,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager { FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactEditText { void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher); }', but not the descriptor class 'com.facebook.react.views.textinput.SelectionWatcher'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputShadowNode { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.DrawableWithIntrinsicSize { DrawableWithIntrinsicSize(android.graphics.drawable.Drawable,com.facebook.imagepipeline.image.ImageInfo); }', but not the descriptor class 'com.facebook.imagepipeline.image.ImageInfo'
Note: the configuration keeps the entry point 'com.facebook.yoga.YogaBaselineFunction { float baseline(com.facebook.yoga.YogaNodeAPI,float,float); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.yoga.YogaMeasureFunction { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.imagepicker.ImagePickerModule { void putExtraFileInfo(java.lang.String,com.imagepicker.ResponseHelper); }', but not the descriptor class 'com.imagepicker.ResponseHelper'
Note: there were 3 references to unknown classes.
      You should check your configuration for typos.
      (http://proguard.sourceforge.net/manual/troubleshooting.html#unknownclass)
Note: there were 78 unkept descriptor classes in kept class members.
      You should consider explicitly keeping the mentioned classes
      (using '-keep').
      (http://proguard.sourceforge.net/manual/troubleshooting.html#descriptorclass)
Note: there were 7 unresolved dynamic references to classes or interfaces.
      You should check if you need to specify additional program jars.
      (http://proguard.sourceforge.net/manual/troubleshooting.html#dynamicalclass)
Note: there were 1 accesses to class members by means of introspection.
      You should consider explicitly keeping the mentioned class members
      (using '-keep' or '-keepclassmembers').
      (http://proguard.sourceforge.net/manual/troubleshooting.html#dynamicalclassmember)
</code></pre>

<p>how to modify my proguard file?</p>
","I got that error as well on react ^15.4.2 and react-native 0.43, but upgrading to 16.0.0-alpha.6 fixed it. So id say.. stay away from 0.43 or use react 16.0.0-alpha.6"
"43532367","[react-native]update RN to 0.43.3 build failed","3","<p>when I update RN from 0.41 to 0.43.3,I suffered a crazy problem, if I run gradlew assembleRelease, the apk build failed, but when I add option --debug, the apk build successful, it should be the problem of progurad, but i cannot fix it, any help is appreciated:</p>

<pre><code>-gradlew assembleRelease
...
Loading dependency graph, done.easeJsAndAssets
warning: the transform cache was reset.
bundle: start
bundle: finish
bundle: Writing bundle output to:xxx\android\app\build\intermediates\assets\release\index.android.bundle
bundle: Done writing bundle output
bundle: Copying 5 asset files
bundle: Done copying assets

FAILURE: Build failed with an exception.

* What went wrong:
Unable to process incoming event 'ProgressComplete ' (ProgressCompleteEvent)
</code></pre>

<p>if I run gradlew assembleRelease --debug</p>

<pre><code>-gradlew assembleRelease --debug
...
[LIFECYCLE] [org.gradle.BuildResultLogger] BUILD SUCCESSFUL
</code></pre>

<p>run gradlew assembleRelease --info or --stacktrace all failed, no warning messages show.</p>

<p>When i build apk use android studio,it shows:</p>

<pre><code>    Initializing...
Note: the configuration refers to the unknown class 'com.facebook.react.uimanager.UIProp'
Note: the configuration refers to the unknown class 'sun.misc.Unsafe'
Note: the configuration refers to the unknown class 'android.text'
Note: com.facebook.common.webp.WebpSupportStatus: can't find dynamically referenced class com.facebook.webpsupport.WebpBitmapFactoryImpl
Note: com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider: can't find dynamically referenced class com.facebook.imagepipeline.animated.factory.AnimatedFactoryImplSupport
Note: com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider: can't find dynamically referenced class com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl
Note: com.facebook.imagepipeline.nativecode.WebpTranscoderFactory: can't find dynamically referenced class com.facebook.imagepipeline.nativecode.WebpTranscoderImpl
Note: okhttp3.internal.platform.AndroidPlatform: can't find dynamically referenced class com.android.org.conscrypt.SSLParametersImpl
Note: okhttp3.internal.platform.AndroidPlatform: can't find dynamically referenced class org.apache.harmony.xnet.provider.jsse.SSLParametersImpl
Note: okhttp3.internal.platform.Platform: can't find dynamically referenced class sun.security.ssl.SSLContextImpl
Note: com.facebook.react.views.textinput.ReactTextInputManager accesses a declared field 'mCursorDrawable' dynamically
Note: the configuration keeps the entry point 'com.facebook.drawee.drawable.ForwardingDrawable { void setTransformCallback(com.facebook.drawee.drawable.TransformCallback); }', but not the descriptor class 'com.facebook.drawee.drawable.TransformCallback'
Note: the configuration keeps the entry point 'com.facebook.drawee.view.DraweeView { void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy); }', but not the descriptor class 'com.facebook.drawee.interfaces.DraweeHierarchy'
Note: the configuration keeps the entry point 'com.facebook.drawee.view.DraweeView { void setController(com.facebook.drawee.interfaces.DraweeController); }', but not the descriptor class 'com.facebook.drawee.interfaces.DraweeController'
Note: the configuration keeps the entry point 'com.facebook.drawee.view.GenericDraweeView { GenericDraweeView(android.content.Context,com.facebook.drawee.generic.GenericDraweeHierarchy); }', but not the descriptor class 'com.facebook.drawee.generic.GenericDraweeHierarchy'
Note: the configuration keeps the entry point 'com.facebook.imagepipeline.request.ImageRequest { ImageRequest(com.facebook.imagepipeline.request.ImageRequestBuilder); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequestBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.animated.EventAnimationDriver { EventAnimationDriver(java.util.List,com.facebook.react.animated.ValueAnimatedNode); }', but not the descriptor class 'com.facebook.react.animated.ValueAnimatedNode'
Note: the configuration keeps the entry point 'com.facebook.react.bridge.ModuleSpec { ModuleSpec(java.lang.Class,javax.inject.Provider); }', but not the descriptor class 'javax.inject.Provider'
Note: the configuration keeps the entry point 'com.facebook.react.cxxbridge.ModuleHolder { ModuleHolder(java.lang.String,boolean,boolean,boolean,javax.inject.Provider); }', but not the descriptor class 'javax.inject.Provider'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatShadowNode { void collectState(com.facebook.react.flat.StateBuilder,float,float,float,float,float,float,float,float); }', but not the descriptor class 'com.facebook.react.flat.StateBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatShadowNode { void setNodeRegion(com.facebook.react.flat.NodeRegion); }', but not the descriptor class 'com.facebook.react.flat.NodeRegion'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatTextShadowNode { void performCollectAttachDetachListeners(com.facebook.react.flat.StateBuilder); }', but not the descriptor class 'com.facebook.react.flat.StateBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatUIViewOperationQueue$DetachAllChildrenFromViews { FlatUIViewOperationQueue$DetachAllChildrenFromViews(com.facebook.react.flat.FlatUIViewOperationQueue); }', but not the descriptor class 'com.facebook.react.flat.FlatUIViewOperationQueue'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatUIViewOperationQueue$ViewManagerCommand { FlatUIViewOperationQueue$ViewManagerCommand(com.facebook.react.flat.FlatUIViewOperationQueue,int,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.flat.FlatUIViewOperationQueue'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatViewManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatViewManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTImageViewManager { RCTImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTImageViewManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTImageViewManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTTextInput { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTTextManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTTextManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setHotspot(com.facebook.react.flat.FlatViewGroup,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void receiveCommand(com.facebook.react.flat.FlatViewGroup,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setNeedsOffscreenAlphaCompositing(com.facebook.react.flat.FlatViewGroup,boolean); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setPointerEvents(com.facebook.react.flat.FlatViewGroup,java.lang.String); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setRemoveClippedSubviews(com.facebook.react.flat.FlatViewGroup,boolean); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setHitSlop(com.facebook.react.flat.FlatViewGroup,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTVirtualText { void performCollectAttachDetachListeners(com.facebook.react.flat.StateBuilder); }', but not the descriptor class 'com.facebook.react.flat.StateBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.modules.core.Timing { com.facebook.react.modules.core.Timing$IdleCallbackRunnable access$1202(com.facebook.react.modules.core.Timing,com.facebook.react.modules.core.Timing$IdleCallbackRunnable); }', but not the descriptor class 'com.facebook.react.modules.core.Timing$IdleCallbackRunnable'
Note: the configuration keeps the entry point 'com.facebook.react.modules.dialog.AlertFragment { AlertFragment(com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener,android.os.Bundle); }', but not the descriptor class 'com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener'
Note: the configuration keeps the entry point 'com.facebook.react.modules.dialog.SupportAlertFragment { SupportAlertFragment(com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener,android.os.Bundle); }', but not the descriptor class 'com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.FrescoModule { FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipelineConfig); }', but not the descriptor class 'com.facebook.imagepipeline.core.ImagePipelineConfig'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.ReactNetworkImageRequest { com.facebook.react.modules.fresco.ReactNetworkImageRequest fromBuilderWithHeaders(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequestBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.ReactNetworkImageRequest { ReactNetworkImageRequest(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequestBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.SystraceRequestListener { void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequest'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.SystraceRequestListener { void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequest'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.SystraceRequestListener { void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequest'
Note: the configuration keeps the entry point 'com.facebook.react.modules.image.ImageLoaderModule { void registerRequest(int,com.facebook.datasource.DataSource); }', but not the descriptor class 'com.facebook.datasource.DataSource'
Note: the configuration keeps the entry point 'com.facebook.react.shell.MainPackageConfig$Builder { com.facebook.react.shell.MainPackageConfig$Builder setFrescoConfig(com.facebook.imagepipeline.core.ImagePipelineConfig); }', but not the descriptor class 'com.facebook.imagepipeline.core.ImagePipelineConfig'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.NativeViewHierarchyManager { void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[]); }', but not the descriptor class 'com.facebook.react.uimanager.ViewAtIndex'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.NativeViewHierarchyOptimizer { NativeViewHierarchyOptimizer(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ShadowNodeRegistry); }', but not the descriptor class 'com.facebook.react.uimanager.ShadowNodeRegistry'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.NativeViewHierarchyOptimizer { void handleManageChildren(com.facebook.react.uimanager.ReactShadowNode,int[],int[],com.facebook.react.uimanager.ViewAtIndex[],int[]); }', but not the descriptor class 'com.facebook.react.uimanager.ViewAtIndex'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.UIViewOperationQueue { void enqueueManageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[]); }', but not the descriptor class 'com.facebook.react.uimanager.ViewAtIndex'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,int); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void getDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageView { ReactImageView(android.content.Context,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageView { void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType); }', but not the descriptor class 'com.facebook.drawee.drawable.ScalingUtils$ScaleType'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageView { void setControllerListener(com.facebook.drawee.controller.ControllerListener); }', but not the descriptor class 'com.facebook.drawee.controller.ControllerListener'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ProgressBarShadowNode { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setStyle(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode { FrescoBasedReactTextInlineImageShadowNode(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan { FrescoBasedReactTextInlineImageSpan(android.content.res.Resources,int,int,android.net.Uri,com.facebook.react.bridge.ReadableMap,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager { FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactEditText { void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher); }', but not the descriptor class 'com.facebook.react.views.textinput.SelectionWatcher'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputShadowNode { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.DrawableWithIntrinsicSize { DrawableWithIntrinsicSize(android.graphics.drawable.Drawable,com.facebook.imagepipeline.image.ImageInfo); }', but not the descriptor class 'com.facebook.imagepipeline.image.ImageInfo'
Note: the configuration keeps the entry point 'com.facebook.yoga.YogaBaselineFunction { float baseline(com.facebook.yoga.YogaNodeAPI,float,float); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.yoga.YogaMeasureFunction { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.imagepicker.ImagePickerModule { void putExtraFileInfo(java.lang.String,com.imagepicker.ResponseHelper); }', but not the descriptor class 'com.imagepicker.ResponseHelper'
Note: there were 3 references to unknown classes.
      You should check your configuration for typos.
      (http://proguard.sourceforge.net/manual/troubleshooting.html#unknownclass)
Note: there were 78 unkept descriptor classes in kept class members.
      You should consider explicitly keeping the mentioned classes
      (using '-keep').
      (http://proguard.sourceforge.net/manual/troubleshooting.html#descriptorclass)
Note: there were 7 unresolved dynamic references to classes or interfaces.
      You should check if you need to specify additional program jars.
      (http://proguard.sourceforge.net/manual/troubleshooting.html#dynamicalclass)
Note: there were 1 accesses to class members by means of introspection.
      You should consider explicitly keeping the mentioned class members
      (using '-keep' or '-keepclassmembers').
      (http://proguard.sourceforge.net/manual/troubleshooting.html#dynamicalclassmember)
</code></pre>

<p>how to modify my proguard file?</p>
","I have modified the proguard file,and now there are still 'duplicate' message: Note: duplicate definition of library class [android.net.http.SslCertificate]...Note: duplicate definition of library class [org.apache.http.params.HttpParams]Note: there were 7 duplicate class definitions.how to remove these duplicate classes?"
"43532367","[react-native]update RN to 0.43.3 build failed","3","<p>when I update RN from 0.41 to 0.43.3,I suffered a crazy problem, if I run gradlew assembleRelease, the apk build failed, but when I add option --debug, the apk build successful, it should be the problem of progurad, but i cannot fix it, any help is appreciated:</p>

<pre><code>-gradlew assembleRelease
...
Loading dependency graph, done.easeJsAndAssets
warning: the transform cache was reset.
bundle: start
bundle: finish
bundle: Writing bundle output to:xxx\android\app\build\intermediates\assets\release\index.android.bundle
bundle: Done writing bundle output
bundle: Copying 5 asset files
bundle: Done copying assets

FAILURE: Build failed with an exception.

* What went wrong:
Unable to process incoming event 'ProgressComplete ' (ProgressCompleteEvent)
</code></pre>

<p>if I run gradlew assembleRelease --debug</p>

<pre><code>-gradlew assembleRelease --debug
...
[LIFECYCLE] [org.gradle.BuildResultLogger] BUILD SUCCESSFUL
</code></pre>

<p>run gradlew assembleRelease --info or --stacktrace all failed, no warning messages show.</p>

<p>When i build apk use android studio,it shows:</p>

<pre><code>    Initializing...
Note: the configuration refers to the unknown class 'com.facebook.react.uimanager.UIProp'
Note: the configuration refers to the unknown class 'sun.misc.Unsafe'
Note: the configuration refers to the unknown class 'android.text'
Note: com.facebook.common.webp.WebpSupportStatus: can't find dynamically referenced class com.facebook.webpsupport.WebpBitmapFactoryImpl
Note: com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider: can't find dynamically referenced class com.facebook.imagepipeline.animated.factory.AnimatedFactoryImplSupport
Note: com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider: can't find dynamically referenced class com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl
Note: com.facebook.imagepipeline.nativecode.WebpTranscoderFactory: can't find dynamically referenced class com.facebook.imagepipeline.nativecode.WebpTranscoderImpl
Note: okhttp3.internal.platform.AndroidPlatform: can't find dynamically referenced class com.android.org.conscrypt.SSLParametersImpl
Note: okhttp3.internal.platform.AndroidPlatform: can't find dynamically referenced class org.apache.harmony.xnet.provider.jsse.SSLParametersImpl
Note: okhttp3.internal.platform.Platform: can't find dynamically referenced class sun.security.ssl.SSLContextImpl
Note: com.facebook.react.views.textinput.ReactTextInputManager accesses a declared field 'mCursorDrawable' dynamically
Note: the configuration keeps the entry point 'com.facebook.drawee.drawable.ForwardingDrawable { void setTransformCallback(com.facebook.drawee.drawable.TransformCallback); }', but not the descriptor class 'com.facebook.drawee.drawable.TransformCallback'
Note: the configuration keeps the entry point 'com.facebook.drawee.view.DraweeView { void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy); }', but not the descriptor class 'com.facebook.drawee.interfaces.DraweeHierarchy'
Note: the configuration keeps the entry point 'com.facebook.drawee.view.DraweeView { void setController(com.facebook.drawee.interfaces.DraweeController); }', but not the descriptor class 'com.facebook.drawee.interfaces.DraweeController'
Note: the configuration keeps the entry point 'com.facebook.drawee.view.GenericDraweeView { GenericDraweeView(android.content.Context,com.facebook.drawee.generic.GenericDraweeHierarchy); }', but not the descriptor class 'com.facebook.drawee.generic.GenericDraweeHierarchy'
Note: the configuration keeps the entry point 'com.facebook.imagepipeline.request.ImageRequest { ImageRequest(com.facebook.imagepipeline.request.ImageRequestBuilder); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequestBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.animated.EventAnimationDriver { EventAnimationDriver(java.util.List,com.facebook.react.animated.ValueAnimatedNode); }', but not the descriptor class 'com.facebook.react.animated.ValueAnimatedNode'
Note: the configuration keeps the entry point 'com.facebook.react.bridge.ModuleSpec { ModuleSpec(java.lang.Class,javax.inject.Provider); }', but not the descriptor class 'javax.inject.Provider'
Note: the configuration keeps the entry point 'com.facebook.react.cxxbridge.ModuleHolder { ModuleHolder(java.lang.String,boolean,boolean,boolean,javax.inject.Provider); }', but not the descriptor class 'javax.inject.Provider'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatShadowNode { void collectState(com.facebook.react.flat.StateBuilder,float,float,float,float,float,float,float,float); }', but not the descriptor class 'com.facebook.react.flat.StateBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatShadowNode { void setNodeRegion(com.facebook.react.flat.NodeRegion); }', but not the descriptor class 'com.facebook.react.flat.NodeRegion'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatTextShadowNode { void performCollectAttachDetachListeners(com.facebook.react.flat.StateBuilder); }', but not the descriptor class 'com.facebook.react.flat.StateBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatUIViewOperationQueue$DetachAllChildrenFromViews { FlatUIViewOperationQueue$DetachAllChildrenFromViews(com.facebook.react.flat.FlatUIViewOperationQueue); }', but not the descriptor class 'com.facebook.react.flat.FlatUIViewOperationQueue'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatUIViewOperationQueue$ViewManagerCommand { FlatUIViewOperationQueue$ViewManagerCommand(com.facebook.react.flat.FlatUIViewOperationQueue,int,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.flat.FlatUIViewOperationQueue'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatViewManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.FlatViewManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTImageViewManager { RCTImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTImageViewManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTImageViewManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTTextInput { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTTextManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTTextManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setHotspot(com.facebook.react.flat.FlatViewGroup,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void receiveCommand(com.facebook.react.flat.FlatViewGroup,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setNeedsOffscreenAlphaCompositing(com.facebook.react.flat.FlatViewGroup,boolean); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setPointerEvents(com.facebook.react.flat.FlatViewGroup,java.lang.String); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setRemoveClippedSubviews(com.facebook.react.flat.FlatViewGroup,boolean); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setHitSlop(com.facebook.react.flat.FlatViewGroup,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void removeAllViews(com.facebook.react.flat.FlatViewGroup); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTViewManager { void setBackgroundColor(com.facebook.react.flat.FlatViewGroup,int); }', but not the descriptor class 'com.facebook.react.flat.FlatViewGroup'
Note: the configuration keeps the entry point 'com.facebook.react.flat.RCTVirtualText { void performCollectAttachDetachListeners(com.facebook.react.flat.StateBuilder); }', but not the descriptor class 'com.facebook.react.flat.StateBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.modules.core.Timing { com.facebook.react.modules.core.Timing$IdleCallbackRunnable access$1202(com.facebook.react.modules.core.Timing,com.facebook.react.modules.core.Timing$IdleCallbackRunnable); }', but not the descriptor class 'com.facebook.react.modules.core.Timing$IdleCallbackRunnable'
Note: the configuration keeps the entry point 'com.facebook.react.modules.dialog.AlertFragment { AlertFragment(com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener,android.os.Bundle); }', but not the descriptor class 'com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener'
Note: the configuration keeps the entry point 'com.facebook.react.modules.dialog.SupportAlertFragment { SupportAlertFragment(com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener,android.os.Bundle); }', but not the descriptor class 'com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.FrescoModule { FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipelineConfig); }', but not the descriptor class 'com.facebook.imagepipeline.core.ImagePipelineConfig'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.ReactNetworkImageRequest { com.facebook.react.modules.fresco.ReactNetworkImageRequest fromBuilderWithHeaders(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequestBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.ReactNetworkImageRequest { ReactNetworkImageRequest(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequestBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.SystraceRequestListener { void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequest'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.SystraceRequestListener { void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequest'
Note: the configuration keeps the entry point 'com.facebook.react.modules.fresco.SystraceRequestListener { void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean); }', but not the descriptor class 'com.facebook.imagepipeline.request.ImageRequest'
Note: the configuration keeps the entry point 'com.facebook.react.modules.image.ImageLoaderModule { void registerRequest(int,com.facebook.datasource.DataSource); }', but not the descriptor class 'com.facebook.datasource.DataSource'
Note: the configuration keeps the entry point 'com.facebook.react.shell.MainPackageConfig$Builder { com.facebook.react.shell.MainPackageConfig$Builder setFrescoConfig(com.facebook.imagepipeline.core.ImagePipelineConfig); }', but not the descriptor class 'com.facebook.imagepipeline.core.ImagePipelineConfig'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.NativeViewHierarchyManager { void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[]); }', but not the descriptor class 'com.facebook.react.uimanager.ViewAtIndex'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.NativeViewHierarchyOptimizer { NativeViewHierarchyOptimizer(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ShadowNodeRegistry); }', but not the descriptor class 'com.facebook.react.uimanager.ShadowNodeRegistry'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.NativeViewHierarchyOptimizer { void handleManageChildren(com.facebook.react.uimanager.ReactShadowNode,int[],int[],com.facebook.react.uimanager.ViewAtIndex[],int[]); }', but not the descriptor class 'com.facebook.react.uimanager.ViewAtIndex'
Note: the configuration keeps the entry point 'com.facebook.react.uimanager.UIViewOperationQueue { void enqueueManageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[]); }', but not the descriptor class 'com.facebook.react.uimanager.ViewAtIndex'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,int); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void getDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.drawer.ReactDrawerLayoutManager { void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int); }', but not the descriptor class 'com.facebook.react.views.drawer.ReactDrawerLayout'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageManager { ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageView { ReactImageView(android.content.Context,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageView { void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType); }', but not the descriptor class 'com.facebook.drawee.drawable.ScalingUtils$ScaleType'
Note: the configuration keeps the entry point 'com.facebook.react.views.image.ReactImageView { void setControllerListener(com.facebook.drawee.controller.ControllerListener); }', but not the descriptor class 'com.facebook.drawee.controller.ControllerListener'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ProgressBarShadowNode { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setStyle(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.progressbar.ReactProgressBarViewManager { void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView); }', but not the descriptor class 'com.facebook.react.views.progressbar.ProgressBarContainerView'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.switchview.ReactSwitchManager { void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch); }', but not the descriptor class 'com.facebook.react.views.switchview.ReactSwitch'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode { FrescoBasedReactTextInlineImageShadowNode(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan { FrescoBasedReactTextInlineImageSpan(android.content.res.Resources,int,int,android.net.Uri,com.facebook.react.bridge.ReadableMap,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager { FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object); }', but not the descriptor class 'com.facebook.drawee.controller.AbstractDraweeControllerBuilder'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactEditText { void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher); }', but not the descriptor class 'com.facebook.react.views.textinput.SelectionWatcher'
Note: the configuration keeps the entry point 'com.facebook.react.views.textinput.ReactTextInputShadowNode { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.react.views.toolbar.DrawableWithIntrinsicSize { DrawableWithIntrinsicSize(android.graphics.drawable.Drawable,com.facebook.imagepipeline.image.ImageInfo); }', but not the descriptor class 'com.facebook.imagepipeline.image.ImageInfo'
Note: the configuration keeps the entry point 'com.facebook.yoga.YogaBaselineFunction { float baseline(com.facebook.yoga.YogaNodeAPI,float,float); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.facebook.yoga.YogaMeasureFunction { long measure(com.facebook.yoga.YogaNodeAPI,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode); }', but not the descriptor class 'com.facebook.yoga.YogaNodeAPI'
Note: the configuration keeps the entry point 'com.imagepicker.ImagePickerModule { void putExtraFileInfo(java.lang.String,com.imagepicker.ResponseHelper); }', but not the descriptor class 'com.imagepicker.ResponseHelper'
Note: there were 3 references to unknown classes.
      You should check your configuration for typos.
      (http://proguard.sourceforge.net/manual/troubleshooting.html#unknownclass)
Note: there were 78 unkept descriptor classes in kept class members.
      You should consider explicitly keeping the mentioned classes
      (using '-keep').
      (http://proguard.sourceforge.net/manual/troubleshooting.html#descriptorclass)
Note: there were 7 unresolved dynamic references to classes or interfaces.
      You should check if you need to specify additional program jars.
      (http://proguard.sourceforge.net/manual/troubleshooting.html#dynamicalclass)
Note: there were 1 accesses to class members by means of introspection.
      You should consider explicitly keeping the mentioned class members
      (using '-keep' or '-keepclassmembers').
      (http://proguard.sourceforge.net/manual/troubleshooting.html#dynamicalclassmember)
</code></pre>

<p>how to modify my proguard file?</p>
","@cityvoice did you manage to solve it ? I have the same issue."
"43613449","Add fragment into react-native view","2","<p>Long story short: I'm trying to create a native module for an react-native project for AndroidPay. Integration of AndroidPay is possible only using fragments (which are in final ""Buy with AndroidPay"" buttons). So the algorithm is pretty simple, export a placeholder in react-native, wrap it in a component and at some point just add fragment into that placeholder using it's id. So the code looks like:</p>

<pre><code>public class AndroidPayPlaceholderViewManager extends SimpleViewManager&lt;FrameLayout&gt;{
    public static final String REACT_CLASS = ""AndroidPayButton"";

    public AndroidPayPlaceholderViewManager(ReactApplicationContext context) {
        super();
    }

    @Override
    public String getName() {
        return REACT_CLASS;
    }

    @Override
    protected FrameLayout createViewInstance(ThemedReactContext reactContext) {
        return (FrameLayout) LayoutInflater.from(reactContext).inflate(R.layout.android_pay_frg_placeholder, null);
    }
}
</code></pre>

<p>android_pay_placeholder.xml</p>

<pre><code>&lt;FrameLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    android:layout_gravity=""center_horizontal""&gt;
    &lt;FrameLayout
        android:id=""@+id/android_pay_placeholder""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""
        android:layout_gravity=""center_horizontal""&gt;
    &lt;/FrameLayout&gt;
&lt;/FrameLayout&gt;
</code></pre>

<p>js component wrapper</p>

<pre><code>import {View, requireNativeComponent} from 'react-native';
import React, {Component} from 'react';
import {NativeModules, findNodeHandle} from 'react-native';
import {isAndroid} from '../utils';


let iface = {
    propTypes: {
        ...View.propTypes, // include the default view properties
        foo: String
    }
};

let AndroidPayButtonNative = requireNativeComponent('NewStoreAndroidPayButton', iface);
console.log('AndroidPayButtonNative: ', AndroidPayButtonNative);
let AndroidPayModule = isAndroid() ? NativeModules.NewStoreAndroidPay : null;

class AndroidPayButton extends Component {
    state = {
        loaded: false
    };

    componentDidMount() {
        AndroidPayModule.loadFragment();
    }

    render() {
        return (
            &lt;AndroidPayButtonNative {...this.props} /&gt;
        );
    }
}

export {AndroidPayButton};
</code></pre>

<p>android native module which is in charge of loading the fragment</p>

<pre><code>public class AndroidPayModule extends ReactContextBaseJavaModule implements ActivityEventListener, LifecycleEventListener {
....
@ReactMethod
    public void loadFragment(int placeholderId) {
        ...
        WalletFragment mWalletFragment = WalletFragment.newInstance(...);


        // add Wallet fragment to the UI
        getCurrentActivity().getFragmentManager().beginTransaction()
                .add(R.id.android_pay_placeholder, mWalletFragment)
                .commit();

        // [END params_builder]
    }
....
}
</code></pre>

<p>So, when I add the ""placeholder"" view to the screen I can see it and even checked with LayoutInspector, the id is right:</p>

<p><a href=""https://i.stack.imgur.com/CcyCL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CcyCL.png"" alt=""enter image description here""></a></p>

<p>And the result that I always get is exception:</p>

<pre><code>java.lang.IllegalArgumentException: No view found for id 0x7f0d00a6 (com.qwerty.playground:id/android_pay_placeholder) for fragment WalletFragment{388fd9c #0 id=0x7f0d00a6}
    at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:965)
    at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:1148)
    at android.app.BackStackRecord.run(BackStackRecord.java:793)
    at android.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1535)        
    at android.app.FragmentManagerImpl$1.run(FragmentManager.java:482)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5417)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
</code></pre>

<p>So guys, any idea why FragmentManager can't just find a view which definitely exists and maybe someone of you did this trick with fragments and react-native and succeeded? Any help would be appreciated! Thanks!</p>
","Hey @Andy, yes, but I don't remember now in which mode because I removed it and done it in another way. The reason was that it was unstable and you have to handle too many situations (add/remove fragment), a lot of checks. So I would recommend to avoid this way as much as possible."
"43613449","Add fragment into react-native view","2","<p>Long story short: I'm trying to create a native module for an react-native project for AndroidPay. Integration of AndroidPay is possible only using fragments (which are in final ""Buy with AndroidPay"" buttons). So the algorithm is pretty simple, export a placeholder in react-native, wrap it in a component and at some point just add fragment into that placeholder using it's id. So the code looks like:</p>

<pre><code>public class AndroidPayPlaceholderViewManager extends SimpleViewManager&lt;FrameLayout&gt;{
    public static final String REACT_CLASS = ""AndroidPayButton"";

    public AndroidPayPlaceholderViewManager(ReactApplicationContext context) {
        super();
    }

    @Override
    public String getName() {
        return REACT_CLASS;
    }

    @Override
    protected FrameLayout createViewInstance(ThemedReactContext reactContext) {
        return (FrameLayout) LayoutInflater.from(reactContext).inflate(R.layout.android_pay_frg_placeholder, null);
    }
}
</code></pre>

<p>android_pay_placeholder.xml</p>

<pre><code>&lt;FrameLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    android:layout_gravity=""center_horizontal""&gt;
    &lt;FrameLayout
        android:id=""@+id/android_pay_placeholder""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""
        android:layout_gravity=""center_horizontal""&gt;
    &lt;/FrameLayout&gt;
&lt;/FrameLayout&gt;
</code></pre>

<p>js component wrapper</p>

<pre><code>import {View, requireNativeComponent} from 'react-native';
import React, {Component} from 'react';
import {NativeModules, findNodeHandle} from 'react-native';
import {isAndroid} from '../utils';


let iface = {
    propTypes: {
        ...View.propTypes, // include the default view properties
        foo: String
    }
};

let AndroidPayButtonNative = requireNativeComponent('NewStoreAndroidPayButton', iface);
console.log('AndroidPayButtonNative: ', AndroidPayButtonNative);
let AndroidPayModule = isAndroid() ? NativeModules.NewStoreAndroidPay : null;

class AndroidPayButton extends Component {
    state = {
        loaded: false
    };

    componentDidMount() {
        AndroidPayModule.loadFragment();
    }

    render() {
        return (
            &lt;AndroidPayButtonNative {...this.props} /&gt;
        );
    }
}

export {AndroidPayButton};
</code></pre>

<p>android native module which is in charge of loading the fragment</p>

<pre><code>public class AndroidPayModule extends ReactContextBaseJavaModule implements ActivityEventListener, LifecycleEventListener {
....
@ReactMethod
    public void loadFragment(int placeholderId) {
        ...
        WalletFragment mWalletFragment = WalletFragment.newInstance(...);


        // add Wallet fragment to the UI
        getCurrentActivity().getFragmentManager().beginTransaction()
                .add(R.id.android_pay_placeholder, mWalletFragment)
                .commit();

        // [END params_builder]
    }
....
}
</code></pre>

<p>So, when I add the ""placeholder"" view to the screen I can see it and even checked with LayoutInspector, the id is right:</p>

<p><a href=""https://i.stack.imgur.com/CcyCL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CcyCL.png"" alt=""enter image description here""></a></p>

<p>And the result that I always get is exception:</p>

<pre><code>java.lang.IllegalArgumentException: No view found for id 0x7f0d00a6 (com.qwerty.playground:id/android_pay_placeholder) for fragment WalletFragment{388fd9c #0 id=0x7f0d00a6}
    at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:965)
    at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:1148)
    at android.app.BackStackRecord.run(BackStackRecord.java:793)
    at android.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1535)        
    at android.app.FragmentManagerImpl$1.run(FragmentManager.java:482)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5417)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
</code></pre>

<p>So guys, any idea why FragmentManager can't just find a view which definitely exists and maybe someone of you did this trick with fragments and react-native and succeeded? Any help would be appreciated! Thanks!</p>
","hi @fox, did you manage to get this working?"
"43690916","Additional HtmlWebpackPlugin() pages with create-react-app","8","<p>I've ejected from the default <a href=""https://github.com/facebookincubator/create-react-app"" rel=""nofollow noreferrer"">create-react-app</a> project and am attempting to create a second, <code>maintenance.html</code> page that Webpack can inject into as it does by default with <code>public/index.html</code>. I've read through a number of issues; and the docs for HtmlWebpackPlugin, which states it should be as easy as:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>to this:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  filename: '/public/maintenance.html',
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>I keep getting the following error when I want to convert vars like <code>%PUBLIC_URL%</code> to their actual value:</p>

<p><code>URIError: Failed to decode param '/%PUBLIC_URL%/scripts/modernizr.custom.js'</code></p>

<ul>
<li>even though they work fine in <code>public/index.html</code>. Any ideas what I'm doing wrong? I've made sure I don't have any rules setup to do anything else with <code>.html</code> files; as I've seen a few people get mixed up there. Have been messing around with the settings and combing through GitHub issues, but feel like I'm running in circles. Thanks!</li>
</ul>

<p>Here's the current <code>webpack.config.dev.js</code> file:</p>

<pre><code>/* THIS FILE HAS BEEN EDITED A BIT FROM https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/config/webpack.config.dev.js */

const autoprefixer = require('autoprefixer');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');
const InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');
const WatchMissingNodeModulesPlugin = require('react-dev-utils/WatchMissingNodeModulesPlugin');
const getClientEnvironment = require('./env');
const paths = require('./paths');

// Custom
const cssnano = require('cssnano');
const flexbugs = require('postcss-flexbugs-fixes');
const svgFragments = require('postcss-svg-fragments');

const fs = require('fs');

// Don't show deprecations
process.noDeprecation = true;

// @remove-on-eject-begin
// `path` is not used after eject - see https://github.com/facebookincubator/create-react-app/issues/1174
const path = require('path');
// @remove-on-eject-end

// Webpack uses `publicPath` to determine where the app is being served from.
// In development, we always serve from the root. This makes config easier.
const publicPath = '/';
// `publicUrl` is just like `publicPath`, but we will provide it to our app
// as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.
// Omit trailing slash as %PUBLIC_PATH%/xyz looks better than %PUBLIC_PATH%xyz.
const publicUrl = '';
// Get environment variables to inject into our app.
const env = getClientEnvironment(publicUrl);
// Get environment object passed down to HTML template
const envObject = env.raw;
// Read SVG sprite
const svgSprite = fs.readFileSync(`${paths.appPublic}/images/sprite.svg`, 'utf8');
// Add SVG output to variable object passed to HTML template
envObject.SVG_SPRITE = svgSprite;

// This is the development configuration.
// It is focused on developer experience and fast rebuilds.
// The production configuration is different and lives in a separate file.
module.exports = {
  /// You may want 'eval' instead if you prefer to see the compiled output in DevTools.
  // See the discussion in https://github.com/facebookincubator/create-react-app/issues/343.
  devtool: 'eval',
  // These are the ""entry points"" to our application.
  // This means they will be the ""root"" imports that are included in JS bundle.
  // The first two entry points enable ""hot"" CSS and auto-refreshes for JS.
  entry: [
    // Include an alternative client for WebpackDevServer. A client's job is to
    // connect to WebpackDevServer by a socket and get notified about changes.
    // When you save a file, the client will either apply hot updates (in case
    // of CSS changes), or refresh the page (in case of JS changes). When you
    // make a syntax error, this client will display a syntax error overlay.
    // Note: instead of the default WebpackDevServer client, we use a custom one
    // to bring better experience for Create React App users. You can replace
    // the line below with these two lines if you prefer the stock client:
    // require.resolve('webpack-dev-server/client') + '?/',
    // require.resolve('webpack/hot/dev-server'),
    require.resolve('react-dev-utils/webpackHotDevClient'),
    // Polyfills
    require.resolve('./polyfills'),
    // Finally, this is your app's code:
    paths.appIndexJs,
    // We include the app code last so that if there is a runtime error during
    // initialization, it doesn't blow up the WebpackDevServer client, and
    // changing JS code would still trigger a refresh.
  ],
  output: {
    // Next line is not used in dev but WebpackDevServer crashes without it:
    path: paths.appBuild,
    // Add /* filename */ comments to generated require()s in the output.
    pathinfo: true,
    // This does not produce a real file. It's just the virtual path that is
    // served by WebpackDevServer in development. This is the JS bundle
    // containing code from all our entry points, and the Webpack runtime.
    filename: 'static/js/bundle.js',
    // This is the URL that app is served from. We use ""/"" in development.
    publicPath: publicPath,
  },
  externals: {
    gsap: 'TweenMax',
  },
  resolve: {
    // This allows you to set a fallback for where Webpack should look for modules.
    // We read `NODE_PATH` environment variable in `paths.js` and pass paths here.
    // We placed these paths second because we want `node_modules` to ""win""
    // if there are any conflicts. This matches Node resolution mechanism.
    // https://github.com/facebookincubator/create-react-app/issues/253
    modules: ['node_modules'].concat(paths.nodePaths),
    // These are the reasonable defaults supported by the Node ecosystem.
    // We also include JSX as a common component filename extension to support
    // some tools, although we do not recommend using it, see:
    // https://github.com/facebookincubator/create-react-app/issues/290
    extensions: ['.js', '.json', '.jsx'],
    alias: {
      react: path.resolve('./node_modules/react'),
      // Support React Native Web
      // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/
      'react-native': 'react-native-web',
    },
  },
  // @remove-on-eject-begin
  // Resolve loaders (webpack plugins for CSS, images, transpilation) from the
  // directory of `react-scripts` itself rather than the project directory.
  resolveLoader: {
    modules: [
      // Lerna hoists everything, so we need to look in our app directory
      paths.appNodeModules,
    ],
  },
  module: {
    rules: [
      // Disable require.ensure as it's not a standard language feature.
      { parser: { requireEnsure: false } },
      {
        test: /\.(js|jsx)$/,
        enforce: 'pre',
        use: [
          {
            // @remove-on-eject-end
            loader: 'eslint-loader',
          },
        ],
        include: paths.appSrc,
      },
      // ** ADDING/UPDATING LOADERS **
      // The ""url"" loader handles all assets unless explicitly excluded.
      // The `exclude` list *must* be updated with every change to loader extensions.
      // When adding a new loader, you must add its `test`
      // as a new entry in the `exclude` list for ""url"" loader.

      // ""file"" loader makes sure those assets get served by WebpackDevServer.
      // When you `import` an asset, you get its (virtual) filename.
      // In production, they would get copied to the `build` folder.
      {
        test: /\.(ico|jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)(\?.*)?$/,
        loader: 'file-loader',
        options: {
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // ""url"" loader works like ""file"" loader except that it embeds assets
      // smaller than specified limit in bytes as data URLs to avoid requests.
      // A missing `test` is equivalent to a match.
      {
        test: /\.(mp4|webm|wav|mp3|m4a|aac|oga)(\?.*)?$/,
        loader: 'url-loader',
        options: {
          limit: 10000,
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // Process JS with Babel.
      {
        test: /\.(js|jsx)$/,
        include: paths.appSrc,
        loader: 'babel-loader',
        options: {
          // @remove-on-eject-end
          // This is a feature of `babel-loader` for webpack (not Babel itself).
          // It enables caching results in ./node_modules/.cache/babel-loader/
          // directory for faster rebuilds.
          cacheDirectory: true,
        },
      },
      {
        test: /\.less$/,
        use: [
          {
            loader: 'style-loader',
          },
          {
            loader: 'css-loader',
            options: {
              sourceMap: true,
            }
          },
          {
            loader: 'postcss-loader',
            options: {
              sourceMap: true,
              ident: 'postcss', // https://webpack.js.org/guides/migrating/#complex-options
              plugins: () =&gt; [
                autoprefixer({
                  browsers: [
                    '&gt;2%',
                    'last 2 versions',
                    'not ie &lt; 11',
                  ],
                  cascade: false,
                }),
                cssnano({
                  discardUnused: false,
                  zindex: false,
                  reduceIdents: false,
                  mergeIdents: false,
                }),
                flexbugs(),
                svgFragments(),
              ],
            },
          },
          {
            loader: 'less-loader',
            options: {
              sourceMap: true,
            }
          },
        ],
      },
    ],
  },
  plugins: [
    // Makes some environment variables available in index.html.
    // The public URL is available as %PUBLIC_URL% in index.html, e.g.:
    // &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
    // In development, this will be an empty string.
    new InterpolateHtmlPlugin(envObject),
    // Generates an `index.html` file with the &lt;script&gt; injected.
    new HtmlWebpackPlugin({
      inject: true,
      template: paths.appHtml,
      minify: {
        minifyCSS: true,
      },
    }),
    // Makes some environment variables available to the JS code, for example:
    // if (process.env.NODE_ENV === 'development') { ... }. See `./env.js`.
    new webpack.DefinePlugin(env.stringified),
    // This is necessary to emit hot updates (currently CSS only):
    new webpack.HotModuleReplacementPlugin(),
    // Watcher doesn't work well if you mistype casing in a path so we use
    // a plugin that prints an error when you attempt to do this.
    // See https://github.com/facebookincubator/create-react-app/issues/240
    new CaseSensitivePathsPlugin(),
    // If you require a missing module and then `npm install` it, you still have
    // to restart the development server for Webpack to discover it. This plugin
    // makes the discovery automatic so you don't have to restart.
    // See https://github.com/facebookincubator/create-react-app/issues/186
    new WatchMissingNodeModulesPlugin(paths.appNodeModules),
  ],
  // Some libraries import Node modules but don't use them in the browser.
  // Tell Webpack to provide empty mocks for them so importing them works.
  node: {
    fs: 'empty',
    net: 'empty',
    tls: 'empty',
  },
  // Turn off performance hints during development because we don't do any
  // splitting or minification in interest of speed. These warnings become
  // cumbersome.
  performance: {
    hints: false,
  },
};
</code></pre>

<p>Here's the HTML of <code>public/index.html</code></p>

<pre><code>&lt;!doctype html&gt;
&lt;html lang=""en""&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" /&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt;
    &lt;meta name=""theme-color"" content=""#ffffff""&gt;
    &lt;meta name=""apple-mobile-web-app-capable"" content=""yes""&gt;
    &lt;meta name=""format-detection"" content=""telephone=no""&gt;
    &lt;link id=""js-favicon"" rel=""icon"" type=""image/png"" href=""%PUBLIC_URL%/favicon-32x32.png"" sizes=""32x32""&gt;
    &lt;link rel=""manifest"" href=""%PUBLIC_URL%/manifest.json""&gt;
    &lt;link rel=""apple-touch-icon"" sizes=""180x180"" href=""%PUBLIC_URL%/apple-touch-icon.png""&gt;
    &lt;link rel=""mask-icon"" href=""%PUBLIC_URL%/safari-pinned-tab.svg"" color=""#0081c6""&gt;

    &lt;script src=""%PUBLIC_URL%/scripts/modernizr.custom.js""&gt;&lt;/script&gt;
    &lt;title&gt;&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;!-- SVG sprite --&gt;
    &lt;div style=""border: 0px; clip: rect(0px 0px 0px 0px); height: 0px; overflow: hidden; padding: 0px; position: absolute; width: 0px;""&gt;%SVG_SPRITE%&lt;/div&gt;
    &lt;div id=""app"" style=""overflow: hidden;""&gt;&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>I've also tried just duplicating this over to <code>public/maintenance.html</code> with no luck.</p>
","Is this error displayed when you compile the project with webpack? Or does it come at runtime?"
"43690916","Additional HtmlWebpackPlugin() pages with create-react-app","8","<p>I've ejected from the default <a href=""https://github.com/facebookincubator/create-react-app"" rel=""nofollow noreferrer"">create-react-app</a> project and am attempting to create a second, <code>maintenance.html</code> page that Webpack can inject into as it does by default with <code>public/index.html</code>. I've read through a number of issues; and the docs for HtmlWebpackPlugin, which states it should be as easy as:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>to this:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  filename: '/public/maintenance.html',
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>I keep getting the following error when I want to convert vars like <code>%PUBLIC_URL%</code> to their actual value:</p>

<p><code>URIError: Failed to decode param '/%PUBLIC_URL%/scripts/modernizr.custom.js'</code></p>

<ul>
<li>even though they work fine in <code>public/index.html</code>. Any ideas what I'm doing wrong? I've made sure I don't have any rules setup to do anything else with <code>.html</code> files; as I've seen a few people get mixed up there. Have been messing around with the settings and combing through GitHub issues, but feel like I'm running in circles. Thanks!</li>
</ul>

<p>Here's the current <code>webpack.config.dev.js</code> file:</p>

<pre><code>/* THIS FILE HAS BEEN EDITED A BIT FROM https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/config/webpack.config.dev.js */

const autoprefixer = require('autoprefixer');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');
const InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');
const WatchMissingNodeModulesPlugin = require('react-dev-utils/WatchMissingNodeModulesPlugin');
const getClientEnvironment = require('./env');
const paths = require('./paths');

// Custom
const cssnano = require('cssnano');
const flexbugs = require('postcss-flexbugs-fixes');
const svgFragments = require('postcss-svg-fragments');

const fs = require('fs');

// Don't show deprecations
process.noDeprecation = true;

// @remove-on-eject-begin
// `path` is not used after eject - see https://github.com/facebookincubator/create-react-app/issues/1174
const path = require('path');
// @remove-on-eject-end

// Webpack uses `publicPath` to determine where the app is being served from.
// In development, we always serve from the root. This makes config easier.
const publicPath = '/';
// `publicUrl` is just like `publicPath`, but we will provide it to our app
// as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.
// Omit trailing slash as %PUBLIC_PATH%/xyz looks better than %PUBLIC_PATH%xyz.
const publicUrl = '';
// Get environment variables to inject into our app.
const env = getClientEnvironment(publicUrl);
// Get environment object passed down to HTML template
const envObject = env.raw;
// Read SVG sprite
const svgSprite = fs.readFileSync(`${paths.appPublic}/images/sprite.svg`, 'utf8');
// Add SVG output to variable object passed to HTML template
envObject.SVG_SPRITE = svgSprite;

// This is the development configuration.
// It is focused on developer experience and fast rebuilds.
// The production configuration is different and lives in a separate file.
module.exports = {
  /// You may want 'eval' instead if you prefer to see the compiled output in DevTools.
  // See the discussion in https://github.com/facebookincubator/create-react-app/issues/343.
  devtool: 'eval',
  // These are the ""entry points"" to our application.
  // This means they will be the ""root"" imports that are included in JS bundle.
  // The first two entry points enable ""hot"" CSS and auto-refreshes for JS.
  entry: [
    // Include an alternative client for WebpackDevServer. A client's job is to
    // connect to WebpackDevServer by a socket and get notified about changes.
    // When you save a file, the client will either apply hot updates (in case
    // of CSS changes), or refresh the page (in case of JS changes). When you
    // make a syntax error, this client will display a syntax error overlay.
    // Note: instead of the default WebpackDevServer client, we use a custom one
    // to bring better experience for Create React App users. You can replace
    // the line below with these two lines if you prefer the stock client:
    // require.resolve('webpack-dev-server/client') + '?/',
    // require.resolve('webpack/hot/dev-server'),
    require.resolve('react-dev-utils/webpackHotDevClient'),
    // Polyfills
    require.resolve('./polyfills'),
    // Finally, this is your app's code:
    paths.appIndexJs,
    // We include the app code last so that if there is a runtime error during
    // initialization, it doesn't blow up the WebpackDevServer client, and
    // changing JS code would still trigger a refresh.
  ],
  output: {
    // Next line is not used in dev but WebpackDevServer crashes without it:
    path: paths.appBuild,
    // Add /* filename */ comments to generated require()s in the output.
    pathinfo: true,
    // This does not produce a real file. It's just the virtual path that is
    // served by WebpackDevServer in development. This is the JS bundle
    // containing code from all our entry points, and the Webpack runtime.
    filename: 'static/js/bundle.js',
    // This is the URL that app is served from. We use ""/"" in development.
    publicPath: publicPath,
  },
  externals: {
    gsap: 'TweenMax',
  },
  resolve: {
    // This allows you to set a fallback for where Webpack should look for modules.
    // We read `NODE_PATH` environment variable in `paths.js` and pass paths here.
    // We placed these paths second because we want `node_modules` to ""win""
    // if there are any conflicts. This matches Node resolution mechanism.
    // https://github.com/facebookincubator/create-react-app/issues/253
    modules: ['node_modules'].concat(paths.nodePaths),
    // These are the reasonable defaults supported by the Node ecosystem.
    // We also include JSX as a common component filename extension to support
    // some tools, although we do not recommend using it, see:
    // https://github.com/facebookincubator/create-react-app/issues/290
    extensions: ['.js', '.json', '.jsx'],
    alias: {
      react: path.resolve('./node_modules/react'),
      // Support React Native Web
      // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/
      'react-native': 'react-native-web',
    },
  },
  // @remove-on-eject-begin
  // Resolve loaders (webpack plugins for CSS, images, transpilation) from the
  // directory of `react-scripts` itself rather than the project directory.
  resolveLoader: {
    modules: [
      // Lerna hoists everything, so we need to look in our app directory
      paths.appNodeModules,
    ],
  },
  module: {
    rules: [
      // Disable require.ensure as it's not a standard language feature.
      { parser: { requireEnsure: false } },
      {
        test: /\.(js|jsx)$/,
        enforce: 'pre',
        use: [
          {
            // @remove-on-eject-end
            loader: 'eslint-loader',
          },
        ],
        include: paths.appSrc,
      },
      // ** ADDING/UPDATING LOADERS **
      // The ""url"" loader handles all assets unless explicitly excluded.
      // The `exclude` list *must* be updated with every change to loader extensions.
      // When adding a new loader, you must add its `test`
      // as a new entry in the `exclude` list for ""url"" loader.

      // ""file"" loader makes sure those assets get served by WebpackDevServer.
      // When you `import` an asset, you get its (virtual) filename.
      // In production, they would get copied to the `build` folder.
      {
        test: /\.(ico|jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)(\?.*)?$/,
        loader: 'file-loader',
        options: {
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // ""url"" loader works like ""file"" loader except that it embeds assets
      // smaller than specified limit in bytes as data URLs to avoid requests.
      // A missing `test` is equivalent to a match.
      {
        test: /\.(mp4|webm|wav|mp3|m4a|aac|oga)(\?.*)?$/,
        loader: 'url-loader',
        options: {
          limit: 10000,
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // Process JS with Babel.
      {
        test: /\.(js|jsx)$/,
        include: paths.appSrc,
        loader: 'babel-loader',
        options: {
          // @remove-on-eject-end
          // This is a feature of `babel-loader` for webpack (not Babel itself).
          // It enables caching results in ./node_modules/.cache/babel-loader/
          // directory for faster rebuilds.
          cacheDirectory: true,
        },
      },
      {
        test: /\.less$/,
        use: [
          {
            loader: 'style-loader',
          },
          {
            loader: 'css-loader',
            options: {
              sourceMap: true,
            }
          },
          {
            loader: 'postcss-loader',
            options: {
              sourceMap: true,
              ident: 'postcss', // https://webpack.js.org/guides/migrating/#complex-options
              plugins: () =&gt; [
                autoprefixer({
                  browsers: [
                    '&gt;2%',
                    'last 2 versions',
                    'not ie &lt; 11',
                  ],
                  cascade: false,
                }),
                cssnano({
                  discardUnused: false,
                  zindex: false,
                  reduceIdents: false,
                  mergeIdents: false,
                }),
                flexbugs(),
                svgFragments(),
              ],
            },
          },
          {
            loader: 'less-loader',
            options: {
              sourceMap: true,
            }
          },
        ],
      },
    ],
  },
  plugins: [
    // Makes some environment variables available in index.html.
    // The public URL is available as %PUBLIC_URL% in index.html, e.g.:
    // &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
    // In development, this will be an empty string.
    new InterpolateHtmlPlugin(envObject),
    // Generates an `index.html` file with the &lt;script&gt; injected.
    new HtmlWebpackPlugin({
      inject: true,
      template: paths.appHtml,
      minify: {
        minifyCSS: true,
      },
    }),
    // Makes some environment variables available to the JS code, for example:
    // if (process.env.NODE_ENV === 'development') { ... }. See `./env.js`.
    new webpack.DefinePlugin(env.stringified),
    // This is necessary to emit hot updates (currently CSS only):
    new webpack.HotModuleReplacementPlugin(),
    // Watcher doesn't work well if you mistype casing in a path so we use
    // a plugin that prints an error when you attempt to do this.
    // See https://github.com/facebookincubator/create-react-app/issues/240
    new CaseSensitivePathsPlugin(),
    // If you require a missing module and then `npm install` it, you still have
    // to restart the development server for Webpack to discover it. This plugin
    // makes the discovery automatic so you don't have to restart.
    // See https://github.com/facebookincubator/create-react-app/issues/186
    new WatchMissingNodeModulesPlugin(paths.appNodeModules),
  ],
  // Some libraries import Node modules but don't use them in the browser.
  // Tell Webpack to provide empty mocks for them so importing them works.
  node: {
    fs: 'empty',
    net: 'empty',
    tls: 'empty',
  },
  // Turn off performance hints during development because we don't do any
  // splitting or minification in interest of speed. These warnings become
  // cumbersome.
  performance: {
    hints: false,
  },
};
</code></pre>

<p>Here's the HTML of <code>public/index.html</code></p>

<pre><code>&lt;!doctype html&gt;
&lt;html lang=""en""&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" /&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt;
    &lt;meta name=""theme-color"" content=""#ffffff""&gt;
    &lt;meta name=""apple-mobile-web-app-capable"" content=""yes""&gt;
    &lt;meta name=""format-detection"" content=""telephone=no""&gt;
    &lt;link id=""js-favicon"" rel=""icon"" type=""image/png"" href=""%PUBLIC_URL%/favicon-32x32.png"" sizes=""32x32""&gt;
    &lt;link rel=""manifest"" href=""%PUBLIC_URL%/manifest.json""&gt;
    &lt;link rel=""apple-touch-icon"" sizes=""180x180"" href=""%PUBLIC_URL%/apple-touch-icon.png""&gt;
    &lt;link rel=""mask-icon"" href=""%PUBLIC_URL%/safari-pinned-tab.svg"" color=""#0081c6""&gt;

    &lt;script src=""%PUBLIC_URL%/scripts/modernizr.custom.js""&gt;&lt;/script&gt;
    &lt;title&gt;&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;!-- SVG sprite --&gt;
    &lt;div style=""border: 0px; clip: rect(0px 0px 0px 0px); height: 0px; overflow: hidden; padding: 0px; position: absolute; width: 0px;""&gt;%SVG_SPRITE%&lt;/div&gt;
    &lt;div id=""app"" style=""overflow: hidden;""&gt;&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>I've also tried just duplicating this over to <code>public/maintenance.html</code> with no luck.</p>
","This happens on runtime when I visit the page directly. Thanks."
"43690916","Additional HtmlWebpackPlugin() pages with create-react-app","8","<p>I've ejected from the default <a href=""https://github.com/facebookincubator/create-react-app"" rel=""nofollow noreferrer"">create-react-app</a> project and am attempting to create a second, <code>maintenance.html</code> page that Webpack can inject into as it does by default with <code>public/index.html</code>. I've read through a number of issues; and the docs for HtmlWebpackPlugin, which states it should be as easy as:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>to this:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  filename: '/public/maintenance.html',
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>I keep getting the following error when I want to convert vars like <code>%PUBLIC_URL%</code> to their actual value:</p>

<p><code>URIError: Failed to decode param '/%PUBLIC_URL%/scripts/modernizr.custom.js'</code></p>

<ul>
<li>even though they work fine in <code>public/index.html</code>. Any ideas what I'm doing wrong? I've made sure I don't have any rules setup to do anything else with <code>.html</code> files; as I've seen a few people get mixed up there. Have been messing around with the settings and combing through GitHub issues, but feel like I'm running in circles. Thanks!</li>
</ul>

<p>Here's the current <code>webpack.config.dev.js</code> file:</p>

<pre><code>/* THIS FILE HAS BEEN EDITED A BIT FROM https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/config/webpack.config.dev.js */

const autoprefixer = require('autoprefixer');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');
const InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');
const WatchMissingNodeModulesPlugin = require('react-dev-utils/WatchMissingNodeModulesPlugin');
const getClientEnvironment = require('./env');
const paths = require('./paths');

// Custom
const cssnano = require('cssnano');
const flexbugs = require('postcss-flexbugs-fixes');
const svgFragments = require('postcss-svg-fragments');

const fs = require('fs');

// Don't show deprecations
process.noDeprecation = true;

// @remove-on-eject-begin
// `path` is not used after eject - see https://github.com/facebookincubator/create-react-app/issues/1174
const path = require('path');
// @remove-on-eject-end

// Webpack uses `publicPath` to determine where the app is being served from.
// In development, we always serve from the root. This makes config easier.
const publicPath = '/';
// `publicUrl` is just like `publicPath`, but we will provide it to our app
// as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.
// Omit trailing slash as %PUBLIC_PATH%/xyz looks better than %PUBLIC_PATH%xyz.
const publicUrl = '';
// Get environment variables to inject into our app.
const env = getClientEnvironment(publicUrl);
// Get environment object passed down to HTML template
const envObject = env.raw;
// Read SVG sprite
const svgSprite = fs.readFileSync(`${paths.appPublic}/images/sprite.svg`, 'utf8');
// Add SVG output to variable object passed to HTML template
envObject.SVG_SPRITE = svgSprite;

// This is the development configuration.
// It is focused on developer experience and fast rebuilds.
// The production configuration is different and lives in a separate file.
module.exports = {
  /// You may want 'eval' instead if you prefer to see the compiled output in DevTools.
  // See the discussion in https://github.com/facebookincubator/create-react-app/issues/343.
  devtool: 'eval',
  // These are the ""entry points"" to our application.
  // This means they will be the ""root"" imports that are included in JS bundle.
  // The first two entry points enable ""hot"" CSS and auto-refreshes for JS.
  entry: [
    // Include an alternative client for WebpackDevServer. A client's job is to
    // connect to WebpackDevServer by a socket and get notified about changes.
    // When you save a file, the client will either apply hot updates (in case
    // of CSS changes), or refresh the page (in case of JS changes). When you
    // make a syntax error, this client will display a syntax error overlay.
    // Note: instead of the default WebpackDevServer client, we use a custom one
    // to bring better experience for Create React App users. You can replace
    // the line below with these two lines if you prefer the stock client:
    // require.resolve('webpack-dev-server/client') + '?/',
    // require.resolve('webpack/hot/dev-server'),
    require.resolve('react-dev-utils/webpackHotDevClient'),
    // Polyfills
    require.resolve('./polyfills'),
    // Finally, this is your app's code:
    paths.appIndexJs,
    // We include the app code last so that if there is a runtime error during
    // initialization, it doesn't blow up the WebpackDevServer client, and
    // changing JS code would still trigger a refresh.
  ],
  output: {
    // Next line is not used in dev but WebpackDevServer crashes without it:
    path: paths.appBuild,
    // Add /* filename */ comments to generated require()s in the output.
    pathinfo: true,
    // This does not produce a real file. It's just the virtual path that is
    // served by WebpackDevServer in development. This is the JS bundle
    // containing code from all our entry points, and the Webpack runtime.
    filename: 'static/js/bundle.js',
    // This is the URL that app is served from. We use ""/"" in development.
    publicPath: publicPath,
  },
  externals: {
    gsap: 'TweenMax',
  },
  resolve: {
    // This allows you to set a fallback for where Webpack should look for modules.
    // We read `NODE_PATH` environment variable in `paths.js` and pass paths here.
    // We placed these paths second because we want `node_modules` to ""win""
    // if there are any conflicts. This matches Node resolution mechanism.
    // https://github.com/facebookincubator/create-react-app/issues/253
    modules: ['node_modules'].concat(paths.nodePaths),
    // These are the reasonable defaults supported by the Node ecosystem.
    // We also include JSX as a common component filename extension to support
    // some tools, although we do not recommend using it, see:
    // https://github.com/facebookincubator/create-react-app/issues/290
    extensions: ['.js', '.json', '.jsx'],
    alias: {
      react: path.resolve('./node_modules/react'),
      // Support React Native Web
      // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/
      'react-native': 'react-native-web',
    },
  },
  // @remove-on-eject-begin
  // Resolve loaders (webpack plugins for CSS, images, transpilation) from the
  // directory of `react-scripts` itself rather than the project directory.
  resolveLoader: {
    modules: [
      // Lerna hoists everything, so we need to look in our app directory
      paths.appNodeModules,
    ],
  },
  module: {
    rules: [
      // Disable require.ensure as it's not a standard language feature.
      { parser: { requireEnsure: false } },
      {
        test: /\.(js|jsx)$/,
        enforce: 'pre',
        use: [
          {
            // @remove-on-eject-end
            loader: 'eslint-loader',
          },
        ],
        include: paths.appSrc,
      },
      // ** ADDING/UPDATING LOADERS **
      // The ""url"" loader handles all assets unless explicitly excluded.
      // The `exclude` list *must* be updated with every change to loader extensions.
      // When adding a new loader, you must add its `test`
      // as a new entry in the `exclude` list for ""url"" loader.

      // ""file"" loader makes sure those assets get served by WebpackDevServer.
      // When you `import` an asset, you get its (virtual) filename.
      // In production, they would get copied to the `build` folder.
      {
        test: /\.(ico|jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)(\?.*)?$/,
        loader: 'file-loader',
        options: {
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // ""url"" loader works like ""file"" loader except that it embeds assets
      // smaller than specified limit in bytes as data URLs to avoid requests.
      // A missing `test` is equivalent to a match.
      {
        test: /\.(mp4|webm|wav|mp3|m4a|aac|oga)(\?.*)?$/,
        loader: 'url-loader',
        options: {
          limit: 10000,
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // Process JS with Babel.
      {
        test: /\.(js|jsx)$/,
        include: paths.appSrc,
        loader: 'babel-loader',
        options: {
          // @remove-on-eject-end
          // This is a feature of `babel-loader` for webpack (not Babel itself).
          // It enables caching results in ./node_modules/.cache/babel-loader/
          // directory for faster rebuilds.
          cacheDirectory: true,
        },
      },
      {
        test: /\.less$/,
        use: [
          {
            loader: 'style-loader',
          },
          {
            loader: 'css-loader',
            options: {
              sourceMap: true,
            }
          },
          {
            loader: 'postcss-loader',
            options: {
              sourceMap: true,
              ident: 'postcss', // https://webpack.js.org/guides/migrating/#complex-options
              plugins: () =&gt; [
                autoprefixer({
                  browsers: [
                    '&gt;2%',
                    'last 2 versions',
                    'not ie &lt; 11',
                  ],
                  cascade: false,
                }),
                cssnano({
                  discardUnused: false,
                  zindex: false,
                  reduceIdents: false,
                  mergeIdents: false,
                }),
                flexbugs(),
                svgFragments(),
              ],
            },
          },
          {
            loader: 'less-loader',
            options: {
              sourceMap: true,
            }
          },
        ],
      },
    ],
  },
  plugins: [
    // Makes some environment variables available in index.html.
    // The public URL is available as %PUBLIC_URL% in index.html, e.g.:
    // &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
    // In development, this will be an empty string.
    new InterpolateHtmlPlugin(envObject),
    // Generates an `index.html` file with the &lt;script&gt; injected.
    new HtmlWebpackPlugin({
      inject: true,
      template: paths.appHtml,
      minify: {
        minifyCSS: true,
      },
    }),
    // Makes some environment variables available to the JS code, for example:
    // if (process.env.NODE_ENV === 'development') { ... }. See `./env.js`.
    new webpack.DefinePlugin(env.stringified),
    // This is necessary to emit hot updates (currently CSS only):
    new webpack.HotModuleReplacementPlugin(),
    // Watcher doesn't work well if you mistype casing in a path so we use
    // a plugin that prints an error when you attempt to do this.
    // See https://github.com/facebookincubator/create-react-app/issues/240
    new CaseSensitivePathsPlugin(),
    // If you require a missing module and then `npm install` it, you still have
    // to restart the development server for Webpack to discover it. This plugin
    // makes the discovery automatic so you don't have to restart.
    // See https://github.com/facebookincubator/create-react-app/issues/186
    new WatchMissingNodeModulesPlugin(paths.appNodeModules),
  ],
  // Some libraries import Node modules but don't use them in the browser.
  // Tell Webpack to provide empty mocks for them so importing them works.
  node: {
    fs: 'empty',
    net: 'empty',
    tls: 'empty',
  },
  // Turn off performance hints during development because we don't do any
  // splitting or minification in interest of speed. These warnings become
  // cumbersome.
  performance: {
    hints: false,
  },
};
</code></pre>

<p>Here's the HTML of <code>public/index.html</code></p>

<pre><code>&lt;!doctype html&gt;
&lt;html lang=""en""&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" /&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt;
    &lt;meta name=""theme-color"" content=""#ffffff""&gt;
    &lt;meta name=""apple-mobile-web-app-capable"" content=""yes""&gt;
    &lt;meta name=""format-detection"" content=""telephone=no""&gt;
    &lt;link id=""js-favicon"" rel=""icon"" type=""image/png"" href=""%PUBLIC_URL%/favicon-32x32.png"" sizes=""32x32""&gt;
    &lt;link rel=""manifest"" href=""%PUBLIC_URL%/manifest.json""&gt;
    &lt;link rel=""apple-touch-icon"" sizes=""180x180"" href=""%PUBLIC_URL%/apple-touch-icon.png""&gt;
    &lt;link rel=""mask-icon"" href=""%PUBLIC_URL%/safari-pinned-tab.svg"" color=""#0081c6""&gt;

    &lt;script src=""%PUBLIC_URL%/scripts/modernizr.custom.js""&gt;&lt;/script&gt;
    &lt;title&gt;&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;!-- SVG sprite --&gt;
    &lt;div style=""border: 0px; clip: rect(0px 0px 0px 0px); height: 0px; overflow: hidden; padding: 0px; position: absolute; width: 0px;""&gt;%SVG_SPRITE%&lt;/div&gt;
    &lt;div id=""app"" style=""overflow: hidden;""&gt;&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>I've also tried just duplicating this over to <code>public/maintenance.html</code> with no luck.</p>
","Please share the html template as well."
"43690916","Additional HtmlWebpackPlugin() pages with create-react-app","8","<p>I've ejected from the default <a href=""https://github.com/facebookincubator/create-react-app"" rel=""nofollow noreferrer"">create-react-app</a> project and am attempting to create a second, <code>maintenance.html</code> page that Webpack can inject into as it does by default with <code>public/index.html</code>. I've read through a number of issues; and the docs for HtmlWebpackPlugin, which states it should be as easy as:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>to this:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  filename: '/public/maintenance.html',
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>I keep getting the following error when I want to convert vars like <code>%PUBLIC_URL%</code> to their actual value:</p>

<p><code>URIError: Failed to decode param '/%PUBLIC_URL%/scripts/modernizr.custom.js'</code></p>

<ul>
<li>even though they work fine in <code>public/index.html</code>. Any ideas what I'm doing wrong? I've made sure I don't have any rules setup to do anything else with <code>.html</code> files; as I've seen a few people get mixed up there. Have been messing around with the settings and combing through GitHub issues, but feel like I'm running in circles. Thanks!</li>
</ul>

<p>Here's the current <code>webpack.config.dev.js</code> file:</p>

<pre><code>/* THIS FILE HAS BEEN EDITED A BIT FROM https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/config/webpack.config.dev.js */

const autoprefixer = require('autoprefixer');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');
const InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');
const WatchMissingNodeModulesPlugin = require('react-dev-utils/WatchMissingNodeModulesPlugin');
const getClientEnvironment = require('./env');
const paths = require('./paths');

// Custom
const cssnano = require('cssnano');
const flexbugs = require('postcss-flexbugs-fixes');
const svgFragments = require('postcss-svg-fragments');

const fs = require('fs');

// Don't show deprecations
process.noDeprecation = true;

// @remove-on-eject-begin
// `path` is not used after eject - see https://github.com/facebookincubator/create-react-app/issues/1174
const path = require('path');
// @remove-on-eject-end

// Webpack uses `publicPath` to determine where the app is being served from.
// In development, we always serve from the root. This makes config easier.
const publicPath = '/';
// `publicUrl` is just like `publicPath`, but we will provide it to our app
// as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.
// Omit trailing slash as %PUBLIC_PATH%/xyz looks better than %PUBLIC_PATH%xyz.
const publicUrl = '';
// Get environment variables to inject into our app.
const env = getClientEnvironment(publicUrl);
// Get environment object passed down to HTML template
const envObject = env.raw;
// Read SVG sprite
const svgSprite = fs.readFileSync(`${paths.appPublic}/images/sprite.svg`, 'utf8');
// Add SVG output to variable object passed to HTML template
envObject.SVG_SPRITE = svgSprite;

// This is the development configuration.
// It is focused on developer experience and fast rebuilds.
// The production configuration is different and lives in a separate file.
module.exports = {
  /// You may want 'eval' instead if you prefer to see the compiled output in DevTools.
  // See the discussion in https://github.com/facebookincubator/create-react-app/issues/343.
  devtool: 'eval',
  // These are the ""entry points"" to our application.
  // This means they will be the ""root"" imports that are included in JS bundle.
  // The first two entry points enable ""hot"" CSS and auto-refreshes for JS.
  entry: [
    // Include an alternative client for WebpackDevServer. A client's job is to
    // connect to WebpackDevServer by a socket and get notified about changes.
    // When you save a file, the client will either apply hot updates (in case
    // of CSS changes), or refresh the page (in case of JS changes). When you
    // make a syntax error, this client will display a syntax error overlay.
    // Note: instead of the default WebpackDevServer client, we use a custom one
    // to bring better experience for Create React App users. You can replace
    // the line below with these two lines if you prefer the stock client:
    // require.resolve('webpack-dev-server/client') + '?/',
    // require.resolve('webpack/hot/dev-server'),
    require.resolve('react-dev-utils/webpackHotDevClient'),
    // Polyfills
    require.resolve('./polyfills'),
    // Finally, this is your app's code:
    paths.appIndexJs,
    // We include the app code last so that if there is a runtime error during
    // initialization, it doesn't blow up the WebpackDevServer client, and
    // changing JS code would still trigger a refresh.
  ],
  output: {
    // Next line is not used in dev but WebpackDevServer crashes without it:
    path: paths.appBuild,
    // Add /* filename */ comments to generated require()s in the output.
    pathinfo: true,
    // This does not produce a real file. It's just the virtual path that is
    // served by WebpackDevServer in development. This is the JS bundle
    // containing code from all our entry points, and the Webpack runtime.
    filename: 'static/js/bundle.js',
    // This is the URL that app is served from. We use ""/"" in development.
    publicPath: publicPath,
  },
  externals: {
    gsap: 'TweenMax',
  },
  resolve: {
    // This allows you to set a fallback for where Webpack should look for modules.
    // We read `NODE_PATH` environment variable in `paths.js` and pass paths here.
    // We placed these paths second because we want `node_modules` to ""win""
    // if there are any conflicts. This matches Node resolution mechanism.
    // https://github.com/facebookincubator/create-react-app/issues/253
    modules: ['node_modules'].concat(paths.nodePaths),
    // These are the reasonable defaults supported by the Node ecosystem.
    // We also include JSX as a common component filename extension to support
    // some tools, although we do not recommend using it, see:
    // https://github.com/facebookincubator/create-react-app/issues/290
    extensions: ['.js', '.json', '.jsx'],
    alias: {
      react: path.resolve('./node_modules/react'),
      // Support React Native Web
      // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/
      'react-native': 'react-native-web',
    },
  },
  // @remove-on-eject-begin
  // Resolve loaders (webpack plugins for CSS, images, transpilation) from the
  // directory of `react-scripts` itself rather than the project directory.
  resolveLoader: {
    modules: [
      // Lerna hoists everything, so we need to look in our app directory
      paths.appNodeModules,
    ],
  },
  module: {
    rules: [
      // Disable require.ensure as it's not a standard language feature.
      { parser: { requireEnsure: false } },
      {
        test: /\.(js|jsx)$/,
        enforce: 'pre',
        use: [
          {
            // @remove-on-eject-end
            loader: 'eslint-loader',
          },
        ],
        include: paths.appSrc,
      },
      // ** ADDING/UPDATING LOADERS **
      // The ""url"" loader handles all assets unless explicitly excluded.
      // The `exclude` list *must* be updated with every change to loader extensions.
      // When adding a new loader, you must add its `test`
      // as a new entry in the `exclude` list for ""url"" loader.

      // ""file"" loader makes sure those assets get served by WebpackDevServer.
      // When you `import` an asset, you get its (virtual) filename.
      // In production, they would get copied to the `build` folder.
      {
        test: /\.(ico|jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)(\?.*)?$/,
        loader: 'file-loader',
        options: {
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // ""url"" loader works like ""file"" loader except that it embeds assets
      // smaller than specified limit in bytes as data URLs to avoid requests.
      // A missing `test` is equivalent to a match.
      {
        test: /\.(mp4|webm|wav|mp3|m4a|aac|oga)(\?.*)?$/,
        loader: 'url-loader',
        options: {
          limit: 10000,
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // Process JS with Babel.
      {
        test: /\.(js|jsx)$/,
        include: paths.appSrc,
        loader: 'babel-loader',
        options: {
          // @remove-on-eject-end
          // This is a feature of `babel-loader` for webpack (not Babel itself).
          // It enables caching results in ./node_modules/.cache/babel-loader/
          // directory for faster rebuilds.
          cacheDirectory: true,
        },
      },
      {
        test: /\.less$/,
        use: [
          {
            loader: 'style-loader',
          },
          {
            loader: 'css-loader',
            options: {
              sourceMap: true,
            }
          },
          {
            loader: 'postcss-loader',
            options: {
              sourceMap: true,
              ident: 'postcss', // https://webpack.js.org/guides/migrating/#complex-options
              plugins: () =&gt; [
                autoprefixer({
                  browsers: [
                    '&gt;2%',
                    'last 2 versions',
                    'not ie &lt; 11',
                  ],
                  cascade: false,
                }),
                cssnano({
                  discardUnused: false,
                  zindex: false,
                  reduceIdents: false,
                  mergeIdents: false,
                }),
                flexbugs(),
                svgFragments(),
              ],
            },
          },
          {
            loader: 'less-loader',
            options: {
              sourceMap: true,
            }
          },
        ],
      },
    ],
  },
  plugins: [
    // Makes some environment variables available in index.html.
    // The public URL is available as %PUBLIC_URL% in index.html, e.g.:
    // &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
    // In development, this will be an empty string.
    new InterpolateHtmlPlugin(envObject),
    // Generates an `index.html` file with the &lt;script&gt; injected.
    new HtmlWebpackPlugin({
      inject: true,
      template: paths.appHtml,
      minify: {
        minifyCSS: true,
      },
    }),
    // Makes some environment variables available to the JS code, for example:
    // if (process.env.NODE_ENV === 'development') { ... }. See `./env.js`.
    new webpack.DefinePlugin(env.stringified),
    // This is necessary to emit hot updates (currently CSS only):
    new webpack.HotModuleReplacementPlugin(),
    // Watcher doesn't work well if you mistype casing in a path so we use
    // a plugin that prints an error when you attempt to do this.
    // See https://github.com/facebookincubator/create-react-app/issues/240
    new CaseSensitivePathsPlugin(),
    // If you require a missing module and then `npm install` it, you still have
    // to restart the development server for Webpack to discover it. This plugin
    // makes the discovery automatic so you don't have to restart.
    // See https://github.com/facebookincubator/create-react-app/issues/186
    new WatchMissingNodeModulesPlugin(paths.appNodeModules),
  ],
  // Some libraries import Node modules but don't use them in the browser.
  // Tell Webpack to provide empty mocks for them so importing them works.
  node: {
    fs: 'empty',
    net: 'empty',
    tls: 'empty',
  },
  // Turn off performance hints during development because we don't do any
  // splitting or minification in interest of speed. These warnings become
  // cumbersome.
  performance: {
    hints: false,
  },
};
</code></pre>

<p>Here's the HTML of <code>public/index.html</code></p>

<pre><code>&lt;!doctype html&gt;
&lt;html lang=""en""&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" /&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt;
    &lt;meta name=""theme-color"" content=""#ffffff""&gt;
    &lt;meta name=""apple-mobile-web-app-capable"" content=""yes""&gt;
    &lt;meta name=""format-detection"" content=""telephone=no""&gt;
    &lt;link id=""js-favicon"" rel=""icon"" type=""image/png"" href=""%PUBLIC_URL%/favicon-32x32.png"" sizes=""32x32""&gt;
    &lt;link rel=""manifest"" href=""%PUBLIC_URL%/manifest.json""&gt;
    &lt;link rel=""apple-touch-icon"" sizes=""180x180"" href=""%PUBLIC_URL%/apple-touch-icon.png""&gt;
    &lt;link rel=""mask-icon"" href=""%PUBLIC_URL%/safari-pinned-tab.svg"" color=""#0081c6""&gt;

    &lt;script src=""%PUBLIC_URL%/scripts/modernizr.custom.js""&gt;&lt;/script&gt;
    &lt;title&gt;&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;!-- SVG sprite --&gt;
    &lt;div style=""border: 0px; clip: rect(0px 0px 0px 0px); height: 0px; overflow: hidden; padding: 0px; position: absolute; width: 0px;""&gt;%SVG_SPRITE%&lt;/div&gt;
    &lt;div id=""app"" style=""overflow: hidden;""&gt;&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>I've also tried just duplicating this over to <code>public/maintenance.html</code> with no luck.</p>
","Sure - I've edited my original question with the entirety of that file."
"43690916","Additional HtmlWebpackPlugin() pages with create-react-app","8","<p>I've ejected from the default <a href=""https://github.com/facebookincubator/create-react-app"" rel=""nofollow noreferrer"">create-react-app</a> project and am attempting to create a second, <code>maintenance.html</code> page that Webpack can inject into as it does by default with <code>public/index.html</code>. I've read through a number of issues; and the docs for HtmlWebpackPlugin, which states it should be as easy as:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>to this:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  filename: '/public/maintenance.html',
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>I keep getting the following error when I want to convert vars like <code>%PUBLIC_URL%</code> to their actual value:</p>

<p><code>URIError: Failed to decode param '/%PUBLIC_URL%/scripts/modernizr.custom.js'</code></p>

<ul>
<li>even though they work fine in <code>public/index.html</code>. Any ideas what I'm doing wrong? I've made sure I don't have any rules setup to do anything else with <code>.html</code> files; as I've seen a few people get mixed up there. Have been messing around with the settings and combing through GitHub issues, but feel like I'm running in circles. Thanks!</li>
</ul>

<p>Here's the current <code>webpack.config.dev.js</code> file:</p>

<pre><code>/* THIS FILE HAS BEEN EDITED A BIT FROM https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/config/webpack.config.dev.js */

const autoprefixer = require('autoprefixer');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');
const InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');
const WatchMissingNodeModulesPlugin = require('react-dev-utils/WatchMissingNodeModulesPlugin');
const getClientEnvironment = require('./env');
const paths = require('./paths');

// Custom
const cssnano = require('cssnano');
const flexbugs = require('postcss-flexbugs-fixes');
const svgFragments = require('postcss-svg-fragments');

const fs = require('fs');

// Don't show deprecations
process.noDeprecation = true;

// @remove-on-eject-begin
// `path` is not used after eject - see https://github.com/facebookincubator/create-react-app/issues/1174
const path = require('path');
// @remove-on-eject-end

// Webpack uses `publicPath` to determine where the app is being served from.
// In development, we always serve from the root. This makes config easier.
const publicPath = '/';
// `publicUrl` is just like `publicPath`, but we will provide it to our app
// as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.
// Omit trailing slash as %PUBLIC_PATH%/xyz looks better than %PUBLIC_PATH%xyz.
const publicUrl = '';
// Get environment variables to inject into our app.
const env = getClientEnvironment(publicUrl);
// Get environment object passed down to HTML template
const envObject = env.raw;
// Read SVG sprite
const svgSprite = fs.readFileSync(`${paths.appPublic}/images/sprite.svg`, 'utf8');
// Add SVG output to variable object passed to HTML template
envObject.SVG_SPRITE = svgSprite;

// This is the development configuration.
// It is focused on developer experience and fast rebuilds.
// The production configuration is different and lives in a separate file.
module.exports = {
  /// You may want 'eval' instead if you prefer to see the compiled output in DevTools.
  // See the discussion in https://github.com/facebookincubator/create-react-app/issues/343.
  devtool: 'eval',
  // These are the ""entry points"" to our application.
  // This means they will be the ""root"" imports that are included in JS bundle.
  // The first two entry points enable ""hot"" CSS and auto-refreshes for JS.
  entry: [
    // Include an alternative client for WebpackDevServer. A client's job is to
    // connect to WebpackDevServer by a socket and get notified about changes.
    // When you save a file, the client will either apply hot updates (in case
    // of CSS changes), or refresh the page (in case of JS changes). When you
    // make a syntax error, this client will display a syntax error overlay.
    // Note: instead of the default WebpackDevServer client, we use a custom one
    // to bring better experience for Create React App users. You can replace
    // the line below with these two lines if you prefer the stock client:
    // require.resolve('webpack-dev-server/client') + '?/',
    // require.resolve('webpack/hot/dev-server'),
    require.resolve('react-dev-utils/webpackHotDevClient'),
    // Polyfills
    require.resolve('./polyfills'),
    // Finally, this is your app's code:
    paths.appIndexJs,
    // We include the app code last so that if there is a runtime error during
    // initialization, it doesn't blow up the WebpackDevServer client, and
    // changing JS code would still trigger a refresh.
  ],
  output: {
    // Next line is not used in dev but WebpackDevServer crashes without it:
    path: paths.appBuild,
    // Add /* filename */ comments to generated require()s in the output.
    pathinfo: true,
    // This does not produce a real file. It's just the virtual path that is
    // served by WebpackDevServer in development. This is the JS bundle
    // containing code from all our entry points, and the Webpack runtime.
    filename: 'static/js/bundle.js',
    // This is the URL that app is served from. We use ""/"" in development.
    publicPath: publicPath,
  },
  externals: {
    gsap: 'TweenMax',
  },
  resolve: {
    // This allows you to set a fallback for where Webpack should look for modules.
    // We read `NODE_PATH` environment variable in `paths.js` and pass paths here.
    // We placed these paths second because we want `node_modules` to ""win""
    // if there are any conflicts. This matches Node resolution mechanism.
    // https://github.com/facebookincubator/create-react-app/issues/253
    modules: ['node_modules'].concat(paths.nodePaths),
    // These are the reasonable defaults supported by the Node ecosystem.
    // We also include JSX as a common component filename extension to support
    // some tools, although we do not recommend using it, see:
    // https://github.com/facebookincubator/create-react-app/issues/290
    extensions: ['.js', '.json', '.jsx'],
    alias: {
      react: path.resolve('./node_modules/react'),
      // Support React Native Web
      // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/
      'react-native': 'react-native-web',
    },
  },
  // @remove-on-eject-begin
  // Resolve loaders (webpack plugins for CSS, images, transpilation) from the
  // directory of `react-scripts` itself rather than the project directory.
  resolveLoader: {
    modules: [
      // Lerna hoists everything, so we need to look in our app directory
      paths.appNodeModules,
    ],
  },
  module: {
    rules: [
      // Disable require.ensure as it's not a standard language feature.
      { parser: { requireEnsure: false } },
      {
        test: /\.(js|jsx)$/,
        enforce: 'pre',
        use: [
          {
            // @remove-on-eject-end
            loader: 'eslint-loader',
          },
        ],
        include: paths.appSrc,
      },
      // ** ADDING/UPDATING LOADERS **
      // The ""url"" loader handles all assets unless explicitly excluded.
      // The `exclude` list *must* be updated with every change to loader extensions.
      // When adding a new loader, you must add its `test`
      // as a new entry in the `exclude` list for ""url"" loader.

      // ""file"" loader makes sure those assets get served by WebpackDevServer.
      // When you `import` an asset, you get its (virtual) filename.
      // In production, they would get copied to the `build` folder.
      {
        test: /\.(ico|jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)(\?.*)?$/,
        loader: 'file-loader',
        options: {
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // ""url"" loader works like ""file"" loader except that it embeds assets
      // smaller than specified limit in bytes as data URLs to avoid requests.
      // A missing `test` is equivalent to a match.
      {
        test: /\.(mp4|webm|wav|mp3|m4a|aac|oga)(\?.*)?$/,
        loader: 'url-loader',
        options: {
          limit: 10000,
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // Process JS with Babel.
      {
        test: /\.(js|jsx)$/,
        include: paths.appSrc,
        loader: 'babel-loader',
        options: {
          // @remove-on-eject-end
          // This is a feature of `babel-loader` for webpack (not Babel itself).
          // It enables caching results in ./node_modules/.cache/babel-loader/
          // directory for faster rebuilds.
          cacheDirectory: true,
        },
      },
      {
        test: /\.less$/,
        use: [
          {
            loader: 'style-loader',
          },
          {
            loader: 'css-loader',
            options: {
              sourceMap: true,
            }
          },
          {
            loader: 'postcss-loader',
            options: {
              sourceMap: true,
              ident: 'postcss', // https://webpack.js.org/guides/migrating/#complex-options
              plugins: () =&gt; [
                autoprefixer({
                  browsers: [
                    '&gt;2%',
                    'last 2 versions',
                    'not ie &lt; 11',
                  ],
                  cascade: false,
                }),
                cssnano({
                  discardUnused: false,
                  zindex: false,
                  reduceIdents: false,
                  mergeIdents: false,
                }),
                flexbugs(),
                svgFragments(),
              ],
            },
          },
          {
            loader: 'less-loader',
            options: {
              sourceMap: true,
            }
          },
        ],
      },
    ],
  },
  plugins: [
    // Makes some environment variables available in index.html.
    // The public URL is available as %PUBLIC_URL% in index.html, e.g.:
    // &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
    // In development, this will be an empty string.
    new InterpolateHtmlPlugin(envObject),
    // Generates an `index.html` file with the &lt;script&gt; injected.
    new HtmlWebpackPlugin({
      inject: true,
      template: paths.appHtml,
      minify: {
        minifyCSS: true,
      },
    }),
    // Makes some environment variables available to the JS code, for example:
    // if (process.env.NODE_ENV === 'development') { ... }. See `./env.js`.
    new webpack.DefinePlugin(env.stringified),
    // This is necessary to emit hot updates (currently CSS only):
    new webpack.HotModuleReplacementPlugin(),
    // Watcher doesn't work well if you mistype casing in a path so we use
    // a plugin that prints an error when you attempt to do this.
    // See https://github.com/facebookincubator/create-react-app/issues/240
    new CaseSensitivePathsPlugin(),
    // If you require a missing module and then `npm install` it, you still have
    // to restart the development server for Webpack to discover it. This plugin
    // makes the discovery automatic so you don't have to restart.
    // See https://github.com/facebookincubator/create-react-app/issues/186
    new WatchMissingNodeModulesPlugin(paths.appNodeModules),
  ],
  // Some libraries import Node modules but don't use them in the browser.
  // Tell Webpack to provide empty mocks for them so importing them works.
  node: {
    fs: 'empty',
    net: 'empty',
    tls: 'empty',
  },
  // Turn off performance hints during development because we don't do any
  // splitting or minification in interest of speed. These warnings become
  // cumbersome.
  performance: {
    hints: false,
  },
};
</code></pre>

<p>Here's the HTML of <code>public/index.html</code></p>

<pre><code>&lt;!doctype html&gt;
&lt;html lang=""en""&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" /&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt;
    &lt;meta name=""theme-color"" content=""#ffffff""&gt;
    &lt;meta name=""apple-mobile-web-app-capable"" content=""yes""&gt;
    &lt;meta name=""format-detection"" content=""telephone=no""&gt;
    &lt;link id=""js-favicon"" rel=""icon"" type=""image/png"" href=""%PUBLIC_URL%/favicon-32x32.png"" sizes=""32x32""&gt;
    &lt;link rel=""manifest"" href=""%PUBLIC_URL%/manifest.json""&gt;
    &lt;link rel=""apple-touch-icon"" sizes=""180x180"" href=""%PUBLIC_URL%/apple-touch-icon.png""&gt;
    &lt;link rel=""mask-icon"" href=""%PUBLIC_URL%/safari-pinned-tab.svg"" color=""#0081c6""&gt;

    &lt;script src=""%PUBLIC_URL%/scripts/modernizr.custom.js""&gt;&lt;/script&gt;
    &lt;title&gt;&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;!-- SVG sprite --&gt;
    &lt;div style=""border: 0px; clip: rect(0px 0px 0px 0px); height: 0px; overflow: hidden; padding: 0px; position: absolute; width: 0px;""&gt;%SVG_SPRITE%&lt;/div&gt;
    &lt;div id=""app"" style=""overflow: hidden;""&gt;&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>I've also tried just duplicating this over to <code>public/maintenance.html</code> with no luck.</p>
","Then it's an issue with the webpack setup. Is it possible to have a look at more code? Especially the webpack.config file?"
"43690916","Additional HtmlWebpackPlugin() pages with create-react-app","8","<p>I've ejected from the default <a href=""https://github.com/facebookincubator/create-react-app"" rel=""nofollow noreferrer"">create-react-app</a> project and am attempting to create a second, <code>maintenance.html</code> page that Webpack can inject into as it does by default with <code>public/index.html</code>. I've read through a number of issues; and the docs for HtmlWebpackPlugin, which states it should be as easy as:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>to this:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  filename: '/public/maintenance.html',
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>I keep getting the following error when I want to convert vars like <code>%PUBLIC_URL%</code> to their actual value:</p>

<p><code>URIError: Failed to decode param '/%PUBLIC_URL%/scripts/modernizr.custom.js'</code></p>

<ul>
<li>even though they work fine in <code>public/index.html</code>. Any ideas what I'm doing wrong? I've made sure I don't have any rules setup to do anything else with <code>.html</code> files; as I've seen a few people get mixed up there. Have been messing around with the settings and combing through GitHub issues, but feel like I'm running in circles. Thanks!</li>
</ul>

<p>Here's the current <code>webpack.config.dev.js</code> file:</p>

<pre><code>/* THIS FILE HAS BEEN EDITED A BIT FROM https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/config/webpack.config.dev.js */

const autoprefixer = require('autoprefixer');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');
const InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');
const WatchMissingNodeModulesPlugin = require('react-dev-utils/WatchMissingNodeModulesPlugin');
const getClientEnvironment = require('./env');
const paths = require('./paths');

// Custom
const cssnano = require('cssnano');
const flexbugs = require('postcss-flexbugs-fixes');
const svgFragments = require('postcss-svg-fragments');

const fs = require('fs');

// Don't show deprecations
process.noDeprecation = true;

// @remove-on-eject-begin
// `path` is not used after eject - see https://github.com/facebookincubator/create-react-app/issues/1174
const path = require('path');
// @remove-on-eject-end

// Webpack uses `publicPath` to determine where the app is being served from.
// In development, we always serve from the root. This makes config easier.
const publicPath = '/';
// `publicUrl` is just like `publicPath`, but we will provide it to our app
// as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.
// Omit trailing slash as %PUBLIC_PATH%/xyz looks better than %PUBLIC_PATH%xyz.
const publicUrl = '';
// Get environment variables to inject into our app.
const env = getClientEnvironment(publicUrl);
// Get environment object passed down to HTML template
const envObject = env.raw;
// Read SVG sprite
const svgSprite = fs.readFileSync(`${paths.appPublic}/images/sprite.svg`, 'utf8');
// Add SVG output to variable object passed to HTML template
envObject.SVG_SPRITE = svgSprite;

// This is the development configuration.
// It is focused on developer experience and fast rebuilds.
// The production configuration is different and lives in a separate file.
module.exports = {
  /// You may want 'eval' instead if you prefer to see the compiled output in DevTools.
  // See the discussion in https://github.com/facebookincubator/create-react-app/issues/343.
  devtool: 'eval',
  // These are the ""entry points"" to our application.
  // This means they will be the ""root"" imports that are included in JS bundle.
  // The first two entry points enable ""hot"" CSS and auto-refreshes for JS.
  entry: [
    // Include an alternative client for WebpackDevServer. A client's job is to
    // connect to WebpackDevServer by a socket and get notified about changes.
    // When you save a file, the client will either apply hot updates (in case
    // of CSS changes), or refresh the page (in case of JS changes). When you
    // make a syntax error, this client will display a syntax error overlay.
    // Note: instead of the default WebpackDevServer client, we use a custom one
    // to bring better experience for Create React App users. You can replace
    // the line below with these two lines if you prefer the stock client:
    // require.resolve('webpack-dev-server/client') + '?/',
    // require.resolve('webpack/hot/dev-server'),
    require.resolve('react-dev-utils/webpackHotDevClient'),
    // Polyfills
    require.resolve('./polyfills'),
    // Finally, this is your app's code:
    paths.appIndexJs,
    // We include the app code last so that if there is a runtime error during
    // initialization, it doesn't blow up the WebpackDevServer client, and
    // changing JS code would still trigger a refresh.
  ],
  output: {
    // Next line is not used in dev but WebpackDevServer crashes without it:
    path: paths.appBuild,
    // Add /* filename */ comments to generated require()s in the output.
    pathinfo: true,
    // This does not produce a real file. It's just the virtual path that is
    // served by WebpackDevServer in development. This is the JS bundle
    // containing code from all our entry points, and the Webpack runtime.
    filename: 'static/js/bundle.js',
    // This is the URL that app is served from. We use ""/"" in development.
    publicPath: publicPath,
  },
  externals: {
    gsap: 'TweenMax',
  },
  resolve: {
    // This allows you to set a fallback for where Webpack should look for modules.
    // We read `NODE_PATH` environment variable in `paths.js` and pass paths here.
    // We placed these paths second because we want `node_modules` to ""win""
    // if there are any conflicts. This matches Node resolution mechanism.
    // https://github.com/facebookincubator/create-react-app/issues/253
    modules: ['node_modules'].concat(paths.nodePaths),
    // These are the reasonable defaults supported by the Node ecosystem.
    // We also include JSX as a common component filename extension to support
    // some tools, although we do not recommend using it, see:
    // https://github.com/facebookincubator/create-react-app/issues/290
    extensions: ['.js', '.json', '.jsx'],
    alias: {
      react: path.resolve('./node_modules/react'),
      // Support React Native Web
      // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/
      'react-native': 'react-native-web',
    },
  },
  // @remove-on-eject-begin
  // Resolve loaders (webpack plugins for CSS, images, transpilation) from the
  // directory of `react-scripts` itself rather than the project directory.
  resolveLoader: {
    modules: [
      // Lerna hoists everything, so we need to look in our app directory
      paths.appNodeModules,
    ],
  },
  module: {
    rules: [
      // Disable require.ensure as it's not a standard language feature.
      { parser: { requireEnsure: false } },
      {
        test: /\.(js|jsx)$/,
        enforce: 'pre',
        use: [
          {
            // @remove-on-eject-end
            loader: 'eslint-loader',
          },
        ],
        include: paths.appSrc,
      },
      // ** ADDING/UPDATING LOADERS **
      // The ""url"" loader handles all assets unless explicitly excluded.
      // The `exclude` list *must* be updated with every change to loader extensions.
      // When adding a new loader, you must add its `test`
      // as a new entry in the `exclude` list for ""url"" loader.

      // ""file"" loader makes sure those assets get served by WebpackDevServer.
      // When you `import` an asset, you get its (virtual) filename.
      // In production, they would get copied to the `build` folder.
      {
        test: /\.(ico|jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)(\?.*)?$/,
        loader: 'file-loader',
        options: {
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // ""url"" loader works like ""file"" loader except that it embeds assets
      // smaller than specified limit in bytes as data URLs to avoid requests.
      // A missing `test` is equivalent to a match.
      {
        test: /\.(mp4|webm|wav|mp3|m4a|aac|oga)(\?.*)?$/,
        loader: 'url-loader',
        options: {
          limit: 10000,
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // Process JS with Babel.
      {
        test: /\.(js|jsx)$/,
        include: paths.appSrc,
        loader: 'babel-loader',
        options: {
          // @remove-on-eject-end
          // This is a feature of `babel-loader` for webpack (not Babel itself).
          // It enables caching results in ./node_modules/.cache/babel-loader/
          // directory for faster rebuilds.
          cacheDirectory: true,
        },
      },
      {
        test: /\.less$/,
        use: [
          {
            loader: 'style-loader',
          },
          {
            loader: 'css-loader',
            options: {
              sourceMap: true,
            }
          },
          {
            loader: 'postcss-loader',
            options: {
              sourceMap: true,
              ident: 'postcss', // https://webpack.js.org/guides/migrating/#complex-options
              plugins: () =&gt; [
                autoprefixer({
                  browsers: [
                    '&gt;2%',
                    'last 2 versions',
                    'not ie &lt; 11',
                  ],
                  cascade: false,
                }),
                cssnano({
                  discardUnused: false,
                  zindex: false,
                  reduceIdents: false,
                  mergeIdents: false,
                }),
                flexbugs(),
                svgFragments(),
              ],
            },
          },
          {
            loader: 'less-loader',
            options: {
              sourceMap: true,
            }
          },
        ],
      },
    ],
  },
  plugins: [
    // Makes some environment variables available in index.html.
    // The public URL is available as %PUBLIC_URL% in index.html, e.g.:
    // &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
    // In development, this will be an empty string.
    new InterpolateHtmlPlugin(envObject),
    // Generates an `index.html` file with the &lt;script&gt; injected.
    new HtmlWebpackPlugin({
      inject: true,
      template: paths.appHtml,
      minify: {
        minifyCSS: true,
      },
    }),
    // Makes some environment variables available to the JS code, for example:
    // if (process.env.NODE_ENV === 'development') { ... }. See `./env.js`.
    new webpack.DefinePlugin(env.stringified),
    // This is necessary to emit hot updates (currently CSS only):
    new webpack.HotModuleReplacementPlugin(),
    // Watcher doesn't work well if you mistype casing in a path so we use
    // a plugin that prints an error when you attempt to do this.
    // See https://github.com/facebookincubator/create-react-app/issues/240
    new CaseSensitivePathsPlugin(),
    // If you require a missing module and then `npm install` it, you still have
    // to restart the development server for Webpack to discover it. This plugin
    // makes the discovery automatic so you don't have to restart.
    // See https://github.com/facebookincubator/create-react-app/issues/186
    new WatchMissingNodeModulesPlugin(paths.appNodeModules),
  ],
  // Some libraries import Node modules but don't use them in the browser.
  // Tell Webpack to provide empty mocks for them so importing them works.
  node: {
    fs: 'empty',
    net: 'empty',
    tls: 'empty',
  },
  // Turn off performance hints during development because we don't do any
  // splitting or minification in interest of speed. These warnings become
  // cumbersome.
  performance: {
    hints: false,
  },
};
</code></pre>

<p>Here's the HTML of <code>public/index.html</code></p>

<pre><code>&lt;!doctype html&gt;
&lt;html lang=""en""&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" /&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt;
    &lt;meta name=""theme-color"" content=""#ffffff""&gt;
    &lt;meta name=""apple-mobile-web-app-capable"" content=""yes""&gt;
    &lt;meta name=""format-detection"" content=""telephone=no""&gt;
    &lt;link id=""js-favicon"" rel=""icon"" type=""image/png"" href=""%PUBLIC_URL%/favicon-32x32.png"" sizes=""32x32""&gt;
    &lt;link rel=""manifest"" href=""%PUBLIC_URL%/manifest.json""&gt;
    &lt;link rel=""apple-touch-icon"" sizes=""180x180"" href=""%PUBLIC_URL%/apple-touch-icon.png""&gt;
    &lt;link rel=""mask-icon"" href=""%PUBLIC_URL%/safari-pinned-tab.svg"" color=""#0081c6""&gt;

    &lt;script src=""%PUBLIC_URL%/scripts/modernizr.custom.js""&gt;&lt;/script&gt;
    &lt;title&gt;&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;!-- SVG sprite --&gt;
    &lt;div style=""border: 0px; clip: rect(0px 0px 0px 0px); height: 0px; overflow: hidden; padding: 0px; position: absolute; width: 0px;""&gt;%SVG_SPRITE%&lt;/div&gt;
    &lt;div id=""app"" style=""overflow: hidden;""&gt;&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>I've also tried just duplicating this over to <code>public/maintenance.html</code> with no luck.</p>
","Just in case you need this fixed urgently, if the two htmls are exactly identical, you could simply make a copy of the generated index.html file with that name."
"43690916","Additional HtmlWebpackPlugin() pages with create-react-app","8","<p>I've ejected from the default <a href=""https://github.com/facebookincubator/create-react-app"" rel=""nofollow noreferrer"">create-react-app</a> project and am attempting to create a second, <code>maintenance.html</code> page that Webpack can inject into as it does by default with <code>public/index.html</code>. I've read through a number of issues; and the docs for HtmlWebpackPlugin, which states it should be as easy as:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>to this:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  filename: '/public/maintenance.html',
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>I keep getting the following error when I want to convert vars like <code>%PUBLIC_URL%</code> to their actual value:</p>

<p><code>URIError: Failed to decode param '/%PUBLIC_URL%/scripts/modernizr.custom.js'</code></p>

<ul>
<li>even though they work fine in <code>public/index.html</code>. Any ideas what I'm doing wrong? I've made sure I don't have any rules setup to do anything else with <code>.html</code> files; as I've seen a few people get mixed up there. Have been messing around with the settings and combing through GitHub issues, but feel like I'm running in circles. Thanks!</li>
</ul>

<p>Here's the current <code>webpack.config.dev.js</code> file:</p>

<pre><code>/* THIS FILE HAS BEEN EDITED A BIT FROM https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/config/webpack.config.dev.js */

const autoprefixer = require('autoprefixer');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');
const InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');
const WatchMissingNodeModulesPlugin = require('react-dev-utils/WatchMissingNodeModulesPlugin');
const getClientEnvironment = require('./env');
const paths = require('./paths');

// Custom
const cssnano = require('cssnano');
const flexbugs = require('postcss-flexbugs-fixes');
const svgFragments = require('postcss-svg-fragments');

const fs = require('fs');

// Don't show deprecations
process.noDeprecation = true;

// @remove-on-eject-begin
// `path` is not used after eject - see https://github.com/facebookincubator/create-react-app/issues/1174
const path = require('path');
// @remove-on-eject-end

// Webpack uses `publicPath` to determine where the app is being served from.
// In development, we always serve from the root. This makes config easier.
const publicPath = '/';
// `publicUrl` is just like `publicPath`, but we will provide it to our app
// as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.
// Omit trailing slash as %PUBLIC_PATH%/xyz looks better than %PUBLIC_PATH%xyz.
const publicUrl = '';
// Get environment variables to inject into our app.
const env = getClientEnvironment(publicUrl);
// Get environment object passed down to HTML template
const envObject = env.raw;
// Read SVG sprite
const svgSprite = fs.readFileSync(`${paths.appPublic}/images/sprite.svg`, 'utf8');
// Add SVG output to variable object passed to HTML template
envObject.SVG_SPRITE = svgSprite;

// This is the development configuration.
// It is focused on developer experience and fast rebuilds.
// The production configuration is different and lives in a separate file.
module.exports = {
  /// You may want 'eval' instead if you prefer to see the compiled output in DevTools.
  // See the discussion in https://github.com/facebookincubator/create-react-app/issues/343.
  devtool: 'eval',
  // These are the ""entry points"" to our application.
  // This means they will be the ""root"" imports that are included in JS bundle.
  // The first two entry points enable ""hot"" CSS and auto-refreshes for JS.
  entry: [
    // Include an alternative client for WebpackDevServer. A client's job is to
    // connect to WebpackDevServer by a socket and get notified about changes.
    // When you save a file, the client will either apply hot updates (in case
    // of CSS changes), or refresh the page (in case of JS changes). When you
    // make a syntax error, this client will display a syntax error overlay.
    // Note: instead of the default WebpackDevServer client, we use a custom one
    // to bring better experience for Create React App users. You can replace
    // the line below with these two lines if you prefer the stock client:
    // require.resolve('webpack-dev-server/client') + '?/',
    // require.resolve('webpack/hot/dev-server'),
    require.resolve('react-dev-utils/webpackHotDevClient'),
    // Polyfills
    require.resolve('./polyfills'),
    // Finally, this is your app's code:
    paths.appIndexJs,
    // We include the app code last so that if there is a runtime error during
    // initialization, it doesn't blow up the WebpackDevServer client, and
    // changing JS code would still trigger a refresh.
  ],
  output: {
    // Next line is not used in dev but WebpackDevServer crashes without it:
    path: paths.appBuild,
    // Add /* filename */ comments to generated require()s in the output.
    pathinfo: true,
    // This does not produce a real file. It's just the virtual path that is
    // served by WebpackDevServer in development. This is the JS bundle
    // containing code from all our entry points, and the Webpack runtime.
    filename: 'static/js/bundle.js',
    // This is the URL that app is served from. We use ""/"" in development.
    publicPath: publicPath,
  },
  externals: {
    gsap: 'TweenMax',
  },
  resolve: {
    // This allows you to set a fallback for where Webpack should look for modules.
    // We read `NODE_PATH` environment variable in `paths.js` and pass paths here.
    // We placed these paths second because we want `node_modules` to ""win""
    // if there are any conflicts. This matches Node resolution mechanism.
    // https://github.com/facebookincubator/create-react-app/issues/253
    modules: ['node_modules'].concat(paths.nodePaths),
    // These are the reasonable defaults supported by the Node ecosystem.
    // We also include JSX as a common component filename extension to support
    // some tools, although we do not recommend using it, see:
    // https://github.com/facebookincubator/create-react-app/issues/290
    extensions: ['.js', '.json', '.jsx'],
    alias: {
      react: path.resolve('./node_modules/react'),
      // Support React Native Web
      // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/
      'react-native': 'react-native-web',
    },
  },
  // @remove-on-eject-begin
  // Resolve loaders (webpack plugins for CSS, images, transpilation) from the
  // directory of `react-scripts` itself rather than the project directory.
  resolveLoader: {
    modules: [
      // Lerna hoists everything, so we need to look in our app directory
      paths.appNodeModules,
    ],
  },
  module: {
    rules: [
      // Disable require.ensure as it's not a standard language feature.
      { parser: { requireEnsure: false } },
      {
        test: /\.(js|jsx)$/,
        enforce: 'pre',
        use: [
          {
            // @remove-on-eject-end
            loader: 'eslint-loader',
          },
        ],
        include: paths.appSrc,
      },
      // ** ADDING/UPDATING LOADERS **
      // The ""url"" loader handles all assets unless explicitly excluded.
      // The `exclude` list *must* be updated with every change to loader extensions.
      // When adding a new loader, you must add its `test`
      // as a new entry in the `exclude` list for ""url"" loader.

      // ""file"" loader makes sure those assets get served by WebpackDevServer.
      // When you `import` an asset, you get its (virtual) filename.
      // In production, they would get copied to the `build` folder.
      {
        test: /\.(ico|jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)(\?.*)?$/,
        loader: 'file-loader',
        options: {
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // ""url"" loader works like ""file"" loader except that it embeds assets
      // smaller than specified limit in bytes as data URLs to avoid requests.
      // A missing `test` is equivalent to a match.
      {
        test: /\.(mp4|webm|wav|mp3|m4a|aac|oga)(\?.*)?$/,
        loader: 'url-loader',
        options: {
          limit: 10000,
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // Process JS with Babel.
      {
        test: /\.(js|jsx)$/,
        include: paths.appSrc,
        loader: 'babel-loader',
        options: {
          // @remove-on-eject-end
          // This is a feature of `babel-loader` for webpack (not Babel itself).
          // It enables caching results in ./node_modules/.cache/babel-loader/
          // directory for faster rebuilds.
          cacheDirectory: true,
        },
      },
      {
        test: /\.less$/,
        use: [
          {
            loader: 'style-loader',
          },
          {
            loader: 'css-loader',
            options: {
              sourceMap: true,
            }
          },
          {
            loader: 'postcss-loader',
            options: {
              sourceMap: true,
              ident: 'postcss', // https://webpack.js.org/guides/migrating/#complex-options
              plugins: () =&gt; [
                autoprefixer({
                  browsers: [
                    '&gt;2%',
                    'last 2 versions',
                    'not ie &lt; 11',
                  ],
                  cascade: false,
                }),
                cssnano({
                  discardUnused: false,
                  zindex: false,
                  reduceIdents: false,
                  mergeIdents: false,
                }),
                flexbugs(),
                svgFragments(),
              ],
            },
          },
          {
            loader: 'less-loader',
            options: {
              sourceMap: true,
            }
          },
        ],
      },
    ],
  },
  plugins: [
    // Makes some environment variables available in index.html.
    // The public URL is available as %PUBLIC_URL% in index.html, e.g.:
    // &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
    // In development, this will be an empty string.
    new InterpolateHtmlPlugin(envObject),
    // Generates an `index.html` file with the &lt;script&gt; injected.
    new HtmlWebpackPlugin({
      inject: true,
      template: paths.appHtml,
      minify: {
        minifyCSS: true,
      },
    }),
    // Makes some environment variables available to the JS code, for example:
    // if (process.env.NODE_ENV === 'development') { ... }. See `./env.js`.
    new webpack.DefinePlugin(env.stringified),
    // This is necessary to emit hot updates (currently CSS only):
    new webpack.HotModuleReplacementPlugin(),
    // Watcher doesn't work well if you mistype casing in a path so we use
    // a plugin that prints an error when you attempt to do this.
    // See https://github.com/facebookincubator/create-react-app/issues/240
    new CaseSensitivePathsPlugin(),
    // If you require a missing module and then `npm install` it, you still have
    // to restart the development server for Webpack to discover it. This plugin
    // makes the discovery automatic so you don't have to restart.
    // See https://github.com/facebookincubator/create-react-app/issues/186
    new WatchMissingNodeModulesPlugin(paths.appNodeModules),
  ],
  // Some libraries import Node modules but don't use them in the browser.
  // Tell Webpack to provide empty mocks for them so importing them works.
  node: {
    fs: 'empty',
    net: 'empty',
    tls: 'empty',
  },
  // Turn off performance hints during development because we don't do any
  // splitting or minification in interest of speed. These warnings become
  // cumbersome.
  performance: {
    hints: false,
  },
};
</code></pre>

<p>Here's the HTML of <code>public/index.html</code></p>

<pre><code>&lt;!doctype html&gt;
&lt;html lang=""en""&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" /&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt;
    &lt;meta name=""theme-color"" content=""#ffffff""&gt;
    &lt;meta name=""apple-mobile-web-app-capable"" content=""yes""&gt;
    &lt;meta name=""format-detection"" content=""telephone=no""&gt;
    &lt;link id=""js-favicon"" rel=""icon"" type=""image/png"" href=""%PUBLIC_URL%/favicon-32x32.png"" sizes=""32x32""&gt;
    &lt;link rel=""manifest"" href=""%PUBLIC_URL%/manifest.json""&gt;
    &lt;link rel=""apple-touch-icon"" sizes=""180x180"" href=""%PUBLIC_URL%/apple-touch-icon.png""&gt;
    &lt;link rel=""mask-icon"" href=""%PUBLIC_URL%/safari-pinned-tab.svg"" color=""#0081c6""&gt;

    &lt;script src=""%PUBLIC_URL%/scripts/modernizr.custom.js""&gt;&lt;/script&gt;
    &lt;title&gt;&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;!-- SVG sprite --&gt;
    &lt;div style=""border: 0px; clip: rect(0px 0px 0px 0px); height: 0px; overflow: hidden; padding: 0px; position: absolute; width: 0px;""&gt;%SVG_SPRITE%&lt;/div&gt;
    &lt;div id=""app"" style=""overflow: hidden;""&gt;&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>I've also tried just duplicating this over to <code>public/maintenance.html</code> with no luck.</p>
","Hi - Just added the `public/index.html` to the original question. Thanks!"
"43690916","Additional HtmlWebpackPlugin() pages with create-react-app","8","<p>I've ejected from the default <a href=""https://github.com/facebookincubator/create-react-app"" rel=""nofollow noreferrer"">create-react-app</a> project and am attempting to create a second, <code>maintenance.html</code> page that Webpack can inject into as it does by default with <code>public/index.html</code>. I've read through a number of issues; and the docs for HtmlWebpackPlugin, which states it should be as easy as:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>to this:</p>

<pre><code>// Makes some environment variables available in index.html.
// The public URL is available as %PUBLIC_URL% in index.html, e.g.:
// &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
// In development, this will be an empty string.
new InterpolateHtmlPlugin(envObject),
// Generates an `index.html` file with the &lt;script&gt; injected.
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  minify: {
    minifyCSS: true,
  },
}),
new HtmlWebpackPlugin({
  inject: true,
  template: paths.appHtml,
  filename: '/public/maintenance.html',
  minify: {
    minifyCSS: true,
  },
}),
</code></pre>

<p>I keep getting the following error when I want to convert vars like <code>%PUBLIC_URL%</code> to their actual value:</p>

<p><code>URIError: Failed to decode param '/%PUBLIC_URL%/scripts/modernizr.custom.js'</code></p>

<ul>
<li>even though they work fine in <code>public/index.html</code>. Any ideas what I'm doing wrong? I've made sure I don't have any rules setup to do anything else with <code>.html</code> files; as I've seen a few people get mixed up there. Have been messing around with the settings and combing through GitHub issues, but feel like I'm running in circles. Thanks!</li>
</ul>

<p>Here's the current <code>webpack.config.dev.js</code> file:</p>

<pre><code>/* THIS FILE HAS BEEN EDITED A BIT FROM https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/config/webpack.config.dev.js */

const autoprefixer = require('autoprefixer');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');
const InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');
const WatchMissingNodeModulesPlugin = require('react-dev-utils/WatchMissingNodeModulesPlugin');
const getClientEnvironment = require('./env');
const paths = require('./paths');

// Custom
const cssnano = require('cssnano');
const flexbugs = require('postcss-flexbugs-fixes');
const svgFragments = require('postcss-svg-fragments');

const fs = require('fs');

// Don't show deprecations
process.noDeprecation = true;

// @remove-on-eject-begin
// `path` is not used after eject - see https://github.com/facebookincubator/create-react-app/issues/1174
const path = require('path');
// @remove-on-eject-end

// Webpack uses `publicPath` to determine where the app is being served from.
// In development, we always serve from the root. This makes config easier.
const publicPath = '/';
// `publicUrl` is just like `publicPath`, but we will provide it to our app
// as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.
// Omit trailing slash as %PUBLIC_PATH%/xyz looks better than %PUBLIC_PATH%xyz.
const publicUrl = '';
// Get environment variables to inject into our app.
const env = getClientEnvironment(publicUrl);
// Get environment object passed down to HTML template
const envObject = env.raw;
// Read SVG sprite
const svgSprite = fs.readFileSync(`${paths.appPublic}/images/sprite.svg`, 'utf8');
// Add SVG output to variable object passed to HTML template
envObject.SVG_SPRITE = svgSprite;

// This is the development configuration.
// It is focused on developer experience and fast rebuilds.
// The production configuration is different and lives in a separate file.
module.exports = {
  /// You may want 'eval' instead if you prefer to see the compiled output in DevTools.
  // See the discussion in https://github.com/facebookincubator/create-react-app/issues/343.
  devtool: 'eval',
  // These are the ""entry points"" to our application.
  // This means they will be the ""root"" imports that are included in JS bundle.
  // The first two entry points enable ""hot"" CSS and auto-refreshes for JS.
  entry: [
    // Include an alternative client for WebpackDevServer. A client's job is to
    // connect to WebpackDevServer by a socket and get notified about changes.
    // When you save a file, the client will either apply hot updates (in case
    // of CSS changes), or refresh the page (in case of JS changes). When you
    // make a syntax error, this client will display a syntax error overlay.
    // Note: instead of the default WebpackDevServer client, we use a custom one
    // to bring better experience for Create React App users. You can replace
    // the line below with these two lines if you prefer the stock client:
    // require.resolve('webpack-dev-server/client') + '?/',
    // require.resolve('webpack/hot/dev-server'),
    require.resolve('react-dev-utils/webpackHotDevClient'),
    // Polyfills
    require.resolve('./polyfills'),
    // Finally, this is your app's code:
    paths.appIndexJs,
    // We include the app code last so that if there is a runtime error during
    // initialization, it doesn't blow up the WebpackDevServer client, and
    // changing JS code would still trigger a refresh.
  ],
  output: {
    // Next line is not used in dev but WebpackDevServer crashes without it:
    path: paths.appBuild,
    // Add /* filename */ comments to generated require()s in the output.
    pathinfo: true,
    // This does not produce a real file. It's just the virtual path that is
    // served by WebpackDevServer in development. This is the JS bundle
    // containing code from all our entry points, and the Webpack runtime.
    filename: 'static/js/bundle.js',
    // This is the URL that app is served from. We use ""/"" in development.
    publicPath: publicPath,
  },
  externals: {
    gsap: 'TweenMax',
  },
  resolve: {
    // This allows you to set a fallback for where Webpack should look for modules.
    // We read `NODE_PATH` environment variable in `paths.js` and pass paths here.
    // We placed these paths second because we want `node_modules` to ""win""
    // if there are any conflicts. This matches Node resolution mechanism.
    // https://github.com/facebookincubator/create-react-app/issues/253
    modules: ['node_modules'].concat(paths.nodePaths),
    // These are the reasonable defaults supported by the Node ecosystem.
    // We also include JSX as a common component filename extension to support
    // some tools, although we do not recommend using it, see:
    // https://github.com/facebookincubator/create-react-app/issues/290
    extensions: ['.js', '.json', '.jsx'],
    alias: {
      react: path.resolve('./node_modules/react'),
      // Support React Native Web
      // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/
      'react-native': 'react-native-web',
    },
  },
  // @remove-on-eject-begin
  // Resolve loaders (webpack plugins for CSS, images, transpilation) from the
  // directory of `react-scripts` itself rather than the project directory.
  resolveLoader: {
    modules: [
      // Lerna hoists everything, so we need to look in our app directory
      paths.appNodeModules,
    ],
  },
  module: {
    rules: [
      // Disable require.ensure as it's not a standard language feature.
      { parser: { requireEnsure: false } },
      {
        test: /\.(js|jsx)$/,
        enforce: 'pre',
        use: [
          {
            // @remove-on-eject-end
            loader: 'eslint-loader',
          },
        ],
        include: paths.appSrc,
      },
      // ** ADDING/UPDATING LOADERS **
      // The ""url"" loader handles all assets unless explicitly excluded.
      // The `exclude` list *must* be updated with every change to loader extensions.
      // When adding a new loader, you must add its `test`
      // as a new entry in the `exclude` list for ""url"" loader.

      // ""file"" loader makes sure those assets get served by WebpackDevServer.
      // When you `import` an asset, you get its (virtual) filename.
      // In production, they would get copied to the `build` folder.
      {
        test: /\.(ico|jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)(\?.*)?$/,
        loader: 'file-loader',
        options: {
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // ""url"" loader works like ""file"" loader except that it embeds assets
      // smaller than specified limit in bytes as data URLs to avoid requests.
      // A missing `test` is equivalent to a match.
      {
        test: /\.(mp4|webm|wav|mp3|m4a|aac|oga)(\?.*)?$/,
        loader: 'url-loader',
        options: {
          limit: 10000,
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      // Process JS with Babel.
      {
        test: /\.(js|jsx)$/,
        include: paths.appSrc,
        loader: 'babel-loader',
        options: {
          // @remove-on-eject-end
          // This is a feature of `babel-loader` for webpack (not Babel itself).
          // It enables caching results in ./node_modules/.cache/babel-loader/
          // directory for faster rebuilds.
          cacheDirectory: true,
        },
      },
      {
        test: /\.less$/,
        use: [
          {
            loader: 'style-loader',
          },
          {
            loader: 'css-loader',
            options: {
              sourceMap: true,
            }
          },
          {
            loader: 'postcss-loader',
            options: {
              sourceMap: true,
              ident: 'postcss', // https://webpack.js.org/guides/migrating/#complex-options
              plugins: () =&gt; [
                autoprefixer({
                  browsers: [
                    '&gt;2%',
                    'last 2 versions',
                    'not ie &lt; 11',
                  ],
                  cascade: false,
                }),
                cssnano({
                  discardUnused: false,
                  zindex: false,
                  reduceIdents: false,
                  mergeIdents: false,
                }),
                flexbugs(),
                svgFragments(),
              ],
            },
          },
          {
            loader: 'less-loader',
            options: {
              sourceMap: true,
            }
          },
        ],
      },
    ],
  },
  plugins: [
    // Makes some environment variables available in index.html.
    // The public URL is available as %PUBLIC_URL% in index.html, e.g.:
    // &lt;link rel=""shortcut icon"" href=""%PUBLIC_URL%/favicon.ico""&gt;
    // In development, this will be an empty string.
    new InterpolateHtmlPlugin(envObject),
    // Generates an `index.html` file with the &lt;script&gt; injected.
    new HtmlWebpackPlugin({
      inject: true,
      template: paths.appHtml,
      minify: {
        minifyCSS: true,
      },
    }),
    // Makes some environment variables available to the JS code, for example:
    // if (process.env.NODE_ENV === 'development') { ... }. See `./env.js`.
    new webpack.DefinePlugin(env.stringified),
    // This is necessary to emit hot updates (currently CSS only):
    new webpack.HotModuleReplacementPlugin(),
    // Watcher doesn't work well if you mistype casing in a path so we use
    // a plugin that prints an error when you attempt to do this.
    // See https://github.com/facebookincubator/create-react-app/issues/240
    new CaseSensitivePathsPlugin(),
    // If you require a missing module and then `npm install` it, you still have
    // to restart the development server for Webpack to discover it. This plugin
    // makes the discovery automatic so you don't have to restart.
    // See https://github.com/facebookincubator/create-react-app/issues/186
    new WatchMissingNodeModulesPlugin(paths.appNodeModules),
  ],
  // Some libraries import Node modules but don't use them in the browser.
  // Tell Webpack to provide empty mocks for them so importing them works.
  node: {
    fs: 'empty',
    net: 'empty',
    tls: 'empty',
  },
  // Turn off performance hints during development because we don't do any
  // splitting or minification in interest of speed. These warnings become
  // cumbersome.
  performance: {
    hints: false,
  },
};
</code></pre>

<p>Here's the HTML of <code>public/index.html</code></p>

<pre><code>&lt;!doctype html&gt;
&lt;html lang=""en""&gt;
  &lt;head&gt;
    &lt;meta charset=""utf-8""&gt;
    &lt;meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" /&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1""&gt;
    &lt;meta name=""theme-color"" content=""#ffffff""&gt;
    &lt;meta name=""apple-mobile-web-app-capable"" content=""yes""&gt;
    &lt;meta name=""format-detection"" content=""telephone=no""&gt;
    &lt;link id=""js-favicon"" rel=""icon"" type=""image/png"" href=""%PUBLIC_URL%/favicon-32x32.png"" sizes=""32x32""&gt;
    &lt;link rel=""manifest"" href=""%PUBLIC_URL%/manifest.json""&gt;
    &lt;link rel=""apple-touch-icon"" sizes=""180x180"" href=""%PUBLIC_URL%/apple-touch-icon.png""&gt;
    &lt;link rel=""mask-icon"" href=""%PUBLIC_URL%/safari-pinned-tab.svg"" color=""#0081c6""&gt;

    &lt;script src=""%PUBLIC_URL%/scripts/modernizr.custom.js""&gt;&lt;/script&gt;
    &lt;title&gt;&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;!-- SVG sprite --&gt;
    &lt;div style=""border: 0px; clip: rect(0px 0px 0px 0px); height: 0px; overflow: hidden; padding: 0px; position: absolute; width: 0px;""&gt;%SVG_SPRITE%&lt;/div&gt;
    &lt;div id=""app"" style=""overflow: hidden;""&gt;&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>I've also tried just duplicating this over to <code>public/maintenance.html</code> with no luck.</p>
","So are you running the command `npm run build` to generate the build? It makes use of webpack.config.prod.js file, instead of webpack.config.dev.js. So your changes should be there."
"43907525","How do I debug ""Objects are not valid as a React child"" react native error","2","<p>Objects are not valid as a React child  (found: object with keys {style, title}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of <code>View</code>. </p>

<p>I don't know what to make of the trace I've pasted, because it's not in my code at all. Any ideas would be greatly appreciated! Thanks.</p>

<p><a href=""https://i.stack.imgur.com/T4pEc.png"" rel=""nofollow noreferrer"">Trace on simulator</a></p>

<p>index.ios.js</p>

<pre><code>import React, { Component } from 'react';
import {
  AppRegistry,
  StyleSheet,
  Navigator
} from 'react-native';

import Product from './product.js';
import Services from './services.js';
import ProductsList from './productslist.js';
import AddProduct from './addProduct.js';
import {StackNavigator} from 'react-navigation';

const routes = [
  {
    title : 'Services',
    renderFunc : (navigator) =&gt; &lt;Services navigator={navigator} /&gt;
  },
  {
    title : 'Marketplace',
    renderFunc : (navigator) =&gt; &lt;ProductsList navigator={navigator}/&gt;
  }
];

const stackNavigatorRoutes = {
  Services : {
    screen : Services,
  },
  ProductsList : {
    screen : ProductsList
  },
  Product : {
    screen : Product
  },
  AddProduct : {
    screen : AddProduct
  }
};

const AppNavigator = StackNavigator({
  ...stackNavigatorRoutes,
},
{
    initialRouteName : 'Services',
    navigationOptions : {
        header : {
          style : {
            height : 60,
            backgroundColor : 'cadetblue'
          },
          title : 'ResiShare'
        }
    }
});

class Rs extends Component {
  render() {
    return (
        &lt;AppNavigator /&gt;
        // &lt;ProductsList /&gt;
        // &lt;AddProduct /&gt;
      );
  }
}
</code></pre>
","I think you should provide part of your code, which responsible of the error."
"43907525","How do I debug ""Objects are not valid as a React child"" react native error","2","<p>Objects are not valid as a React child  (found: object with keys {style, title}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of <code>View</code>. </p>

<p>I don't know what to make of the trace I've pasted, because it's not in my code at all. Any ideas would be greatly appreciated! Thanks.</p>

<p><a href=""https://i.stack.imgur.com/T4pEc.png"" rel=""nofollow noreferrer"">Trace on simulator</a></p>

<p>index.ios.js</p>

<pre><code>import React, { Component } from 'react';
import {
  AppRegistry,
  StyleSheet,
  Navigator
} from 'react-native';

import Product from './product.js';
import Services from './services.js';
import ProductsList from './productslist.js';
import AddProduct from './addProduct.js';
import {StackNavigator} from 'react-navigation';

const routes = [
  {
    title : 'Services',
    renderFunc : (navigator) =&gt; &lt;Services navigator={navigator} /&gt;
  },
  {
    title : 'Marketplace',
    renderFunc : (navigator) =&gt; &lt;ProductsList navigator={navigator}/&gt;
  }
];

const stackNavigatorRoutes = {
  Services : {
    screen : Services,
  },
  ProductsList : {
    screen : ProductsList
  },
  Product : {
    screen : Product
  },
  AddProduct : {
    screen : AddProduct
  }
};

const AppNavigator = StackNavigator({
  ...stackNavigatorRoutes,
},
{
    initialRouteName : 'Services',
    navigationOptions : {
        header : {
          style : {
            height : 60,
            backgroundColor : 'cadetblue'
          },
          title : 'ResiShare'
        }
    }
});

class Rs extends Component {
  render() {
    return (
        &lt;AppNavigator /&gt;
        // &lt;ProductsList /&gt;
        // &lt;AddProduct /&gt;
      );
  }
}
</code></pre>
","Added the entry point into my app, even though the trace doesn't reference it at all."
"44336300","Writing Fragments for Polymorphic Associations in RelayJS and GraphQL","0","<p>My backend schema has a model, <code>Request</code>, that uses a polymorphic association such that several different models all have-many Requests and a <code>Request</code> can belong to any one of those different models.</p>

<p>I've got a React Component, <code>RequestList</code>, that I want to be able to use in any of it's potential parent models.</p>

<p>Here's some sample code:</p>

<p>FooShowView.js</p>

<pre><code>class FooShowView extends Component {
  render() {
    return (
      &lt;RequestList router={this.props.router} /&gt;
    )
  }
}

export default Relay.createContainer(ShowView, {
  initialVariables: {
    FooId: null
  },
  fragments: {
    viewer: (variables) =&gt; {
      return Relay.QL`
        fragment on Viewer {
          Foo(id: $FooId) {
            id${ RequestList.getFragment('Foo') }
          }
        }`
      `
    }
  }
});
</code></pre>

<p>RequestList.js</p>

<pre><code>class RequestList extends Component {

  renderRows = () =&gt; {
    return this.props.requests.edges.map(edge =&gt; edge.node).map((intReq, i) =&gt; {
      return (
        &lt;RequestRow
          request={ intReq }
          key={ i }
        /&gt;
      );
    });
  }

  render() {
    return (
      &lt;Table&gt;
        { this.renderRows() }
      &lt;/Table&gt;
    );
  }
};

export default Relay.createContainer(RequestList, {
  fragments: {
    foo: () =&gt; Relay.QL`
      fragment on Foo {
        requests(first: 10) {
          edges {
            node {
              ${ RequestRow.getFragment('request') }
            }
          }
        }
      }
    `,
  }
})
</code></pre>

<p>The problem is that now to render the RequestTable for another one of <code>Request</code>'s parents, say in the <code>BarShowView</code>, I'd need to add a new fragment to <code>RequestList</code>:</p>

<pre><code>bar: () =&gt; Relay.QL`
  fragment on Bar {
    requests(first: 10) {
      edges {
        node {
          ${ RequestRow.getFragment('request') }
        }
      }
    }
  }
`,
</code></pre>

<p>And then Relay will spit out warnings that I need to provide both bar and foo as props to my List, even if it's not relevant to the current view.</p>

<p>Since <code>Request</code> is associated with roughly 8 different models in my schema, this will quickly become unreasonable.</p>

<p>What is the correct way to create a reusable react component that will render the polymorphic children of whatever record I'm looking at?</p>
",""
"44568756","NoClassDefFoundError com.facebook.react.bridge.WritableNativeMap","1","<p>I am randomly getting a crash when trying to load a jsbundle (offline react app)</p>

<pre><code>mReactInstanceManager = ReactInstanceManager.builder().setApplication(mActivity.getApplication())
.setJSBundleFile(appPath)
.addPackage(mReactPackage).addPackage(new MyCustomReactPackage())
.setUseDeveloperSupport(false)//For performance use false
.setInitialLifecycleState(LifecycleState.RESUMED)
.setNativeModuleCallExceptionHandler(new NativeModuleCallExceptionHandler() {
       @Override
       public void handleException(Exception e) {
            e.printStackTrace();
            Logger.e(TAG,""Exception while opening app ""+ Log.getStackTraceString(e));
       }
       })
.build();
reactRootView.startReactApplication(mReactInstanceManager, launchClassName, initialProps);  
</code></pre>

<hr>

<p>Stacktrace:</p>

<pre><code>LOCATION com.facebook.react.JSCConfig$1.a()
EXCEPTION java.lang.NoClassDefFoundError
MESSAGE com.facebook.react.bridge.WritableNativeMap
at com.facebook.react.JSCConfig$1.a()(null:14)
    at com.facebook.react.ReactInstanceManager.k()(null:359)
    at com.facebook.react.ReactInstanceManager.j()(null:353)
    at com.facebook.react.ReactInstanceManager.c()(null:295)
    at com.facebook.react.ReactRootView.a()(null:221)
    at com.example.sdk.uidesign.fragments.AppFragment.b()(null:215)
    at com.example.sdk.uidesign.ActivityV2.a()(null:1265)
    at com.example.sdk.uidesign.adapter.AppsAdapter.a()(null:102)
    at com.example.sdk.uidesign.adapter.AppsAdapter.a()(null:37)
    at com.example.sdk.uidesign.a.e$a$1.onClick()(null:135)
    at android.view.View.performClick()(View.java:4790)
    at android.view.View$PerformClick.run()(View.java:19883)
    at android.os.Handler.handleCallback()(Handler.java:739)
    at android.os.Handler.dispatchMessage()(Handler.java:95)
    at android.os.Looper.loop()(Looper.java:135)
    at android.app.ActivityThread.main()(ActivityThread.java:5268)
    at java.lang.reflect.Method.invoke()(Method.java:-2)
    at java.lang.reflect.Method.invoke()(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run()(ZygoteInit.java:902)
    at com.android.internal.os.ZygoteInit.main()(ZygoteInit.java:697)
</code></pre>

<p>Any help would be appreciated.</p>
","After crash, the issue is gone on next run."
"44674711","Can not show message from the reducer in react","3","<p>I am trying to show <code>message</code> <code>'hello brozz..'</code> from the reducer to a component <code>render()</code> method.<code>ComponentDidMount()</code> get the <code>this.props.message</code> as <a href=""https://i.stack.imgur.com/qpNj6.png"" rel=""nofollow noreferrer"">please see the image</a>. And my reducer is like </p>

<pre><code> export const geod = (state ={}, action) =&gt; {
      console.log('inside reducer');
        switch(action.type){


            case 'INITIAL_MESSAGE':

              return [
                        ...state, {
                          message:'hello brozz..'
                        }
                      ]
            case 'CLICK_MESSAGE':
                  return [ 
                            ...state, { 
                                            message: ''
                                      }
                          ]
            default:
                    return state;
        }

     };
</code></pre>

<p>But I can not use <code>this.props.message</code> as <code>&lt;div&gt;&lt;div&gt;{this.props.message}&lt;/div&gt;&lt;/div&gt;</code> inside the render method. I am getting the error </p>

<pre><code>Objects are not valid as a React child (found: object with keys {}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons
</code></pre>

<p>My component is,</p>

<pre><code>import React, { Component } from 'react';
import logo from './logo.svg';
import './App.css';
import { initialMessageAction, clickButtonAction } from './redux.js';
import { connect } from 'react-redux';
import { Message } from './messageComponent';

class App extends Component {

  componentWillMount() {
    console.log('component will mount');
    let data = this.props.initialMessageAction();
  }
  componentDidUpdate() {
    console.log('comp Did Update')
    console.log(this.props.message)
  }
  render() {

    return (
      &lt;div className=""App""&gt;
        &lt;div className=""App-header""&gt;        
        &lt;/div&gt;
        &lt;p className=""App-intro""&gt;
        react-redux-data-flow
        &lt;/p&gt; 
              &lt;div&gt;{this.props.message}&lt;/div&gt;
             &lt;div&gt;{this.props? &lt;div&gt;hi ..&lt;button onClick={ () =&gt; this.props.clickButtonAction() }&gt;hide message&lt;/button&gt;&lt;/div&gt;: ''}&lt;/div&gt;
      &lt;/div&gt;
    );
  }
}


    const mapStateToProps = (state, ownProperty) =&gt; ({ 

    message:state.geod,   


  });   

   const mapDispatchToProps =  { 

     initialMessageAction,
    clickButtonAction

  } 

  export default connect(
                             mapStateToProps,
                             mapDispatchToProps

                    )(App);
</code></pre>
","Why `geod` in `prevState` is object and in `nextState` is array?
Show your component."
"44674711","Can not show message from the reducer in react","3","<p>I am trying to show <code>message</code> <code>'hello brozz..'</code> from the reducer to a component <code>render()</code> method.<code>ComponentDidMount()</code> get the <code>this.props.message</code> as <a href=""https://i.stack.imgur.com/qpNj6.png"" rel=""nofollow noreferrer"">please see the image</a>. And my reducer is like </p>

<pre><code> export const geod = (state ={}, action) =&gt; {
      console.log('inside reducer');
        switch(action.type){


            case 'INITIAL_MESSAGE':

              return [
                        ...state, {
                          message:'hello brozz..'
                        }
                      ]
            case 'CLICK_MESSAGE':
                  return [ 
                            ...state, { 
                                            message: ''
                                      }
                          ]
            default:
                    return state;
        }

     };
</code></pre>

<p>But I can not use <code>this.props.message</code> as <code>&lt;div&gt;&lt;div&gt;{this.props.message}&lt;/div&gt;&lt;/div&gt;</code> inside the render method. I am getting the error </p>

<pre><code>Objects are not valid as a React child (found: object with keys {}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons
</code></pre>

<p>My component is,</p>

<pre><code>import React, { Component } from 'react';
import logo from './logo.svg';
import './App.css';
import { initialMessageAction, clickButtonAction } from './redux.js';
import { connect } from 'react-redux';
import { Message } from './messageComponent';

class App extends Component {

  componentWillMount() {
    console.log('component will mount');
    let data = this.props.initialMessageAction();
  }
  componentDidUpdate() {
    console.log('comp Did Update')
    console.log(this.props.message)
  }
  render() {

    return (
      &lt;div className=""App""&gt;
        &lt;div className=""App-header""&gt;        
        &lt;/div&gt;
        &lt;p className=""App-intro""&gt;
        react-redux-data-flow
        &lt;/p&gt; 
              &lt;div&gt;{this.props.message}&lt;/div&gt;
             &lt;div&gt;{this.props? &lt;div&gt;hi ..&lt;button onClick={ () =&gt; this.props.clickButtonAction() }&gt;hide message&lt;/button&gt;&lt;/div&gt;: ''}&lt;/div&gt;
      &lt;/div&gt;
    );
  }
}


    const mapStateToProps = (state, ownProperty) =&gt; ({ 

    message:state.geod,   


  });   

   const mapDispatchToProps =  { 

     initialMessageAction,
    clickButtonAction

  } 

  export default connect(
                             mapStateToProps,
                             mapDispatchToProps

                    )(App);
</code></pre>
","Do you have mapStateToProps inside your component? Please show me your component code?"
"44674711","Can not show message from the reducer in react","3","<p>I am trying to show <code>message</code> <code>'hello brozz..'</code> from the reducer to a component <code>render()</code> method.<code>ComponentDidMount()</code> get the <code>this.props.message</code> as <a href=""https://i.stack.imgur.com/qpNj6.png"" rel=""nofollow noreferrer"">please see the image</a>. And my reducer is like </p>

<pre><code> export const geod = (state ={}, action) =&gt; {
      console.log('inside reducer');
        switch(action.type){


            case 'INITIAL_MESSAGE':

              return [
                        ...state, {
                          message:'hello brozz..'
                        }
                      ]
            case 'CLICK_MESSAGE':
                  return [ 
                            ...state, { 
                                            message: ''
                                      }
                          ]
            default:
                    return state;
        }

     };
</code></pre>

<p>But I can not use <code>this.props.message</code> as <code>&lt;div&gt;&lt;div&gt;{this.props.message}&lt;/div&gt;&lt;/div&gt;</code> inside the render method. I am getting the error </p>

<pre><code>Objects are not valid as a React child (found: object with keys {}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons
</code></pre>

<p>My component is,</p>

<pre><code>import React, { Component } from 'react';
import logo from './logo.svg';
import './App.css';
import { initialMessageAction, clickButtonAction } from './redux.js';
import { connect } from 'react-redux';
import { Message } from './messageComponent';

class App extends Component {

  componentWillMount() {
    console.log('component will mount');
    let data = this.props.initialMessageAction();
  }
  componentDidUpdate() {
    console.log('comp Did Update')
    console.log(this.props.message)
  }
  render() {

    return (
      &lt;div className=""App""&gt;
        &lt;div className=""App-header""&gt;        
        &lt;/div&gt;
        &lt;p className=""App-intro""&gt;
        react-redux-data-flow
        &lt;/p&gt; 
              &lt;div&gt;{this.props.message}&lt;/div&gt;
             &lt;div&gt;{this.props? &lt;div&gt;hi ..&lt;button onClick={ () =&gt; this.props.clickButtonAction() }&gt;hide message&lt;/button&gt;&lt;/div&gt;: ''}&lt;/div&gt;
      &lt;/div&gt;
    );
  }
}


    const mapStateToProps = (state, ownProperty) =&gt; ({ 

    message:state.geod,   


  });   

   const mapDispatchToProps =  { 

     initialMessageAction,
    clickButtonAction

  } 

  export default connect(
                             mapStateToProps,
                             mapDispatchToProps

                    )(App);
</code></pre>
","@Andrew I included my component above."
"45464756","AJAX JSON result to react state property","4","<p>I'm having this component. I want to load the freight values via ajax into a state property of this class.</p>

<pre><code>import React, { Component } from 'react';
import Freight from './Freight';
import CreateFreightEntryModal from './CreateFreightEntryModal';
import createFragment from 'react-addons-create-fragment'; // ES6

class FreightList extends Component {

    constructor(props) {
        super(props);
        this.state = {
            search: """",
            freights: [],
            parent: props.parent,
            updateZonesTable: props.updateZonesTable
        };
        this.loadFreights();
    }

    componentWillReceiveProps(nextProps) {
        this.setState({
          freights: nextProps.freights
        });
    }


    loadFreights() {
        $.ajax({
          type: ""POST"",
          context:this,
          dataType: ""json"",
          async: true,
          url: ""../data/get/json/freight"",
          data: ({ 
              _token : window.Laravel.csrfToken,
          }),
          success: function (data) {

              var arr = $.map(data, function(el) { 
                  return el; 
                }
                return returnArray;
              });

              this.setState({
                freights: arr
              });

          }
      });
    }
...
render() {
        let filteredList = this.state.freights.filter((freight) =&gt; {
            let search = this.state.search.toLowerCase();
            //var values = Object.values(freight);
            var values = Object.keys(freight).map(function(itm) { return freight[itm]; });
            var flag = false
            values.forEach((val) =&gt; {
                if(val != undefined &amp;&amp; val.toString().toLowerCase().indexOf(search) &gt; -1) {
                    flag = true;
                    return;
                }   
            });
            if(flag) 
                return freight;
        });
        return (
            &lt;div className=""panel-group""&gt;
                &lt;div className=""panel panel-default""&gt;
                    &lt;div className=""panel-heading""&gt;
                        &lt;a className=""accordion-toggle"" data-toggle=""collapse"" href=""#freightListPanelBody""&gt;&lt;i className=""glyphicon glyphicon-menu-down"" aria-hidden=""true""&gt;&lt;/i&gt; Freights&lt;/a&gt;
                    &lt;/div&gt;
                    &lt;div className=""panel-body"" id=""freightListPanelBody"" className=""collapse in""&gt;
                        &lt;div className=""row padding10px""&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-9 col-lg-9""&gt;
                                &lt;div className=""form-group""&gt;
                                    &lt;button className=""btn btn-default"" onClick={this.openCreateModal.bind(this)}&gt;Create new entry&lt;/button&gt;
                                    &lt;CreateFreightEntryModal onClose={this.onClose.bind(this)} onClick={this.onClick.bind(this)} /&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;

                        &lt;div className=""row padding10px""&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-12 col-lg-12""&gt;
                                Search
                            &lt;/div&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-9 col-lg-9""&gt;
                                &lt;div className=""form-group""&gt;
                                    &lt;input className=""form-control"" type=""text"" value={this.state.search} placeholder=""Search"" onChange={this.updateSearch.bind(this)} /&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div className=""row padding10px""&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-12 col-lg-12""&gt;
                                &lt;div className=""table-responsive list""&gt;
                                    &lt;table className=""table table-hover table-striped"" id=""freightListTable""&gt;
                                        &lt;thead&gt;
                                            &lt;tr&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;ID&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Company&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Zone Logic&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Freight Type&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Transport Mode&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Haulier&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Haulier 2&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Warehouse&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;by quantity&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Quantity type&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;&amp;#8960;-Freight&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone"" colSpan=""2""&gt;Price break&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Place of departure&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Customer&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Product&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Product group&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone"" colSpan=""2""&gt;Valid&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Min. quantity&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Supplier&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Currency&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;No. zip code places&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Haulier is supplier&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;from country&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Anzahl_pauschalstaffeln&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Palgewlogik&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Volumengewichtfracht&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Volgewfaktor&lt;/th&gt;
                                            &lt;/tr&gt;
                                            &lt;tr&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;from&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;until&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;from&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;until&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                            &lt;/tr&gt;
                                        &lt;/thead&gt;
                                        &lt;tbody&gt;
                                        {
                                            filteredList.map((freight)=&gt; {
                                              return (
                                                &lt;Freight freight={freight} onClick={this.handleFreightClick.bind(this)} key={freight.id} /&gt;
                                              );
                                            })
                                        }
                                        &lt;/tbody&gt;
                                    &lt;/table&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        );
    }
}

export default FreightList
</code></pre>

<p>My ajax result looks like this:</p>

<p><a href=""https://i.stack.imgur.com/TpN95.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TpN95.png"" alt=""enter image description here""></a></p>

<p>React throws this error:</p>

<blockquote>
  <p>Error: Objects are not valid as a React child (found: object with keys
  {Nummer, Bezeichnung, id}). If you meant to render a collection of
  children, use an array instead or wrap the object using
  createFragment(object) from the React add-ons. Check the render method
  of <code>Freight</code>.</p>
</blockquote>

<p>How can I convert the AJAX JSON result in an acceptable format for react?</p>

<p><strong>UPDATE</strong></p>

<p>Freight component:</p>

<pre><code>import React, { Component } from 'react';

class Freight extends Component {

    constructor(props) {
        super(props);
        this.state = {
            freight: props.freight,
            onClick: props.onClick,
            isChecked: false
        };
    }

    onClick(event) {
        $('#freightListTable').find(""input"").removeAttr(""checked"");
        this.setState({isChecked: !this.state.isChecked})
        this.props.onClick(this.state.freight, !this.state.isChecked);
    }

    render() {
        return (

                &lt;tr className=""cursorPointer"" onClick={this.onClick.bind(this)}&gt;
                    &lt;td&gt;
                        &lt;div className=""checkbox""&gt;
                          &lt;label&gt;
                            &lt;input type=""checkbox"" value="""" checked={this.state.isChecked} /&gt;
                          &lt;/label&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.ID }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.firma }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap verticalAlignBottom""&gt;
                        { (this.state.freight.Zonenlogik == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.frachtart }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.transportart }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{this.state.freight.spedit_nr}&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.spediteur }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.spedit2_nr }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{this.state.freight.lager_nr}&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.lager }&lt;br /&gt;
                         &lt;span className=""label label-danger ""&gt;{ this.state.freight.lagerSperr }&lt;/span&gt;
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.per_menge }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.mengeneinheit }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.durchschnittsfracht == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.ab_staffelmenge == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.bis_staffelmenge == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.art_zuordnungs_nr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.abgangsort }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.kdnr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.kunde }&lt;br /&gt;
                        &lt;span className=""label label-danger""&gt;{ this.state.freight.kundeSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.artikel_nr } &lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.artikel }&lt;br /&gt;
                         &lt;span className=""label label-danger""&gt;{ this.state.freight.artikelSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.wog_nr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.wog }&lt;br /&gt;
                         &lt;span className=""label label-danger""&gt;{ this.state.freight.wogSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.gueltig_von }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.gueltig_bis }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.mindestmenge }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.lieferanten_nr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.lieferant }&lt;br /&gt;
                         &lt;span className=""label label-danger""&gt;{ this.state.freight.lieferantSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.waehrungName }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.suchart_nr }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.spedit_ist_lieferant == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.land }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.anzahl_pauschalstaffeln }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.palgewlogik }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.volumengewichtfracht }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.volgewfaktor }
                    &lt;/td&gt;
                &lt;/tr&gt;

        );
    }
}

export default Freight
</code></pre>
","Yes of course. Please review my updated post."
"45464756","AJAX JSON result to react state property","4","<p>I'm having this component. I want to load the freight values via ajax into a state property of this class.</p>

<pre><code>import React, { Component } from 'react';
import Freight from './Freight';
import CreateFreightEntryModal from './CreateFreightEntryModal';
import createFragment from 'react-addons-create-fragment'; // ES6

class FreightList extends Component {

    constructor(props) {
        super(props);
        this.state = {
            search: """",
            freights: [],
            parent: props.parent,
            updateZonesTable: props.updateZonesTable
        };
        this.loadFreights();
    }

    componentWillReceiveProps(nextProps) {
        this.setState({
          freights: nextProps.freights
        });
    }


    loadFreights() {
        $.ajax({
          type: ""POST"",
          context:this,
          dataType: ""json"",
          async: true,
          url: ""../data/get/json/freight"",
          data: ({ 
              _token : window.Laravel.csrfToken,
          }),
          success: function (data) {

              var arr = $.map(data, function(el) { 
                  return el; 
                }
                return returnArray;
              });

              this.setState({
                freights: arr
              });

          }
      });
    }
...
render() {
        let filteredList = this.state.freights.filter((freight) =&gt; {
            let search = this.state.search.toLowerCase();
            //var values = Object.values(freight);
            var values = Object.keys(freight).map(function(itm) { return freight[itm]; });
            var flag = false
            values.forEach((val) =&gt; {
                if(val != undefined &amp;&amp; val.toString().toLowerCase().indexOf(search) &gt; -1) {
                    flag = true;
                    return;
                }   
            });
            if(flag) 
                return freight;
        });
        return (
            &lt;div className=""panel-group""&gt;
                &lt;div className=""panel panel-default""&gt;
                    &lt;div className=""panel-heading""&gt;
                        &lt;a className=""accordion-toggle"" data-toggle=""collapse"" href=""#freightListPanelBody""&gt;&lt;i className=""glyphicon glyphicon-menu-down"" aria-hidden=""true""&gt;&lt;/i&gt; Freights&lt;/a&gt;
                    &lt;/div&gt;
                    &lt;div className=""panel-body"" id=""freightListPanelBody"" className=""collapse in""&gt;
                        &lt;div className=""row padding10px""&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-9 col-lg-9""&gt;
                                &lt;div className=""form-group""&gt;
                                    &lt;button className=""btn btn-default"" onClick={this.openCreateModal.bind(this)}&gt;Create new entry&lt;/button&gt;
                                    &lt;CreateFreightEntryModal onClose={this.onClose.bind(this)} onClick={this.onClick.bind(this)} /&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;

                        &lt;div className=""row padding10px""&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-12 col-lg-12""&gt;
                                Search
                            &lt;/div&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-9 col-lg-9""&gt;
                                &lt;div className=""form-group""&gt;
                                    &lt;input className=""form-control"" type=""text"" value={this.state.search} placeholder=""Search"" onChange={this.updateSearch.bind(this)} /&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div className=""row padding10px""&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-12 col-lg-12""&gt;
                                &lt;div className=""table-responsive list""&gt;
                                    &lt;table className=""table table-hover table-striped"" id=""freightListTable""&gt;
                                        &lt;thead&gt;
                                            &lt;tr&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;ID&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Company&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Zone Logic&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Freight Type&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Transport Mode&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Haulier&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Haulier 2&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Warehouse&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;by quantity&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Quantity type&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;&amp;#8960;-Freight&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone"" colSpan=""2""&gt;Price break&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Place of departure&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Customer&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Product&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Product group&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone"" colSpan=""2""&gt;Valid&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Min. quantity&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Supplier&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Currency&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;No. zip code places&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Haulier is supplier&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;from country&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Anzahl_pauschalstaffeln&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Palgewlogik&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Volumengewichtfracht&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Volgewfaktor&lt;/th&gt;
                                            &lt;/tr&gt;
                                            &lt;tr&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;from&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;until&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;from&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;until&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                            &lt;/tr&gt;
                                        &lt;/thead&gt;
                                        &lt;tbody&gt;
                                        {
                                            filteredList.map((freight)=&gt; {
                                              return (
                                                &lt;Freight freight={freight} onClick={this.handleFreightClick.bind(this)} key={freight.id} /&gt;
                                              );
                                            })
                                        }
                                        &lt;/tbody&gt;
                                    &lt;/table&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        );
    }
}

export default FreightList
</code></pre>

<p>My ajax result looks like this:</p>

<p><a href=""https://i.stack.imgur.com/TpN95.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TpN95.png"" alt=""enter image description here""></a></p>

<p>React throws this error:</p>

<blockquote>
  <p>Error: Objects are not valid as a React child (found: object with keys
  {Nummer, Bezeichnung, id}). If you meant to render a collection of
  children, use an array instead or wrap the object using
  createFragment(object) from the React add-ons. Check the render method
  of <code>Freight</code>.</p>
</blockquote>

<p>How can I convert the AJAX JSON result in an acceptable format for react?</p>

<p><strong>UPDATE</strong></p>

<p>Freight component:</p>

<pre><code>import React, { Component } from 'react';

class Freight extends Component {

    constructor(props) {
        super(props);
        this.state = {
            freight: props.freight,
            onClick: props.onClick,
            isChecked: false
        };
    }

    onClick(event) {
        $('#freightListTable').find(""input"").removeAttr(""checked"");
        this.setState({isChecked: !this.state.isChecked})
        this.props.onClick(this.state.freight, !this.state.isChecked);
    }

    render() {
        return (

                &lt;tr className=""cursorPointer"" onClick={this.onClick.bind(this)}&gt;
                    &lt;td&gt;
                        &lt;div className=""checkbox""&gt;
                          &lt;label&gt;
                            &lt;input type=""checkbox"" value="""" checked={this.state.isChecked} /&gt;
                          &lt;/label&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.ID }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.firma }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap verticalAlignBottom""&gt;
                        { (this.state.freight.Zonenlogik == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.frachtart }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.transportart }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{this.state.freight.spedit_nr}&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.spediteur }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.spedit2_nr }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{this.state.freight.lager_nr}&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.lager }&lt;br /&gt;
                         &lt;span className=""label label-danger ""&gt;{ this.state.freight.lagerSperr }&lt;/span&gt;
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.per_menge }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.mengeneinheit }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.durchschnittsfracht == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.ab_staffelmenge == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.bis_staffelmenge == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.art_zuordnungs_nr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.abgangsort }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.kdnr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.kunde }&lt;br /&gt;
                        &lt;span className=""label label-danger""&gt;{ this.state.freight.kundeSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.artikel_nr } &lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.artikel }&lt;br /&gt;
                         &lt;span className=""label label-danger""&gt;{ this.state.freight.artikelSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.wog_nr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.wog }&lt;br /&gt;
                         &lt;span className=""label label-danger""&gt;{ this.state.freight.wogSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.gueltig_von }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.gueltig_bis }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.mindestmenge }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.lieferanten_nr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.lieferant }&lt;br /&gt;
                         &lt;span className=""label label-danger""&gt;{ this.state.freight.lieferantSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.waehrungName }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.suchart_nr }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.spedit_ist_lieferant == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.land }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.anzahl_pauschalstaffeln }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.palgewlogik }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.volumengewichtfracht }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.volgewfaktor }
                    &lt;/td&gt;
                &lt;/tr&gt;

        );
    }
}

export default Freight
</code></pre>
","This error happened to me when trying to render an object inside a component by mistake."
"45464756","AJAX JSON result to react state property","4","<p>I'm having this component. I want to load the freight values via ajax into a state property of this class.</p>

<pre><code>import React, { Component } from 'react';
import Freight from './Freight';
import CreateFreightEntryModal from './CreateFreightEntryModal';
import createFragment from 'react-addons-create-fragment'; // ES6

class FreightList extends Component {

    constructor(props) {
        super(props);
        this.state = {
            search: """",
            freights: [],
            parent: props.parent,
            updateZonesTable: props.updateZonesTable
        };
        this.loadFreights();
    }

    componentWillReceiveProps(nextProps) {
        this.setState({
          freights: nextProps.freights
        });
    }


    loadFreights() {
        $.ajax({
          type: ""POST"",
          context:this,
          dataType: ""json"",
          async: true,
          url: ""../data/get/json/freight"",
          data: ({ 
              _token : window.Laravel.csrfToken,
          }),
          success: function (data) {

              var arr = $.map(data, function(el) { 
                  return el; 
                }
                return returnArray;
              });

              this.setState({
                freights: arr
              });

          }
      });
    }
...
render() {
        let filteredList = this.state.freights.filter((freight) =&gt; {
            let search = this.state.search.toLowerCase();
            //var values = Object.values(freight);
            var values = Object.keys(freight).map(function(itm) { return freight[itm]; });
            var flag = false
            values.forEach((val) =&gt; {
                if(val != undefined &amp;&amp; val.toString().toLowerCase().indexOf(search) &gt; -1) {
                    flag = true;
                    return;
                }   
            });
            if(flag) 
                return freight;
        });
        return (
            &lt;div className=""panel-group""&gt;
                &lt;div className=""panel panel-default""&gt;
                    &lt;div className=""panel-heading""&gt;
                        &lt;a className=""accordion-toggle"" data-toggle=""collapse"" href=""#freightListPanelBody""&gt;&lt;i className=""glyphicon glyphicon-menu-down"" aria-hidden=""true""&gt;&lt;/i&gt; Freights&lt;/a&gt;
                    &lt;/div&gt;
                    &lt;div className=""panel-body"" id=""freightListPanelBody"" className=""collapse in""&gt;
                        &lt;div className=""row padding10px""&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-9 col-lg-9""&gt;
                                &lt;div className=""form-group""&gt;
                                    &lt;button className=""btn btn-default"" onClick={this.openCreateModal.bind(this)}&gt;Create new entry&lt;/button&gt;
                                    &lt;CreateFreightEntryModal onClose={this.onClose.bind(this)} onClick={this.onClick.bind(this)} /&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;

                        &lt;div className=""row padding10px""&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-12 col-lg-12""&gt;
                                Search
                            &lt;/div&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-9 col-lg-9""&gt;
                                &lt;div className=""form-group""&gt;
                                    &lt;input className=""form-control"" type=""text"" value={this.state.search} placeholder=""Search"" onChange={this.updateSearch.bind(this)} /&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div className=""row padding10px""&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-12 col-lg-12""&gt;
                                &lt;div className=""table-responsive list""&gt;
                                    &lt;table className=""table table-hover table-striped"" id=""freightListTable""&gt;
                                        &lt;thead&gt;
                                            &lt;tr&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;ID&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Company&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Zone Logic&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Freight Type&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Transport Mode&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Haulier&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Haulier 2&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Warehouse&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;by quantity&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Quantity type&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;&amp;#8960;-Freight&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone"" colSpan=""2""&gt;Price break&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Place of departure&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Customer&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Product&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Product group&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone"" colSpan=""2""&gt;Valid&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Min. quantity&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Supplier&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Currency&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;No. zip code places&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Haulier is supplier&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;from country&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Anzahl_pauschalstaffeln&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Palgewlogik&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Volumengewichtfracht&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Volgewfaktor&lt;/th&gt;
                                            &lt;/tr&gt;
                                            &lt;tr&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;from&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;until&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;from&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;until&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                            &lt;/tr&gt;
                                        &lt;/thead&gt;
                                        &lt;tbody&gt;
                                        {
                                            filteredList.map((freight)=&gt; {
                                              return (
                                                &lt;Freight freight={freight} onClick={this.handleFreightClick.bind(this)} key={freight.id} /&gt;
                                              );
                                            })
                                        }
                                        &lt;/tbody&gt;
                                    &lt;/table&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        );
    }
}

export default FreightList
</code></pre>

<p>My ajax result looks like this:</p>

<p><a href=""https://i.stack.imgur.com/TpN95.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TpN95.png"" alt=""enter image description here""></a></p>

<p>React throws this error:</p>

<blockquote>
  <p>Error: Objects are not valid as a React child (found: object with keys
  {Nummer, Bezeichnung, id}). If you meant to render a collection of
  children, use an array instead or wrap the object using
  createFragment(object) from the React add-ons. Check the render method
  of <code>Freight</code>.</p>
</blockquote>

<p>How can I convert the AJAX JSON result in an acceptable format for react?</p>

<p><strong>UPDATE</strong></p>

<p>Freight component:</p>

<pre><code>import React, { Component } from 'react';

class Freight extends Component {

    constructor(props) {
        super(props);
        this.state = {
            freight: props.freight,
            onClick: props.onClick,
            isChecked: false
        };
    }

    onClick(event) {
        $('#freightListTable').find(""input"").removeAttr(""checked"");
        this.setState({isChecked: !this.state.isChecked})
        this.props.onClick(this.state.freight, !this.state.isChecked);
    }

    render() {
        return (

                &lt;tr className=""cursorPointer"" onClick={this.onClick.bind(this)}&gt;
                    &lt;td&gt;
                        &lt;div className=""checkbox""&gt;
                          &lt;label&gt;
                            &lt;input type=""checkbox"" value="""" checked={this.state.isChecked} /&gt;
                          &lt;/label&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.ID }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.firma }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap verticalAlignBottom""&gt;
                        { (this.state.freight.Zonenlogik == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.frachtart }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.transportart }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{this.state.freight.spedit_nr}&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.spediteur }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.spedit2_nr }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{this.state.freight.lager_nr}&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.lager }&lt;br /&gt;
                         &lt;span className=""label label-danger ""&gt;{ this.state.freight.lagerSperr }&lt;/span&gt;
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.per_menge }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.mengeneinheit }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.durchschnittsfracht == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.ab_staffelmenge == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.bis_staffelmenge == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.art_zuordnungs_nr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.abgangsort }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.kdnr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.kunde }&lt;br /&gt;
                        &lt;span className=""label label-danger""&gt;{ this.state.freight.kundeSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.artikel_nr } &lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.artikel }&lt;br /&gt;
                         &lt;span className=""label label-danger""&gt;{ this.state.freight.artikelSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.wog_nr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.wog }&lt;br /&gt;
                         &lt;span className=""label label-danger""&gt;{ this.state.freight.wogSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.gueltig_von }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.gueltig_bis }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.mindestmenge }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.lieferanten_nr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.lieferant }&lt;br /&gt;
                         &lt;span className=""label label-danger""&gt;{ this.state.freight.lieferantSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.waehrungName }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.suchart_nr }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.spedit_ist_lieferant == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.land }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.anzahl_pauschalstaffeln }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.palgewlogik }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.volumengewichtfracht }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.volgewfaktor }
                    &lt;/td&gt;
                &lt;/tr&gt;

        );
    }
}

export default Freight
</code></pre>
","Can you show your Freight component?"
"45464756","AJAX JSON result to react state property","4","<p>I'm having this component. I want to load the freight values via ajax into a state property of this class.</p>

<pre><code>import React, { Component } from 'react';
import Freight from './Freight';
import CreateFreightEntryModal from './CreateFreightEntryModal';
import createFragment from 'react-addons-create-fragment'; // ES6

class FreightList extends Component {

    constructor(props) {
        super(props);
        this.state = {
            search: """",
            freights: [],
            parent: props.parent,
            updateZonesTable: props.updateZonesTable
        };
        this.loadFreights();
    }

    componentWillReceiveProps(nextProps) {
        this.setState({
          freights: nextProps.freights
        });
    }


    loadFreights() {
        $.ajax({
          type: ""POST"",
          context:this,
          dataType: ""json"",
          async: true,
          url: ""../data/get/json/freight"",
          data: ({ 
              _token : window.Laravel.csrfToken,
          }),
          success: function (data) {

              var arr = $.map(data, function(el) { 
                  return el; 
                }
                return returnArray;
              });

              this.setState({
                freights: arr
              });

          }
      });
    }
...
render() {
        let filteredList = this.state.freights.filter((freight) =&gt; {
            let search = this.state.search.toLowerCase();
            //var values = Object.values(freight);
            var values = Object.keys(freight).map(function(itm) { return freight[itm]; });
            var flag = false
            values.forEach((val) =&gt; {
                if(val != undefined &amp;&amp; val.toString().toLowerCase().indexOf(search) &gt; -1) {
                    flag = true;
                    return;
                }   
            });
            if(flag) 
                return freight;
        });
        return (
            &lt;div className=""panel-group""&gt;
                &lt;div className=""panel panel-default""&gt;
                    &lt;div className=""panel-heading""&gt;
                        &lt;a className=""accordion-toggle"" data-toggle=""collapse"" href=""#freightListPanelBody""&gt;&lt;i className=""glyphicon glyphicon-menu-down"" aria-hidden=""true""&gt;&lt;/i&gt; Freights&lt;/a&gt;
                    &lt;/div&gt;
                    &lt;div className=""panel-body"" id=""freightListPanelBody"" className=""collapse in""&gt;
                        &lt;div className=""row padding10px""&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-9 col-lg-9""&gt;
                                &lt;div className=""form-group""&gt;
                                    &lt;button className=""btn btn-default"" onClick={this.openCreateModal.bind(this)}&gt;Create new entry&lt;/button&gt;
                                    &lt;CreateFreightEntryModal onClose={this.onClose.bind(this)} onClick={this.onClick.bind(this)} /&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;

                        &lt;div className=""row padding10px""&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-12 col-lg-12""&gt;
                                Search
                            &lt;/div&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-9 col-lg-9""&gt;
                                &lt;div className=""form-group""&gt;
                                    &lt;input className=""form-control"" type=""text"" value={this.state.search} placeholder=""Search"" onChange={this.updateSearch.bind(this)} /&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div className=""row padding10px""&gt;
                            &lt;div className=""col-xs-12 col-sm-12 col-md-12 col-lg-12""&gt;
                                &lt;div className=""table-responsive list""&gt;
                                    &lt;table className=""table table-hover table-striped"" id=""freightListTable""&gt;
                                        &lt;thead&gt;
                                            &lt;tr&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;ID&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Company&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Zone Logic&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Freight Type&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Transport Mode&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Haulier&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Haulier 2&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Warehouse&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;by quantity&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Quantity type&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;&amp;#8960;-Freight&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone"" colSpan=""2""&gt;Price break&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Place of departure&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Customer&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Product&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Product group&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone"" colSpan=""2""&gt;Valid&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Min. quantity&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Supplier&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Currency&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;No. zip code places&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Haulier is supplier&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;from country&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Anzahl_pauschalstaffeln&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Palgewlogik&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Volumengewichtfracht&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderBottomNone""&gt;Volgewfaktor&lt;/th&gt;
                                            &lt;/tr&gt;
                                            &lt;tr&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;from&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;until&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;from&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;until&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                                &lt;th className=""padding5px whiteSpaceNoWrap borderTopNone""&gt;&lt;/th&gt;
                                            &lt;/tr&gt;
                                        &lt;/thead&gt;
                                        &lt;tbody&gt;
                                        {
                                            filteredList.map((freight)=&gt; {
                                              return (
                                                &lt;Freight freight={freight} onClick={this.handleFreightClick.bind(this)} key={freight.id} /&gt;
                                              );
                                            })
                                        }
                                        &lt;/tbody&gt;
                                    &lt;/table&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        );
    }
}

export default FreightList
</code></pre>

<p>My ajax result looks like this:</p>

<p><a href=""https://i.stack.imgur.com/TpN95.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TpN95.png"" alt=""enter image description here""></a></p>

<p>React throws this error:</p>

<blockquote>
  <p>Error: Objects are not valid as a React child (found: object with keys
  {Nummer, Bezeichnung, id}). If you meant to render a collection of
  children, use an array instead or wrap the object using
  createFragment(object) from the React add-ons. Check the render method
  of <code>Freight</code>.</p>
</blockquote>

<p>How can I convert the AJAX JSON result in an acceptable format for react?</p>

<p><strong>UPDATE</strong></p>

<p>Freight component:</p>

<pre><code>import React, { Component } from 'react';

class Freight extends Component {

    constructor(props) {
        super(props);
        this.state = {
            freight: props.freight,
            onClick: props.onClick,
            isChecked: false
        };
    }

    onClick(event) {
        $('#freightListTable').find(""input"").removeAttr(""checked"");
        this.setState({isChecked: !this.state.isChecked})
        this.props.onClick(this.state.freight, !this.state.isChecked);
    }

    render() {
        return (

                &lt;tr className=""cursorPointer"" onClick={this.onClick.bind(this)}&gt;
                    &lt;td&gt;
                        &lt;div className=""checkbox""&gt;
                          &lt;label&gt;
                            &lt;input type=""checkbox"" value="""" checked={this.state.isChecked} /&gt;
                          &lt;/label&gt;
                        &lt;/div&gt;
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.ID }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.firma }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap verticalAlignBottom""&gt;
                        { (this.state.freight.Zonenlogik == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.frachtart }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.transportart }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{this.state.freight.spedit_nr}&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.spediteur }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.spedit2_nr }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{this.state.freight.lager_nr}&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.lager }&lt;br /&gt;
                         &lt;span className=""label label-danger ""&gt;{ this.state.freight.lagerSperr }&lt;/span&gt;
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.per_menge }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.mengeneinheit }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.durchschnittsfracht == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.ab_staffelmenge == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.bis_staffelmenge == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.art_zuordnungs_nr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.abgangsort }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.kdnr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.kunde }&lt;br /&gt;
                        &lt;span className=""label label-danger""&gt;{ this.state.freight.kundeSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.artikel_nr } &lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.artikel }&lt;br /&gt;
                         &lt;span className=""label label-danger""&gt;{ this.state.freight.artikelSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.wog_nr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.wog }&lt;br /&gt;
                         &lt;span className=""label label-danger""&gt;{ this.state.freight.wogSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.gueltig_von }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.gueltig_bis }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.mindestmenge }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        &lt;small&gt;{ this.state.freight.lieferanten_nr }&lt;/small&gt;&lt;br /&gt;
                        { this.state.freight.lieferant }&lt;br /&gt;
                         &lt;span className=""label label-danger""&gt;{ this.state.freight.lieferantSperr }&lt;/span&gt; 
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.waehrungName }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.suchart_nr }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { (this.state.freight.spedit_ist_lieferant == 1) ? ""Yes"" : ""No"" }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.land }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.anzahl_pauschalstaffeln }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.palgewlogik }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.volumengewichtfracht }
                    &lt;/td&gt;
                    &lt;td className=""whiteSpaceNoWrap""&gt;
                        { this.state.freight.volgewfaktor }
                    &lt;/td&gt;
                &lt;/tr&gt;

        );
    }
}

export default Freight
</code></pre>
","Have you seen this yet: https://stackoverflow.com/questions/33117449/invariant-violation-objects-are-not-valid-as-a-react-child"
"45802834","Testing Relay [createFragmentContainer] with jest?","1","<p>I am tring to test my components but every component that exports createFragmentContainer shows me this issue:</p>

<pre><code>console.error node_modules\react-native\Libraries\Core\ExceptionsManager.js:73
      Warning: Failed context type: Invalid prop/context `relay` supplied to `Relay(Product)`, expected `undefined` to be an object with an `environment` and `variables`.
          in Relay(Product)
    console.error node_modules\react-native\Libraries\Core\ExceptionsManager.js:73
      React caught an error thrown by Relay(Product). You should fix this error in your code. Consider adding an error boundary to your tree to customize error handling behavior.

      TypeError: Cannot read property 'environment' of undefined

      The error is located at:
          in Relay(Product)
</code></pre>

<p>so does jest support fragment containers or the problem is in my project ?</p>
","I've got the same problem! Did you ever make any progress on this issue @FrankenStein?"
"45902594","Convert Dome javascript Object to react element","2","<p>I'm using some library, it's return to me Dom object of html element. 
So I wanna set this dom object to state in reactjs and render to UI like this: </p>

<pre><code>this.setState({
  video: videoElement
})
render () {
  return (
         &lt;div&gt;{this.state.video}&lt;/div&gt;
         )
       }     
</code></pre>

<p>Because video is not React element. So I got an error: </p>

<pre><code>invariant.js:44 Uncaught (in promise) Error: Objects are not valid as a React child (found: [object HTMLVideoElement]). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of `Video`.
</code></pre>

<p>Are there any way to convert Dom Object to React element?</p>
","What is the structure format for video element?Is it HTML 5 video?"
"45902594","Convert Dome javascript Object to react element","2","<p>I'm using some library, it's return to me Dom object of html element. 
So I wanna set this dom object to state in reactjs and render to UI like this: </p>

<pre><code>this.setState({
  video: videoElement
})
render () {
  return (
         &lt;div&gt;{this.state.video}&lt;/div&gt;
         )
       }     
</code></pre>

<p>Because video is not React element. So I got an error: </p>

<pre><code>invariant.js:44 Uncaught (in promise) Error: Objects are not valid as a React child (found: [object HTMLVideoElement]). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method of `Video`.
</code></pre>

<p>Are there any way to convert Dom Object to React element?</p>
","Right html5 video. This is video stream."
"46169882","Relay-modern - How to navigate in RelayFragmentComponent?","0","<p>I am using scalajs-react-interface and have a <code>PostList</code> extending from <code>RelayFragmentComponentP</code> and I want to navigate to Post screen when user clicks on any of the Post item on the list screen but there is no navigate object in <code>RelayFragmentComponent</code> so I'm not sure what is the best way to navigate from <code>PostList</code> to <code>Post</code> screen.</p>

<p>Can someone help me please?</p>
",""
"46592727","mocking service and running parameterised query in react apollo graphql","1","<p>I’m trying to mock the service as in the docs example <code>http://dev.apollodata.com/tools/graphql-tools/mocking.html#Default-mock-example</code></p>

<p>I’m exporting my schema with the standard introspection query, building a schema object and using this when trying to run a query as mentioned in the docs.</p>

<pre><code>import * as introspectionResult from ""../../graphql/schema.json""
const GRAPHQL_QUERY = `
query eventsFeatured(
  $type: String!,
  $entity_type: String,
  $market__role: String,
  $outcome__odds_rank_unique: Int,
  $limit: Int
) {
  featured(
    type: $type,
    entity_type: $entity_type,
    market__role: $market__role,
    outcome__odds_rank_unique: $outcome__odds_rank_unique,
    limit: $limit
  ) {
    ...FeaturedFragment
    media {
      description
      extralarge
      large
      medium
      preview
      __typename
    }
    event {
      ...EventFragment
      market {
        ...MarketFragment
        outcome {
          ...OutcomeFragment
          media_logo {
            preview
            small
            __typename
          }
          bookie {
            ...BookieFragment
            __typename
          }
          __typename
        }
        __typename
      }
      article {
        ...ArticleFragment
        __typename
      }
      category3 {
        ...AllCategoriesFragment
        __typename
      }
      __typename
    }
    offer {
      id
      name
      conditions
      deeplink
      domain {
        ...EventFragment
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment EventFragment on Event {
  id
  name
  canonicalised_name
  display_name
  date
  date_human
  date_short
  type
  __typename
}

fragment MarketFragment on Market {
  id
  name
  display_name
  canonicalised_name
  type
  role {
    name
    __typename
  }
  __typename
}

fragment OutcomeFragment on Outcome {
  id
  name
  display_name
  canonicalised_name
  odds
  odds_decimal
  odds_rank
  deeplink
  home_or_away
  type
  __typename
}

fragment BookieFragment on Bookie {
  name
  __typename
}

fragment ArticleFragment on BaseArticle {
  title
  body
  excerpt
  author
  date_no_time
  date_stamp
  date_human
  date_short
  date
  __typename
}

fragment AllCategoriesFragment on Category3 {
  ...Category3Fragment
  category2 {
    ...Category2Fragment
    category1 {
      ...Category1Fragment
      __typename
    }
    __typename
  }
  __typename
}

fragment Category1Fragment on Category1 {
  name
  canonicalised_name
  __typename
}

fragment Category2Fragment on Category2 {
  name
  canonicalised_name
  __typename
}

fragment Category3Fragment on Category3 {
  name
  canonicalised_name
  __typename
}

fragment FeaturedFragment on Featured {
  id
  type
  display_order
  __typename
}
`

// this builds our mock apollo schema
const schema = buildClientSchema(introspectionResult) 
addMockFunctionsToSchema({ schema })

// execute the supplied apollo query
    graphql(schema, GRAPHQL_QUERY, {
      options: (props) =&gt; ({
        variables: {
          type: ""IMAGEGRIDHOMEPAGE""
        },
      })})
      .then(graphqlResult =&gt; {
.... etc
```

However, I am seeing the following error:

```
{ errors:
       [ GraphQLError {
           message: 'Variable ""$type"" of required type ""String!"" was not provided.',
           locations: [Object],
           path: undefined } ] }
</code></pre>

<p>It seems that the <code>graphql</code> function does not recognise the standard options object, at least not the <code>variables</code> definitions when used in this context of having a schema object as first arg.  I have tried digging into the source here but my typescript ain’t the best - <a href=""https://github.com/apollographql/react-apollo/blob/master/src/graphql.tsx"" rel=""nofollow noreferrer"">https://github.com/apollographql/react-apollo/blob/master/src/graphql.tsx</a></p>
","Hmmm, dilly of a pickle there elmpp. I wander if anyone knows the answer to this"
"46644417","Rendering Relay Modern Fragments in React","0","<p>I cant seem to get the ""count"" data to show up in the UI. I'm sure I'm missing something about using two fragments in the same container or rendering the edges array or async, maybe.
All other data is showing except <code>{this.props.link.votes.count}</code> which comes up empty in the UI while throwing no errors on the server or client in dev tools. Its just not showing up. 
Any help would be greatly appreciated. Thank you.</p>

<p>The react component looks like:</p>

<pre><code>       &lt;div className=""f6 lh-copy gray""&gt;
        {"" ""}
        {this.props.link.votes.count} votes | by {"" ""}
        {this.props.link.postedBy
          ? this.props.link.postedBy.name
          : ""Unknown""}{"" ""}
        {timeDifferenceForDate(this.props.link.createdAt)}{"" ""}
      &lt;/div&gt;{"" ""}
</code></pre>

<p>I've got this working graphql query that pulls up the correct data in graphiql.</p>

<pre><code>{
  links(first: 20) {
    pageInfo {
      hasPreviousPage
      hasNextPage
    }
    edges {
      node {
        id
        url
        description
        votes {
          ...Link_votes
        }
      }
    }
  }
}

fragment Link_votes on VoteConnection {
  edges {
    cursor
    node {
      count
    }
  }
}
</code></pre>

<p>This is the output</p>

<pre><code>{
  ""data"": {
    ""links"": {
      ""pageInfo"": {
        ""hasPreviousPage"": false,
        ""hasNextPage"": false
      },
      ""edges"": [
        {
          ""node"": {
            ""id"": ""TGluazo1OWRiNDc4ODY5YmJkOTViOWY2YzVkMGY="",
            ""url"": ""afasfdasf"",
            ""description"": ""adasdf"",
            ""votes"": {
              ""edges"": [
                {
                  ""cursor"": ""YXJyYXljb25uZWN0aW9uOjA="",
                  ""node"": {
                    ""count"": ""3""
                  }
                }
              ]
            }
          }
        }
      ]
    }
  }
}
</code></pre>

<p>In my Link.js component i've got these fragments that duplicate the above graphql call</p>

<pre><code>createFragmentContainer(


Link,
  graphql`
    fragment Link_votes on VoteConnection {
      edges {
        cursor
        node {
          count
        }
      }
    }
  `
);

export default createFragmentContainer(Link, {
  link: graphql`
    fragment Link_link on Link {
      id
      description
      url
      createdAt
      postedBy {
        id
        name
      }
      votes {
        ...Link_votes
      }
    }
  `
});
</code></pre>

<p>The full Link.js file is in this <a href=""https://gist.github.com/idkjs/7d2004b57fc2d60d9f6357514c1f5b39"" rel=""nofollow noreferrer"">gist</a>.</p>

<p>So the idea would be, given the structure of the 'link' node, this should work:</p>

<pre><code>{this.props.link.votes.edges[0].node.count}
</code></pre>

<p>'link' gets you the link you are on in the graphql response. 'votes' gets you the votes key which has an array of edges which always returns just one object in the array containing the count result for votes. So you want index 0 in that array which would be</p>

<pre><code>`{ ""cursor"": ""YXJyYXljb25uZWN0aW9uOjA="",
   ""node"": { 
      ""count"": ""3""
   }
 }`
</code></pre>

<p>If we want the node propery on index 0, we use dot notation, then same for the count property key on the object. This is not working. </p>
",""
"47027283","Graphql react-apollo IntrospectionFragmentMatcher issues","0","<p>After adding some interface types to our graphql queries our react-apollo app was getting the fragmentMatcher error:</p>

<blockquote>
  <p>You are using the simple (heuristic) fragment matcher, but your
  queries contain union or interface types.
       Apollo Client will not be able to able to accurately map fragments.To make this error go away, use the
  IntrospectionFragmentMatcher as described in the docs:
  <a href=""http://dev.apollodata.com/react/initialization.html#fragment-matcher"" rel=""nofollow noreferrer"">http://dev.apollodata.com/react/initialization.html#fragment-matcher</a></p>
</blockquote>

<p>I have followed the guide and the error does not go away, it still says I am using the heuristic fragment matcher even though I am not? Any thoughts?</p>

<p>Using <code>react-apollo@1.2.0</code> &amp; <code>apollo-cache-inmemory@1.0.0</code> and here is my apollo config:</p>

<pre><code>...

import {
  ApolloClient,
  createNetworkInterface,
  IntrospectionFragmentMatcher,
} from 'react-apollo'
import {InMemoryCache} from 'apollo-cache-inmemory'
import SchemaData from '../data/schema.json'

const filteredData = SchemaData.data.__schema.types.filter(
  type =&gt; type.possibleTypes !== null,
)
const fragmentMatcher = new IntrospectionFragmentMatcher({
  introspectionQueryResultData: {
    __schema: {
      types: filteredData,
    },
  },
})
const cache = new InMemoryCache({fragmentMatcher})
...

const client = new ApolloClient({
  cache,
  networkInterface,
  dataIdFromObject: result =&gt; {
    if (result.uuid &amp;&amp; result.__typename) {
      return result.__typename + result.uuid
    }
    return null
  },
})
</code></pre>
",""
"47114932","Relay Modern Compiler Skips Generating File for Query Fragment","1","<p>I'm building a simple news aggregator with React/Relay and I'm having issues with Relay Modern. Whenever I run the compiler it generates a FeatureRootQuery.graphql.js file. However, it doesn't generate a FeatureRow_viewer.graphql.js file for the corresponding fragment despite that fragment being included in the FeatureRootQuery.graphql.js file. The react app fails to compile because it cannot find the file. Anyone know what might be causing this? </p>

<p>FeatureRoot.js</p>

<pre><code>import React, { Component } from 'react';
import { connect } from 'react-redux';
import {
  QueryRenderer,
  graphql
} from 'react-relay';
import environment from '../Environment.js';
import FeatureRow from './FeatureRow';


class FeatureRoot extends Component {
  render() {
    const level = this.props.active;

    return (
      &lt;QueryRenderer
        environment={environment}
        query={graphql`
          query FeatureRootQuery {
            ...FeatureRow_viewer
          }
        `}
        render={({error, props}) =&gt; {
          if (error) {
            return (&lt;div&gt;{error.message}&lt;/div&gt;);
          } else if (props) {
            return (&lt;FeatureRow viewer={props} level={level}/&gt;)
          }
          return (&lt;div&gt;Loading&lt;/div&gt;);
        }}
      /&gt;
    )
  }
}

function mapStateToProps(state) {
  return { active: state.level.active }
}

export default connect(mapStateToProps, null)(FeatureRoot);
</code></pre>

<p>FeatureRow.js</p>

<pre><code>import React, { Component } from 'react';
import FeatureCarousel from './FeatureCarousel';
import FeatureList from './FeatureList';
import ReactDOM from 'react-dom';
import {
  createFragmentContainer,
  graphql
} from 'react-relay';
import '../styles/FeatureRow.css';


class FeatureRow extends Component {
  constructor() {
    super();

    this.state = {
      carouselImgHeight: 0,
      carouselTextHeight: 175,
      carouselHeight: 0
    };
    this.updateHeight = this.updateHeight.bind(this);
  }

  componentDidMount() {
    this.updateHeight();
  }

  updateHeight() {
    ...
  }

  componentWillMount() {
    window.addEventListener(""resize"", this.updateHeight);
  }

  componentWillUnmount() {
    window.removeEventListener(""resize"", this.updateHeight);
  }

  render() {
    let carouselArticles = this.props.viewer.sources[0].articles;
    let { level } = this.props;
    let { carouselHeight } = this.state;

    return (
      &lt;div id=""feature-row""&gt;
        &lt;div className=""row""&gt;
          &lt;div className=""col-sm-6 col-carousel""&gt;
            &lt;FeatureCarousel
              level={level}
              articles={carouselArticles}
            /&gt;
          &lt;/div&gt;
          &lt;div className=""col-sm-6 col-list""&gt;
            &lt;FeatureList
              articles={carouselArticles}
              carouselHeight={carouselHeight}
            /&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    )
  }
}


export default createFragmentContainer(
  FeatureRow,
  graphql`
    fragment FeatureRow_viewer on Query {
      sources(
        filter: {
          names: [""The New York Times"", ""The Washington Post"", ""The Wall Street Journal"", ""USA Today"", ""Associated Press"", ""Reuters""]
        }
      ) {
        id
        name
        articles {
          id
          author
          title
          description
          url
          urlToImage
          publishedAt
        }
      }
    }
  `,
);
</code></pre>
","Quick Update: I was able to generate the .graphql.js file by changing the file names to NewFeatureRoot and NewFeatureRow. Obviously, it's annoying to change the naming convention I've used throughout the project. So, I'm still hoping to find a solution that doesn't involve changing  file names and to understand why this happened. Hopefully, that info helps."
"47552648","How to combine FragmentContainer with RefetchContainer in Relay modern","0","<p>I'm migrating some Relay classis code to Relay modern. And now I'm having a hard time migrating a pagination implementation. I'm using a page and offset approach. Here's what I have now:</p>

<p>Game.jsx:</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import {QueryRenderer, createFragmentContainer, createRefetchContainer, graphql} from 'react-relay';
import Player from './Player';

class Game extends React.Component {
    _loadPage(e) {
      e.preventDefault();
      this.props.relay.refetch({page: parseInt(e.target.dataset.page)}, null);
    }

    render() {
        return (
            &lt;div&gt;
                &lt;h1&gt;{this.props.game.name}&lt;/h1&gt;
                &lt;ul className=""pagination""&gt;
                    {this.props.game.pages.map((page) =&gt; {
                        &lt;li key={page.page}&gt;
                            &lt;a href=""#"" data-page={page.page} onClick={this._loadPage}&gt;{page.page}&lt;/a&gt;
                        &lt;/li&gt;
                    })
                &lt;/ul&gt;
                {this.props.game.players.map(player =&gt;
                    &lt;Player key={player.id} /&gt;
                )}
            &lt;/div&gt;
        );
    }   
}

Game = createRefetchContainer(
  Game,
  {
      players: graphql`
        fragment Game_players on Game
        @argumentDefinitions(
          page: {type: ""Int"", defaultValue: 1},
          first: {type: ""Int"", defaultValue: 15}
        )
        {
          players(page: $page, first: $first) {
            id
            ...Player_player
          }
        }
    `
  },
  graphql`
    query GamePlayersRefetch_Query($page: Int!, $first: Int!) {
      game(id: $id) {
        ...Game_players @arguments(page: $page, first: $first)
      }
    }
  `
);


Game = createFragmentContainer(
    Game,
    graphql`
        fragment Game_game on Game
          @argumentDefinitions(
            page: {type: ""Int"", defaultValue: 1},
            first: {type: ""Int"", defaultValue: 15}
          ) {
          id
          name
          pages {
            page
          }
          ...game_players @arguments(page: $page, first: $first)
        }
    `
)


$(document).on(""load turbolinks:load DOMContentLoaded"", e =&gt; {
    let element = document.getElementById('game');
    ReactDOM.render(
          &lt;QueryRenderer
            environment={environment}
            query={
              graphql`
                query gameQuery(
                    $id: ID!
                    $page: Int!
                    $first: Int!
                ) {
                      game(id: $id) {
                        ...Game_game @arguments(page: $page, first: $first)
                      }
                   }
            `
            }
            variables={{
              id: element.dataset.id,
              page: 1,
              first: 15
            }}
            render={({error, props}) =&gt; {
              if (props) {
                return &lt;Game /&gt;
              } else {
                return &lt;div&gt;Loading.../div&gt;
              }
            }}
          /&gt;,
          element
        );
    }

});
</code></pre>

<p>Player.jsx:</p>

<pre><code>import React from 'react';
import {createFragmentContainer, graphql} from 'react-relay';

class Player extends React.Component {
    render() {
        &lt;div className=""player""&gt;
            &lt;div class=""player-name""&gt;{this.props.player.name}&lt;/div&gt;
        &lt;/div&gt;
    }
}


export default createFragmentContainer(
  Player,
  graphql`
    fragment Player_player on Player {
      id
    }
    `
);
</code></pre>

<p>I must be doing something wrong with the FragmentContainer and the RefetchContainer they should be combined or something but I don't have a clue how to achieve what I want. Can someone enlighten me?</p>
",""
"47714780","React 16.2 <Fragment> gives Uncaught error: Element type is invalid","1","<p>I just updated to react 16.2 and I want to use the cool Fragment feature. However I get strange error as soon as just use it in a simple way:</p>

<pre><code>&lt;React.Fragment&gt;asd&lt;/React.Fragment&gt;
</code></pre>

<p>The error states: Uncaught Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: symbol.</p>

<p>When I log the above code and just a random component I have defined I get this information: </p>

<pre><code>$$typeof: Symbol(react.element)
key: null
props: {children: ""asd""}
ref: null
type: Symbol(react.fragment)
...
</code></pre>

<p>When I log my element I get the almost same information:</p>

<pre><code>$$typeof: Symbol(react.element)
key: null
props: {children: ""sfdghs""}
ref: null
type:ƒ Column(_ref)
</code></pre>

<p>My question is: why does the app expect string or function.</p>

<p>All related dependancies from my package.json are as such:</p>

<ul>
<li><code>""devDependencies"": {... ""@types/react"": ""^16.0.0"" ...}</code></li>
<li><code>""dependencies"" : {... ""react"": ""^16.2.0"", ""typescript"": ""2.6.2"" ...}</code></li>
</ul>

<p>If anyone can give me any information on how to debug this, I will be very grateful!</p>
","a simpler syntax this also works fine: `<>some content</>`"
"47761894","Why are Fragments in React 16 better than container divs?","2","<p>In React 16.2, improved support for <code>Fragments</code> has been added. More information can be found on React's blog post <a href=""https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html"" rel=""noreferrer"">here.</a></p>

<p>We are all familiar with the following code:</p>

<pre><code>render() {
  return (
    // Extraneous div element :(
    &lt;div&gt;
      Some text.
      &lt;h2&gt;A heading&lt;/h2&gt;
      More text.
      &lt;h2&gt;Another heading&lt;/h2&gt;
      Even more text.
    &lt;/div&gt;
  );
}
</code></pre>

<p>Yes, we need a container div, but it's not that big of a deal.</p>

<p>In React 16.2, we can do this to avoid the surrounding container div:</p>

<pre><code>render() {
  return (
    &lt;Fragment&gt;
      Some text.
      &lt;h2&gt;A heading&lt;/h2&gt;
      More text.
      &lt;h2&gt;Another heading&lt;/h2&gt;
      Even more text.
    &lt;/Fragment&gt;
  );
}
</code></pre>

<p>In either case, we still need need a container element surround the inner elements. </p>

<p>My question is, why is using a <code>Fragment</code> preferable? Does it help with performance? If so, why? Would love some insight.</p>
","I find it really useful for flexbox styling when creating first level children for a parent"
"47761894","Why are Fragments in React 16 better than container divs?","2","<p>In React 16.2, improved support for <code>Fragments</code> has been added. More information can be found on React's blog post <a href=""https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html"" rel=""noreferrer"">here.</a></p>

<p>We are all familiar with the following code:</p>

<pre><code>render() {
  return (
    // Extraneous div element :(
    &lt;div&gt;
      Some text.
      &lt;h2&gt;A heading&lt;/h2&gt;
      More text.
      &lt;h2&gt;Another heading&lt;/h2&gt;
      Even more text.
    &lt;/div&gt;
  );
}
</code></pre>

<p>Yes, we need a container div, but it's not that big of a deal.</p>

<p>In React 16.2, we can do this to avoid the surrounding container div:</p>

<pre><code>render() {
  return (
    &lt;Fragment&gt;
      Some text.
      &lt;h2&gt;A heading&lt;/h2&gt;
      More text.
      &lt;h2&gt;Another heading&lt;/h2&gt;
      Even more text.
    &lt;/Fragment&gt;
  );
}
</code></pre>

<p>In either case, we still need need a container element surround the inner elements. </p>

<p>My question is, why is using a <code>Fragment</code> preferable? Does it help with performance? If so, why? Would love some insight.</p>
","The problem with `div` is that you don't always want a wrapper element. Wrapper elements have a meaning and usually you need additional styles for that meaning to be removed. `<Fragment>` is just syntactic sugar that is not rendered. There are situations when creating a wrapper is very difficult, for example in SVG where `<div>` cannot be used and `<group>` is not always what you want."
"47787067","How react loads component js files","2","<p>I am new to React and trying to code some basic concepts. But there are few things, I am not able to understand. Why there is no entry in browser network tab (for component js files) when using separate files for different components.
How react loads the components js files or the file content and served it to the browser.(Like when using ""script"" tag there will be a request entry for that particular file.) </p>

<p>I am using npm start to run</p>

<p>Index.js</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import './css/output.css';
import App from './App.js';
import registerServiceWorker from './registerServiceWorker';

ReactDOM.render(&lt;App /&gt;, document.getElementById('root'));
registerServiceWorker();
</code></pre>

<p>App.js</p>

<pre><code>import React, { Component } from 'react';
import { Fragment } from 'react';
import logo from './logo.svg';
import Header from './Header';

class App extends Component {
  render() {
    return (
        &lt;div&gt;
            &lt;Fragment&gt;
                &lt;Header/&gt;
            &lt;/Fragment&gt;
        &lt;/div&gt;
    );
  }
}

export default App;
</code></pre>

<p>Home.js</p>

<pre><code>import React, { Component } from 'react';
import { Fragment } from 'react';

class Home extends Component {
  render() {
    return (
      &lt;h1&gt;
        Inside Home
      &lt;/h1&gt;
    );
  }
}

export default Home;
</code></pre>
","Using some tool, like webpack, your React app is bundled into a file and hence, all your separate React components are packaged in one and hence you don't see them loading individually"
"47787067","How react loads component js files","2","<p>I am new to React and trying to code some basic concepts. But there are few things, I am not able to understand. Why there is no entry in browser network tab (for component js files) when using separate files for different components.
How react loads the components js files or the file content and served it to the browser.(Like when using ""script"" tag there will be a request entry for that particular file.) </p>

<p>I am using npm start to run</p>

<p>Index.js</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import './css/output.css';
import App from './App.js';
import registerServiceWorker from './registerServiceWorker';

ReactDOM.render(&lt;App /&gt;, document.getElementById('root'));
registerServiceWorker();
</code></pre>

<p>App.js</p>

<pre><code>import React, { Component } from 'react';
import { Fragment } from 'react';
import logo from './logo.svg';
import Header from './Header';

class App extends Component {
  render() {
    return (
        &lt;div&gt;
            &lt;Fragment&gt;
                &lt;Header/&gt;
            &lt;/Fragment&gt;
        &lt;/div&gt;
    );
  }
}

export default App;
</code></pre>

<p>Home.js</p>

<pre><code>import React, { Component } from 'react';
import { Fragment } from 'react';

class Home extends Component {
  render() {
    return (
      &lt;h1&gt;
        Inside Home
      &lt;/h1&gt;
    );
  }
}

export default Home;
</code></pre>
","Welcome to the wonderful world of JS tooling and specifically bundlers! Have a read about Webpack and Co, but don't stress too much about understanding it all on your first pass. It can get pretty complicated. Thankfully, things like `create-react-app` handle the complicated parts for you so you can get on with building things :D"
"47923044","Use React Fragment with TypeScript on a React-Native project","1","<p>I just upgraded React to 16.2.0 on my React-Native project to use the new Fragment syntax.</p>

<p>I have a component which returns something like this now:</p>

<pre><code>return (
  &lt;&gt;
    &lt;View&gt;...&lt;/View&gt;
    &lt;View&gt;...&lt;/View&gt;
  &lt;/&gt;
);
</code></pre>

<p>TypeScript doesn't complain about the syntax which is great, however I get an error when I try to run this code:</p>

<pre><code>Bundling `index.js`  [development, non-minified]  45.8% (1078/1593), failed.
error: bundling failed: SyntaxError in /Users/alexmngn/Workspace/MyProject/MyComponent.tsx: /Users/alexmngn/Workspace/MyProject/MyComponent.tsx: Unexpected token (68:17)
&gt; 68 |         return (&lt;&gt;
     |                  ^
</code></pre>

<p>It doesn't seem to compile the fragment syntax back to ES5.</p>

<p>And when I try to use <code>React.Fragment</code> instead I get a TypeScript error:</p>

<pre><code>/Users/alexmngn/Workspace/MyProject/MyComponent.tsx(1,28): error TS2305: 
Module '""/Users/alexmngn/Workspace/MyProject/node_modules/@types/react/index""' 
has no exported member 'Fragment'.
</code></pre>

<p>And the app doesn't run and throw an error as well <code>Invariant Violation</code></p>

<p>I use the latest stable versions of all packages:</p>

<ul>
<li>React: 16.2.0</li>
<li>React-Native: 0.51.0</li>
<li>TypeScript: 2.6.2</li>
<li>@types/react: 16.0.31</li>
<li>@types/react-native: 0.51.4</li>
</ul>

<p>Is there anything specific I need to do to make it working with React-Native? To compile to ES5? Or even to be able to use React.Fragment without Typescript complaining? Seems like there is a type <code>ReactFragment</code> in the definition of the types but still get this error.</p>

<p>Thanks</p>
","I guess you should follow this issue https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20249. As one of the comment suggest, there is workaround for now https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20249#issuecomment-348384719"
"48035660","Android App doesn't react to Amazon Fire TV Controlls","1","<p>So i recently bought the Amazon Fire TV Stick. I wanted to make an app, which allows me to browse my NAS system at home. </p>

<p>I've heard that you can use android apps on the Fire Stick. So I got on making an Andoid-TV app which automaticly logs into the webinterface of my NAS. </p>

<p>This is my MainActivity code:</p>

<pre><code>package me.akaruikage.heimmediathek;

import android.inputmethodservice.Keyboard;
import android.os.Build;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.KeyEvent;
import android.webkit.ValueCallback;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.ScrollView;

public class MainActivity extends AppCompatActivity {

String password = ""********************"";
int elementInList = 0;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        WebView wv = (WebView)findViewById(R.id.mainWV);
        wv.getSettings().setJavaScriptEnabled(true);
        //wv.getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE);
        wv.loadUrl(""http://fritz.nas/"");
        wv.setWebViewClient(new WebViewClient(){
            @Override
            public void onPageFinished(WebView view, String url) {
                super.onPageFinished(view, url);
                Log.d(""DEBUGGER"", ""FINISHED LOADING"");
                final String js = ""javascript:"" +
                    ""function set(){document.getElementById('uiPass').value='**********************',document.getElementById('uiSubmitLogin').click()}var done=!1,logedin=!1;void 0!=document.getElementById('uiPass')?(set(),logedin=!0):(console.log('Approaching while loop! '+!done+' '+logedin),setInterval(function(){void 0!=document.getElementsByClassName('filename_detail_box')[5]&amp;&amp;'WD-Elements1048-01'==document.getElementsByClassName('filename_detail_box')[5].innerHTML&amp;&amp;(document.getElementsByClassName('itemDetail')[5].click(),done=!0)},1e3));"";



                if (Build.VERSION.SDK_INT &gt;= 19) {
                    view.evaluateJavascript(js, new ValueCallback&lt;String&gt;() {
                        @Override
                        public void onReceiveValue(String s) {

                        }
                    });
                    Log.d(""N"", ""ÖN"");
                    ScrollView sv = (ScrollView) findViewById(R.id.mainSV);
                    sv.scrollTo(0, 685);
                } else {

                    view.loadUrl(js);

                }
            }

        });

    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if(keyCode == KeyEvent.KEYCODE_DPAD_CENTER) {
            Log.d(""BUTTON PRESSED"", ""D_PAD_CENTER"");
        }
        if(keyCode == KeyEvent.KEYCODE_DPAD_UP) {
            Log.d(""BUTTON PRESSED"", ""D_PAD_UP"");
        }
        if(keyCode == KeyEvent.KEYCODE_DPAD_RIGHT) {
            Log.d(""BUTTON PRESSED"", ""D_PAD_RIGHT"");
        }
        if(keyCode == KeyEvent.KEYCODE_DPAD_DOWN) {
            Log.d(""BUTTON PRESSED"", ""D_PAD_DOWB"");
        }
        if(keyCode == KeyEvent.KEYCODE_DPAD_LEFT) {
            Log.d(""BUTTON PRESSED"", ""D_PAD_LEFT"");
        }
        if(keyCode == KeyEvent.KEYCODE_VOLUME_DOWN) {
            ScrollView sv = (ScrollView) findViewById(R.id.mainSV);
            sv.scrollTo(0, sv.getScrollY() + 179);
            elementInList++;
        }
        if(keyCode == KeyEvent.KEYCODE_BACK) {
            WebView wv = (WebView) findViewById(R.id.mainWV);
            wv.loadUrl(""javascript:document.getElementsByClassName('filename_detail_box')["" + elementInList + ""].click();"");

        }
        if(keyCode == KeyEvent.KEYCODE_VOLUME_UP) {
            ScrollView sv = (ScrollView) findViewById(R.id.mainSV);
            if(sv.getScrollY()!=685) {
                sv.scrollTo(0, sv.getScrollY() - 179);
                elementInList--;
            }
        }
        return true;
    }
}
</code></pre>

<p>And this is the layout:</p>

<pre><code>    &lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;RelativeLayout xmlns:android=""http://schemas.android.com/apk/res/anroid""
    xmlns:tools=""http://schemas.android.com/tools""
    android:id=""@+id/main_browse_fragment""
    android:name=""me.akaruikage.heimmediathek.MainFragment""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""&gt;


    &lt;ScrollView
        android:id=""@+id/mainSV""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""&gt;

        &lt;LinearLayout
            android:layout_width=""match_parent""
            android:layout_height=""match_parent""&gt;

            &lt;WebView
                android:id=""@+id/mainWV""
                android:layout_width=""match_parent""
                android:layout_height=""20000dp"" /&gt;
        &lt;/LinearLayout&gt;
    &lt;/ScrollView&gt;
&lt;/RelativeLayout&gt;
</code></pre>

<p>Now comes the Problem. My app doesn't react to the button pushes of the remote. </p>

<p>Can someone explain whats going on and mabey give a solution?</p>

<p>Thanks a lot!</p>

<p><strong>EDIT:</strong>
I fixed it now.
The WebView was the cooperate. It was focused so the WebView recieved all the controller inputs and didn't pass them trought to the MainActivity.</p>
","have you double checked https://developer.amazon.com/docs/fire-tv/remote-input.html"
"48235692","JSX Fragment syntax generates ""Element type is invalid""","8","<p>I try to use JSX Fragment syntax with Typescript but I have the following error : </p>

<blockquote>
  <p>Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: symbol</p>
</blockquote>

<p>I am using : </p>

<ul>
<li>React 16.2.0</li>
<li>React-dom 16.2.0</li>
<li>Typescript 2.6.2</li>
</ul>

<p>Even if I use reacts code example, it fails :</p>

<pre><code>public render() {
        return (
            &lt;&gt;
            Some text.
            &lt;h2&gt;A heading&lt;/h2&gt;
            More text.
            &lt;h2&gt;Another heading&lt;/h2&gt;
            Even more text.
          &lt;/&gt;
        );
    }
</code></pre>

<p>tsconfig.json :</p>

<pre><code>{
  ""compilerOptions"": {
    ""baseUrl"": ""."",
    ""module"": ""es2015"",
    ""moduleResolution"": ""node"",
    ""target"": ""es5"",
    ""jsx"": ""react"",
    ""experimentalDecorators"": true,
    ""sourceMap"": true,
    ""skipDefaultLibCheck"": true,
    ""strict"": true,
    ""lib"": [""es6"", ""dom""],
    ""types"": [""webpack-env""]
  },
  ""exclude"": [
      ""bin"",
      ""node_modules"",
      ""app/__tests__""
  ]
}
</code></pre>
","@kfazi yes and it does not work. I've the same error"
"48235692","JSX Fragment syntax generates ""Element type is invalid""","8","<p>I try to use JSX Fragment syntax with Typescript but I have the following error : </p>

<blockquote>
  <p>Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: symbol</p>
</blockquote>

<p>I am using : </p>

<ul>
<li>React 16.2.0</li>
<li>React-dom 16.2.0</li>
<li>Typescript 2.6.2</li>
</ul>

<p>Even if I use reacts code example, it fails :</p>

<pre><code>public render() {
        return (
            &lt;&gt;
            Some text.
            &lt;h2&gt;A heading&lt;/h2&gt;
            More text.
            &lt;h2&gt;Another heading&lt;/h2&gt;
            Even more text.
          &lt;/&gt;
        );
    }
</code></pre>

<p>tsconfig.json :</p>

<pre><code>{
  ""compilerOptions"": {
    ""baseUrl"": ""."",
    ""module"": ""es2015"",
    ""moduleResolution"": ""node"",
    ""target"": ""es5"",
    ""jsx"": ""react"",
    ""experimentalDecorators"": true,
    ""sourceMap"": true,
    ""skipDefaultLibCheck"": true,
    ""strict"": true,
    ""lib"": [""es6"", ""dom""],
    ""types"": [""webpack-env""]
  },
  ""exclude"": [
      ""bin"",
      ""node_modules"",
      ""app/__tests__""
  ]
}
</code></pre>
","@JonnyAsmar I tried rm -rf... and it does not work. I've checked in node_modules and I am using ts 2.6.2 with react & react-dom 16.2.0"
"48235692","JSX Fragment syntax generates ""Element type is invalid""","8","<p>I try to use JSX Fragment syntax with Typescript but I have the following error : </p>

<blockquote>
  <p>Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: symbol</p>
</blockquote>

<p>I am using : </p>

<ul>
<li>React 16.2.0</li>
<li>React-dom 16.2.0</li>
<li>Typescript 2.6.2</li>
</ul>

<p>Even if I use reacts code example, it fails :</p>

<pre><code>public render() {
        return (
            &lt;&gt;
            Some text.
            &lt;h2&gt;A heading&lt;/h2&gt;
            More text.
            &lt;h2&gt;Another heading&lt;/h2&gt;
            Even more text.
          &lt;/&gt;
        );
    }
</code></pre>

<p>tsconfig.json :</p>

<pre><code>{
  ""compilerOptions"": {
    ""baseUrl"": ""."",
    ""module"": ""es2015"",
    ""moduleResolution"": ""node"",
    ""target"": ""es5"",
    ""jsx"": ""react"",
    ""experimentalDecorators"": true,
    ""sourceMap"": true,
    ""skipDefaultLibCheck"": true,
    ""strict"": true,
    ""lib"": [""es6"", ""dom""],
    ""types"": [""webpack-env""]
  },
  ""exclude"": [
      ""bin"",
      ""node_modules"",
      ""app/__tests__""
  ]
}
</code></pre>
","Are you certain that you're using the Typescript in `node_modules`? It is possible that you are executing Typescript from the global `node_modules`. Try upgrading Typescript globally with `npm install -g typescript@2.6.2` Nothing stands out in your `tsconfig.json`. I tested your options on a standard build and they all seem to work."
"48235692","JSX Fragment syntax generates ""Element type is invalid""","8","<p>I try to use JSX Fragment syntax with Typescript but I have the following error : </p>

<blockquote>
  <p>Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: symbol</p>
</blockquote>

<p>I am using : </p>

<ul>
<li>React 16.2.0</li>
<li>React-dom 16.2.0</li>
<li>Typescript 2.6.2</li>
</ul>

<p>Even if I use reacts code example, it fails :</p>

<pre><code>public render() {
        return (
            &lt;&gt;
            Some text.
            &lt;h2&gt;A heading&lt;/h2&gt;
            More text.
            &lt;h2&gt;Another heading&lt;/h2&gt;
            Even more text.
          &lt;/&gt;
        );
    }
</code></pre>

<p>tsconfig.json :</p>

<pre><code>{
  ""compilerOptions"": {
    ""baseUrl"": ""."",
    ""module"": ""es2015"",
    ""moduleResolution"": ""node"",
    ""target"": ""es5"",
    ""jsx"": ""react"",
    ""experimentalDecorators"": true,
    ""sourceMap"": true,
    ""skipDefaultLibCheck"": true,
    ""strict"": true,
    ""lib"": [""es6"", ""dom""],
    ""types"": [""webpack-env""]
  },
  ""exclude"": [
      ""bin"",
      ""node_modules"",
      ""app/__tests__""
  ]
}
</code></pre>
","@JonnyAsmar Still have the same error. I am using webpack with awesome-typescript-loader, could the error comes from at-loader?"
"48235692","JSX Fragment syntax generates ""Element type is invalid""","8","<p>I try to use JSX Fragment syntax with Typescript but I have the following error : </p>

<blockquote>
  <p>Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: symbol</p>
</blockquote>

<p>I am using : </p>

<ul>
<li>React 16.2.0</li>
<li>React-dom 16.2.0</li>
<li>Typescript 2.6.2</li>
</ul>

<p>Even if I use reacts code example, it fails :</p>

<pre><code>public render() {
        return (
            &lt;&gt;
            Some text.
            &lt;h2&gt;A heading&lt;/h2&gt;
            More text.
            &lt;h2&gt;Another heading&lt;/h2&gt;
            Even more text.
          &lt;/&gt;
        );
    }
</code></pre>

<p>tsconfig.json :</p>

<pre><code>{
  ""compilerOptions"": {
    ""baseUrl"": ""."",
    ""module"": ""es2015"",
    ""moduleResolution"": ""node"",
    ""target"": ""es5"",
    ""jsx"": ""react"",
    ""experimentalDecorators"": true,
    ""sourceMap"": true,
    ""skipDefaultLibCheck"": true,
    ""strict"": true,
    ""lib"": [""es6"", ""dom""],
    ""types"": [""webpack-env""]
  },
  ""exclude"": [
      ""bin"",
      ""node_modules"",
      ""app/__tests__""
  ]
}
</code></pre>
","First, have you tried `rm -rf node_modules && npm install`? Perhaps your TS install is behind what you think (this feature only became available in TS 2.6.2, so if you're even slightly behind, it'll be a problem). Second, if that doesn't work, can you please share your `tsconfig.json`?"
"48235692","JSX Fragment syntax generates ""Element type is invalid""","8","<p>I try to use JSX Fragment syntax with Typescript but I have the following error : </p>

<blockquote>
  <p>Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: symbol</p>
</blockquote>

<p>I am using : </p>

<ul>
<li>React 16.2.0</li>
<li>React-dom 16.2.0</li>
<li>Typescript 2.6.2</li>
</ul>

<p>Even if I use reacts code example, it fails :</p>

<pre><code>public render() {
        return (
            &lt;&gt;
            Some text.
            &lt;h2&gt;A heading&lt;/h2&gt;
            More text.
            &lt;h2&gt;Another heading&lt;/h2&gt;
            Even more text.
          &lt;/&gt;
        );
    }
</code></pre>

<p>tsconfig.json :</p>

<pre><code>{
  ""compilerOptions"": {
    ""baseUrl"": ""."",
    ""module"": ""es2015"",
    ""moduleResolution"": ""node"",
    ""target"": ""es5"",
    ""jsx"": ""react"",
    ""experimentalDecorators"": true,
    ""sourceMap"": true,
    ""skipDefaultLibCheck"": true,
    ""strict"": true,
    ""lib"": [""es6"", ""dom""],
    ""types"": [""webpack-env""]
  },
  ""exclude"": [
      ""bin"",
      ""node_modules"",
      ""app/__tests__""
  ]
}
</code></pre>
","Have you tried using full syntax (`<React.Fragment>...</React.Fragment>`)?"
"48235692","JSX Fragment syntax generates ""Element type is invalid""","8","<p>I try to use JSX Fragment syntax with Typescript but I have the following error : </p>

<blockquote>
  <p>Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: symbol</p>
</blockquote>

<p>I am using : </p>

<ul>
<li>React 16.2.0</li>
<li>React-dom 16.2.0</li>
<li>Typescript 2.6.2</li>
</ul>

<p>Even if I use reacts code example, it fails :</p>

<pre><code>public render() {
        return (
            &lt;&gt;
            Some text.
            &lt;h2&gt;A heading&lt;/h2&gt;
            More text.
            &lt;h2&gt;Another heading&lt;/h2&gt;
            Even more text.
          &lt;/&gt;
        );
    }
</code></pre>

<p>tsconfig.json :</p>

<pre><code>{
  ""compilerOptions"": {
    ""baseUrl"": ""."",
    ""module"": ""es2015"",
    ""moduleResolution"": ""node"",
    ""target"": ""es5"",
    ""jsx"": ""react"",
    ""experimentalDecorators"": true,
    ""sourceMap"": true,
    ""skipDefaultLibCheck"": true,
    ""strict"": true,
    ""lib"": [""es6"", ""dom""],
    ""types"": [""webpack-env""]
  },
  ""exclude"": [
      ""bin"",
      ""node_modules"",
      ""app/__tests__""
  ]
}
</code></pre>
","The problem definitely in the react or react-dom, can you check it? Can you attach your files, I can take a look for them"
"48235692","JSX Fragment syntax generates ""Element type is invalid""","8","<p>I try to use JSX Fragment syntax with Typescript but I have the following error : </p>

<blockquote>
  <p>Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: symbol</p>
</blockquote>

<p>I am using : </p>

<ul>
<li>React 16.2.0</li>
<li>React-dom 16.2.0</li>
<li>Typescript 2.6.2</li>
</ul>

<p>Even if I use reacts code example, it fails :</p>

<pre><code>public render() {
        return (
            &lt;&gt;
            Some text.
            &lt;h2&gt;A heading&lt;/h2&gt;
            More text.
            &lt;h2&gt;Another heading&lt;/h2&gt;
            Even more text.
          &lt;/&gt;
        );
    }
</code></pre>

<p>tsconfig.json :</p>

<pre><code>{
  ""compilerOptions"": {
    ""baseUrl"": ""."",
    ""module"": ""es2015"",
    ""moduleResolution"": ""node"",
    ""target"": ""es5"",
    ""jsx"": ""react"",
    ""experimentalDecorators"": true,
    ""sourceMap"": true,
    ""skipDefaultLibCheck"": true,
    ""strict"": true,
    ""lib"": [""es6"", ""dom""],
    ""types"": [""webpack-env""]
  },
  ""exclude"": [
      ""bin"",
      ""node_modules"",
      ""app/__tests__""
  ]
}
</code></pre>
","I found the issue. I am using .dotnet core react/redux template and the vendor.js bundle was not updated to react 16.2... After building a new vendor.js bundle it worked!"
"48236588","Using Fragment to insert HTML rendered on the back end via dangerouslySetInnerHTML","0","<p>I used to compile and insert JSX components via</p>

<pre><code>&lt;div key={ ID } dangerouslySetInnerHTML={ { __html: HTML } } /&gt;
</code></pre>

<p>which wrapped my HTML into a <code>&lt;div&gt;</code>:</p>

<pre><code>&lt;div&gt;my html from the HTML object&lt;/div&gt;
</code></pre>

<p>Now <a href=""https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html"" rel=""nofollow noreferrer"">react > 16.2.0 has support for Fragments</a> and I wonder if I can use that somehow to avoid wrapping my HTML in a <code>&lt;div&gt;</code> each time I get data from the back end.</p>

<p>Running </p>

<pre><code>&lt;Fragment key={ ID } dangerouslySetInnerHTML={ { __html: HTML } } /&gt;
</code></pre>

<p>will throw a warning</p>

<pre><code>Warning: Invalid prop `dangerouslySetInnerHTML` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.
in React.Fragment
</code></pre>

<p>Is this supported yet at all? Is there another way to solve this?</p>

<h1>Update</h1>

<p>Created an <a href=""https://github.com/facebook/react/issues/12014"" rel=""nofollow noreferrer"">issue in the react repo</a> for it if you want to upvote it.</p>
",""
"48405132","Fragments when updating to react 16.2.0 is not working","9","<p>I update my react version to 16.2.0 and I use Fragment to wrap some components. So I write:</p>

<pre><code>import React from 'react;
</code></pre>

<p>And the I write:</p>

<pre><code>const CustomerSearch = () =&gt; (
 &lt;React.Fragment&gt;
        &lt;Field
          id=""lastname""
          name=""lastname""
          floatingLabelText=""ΕΠΩΝΥΜΟ""
          floatingLabelStyle={styles.floatingLabelStyle}
          floatingLabelFocusStyle={styles.floatingLabelFocusStyle}
          underlineStyle={styles.underlineStyle}
          underlineFocusStyle={styles.underlineFocusStyle}
          component={InputTextField}
        /&gt;
        &lt;br /&gt;
        &lt;Field
          id=""firstname""
          name=""firstname""
          floatingLabelText=""ΟΝΟΜΑ""
          floatingLabelStyle={styles.floatingLabelStyle}
          floatingLabelFocusStyle={styles.floatingLabelFocusStyle}
          underlineStyle={styles.underlineStyle}
          underlineFocusStyle={styles.underlineFocusStyle}
          component={InputTextField}
        /&gt;
        &lt;br /&gt;
        &lt;Field
          id=""companyName""
          name=""companyName""
          floatingLabelText=""ΟΝΟΜΑ ΕΤΑΙΡΕΙΑΣ""
          floatingLabelStyle={styles.floatingLabelStyle}
          floatingLabelFocusStyle={styles.floatingLabelFocusStyle}
          underlineStyle={styles.underlineStyle}
          underlineFocusStyle={styles.underlineFocusStyle}
          component={InputTextField}
        /&gt;
        &lt;br /&gt;
        &lt;Field
          id=""mobile""
          name=""mobile""
          floatingLabelText=""ΚΙΝΗΤΟ""
          floatingLabelStyle={styles.floatingLabelStyle}
          floatingLabelFocusStyle={styles.floatingLabelFocusStyle}
          underlineStyle={styles.underlineStyle}
          underlineFocusStyle={styles.underlineFocusStyle}
          component={InputTextField}
        /&gt;
        &lt;br /&gt;
        &lt;Field
          id=""generatorSN""
          name=""generatorSN""
          floatingLabelText=""GENERATOR SN""
          floatingLabelStyle={styles.floatingLabelStyle}
          floatingLabelFocusStyle={styles.floatingLabelFocusStyle}
          underlineStyle={styles.underlineStyle}
          underlineFocusStyle={styles.underlineFocusStyle}
          component={InputTextField}
        /&gt;
        &lt;br /&gt;
      &lt;/React.Fragment&gt;
)

export default CustomerSearch
</code></pre>

<p>But I'm getting an error that:</p>

<blockquote>
  <p>Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in. Check the render method of <code>CustomerSearch</code>.</p>
</blockquote>

<p>Why is that happening? I used a div and it worked fine. Thanks</p>
","it might be a loader problem - just because you updated React doesn't mean the changes in jsx involved to make this happen are present - be sure to upgrade all dependencies in the build chain and try again - the code you pasted doesn't look wrong so its time to look elsewhere."
"48715166","Map over Fragment in React 16","0","<p>I am trying to map over the children of a fragment that is in turn a child of a component. For example:</p>

<pre><code>const Frag = () =&gt; (
  &lt;React.Fragment key=""test-key""&gt;
    &lt;div&gt;test1&lt;/div&gt;
    &lt;div&gt;test2&lt;/div&gt;
  &lt;/React.Fragment&gt;
);

const Outer = ({ children }) =&gt; (
  &lt;div&gt;
    {
      React.Children.map(children, (child) =&gt; (
        &lt;a&gt;
          {child}
        &lt;/a&gt;
      ))
    }
  &lt;/div&gt;
);

// Usage
&lt;Outer&gt;
  &lt;Frag /&gt;
&lt;/Outer&gt;
</code></pre>

<p>This will result in a single <code>a</code> tag even though the fragment has multiple divs inside of it. The docs (<a href=""https://reactjs.org/docs/react-api.html#reactchildrenmap"" rel=""nofollow noreferrer"">https://reactjs.org/docs/react-api.html#reactchildrenmap</a>) seem to indicate that this should work with a keyed fragment and I think I am creating a keyed fragment correctly (<a href=""https://reactjs.org/docs/fragments.html#keyed-fragments"" rel=""nofollow noreferrer"">https://reactjs.org/docs/fragments.html#keyed-fragments</a>). Any help would be appreciated!</p>
",""
"48975515","How to render element conditionally in react","0","<p>I am using mobx + react setup for this subpage to make a searchable list of users. My list of items is not rendering with if statement. In the solution I am trying to render one of two lists in my subpage. Depending on boolean 'isSearching'. First element should be shown when input field is empty, and second one is when input field has value written. They are same arrays, Only difference between lists arrays are that one of them is filtered.</p>

<p><strong>Code:</strong></p>

<pre><code> &lt;ul className='items__block'&gt;
    {
        this.props.PeopleStore.people.isSearching = false ?
            (this.props.PeopleStore.people.map(this.person))
        : 
            (this.props.PeopleStore.searchingList.map(this.person))
    }
&lt;/ul&gt;
</code></pre>

<p>Althought if I remove condition, it <strong>works separated:</strong></p>

<pre><code>&lt;ul className='items__block'&gt;
    {
       this.props.PeopleStore.people.map(this.person)
    }
&lt;/ul&gt;


&lt;ul className='items__block'&gt;
    {
       this.props.PeopleStore.people.map(this.person)
    }
&lt;/ul&gt;
</code></pre>

<p><strong>Store file:</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code> import { runInAction, observable, action, toJS } from 'mobx';
    // ES7 compiler
    import regeneratorRuntime from 'regenerator-runtime';

    class PeopleStore {
        @observable people = [];
        @observable loading = false;
        @observable isSearching = false;
        @observable searchingList = [];

    // API call
    loadPeople = async() =&gt; {
        this.loading = true;
        const response = await fetch('https://randomuser.me/api/?results=71');
        const json = await response.json();
        runInAction(() =&gt; {
            this.people = json.results;
        });
        this.loading = false;
        console.log(toJS(this.people));
    }

    // this function is called by onChange event
    @action.bound filterList = textTyped =&gt; {
       // changing boolean to identify if input is empty or not
        if (textTyped.target.value.length &lt; 1) {
            this.isSearching = false;
        } else {
            this.isSearching = true;
        }
        
        console.log(this.isSearching);
        
        let peoplesNames = [];
        for (let i = 0; i &lt; this.people.length; i++) {
            peoplesNames.push(toJS(this.people[i]));
        }
        peoplesNames = peoplesNames.filter(function(item) {
            return item.name.first.toLowerCase().search(textTyped.target.value.toLowerCase()) !== -1
        });
        
        this.searchingList = peoplesNames;
    // tracking both arrays, they both work
        console.log(toJS(this.searchingList));
        console.log(toJS(this.people));
        }
    }

    export default new PeopleStore();</code></pre>
</div>
</div>
</p>

<p><strong>Component file:</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>@inject('showHandler', 'PeopleStore') @observer
    class PickList extends React.Component {
    
    componentWillMount() {
        this.props.PeopleStore.loadPeople();
    }
    
    
    person = ({name, picture}, index) =&gt;
        &lt;li className=""items__block--user"" key={index} onClick={this.props.PeopleStore.selectPerson}&gt;
            &lt;img className=""user--image"" src={picture.medium} alt=""face"" /&gt;
            &lt;span className=""user--name""&gt;{`${name.first} ${name.last}`}&lt;/span&gt;
        &lt;/li&gt;;

    render() {
        if (this.props.PeopleStore.loading) {
            return (
                &lt;div className=""loader""&gt;&lt;/div&gt;
            );
        }

        return (
            &lt;React.Fragment&gt;
                &lt;input className=""users__block--input"" onChange={this.props.PeopleStore.filterList}&gt;&lt;/input&gt;
                &lt;ul className='items__block'&gt;
                    {
                    this.props.PeopleStore.people.isSearching = false //checks mobx prop
                    ?
                    (this.props.PeopleStore.people.map(this.person))
                    : 
                    (this.props.PeopleStore.searchingList.map(this.person))
                    }
                &lt;/ul&gt;</code></pre>
</div>
</div>
</p>

<p>Why is it not working? On page render <strong>isSearching</strong> prop is set to <strong>false</strong> and that should effect the if statement as it is.</p>
",""
"49011111","How to set variables in react component for a relay fragment?","0","<p>I am new to relay. I have read various answers on this topic but none has made it clear how to set variables from a react component for a relay fragment. I am using relay modern. I believe this is how to write a fragment that is expecting a variable. In the documentation it states that: ""Any arguments defined inside @argumentDefinitions will be local variables available inside the fragment's scope. "" I am also unclear what the fragment scope here is and I think I understand what this means then I would be closer to the answer I am looking for. I think in relay classic you would do something like this inside the component: </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>this.props.relay.setVariables({ id: ""something""})</code></pre>
</div>
</div>
</p>

<p>This is what my fragment looks like</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>export default createFragmentContainer(
  Posts,
  graphql`
    fragment Post_Viewer on Viewer @argumentDefinitions( id: { type: ""String"" }) {
      User(id: $id) {
        firstName
        lastName
      }
    }
   `
  )</code></pre>
</div>
</div>
</p>
",""
"49069746","Workaround to add className to Fragment in React","3","<p>I am trying to create a stateless component in React with the sole purpose of acting as a reusable wrapper. I am also using CSS Modules because I want to have fully modular CSS.</p>

<p>The thing is I don't want to add unnecessary elements (and even more so <code>&lt;div&gt;</code>s), but instead I want to use React's Fragments.</p>

<p>Now, the problem I have is Fragment (at least for now) do not accept classNames. So if I try this:</p>

<p>// In Wrapper.js:</p>

<pre><code>import React, { Fragment } from 'react'
import styles from './Wrapper.css'

const wrapper = (props) =&gt; (
    &lt;Fragment className={styles.wrapper}&gt;
        {props.children}
    &lt;/Fragment&gt;
)

export default wrapper
</code></pre>

<p>In (for example) Navbar.js:</p>

<pre><code>import React from 'react'
import styles from './Navbar.css'
import Wrapper from '../../Layout/Wrapper'

const navBar = (props) =&gt; (
    &lt;nav className={styles.navBar}&gt;
        &lt;Wrapper&gt;
            This is the site's main navigation bar.
        &lt;/Wrapper&gt;
    &lt;/nav&gt;
)

export default navBar
</code></pre>

<p>Now I can of course, use a div instead of the Fragment, but is there any other workaround to avoid using unnecessary markup, of which I am totally unaware at this hour of the night? :)</p>

<p>Thanks in advance for any insight, recommendation, correction, or any other form of help!</p>
","Why not use a `<div>` instead of a fragment? I haven't used fragments yet but it is my understanding that they are just for wrapping a group of components in JSX but doesn't actually render a wrapping element in the dom. Where as a div will actually wrap the elements in a div. Correct me if I'm wrong though..."
"49069746","Workaround to add className to Fragment in React","3","<p>I am trying to create a stateless component in React with the sole purpose of acting as a reusable wrapper. I am also using CSS Modules because I want to have fully modular CSS.</p>

<p>The thing is I don't want to add unnecessary elements (and even more so <code>&lt;div&gt;</code>s), but instead I want to use React's Fragments.</p>

<p>Now, the problem I have is Fragment (at least for now) do not accept classNames. So if I try this:</p>

<p>// In Wrapper.js:</p>

<pre><code>import React, { Fragment } from 'react'
import styles from './Wrapper.css'

const wrapper = (props) =&gt; (
    &lt;Fragment className={styles.wrapper}&gt;
        {props.children}
    &lt;/Fragment&gt;
)

export default wrapper
</code></pre>

<p>In (for example) Navbar.js:</p>

<pre><code>import React from 'react'
import styles from './Navbar.css'
import Wrapper from '../../Layout/Wrapper'

const navBar = (props) =&gt; (
    &lt;nav className={styles.navBar}&gt;
        &lt;Wrapper&gt;
            This is the site's main navigation bar.
        &lt;/Wrapper&gt;
    &lt;/nav&gt;
)

export default navBar
</code></pre>

<p>Now I can of course, use a div instead of the Fragment, but is there any other workaround to avoid using unnecessary markup, of which I am totally unaware at this hour of the night? :)</p>

<p>Thanks in advance for any insight, recommendation, correction, or any other form of help!</p>
","If you want a className, this className will have to apply to an element, no ? And Fragments do not render any element, so you can't use a className with it."
"49069746","Workaround to add className to Fragment in React","3","<p>I am trying to create a stateless component in React with the sole purpose of acting as a reusable wrapper. I am also using CSS Modules because I want to have fully modular CSS.</p>

<p>The thing is I don't want to add unnecessary elements (and even more so <code>&lt;div&gt;</code>s), but instead I want to use React's Fragments.</p>

<p>Now, the problem I have is Fragment (at least for now) do not accept classNames. So if I try this:</p>

<p>// In Wrapper.js:</p>

<pre><code>import React, { Fragment } from 'react'
import styles from './Wrapper.css'

const wrapper = (props) =&gt; (
    &lt;Fragment className={styles.wrapper}&gt;
        {props.children}
    &lt;/Fragment&gt;
)

export default wrapper
</code></pre>

<p>In (for example) Navbar.js:</p>

<pre><code>import React from 'react'
import styles from './Navbar.css'
import Wrapper from '../../Layout/Wrapper'

const navBar = (props) =&gt; (
    &lt;nav className={styles.navBar}&gt;
        &lt;Wrapper&gt;
            This is the site's main navigation bar.
        &lt;/Wrapper&gt;
    &lt;/nav&gt;
)

export default navBar
</code></pre>

<p>Now I can of course, use a div instead of the Fragment, but is there any other workaround to avoid using unnecessary markup, of which I am totally unaware at this hour of the night? :)</p>

<p>Thanks in advance for any insight, recommendation, correction, or any other form of help!</p>
","Yeah, putting it your way, it made complete sense to me, @ChrisR. Thanks!"
"49094455","Why Fragments in React 16 is better than containers?","0","<p>So, I learn React in Depth and now I'm studing on React Fragments. As it described in official docs <a href=""https://reactjs.org/docs/fragments.html"" rel=""nofollow noreferrer"">https://reactjs.org/docs/fragments.html</a> , Fragments are very interesting way to return multiple elements. But I cannot figure out than it is better than the usual component and the transfer of the child through it?</p>
",""
"49251167","React Router routes not working on nginx create-react-app","7","<p>I'm using <code>""react-router-dom"": ""^4.2.2""</code>. </p>

<p>If I test on <code>localhost:3000/second</code> it works perfectly. </p>

<p>When I upload this on ubuntu server with nginx and I try <code>www.website.com</code>, it works . When I try to use <code>www.website.com/second</code> it gives me <code>404 not found</code>. I'm using <code>create-react-app</code>. </p>

<p><strong>app.js</strong></p>

<pre><code>class TestRoutes extends React.Component{
    constructor(props){
        super(props);
    }
    render(){
        return(&lt;React.Fragment&gt;
            &lt;BrowserRouter&gt;
                &lt;Switch&gt;
                    &lt;Route exact path='/' component={MainPage}/&gt;
                    &lt;Route path='/second' component={SecondPage}/&gt;
                    &lt;Route path='/third' component={ThirdPage}/&gt;
                &lt;/Switch&gt;
            &lt;/BrowserRouter&gt;
                &lt;/React.Fragment&gt;);
    }
}

ReactDOM.render(&lt;TestRoutes/&gt;, document.getElementById(""root""));
</code></pre>

<p><strong>/etc/nginx/sites-available/default</strong>
Here's the configuration file from the server</p>

<pre><code>server {
        listen 443 ssl;

    root /var/www/reactcamera/build;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;
    server_name website.com www.website.com;
    ssl_certificate /etc/letsencrypt/live/website.com/fullchain.pem; # 
    managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/website.com/privkey.pem; # 
    managed by Certbot


    location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
    }
</code></pre>
","There are so many things that could be going wrong here. Do you have a redirect to the dist directory that create-react-app makes on yarn build? Did you build? Etc..."
"49251167","React Router routes not working on nginx create-react-app","7","<p>I'm using <code>""react-router-dom"": ""^4.2.2""</code>. </p>

<p>If I test on <code>localhost:3000/second</code> it works perfectly. </p>

<p>When I upload this on ubuntu server with nginx and I try <code>www.website.com</code>, it works . When I try to use <code>www.website.com/second</code> it gives me <code>404 not found</code>. I'm using <code>create-react-app</code>. </p>

<p><strong>app.js</strong></p>

<pre><code>class TestRoutes extends React.Component{
    constructor(props){
        super(props);
    }
    render(){
        return(&lt;React.Fragment&gt;
            &lt;BrowserRouter&gt;
                &lt;Switch&gt;
                    &lt;Route exact path='/' component={MainPage}/&gt;
                    &lt;Route path='/second' component={SecondPage}/&gt;
                    &lt;Route path='/third' component={ThirdPage}/&gt;
                &lt;/Switch&gt;
            &lt;/BrowserRouter&gt;
                &lt;/React.Fragment&gt;);
    }
}

ReactDOM.render(&lt;TestRoutes/&gt;, document.getElementById(""root""));
</code></pre>

<p><strong>/etc/nginx/sites-available/default</strong>
Here's the configuration file from the server</p>

<pre><code>server {
        listen 443 ssl;

    root /var/www/reactcamera/build;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;
    server_name website.com www.website.com;
    ssl_certificate /etc/letsencrypt/live/website.com/fullchain.pem; # 
    managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/website.com/privkey.pem; # 
    managed by Certbot


    location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
    }
</code></pre>
","Can you show your nginx config file"
"49251167","React Router routes not working on nginx create-react-app","7","<p>I'm using <code>""react-router-dom"": ""^4.2.2""</code>. </p>

<p>If I test on <code>localhost:3000/second</code> it works perfectly. </p>

<p>When I upload this on ubuntu server with nginx and I try <code>www.website.com</code>, it works . When I try to use <code>www.website.com/second</code> it gives me <code>404 not found</code>. I'm using <code>create-react-app</code>. </p>

<p><strong>app.js</strong></p>

<pre><code>class TestRoutes extends React.Component{
    constructor(props){
        super(props);
    }
    render(){
        return(&lt;React.Fragment&gt;
            &lt;BrowserRouter&gt;
                &lt;Switch&gt;
                    &lt;Route exact path='/' component={MainPage}/&gt;
                    &lt;Route path='/second' component={SecondPage}/&gt;
                    &lt;Route path='/third' component={ThirdPage}/&gt;
                &lt;/Switch&gt;
            &lt;/BrowserRouter&gt;
                &lt;/React.Fragment&gt;);
    }
}

ReactDOM.render(&lt;TestRoutes/&gt;, document.getElementById(""root""));
</code></pre>

<p><strong>/etc/nginx/sites-available/default</strong>
Here's the configuration file from the server</p>

<pre><code>server {
        listen 443 ssl;

    root /var/www/reactcamera/build;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;
    server_name website.com www.website.com;
    ssl_certificate /etc/letsencrypt/live/website.com/fullchain.pem; # 
    managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/website.com/privkey.pem; # 
    managed by Certbot


    location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
    }
</code></pre>
","nginx.conf? So you have it pointing to something when you go to the URL?"
"49251167","React Router routes not working on nginx create-react-app","7","<p>I'm using <code>""react-router-dom"": ""^4.2.2""</code>. </p>

<p>If I test on <code>localhost:3000/second</code> it works perfectly. </p>

<p>When I upload this on ubuntu server with nginx and I try <code>www.website.com</code>, it works . When I try to use <code>www.website.com/second</code> it gives me <code>404 not found</code>. I'm using <code>create-react-app</code>. </p>

<p><strong>app.js</strong></p>

<pre><code>class TestRoutes extends React.Component{
    constructor(props){
        super(props);
    }
    render(){
        return(&lt;React.Fragment&gt;
            &lt;BrowserRouter&gt;
                &lt;Switch&gt;
                    &lt;Route exact path='/' component={MainPage}/&gt;
                    &lt;Route path='/second' component={SecondPage}/&gt;
                    &lt;Route path='/third' component={ThirdPage}/&gt;
                &lt;/Switch&gt;
            &lt;/BrowserRouter&gt;
                &lt;/React.Fragment&gt;);
    }
}

ReactDOM.render(&lt;TestRoutes/&gt;, document.getElementById(""root""));
</code></pre>

<p><strong>/etc/nginx/sites-available/default</strong>
Here's the configuration file from the server</p>

<pre><code>server {
        listen 443 ssl;

    root /var/www/reactcamera/build;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;
    server_name website.com www.website.com;
    ssl_certificate /etc/letsencrypt/live/website.com/fullchain.pem; # 
    managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/website.com/privkey.pem; # 
    managed by Certbot


    location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
    }
</code></pre>
","Yes, I cloned it from git and did `npm install` and `npm run build`."
"49251167","React Router routes not working on nginx create-react-app","7","<p>I'm using <code>""react-router-dom"": ""^4.2.2""</code>. </p>

<p>If I test on <code>localhost:3000/second</code> it works perfectly. </p>

<p>When I upload this on ubuntu server with nginx and I try <code>www.website.com</code>, it works . When I try to use <code>www.website.com/second</code> it gives me <code>404 not found</code>. I'm using <code>create-react-app</code>. </p>

<p><strong>app.js</strong></p>

<pre><code>class TestRoutes extends React.Component{
    constructor(props){
        super(props);
    }
    render(){
        return(&lt;React.Fragment&gt;
            &lt;BrowserRouter&gt;
                &lt;Switch&gt;
                    &lt;Route exact path='/' component={MainPage}/&gt;
                    &lt;Route path='/second' component={SecondPage}/&gt;
                    &lt;Route path='/third' component={ThirdPage}/&gt;
                &lt;/Switch&gt;
            &lt;/BrowserRouter&gt;
                &lt;/React.Fragment&gt;);
    }
}

ReactDOM.render(&lt;TestRoutes/&gt;, document.getElementById(""root""));
</code></pre>

<p><strong>/etc/nginx/sites-available/default</strong>
Here's the configuration file from the server</p>

<pre><code>server {
        listen 443 ssl;

    root /var/www/reactcamera/build;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;
    server_name website.com www.website.com;
    ssl_certificate /etc/letsencrypt/live/website.com/fullchain.pem; # 
    managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/website.com/privkey.pem; # 
    managed by Certbot


    location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
    }
</code></pre>
","I restarted the nginx service by `sudo service nginx restart`. The defult path to `www.website.com` works, but when I type `www.website.com/second` it gives me 404. Do I need to somehow tell the server about each path?"
"49251167","React Router routes not working on nginx create-react-app","7","<p>I'm using <code>""react-router-dom"": ""^4.2.2""</code>. </p>

<p>If I test on <code>localhost:3000/second</code> it works perfectly. </p>

<p>When I upload this on ubuntu server with nginx and I try <code>www.website.com</code>, it works . When I try to use <code>www.website.com/second</code> it gives me <code>404 not found</code>. I'm using <code>create-react-app</code>. </p>

<p><strong>app.js</strong></p>

<pre><code>class TestRoutes extends React.Component{
    constructor(props){
        super(props);
    }
    render(){
        return(&lt;React.Fragment&gt;
            &lt;BrowserRouter&gt;
                &lt;Switch&gt;
                    &lt;Route exact path='/' component={MainPage}/&gt;
                    &lt;Route path='/second' component={SecondPage}/&gt;
                    &lt;Route path='/third' component={ThirdPage}/&gt;
                &lt;/Switch&gt;
            &lt;/BrowserRouter&gt;
                &lt;/React.Fragment&gt;);
    }
}

ReactDOM.render(&lt;TestRoutes/&gt;, document.getElementById(""root""));
</code></pre>

<p><strong>/etc/nginx/sites-available/default</strong>
Here's the configuration file from the server</p>

<pre><code>server {
        listen 443 ssl;

    root /var/www/reactcamera/build;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;
    server_name website.com www.website.com;
    ssl_certificate /etc/letsencrypt/live/website.com/fullchain.pem; # 
    managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/website.com/privkey.pem; # 
    managed by Certbot


    location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
    }
</code></pre>
","Did you restart nginx ? Did you make a link to the `/etc/nginx/sites-enabled` ?"
"49251167","React Router routes not working on nginx create-react-app","7","<p>I'm using <code>""react-router-dom"": ""^4.2.2""</code>. </p>

<p>If I test on <code>localhost:3000/second</code> it works perfectly. </p>

<p>When I upload this on ubuntu server with nginx and I try <code>www.website.com</code>, it works . When I try to use <code>www.website.com/second</code> it gives me <code>404 not found</code>. I'm using <code>create-react-app</code>. </p>

<p><strong>app.js</strong></p>

<pre><code>class TestRoutes extends React.Component{
    constructor(props){
        super(props);
    }
    render(){
        return(&lt;React.Fragment&gt;
            &lt;BrowserRouter&gt;
                &lt;Switch&gt;
                    &lt;Route exact path='/' component={MainPage}/&gt;
                    &lt;Route path='/second' component={SecondPage}/&gt;
                    &lt;Route path='/third' component={ThirdPage}/&gt;
                &lt;/Switch&gt;
            &lt;/BrowserRouter&gt;
                &lt;/React.Fragment&gt;);
    }
}

ReactDOM.render(&lt;TestRoutes/&gt;, document.getElementById(""root""));
</code></pre>

<p><strong>/etc/nginx/sites-available/default</strong>
Here's the configuration file from the server</p>

<pre><code>server {
        listen 443 ssl;

    root /var/www/reactcamera/build;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;
    server_name website.com www.website.com;
    ssl_certificate /etc/letsencrypt/live/website.com/fullchain.pem; # 
    managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/website.com/privkey.pem; # 
    managed by Certbot


    location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
    }
</code></pre>
","Added the configuration file to the original post."
"49252594","Downgrade to react 15.6.2 from react 16.2.0 failed","10","<p>I recently upgraded to react <code>16.2.0</code> from react <code>15.6.2</code>
Now my application doesnt work as expected and has lot of warnings for dependancies on react <code>15.6.2</code>
So for me now its not possible to upgrade all other dependencies to <code>16.2.0.</code> because of the time schedule.
Hence I want to downgrade to react <code>15.6.2</code></p>

<p>I ran following commands to install react 15.6.2 again:</p>

<pre><code>npm install react@^15.6.2
</code></pre>

<p>I am getting following error :</p>

<pre><code>+-- UNMET PEER DEPENDENCY react@15.6.2 invalid
`-- UNMET PEER DEPENDENCY react-dom@16.2.0
</code></pre>

<p>When I update my package.json to <code>""react"": ""^15.6.2""</code>, I get following error:</p>

<pre><code>npm ERR! Linux 3.13.0-36-generic
npm ERR! argv ""/home/rakesh/.nvm/versions/node/v6.9.4/bin/node"" ""/home/rakesh/.nvm/versions/node/v6.9.4/bin/npm"" ""install""
npm ERR! node v6.9.4
npm ERR! npm  v3.10.10
npm ERR! code EBADPLATFORM

npm ERR! notsup Unsupported platform for fsevents@1.1.3: wanted {""os"":""darwin"",""arch"":""any""} (current: {""os"":""linux"",""arch"":""x64""})
npm ERR! notsup Valid OS:    darwin
npm ERR! notsup Valid Arch:  any
npm ERR! notsup Actual OS:   linux
npm ERR! notsup Actual Arch: x64

npm ERR! Please include the following file with any support request:
npm ERR!     /home/rakesh/rockethire/development/codebase/recruitment/rh-react/npm-debug.log
</code></pre>

<p>Below is my <code>package.json</code></p>

<pre><code>{
  ""name"": ""rh-react"",
  ""version"": ""1.0.0"",
  ""description"": ""Pages accessible for outside world"",
  ""main"": ""index.js"",
  ""scripts"": {
    ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1"",
    ""dev"": ""webpack -d --watch"",
    ""build"": ""sh -ac '. .env; webpack -d'"",
    ""build:test"": ""sh -ac '. .env.test; webpack -p'"",
    ""build:prod"": ""sh -ac '. .env.prod; webpack -p'""
  },
  ""author"": """",
  ""license"": ""ISC"",
  ""dependencies"": {
    ""ag-grid"": ""^13.3.1"",
    ""ag-grid-react"": ""^13.3.0"",
    ""axios"": ""^0.17.1"",
    ""babel-loader"": ""^7.1.2"",
    ""babel-plugin-add-module-exports"": ""^0.2.1"",
    ""babel-preset-es2015"": ""^6.24.1"",
    ""babel-preset-react"": ""^6.24.1"",
    ""bootstrap"": ""^3.3.7"",
    ""classnames"": ""^2.2.5"",
    ""dotenv"": ""^4.0.0"",
    ""fsevents"": ""^1.1.3"",
    ""jquery"": ""^3.2.1"",
    ""moment"": ""^2.19.1"",
    ""query-string"": ""^5.0.0"",
    ""react"": ""^16.2.0"",
    ""react-async-script-loader"": ""^0.3.0"",
    ""react-click-outside"": ""^3.0.0"",
    ""react-cookies"": ""^0.1.0"",
    ""react-datepicker"": ""^0.61.0"",
    ""react-datetime"": ""^2.11.1"",
    ""react-dom"": ""^16.2.0"",
    ""react-dom-factories"": ""^1.0.2"",
    ""react-dropzone"": ""^4.2.3"",
    ""react-dropzone-component"": ""^3.0.0"",
    ""react-moment"": ""^0.6.5"",
    ""react-notifications"": ""^1.4.3"",
    ""react-nvd3"": ""^0.5.7"",
    ""react-router"": ""^2.8.1"",
    ""react-router-dom"": ""^4.2.2"",
    ""react-scripts"": ""^1.0.17"",
    ""react-select"": ""^1.0.0-rc.10"",
    ""react-select2-wrapper"": ""^1.0.4-beta5"",
    ""reactjs-localstorage"": ""0.0.5"",
    ""webpack"": ""^3.9.1"",
    ""whatwg-fetch"": ""^2.0.3""
  },
  ""devDependencies"": {
    ""babel-core"": ""^6.26.0"",
    ""babel-loader"": ""^7.1.2"",
    ""babel-preset-env"": ""^1.6.0"",
    ""babel-preset-stage-0"": ""^6.24.1"",
    ""compression-webpack-plugin"": ""^1.0.1"",
    ""css-loader"": ""^0.28.7"",
    ""eslint"": ""^4.11.0"",
    ""eslint-plugin-react"": ""^7.5.1"",
    ""style-loader"": ""^0.19.0"",
    ""uglifyjs-webpack-plugin"": ""^1.1.2"",
    ""webpack"": ""^3.6.0"",
    ""webpack-bundle-analyzer"": ""^2.9.1""
  }
}
</code></pre>

<p>Anyone has idea why I am unable to downgrade?</p>
","Hi @nkr, my npm install ran successfully with `sudo npm install`. But it gave lot of warnings. My code built successfully with `npm run build`. But now when I run my application it gives me below errors:  1.`Uncaught Error: Objects are not valid as a React child (found: object with keys {}). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons. Check the render method`  2.`Uncaught TypeError: Cannot read property '__reactInternalInstance$z6r26ib5q9a' of null`"
"49320552","Flow errors on <React.Fragment> or <></>, but not <Fragment>","2","<p>I am using <code>react</code> <strong>v16.3.0</strong> and <code>flow-bin</code> <strong>v0.69.0</strong></p>

<p>Using react <a href=""https://reactjs.org/docs/fragments.html"" rel=""nofollow noreferrer"">Fragments</a> with either <code>&lt;React.Fragment&gt;</code> or the shorthand <code>&lt;&gt;&lt;/&gt;</code> syntax like so</p>

<pre><code>import React from 'react'

const ComponentA = () =&gt; (
  &lt;React.Fragment&gt;
    &lt;div&gt;Component&lt;/div&gt;
    &lt;div&gt;A&lt;/div&gt;
  &lt;/React.Fragment&gt;
)

const ComponentB = () =&gt; (
  &lt;&gt;
    &lt;div&gt;Component&lt;/div&gt;
    &lt;div&gt;B&lt;/div&gt;
  &lt;/&gt;
)
</code></pre>

<p>Flow complains with the following error (it's an indentical error for both, just showing output for <code>ComponentA</code> here)</p>

<pre><code>Cannot get React.Fragment because property Fragment is missing in object type [1].

  24│ const ComponentA = () =&gt; (
  25│   &lt;React.Fragment&gt;
  26│     &lt;div&gt;Component&lt;/div&gt;
  27│     &lt;div&gt;A&lt;/div&gt;
  28│   &lt;/React.Fragment&gt;

 /private/tmp/flow/flowlib_2349df3a/react.js
 251│   declare export default {|
 252│     +DOM: typeof DOM,
 253│     +PropTypes: typeof PropTypes,
 254│     +version: typeof version,
 255│     +initializeTouchEvents: typeof initializeTouchEvents,
 256│     +checkPropTypes: typeof checkPropTypes,
 257│     +createClass: typeof createClass,
 258│     +createElement: typeof createElement,
 259│     +cloneElement: typeof cloneElement,
 260│     +createFactory: typeof createFactory,
 261│     +isValidElement: typeof isValidElement,
 262│     +Component: typeof Component,
 263│     +PureComponent: typeof PureComponent,
 264│     +Children: typeof Children,
 265│   |};
</code></pre>

<p>With an explicit import of <code>Fragment</code>, however, flow does not complain.</p>

<pre><code>import { Fragment, default as React } from 'react'

const ComponentC = () =&gt; (
  &lt;Fragment&gt;
    &lt;div&gt;Component&lt;/div&gt;
    &lt;div&gt;C&lt;/div&gt;
  &lt;/Fragment&gt;
)
</code></pre>

<p>What is going on here? I would like to use the <code>&lt;&gt;&lt;/&gt;</code> Fragment shorthand syntax, and this issue is stopping me from doing that for now.</p>

<p>When I dig into the <code>react.js</code> lib def referenced in the error it does appear that the error is factually correct - the export of <code>Fragment</code> <em>is</em> defined and Fragment <em>is not</em> defined as a property on the default export.</p>

<p>But the flow docs <a href=""https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html#flow"" rel=""nofollow noreferrer"">state that flow has support for react Fragments</a>  from <strong>v0.59</strong> onwards.</p>

<p>So is this actually a gap in support that still exists? Or am I doing something wrong? Perhaps I somehow have an outdated lib def or have things configured wrong? I can't find anything googling for the error message, which leads me to suspect it's an issue with my setup. Also I can't quite believe that this wouldn't work out the box.</p>
","Issue is still present in React **16.3**. Have updated the question"
"49320552","Flow errors on <React.Fragment> or <></>, but not <Fragment>","2","<p>I am using <code>react</code> <strong>v16.3.0</strong> and <code>flow-bin</code> <strong>v0.69.0</strong></p>

<p>Using react <a href=""https://reactjs.org/docs/fragments.html"" rel=""nofollow noreferrer"">Fragments</a> with either <code>&lt;React.Fragment&gt;</code> or the shorthand <code>&lt;&gt;&lt;/&gt;</code> syntax like so</p>

<pre><code>import React from 'react'

const ComponentA = () =&gt; (
  &lt;React.Fragment&gt;
    &lt;div&gt;Component&lt;/div&gt;
    &lt;div&gt;A&lt;/div&gt;
  &lt;/React.Fragment&gt;
)

const ComponentB = () =&gt; (
  &lt;&gt;
    &lt;div&gt;Component&lt;/div&gt;
    &lt;div&gt;B&lt;/div&gt;
  &lt;/&gt;
)
</code></pre>

<p>Flow complains with the following error (it's an indentical error for both, just showing output for <code>ComponentA</code> here)</p>

<pre><code>Cannot get React.Fragment because property Fragment is missing in object type [1].

  24│ const ComponentA = () =&gt; (
  25│   &lt;React.Fragment&gt;
  26│     &lt;div&gt;Component&lt;/div&gt;
  27│     &lt;div&gt;A&lt;/div&gt;
  28│   &lt;/React.Fragment&gt;

 /private/tmp/flow/flowlib_2349df3a/react.js
 251│   declare export default {|
 252│     +DOM: typeof DOM,
 253│     +PropTypes: typeof PropTypes,
 254│     +version: typeof version,
 255│     +initializeTouchEvents: typeof initializeTouchEvents,
 256│     +checkPropTypes: typeof checkPropTypes,
 257│     +createClass: typeof createClass,
 258│     +createElement: typeof createElement,
 259│     +cloneElement: typeof cloneElement,
 260│     +createFactory: typeof createFactory,
 261│     +isValidElement: typeof isValidElement,
 262│     +Component: typeof Component,
 263│     +PureComponent: typeof PureComponent,
 264│     +Children: typeof Children,
 265│   |};
</code></pre>

<p>With an explicit import of <code>Fragment</code>, however, flow does not complain.</p>

<pre><code>import { Fragment, default as React } from 'react'

const ComponentC = () =&gt; (
  &lt;Fragment&gt;
    &lt;div&gt;Component&lt;/div&gt;
    &lt;div&gt;C&lt;/div&gt;
  &lt;/Fragment&gt;
)
</code></pre>

<p>What is going on here? I would like to use the <code>&lt;&gt;&lt;/&gt;</code> Fragment shorthand syntax, and this issue is stopping me from doing that for now.</p>

<p>When I dig into the <code>react.js</code> lib def referenced in the error it does appear that the error is factually correct - the export of <code>Fragment</code> <em>is</em> defined and Fragment <em>is not</em> defined as a property on the default export.</p>

<p>But the flow docs <a href=""https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html#flow"" rel=""nofollow noreferrer"">state that flow has support for react Fragments</a>  from <strong>v0.59</strong> onwards.</p>

<p>So is this actually a gap in support that still exists? Or am I doing something wrong? Perhaps I somehow have an outdated lib def or have things configured wrong? I can't find anything googling for the error message, which leads me to suspect it's an issue with my setup. Also I can't quite believe that this wouldn't work out the box.</p>
","This may be fixed in 16.3"
"49324042","chart js smith chart react wrapper","1","<p>I've been developing an app with <strong>Electron, React JS</strong> and <strong>Chart JS.</strong> I'm trying to wrap an extension of Chart JS called <a href=""https://github.com/chartjs/Chart.smith.js"" rel=""nofollow noreferrer"">Chart.smith.js</a> with React.</p>

<p>I tried first render it with plain html and javascript and it worked like expected.</p>

<p>Then i tried to wrap it with React but it keeps getting me this error: </p>

<pre><code>./src/components/Content/Graphs/SmithChart.jsx
Module not found: Can't resolve 'Chart.Smith' in 'C:\Users\dv_co\Documents\UNIVERSIDADE\POE\PRÁTICA\pocket-vna\src\components\Content\Graphs'
</code></pre>

<p>Here is my code:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React, { Component, Fragment } from 'react'
import Chart from 'chart.js'
require('Chart.Smith')

export default class SmithChart extends Component{

    componentDidMount(){
        var ctx = document.getElementById(""smith-chart"").getContext('2d');
        let  chartInstance = new Chart(ctx, 
            {
                type: 'smith',
                data: {
                    datasets: [{
                        data: [{
                            real: 0.1,
                            imag: 0
                        }, {
                            real: 1,
                            imag: 0
                        }, {
                            real: 0,
                            imag: -1
                        }, {
                            real: 20,
                            imag: 0
                        }],
                        label: 'Dataset 1',
                        borderColor: '#36A2EB',
                        pointBackgroundColor: '#36A2EB',
                        backgroundColor: 'rgba(54,162,235, 0.4)'
                    }]
                },
                options: {
                    title: {
                        display: true,
                        text: 'Smith Chart Extension'
                    },
                    legend: {
                        display: false
                    }
                }
            }
        );
    }
    
    render(){
        return(
            &lt;Fragment&gt;
                &lt;canvas id=""smith-chart"" className=""extra-large-chart""&gt;&lt;/canvas&gt;
            &lt;/Fragment&gt;
        )
    }
} </code></pre>
</div>
</div>
</p>
","Hey, it's Alex. Just a quick comment. This specific error happens because the import should be of 'Chart.Smith.js', not 'Chart.Smith'. Here's the lib on [npmjs.org](https://www.npmjs.com/package/Chart.Smith.js) for reference"
"49405425","how can i migrate my old js code to react?","3","<p>Hello everybody i'm working on reactjs i'm about migrating my js code to reactjs  here i have an issue if you want to help me thanks for advance 
   i puted this code edited by a good man</p>

<pre><code>       {props
        .data
        .releases
        .map((release, i) =&gt; &lt;Fragment key={i}&gt;
          &lt;tr&gt;
            &lt;td colspan={acts.length}&gt;{release.id}&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            {Object
              .keys(release.storiesByTasks)
              .map((storyByTasksKeys, i) =&gt; &lt;td key={i}&gt;
                &lt;ul&gt;
                  {release
                    .storiesByTasks[storyByTasksKeys]
                    .map((taskss, j) =&gt; &lt;li key={j}&gt;{taskss.id}&lt;/li&gt;)
}
                &lt;/ul&gt;
              &lt;/td&gt;)
}
          &lt;/tr&gt;
        &lt;/Fragment&gt;)
}
</code></pre>

<p>this is the data </p>

<pre><code>this.state = {
      data: {
    activities: [
      {
        id: 'A1',
        tasks: [
          {
            id: 'A1.T1'
          },
          {
            id: 'A1.T2'
          }
        ]
      },
      {
        id: 'A2',
        tasks: [
          {
            id: 'A2.T1'
          }
        ]
      },
      {
        id: 'A3',
        tasks: []
      }
    ],
    releases: [
      {
        id: 'R1',
        storiesByTasks: {
          'A1.T1': [
            {
              id: 'A1.T1.S1'
            },
            {
              id: 'A1.T1.S2'
            }
          ],
          'A1.T2': [
            {
              id: 'A1.T2.S1'
            },
            {
              id: 'A1.T2.S2'
            },
            {
              id: 'A1.T2.S3'
            }
          ],
        }
      },
      {
        id: 'R2',
        storiesByTasks: {
          'A1.T2': [
            {
              id: 'A1.T2.S4'
            },
            {
              id: 'A1.T2.S5'
            }
          ],
          'A2.T1': [
            {
              id: 'A2.T1.S1'
            }
          ]
        }
      }
    ]
  };
</code></pre>

<p>in the old js code i created a table named taskss yellow one  var taskss = []; where i pushed all the tasks from the data and i pushed emty object into it so i can display things like this <a href=""https://i.stack.imgur.com/3TzZX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3TzZX.png"" alt=""enter image description here""></a></p>

<p>i want the same in react it gives me this <a href=""https://i.stack.imgur.com/B5ifA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/B5ifA.png"" alt=""enter image description here""></a></p>
","click on and display this and see the big diffrence"
"49405425","how can i migrate my old js code to react?","3","<p>Hello everybody i'm working on reactjs i'm about migrating my js code to reactjs  here i have an issue if you want to help me thanks for advance 
   i puted this code edited by a good man</p>

<pre><code>       {props
        .data
        .releases
        .map((release, i) =&gt; &lt;Fragment key={i}&gt;
          &lt;tr&gt;
            &lt;td colspan={acts.length}&gt;{release.id}&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            {Object
              .keys(release.storiesByTasks)
              .map((storyByTasksKeys, i) =&gt; &lt;td key={i}&gt;
                &lt;ul&gt;
                  {release
                    .storiesByTasks[storyByTasksKeys]
                    .map((taskss, j) =&gt; &lt;li key={j}&gt;{taskss.id}&lt;/li&gt;)
}
                &lt;/ul&gt;
              &lt;/td&gt;)
}
          &lt;/tr&gt;
        &lt;/Fragment&gt;)
}
</code></pre>

<p>this is the data </p>

<pre><code>this.state = {
      data: {
    activities: [
      {
        id: 'A1',
        tasks: [
          {
            id: 'A1.T1'
          },
          {
            id: 'A1.T2'
          }
        ]
      },
      {
        id: 'A2',
        tasks: [
          {
            id: 'A2.T1'
          }
        ]
      },
      {
        id: 'A3',
        tasks: []
      }
    ],
    releases: [
      {
        id: 'R1',
        storiesByTasks: {
          'A1.T1': [
            {
              id: 'A1.T1.S1'
            },
            {
              id: 'A1.T1.S2'
            }
          ],
          'A1.T2': [
            {
              id: 'A1.T2.S1'
            },
            {
              id: 'A1.T2.S2'
            },
            {
              id: 'A1.T2.S3'
            }
          ],
        }
      },
      {
        id: 'R2',
        storiesByTasks: {
          'A1.T2': [
            {
              id: 'A1.T2.S4'
            },
            {
              id: 'A1.T2.S5'
            }
          ],
          'A2.T1': [
            {
              id: 'A2.T1.S1'
            }
          ]
        }
      }
    ]
  };
</code></pre>

<p>in the old js code i created a table named taskss yellow one  var taskss = []; where i pushed all the tasks from the data and i pushed emty object into it so i can display things like this <a href=""https://i.stack.imgur.com/3TzZX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3TzZX.png"" alt=""enter image description here""></a></p>

<p>i want the same in react it gives me this <a href=""https://i.stack.imgur.com/B5ifA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/B5ifA.png"" alt=""enter image description here""></a></p>
","Holy for loop Batman"
"49405425","how can i migrate my old js code to react?","3","<p>Hello everybody i'm working on reactjs i'm about migrating my js code to reactjs  here i have an issue if you want to help me thanks for advance 
   i puted this code edited by a good man</p>

<pre><code>       {props
        .data
        .releases
        .map((release, i) =&gt; &lt;Fragment key={i}&gt;
          &lt;tr&gt;
            &lt;td colspan={acts.length}&gt;{release.id}&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            {Object
              .keys(release.storiesByTasks)
              .map((storyByTasksKeys, i) =&gt; &lt;td key={i}&gt;
                &lt;ul&gt;
                  {release
                    .storiesByTasks[storyByTasksKeys]
                    .map((taskss, j) =&gt; &lt;li key={j}&gt;{taskss.id}&lt;/li&gt;)
}
                &lt;/ul&gt;
              &lt;/td&gt;)
}
          &lt;/tr&gt;
        &lt;/Fragment&gt;)
}
</code></pre>

<p>this is the data </p>

<pre><code>this.state = {
      data: {
    activities: [
      {
        id: 'A1',
        tasks: [
          {
            id: 'A1.T1'
          },
          {
            id: 'A1.T2'
          }
        ]
      },
      {
        id: 'A2',
        tasks: [
          {
            id: 'A2.T1'
          }
        ]
      },
      {
        id: 'A3',
        tasks: []
      }
    ],
    releases: [
      {
        id: 'R1',
        storiesByTasks: {
          'A1.T1': [
            {
              id: 'A1.T1.S1'
            },
            {
              id: 'A1.T1.S2'
            }
          ],
          'A1.T2': [
            {
              id: 'A1.T2.S1'
            },
            {
              id: 'A1.T2.S2'
            },
            {
              id: 'A1.T2.S3'
            }
          ],
        }
      },
      {
        id: 'R2',
        storiesByTasks: {
          'A1.T2': [
            {
              id: 'A1.T2.S4'
            },
            {
              id: 'A1.T2.S5'
            }
          ],
          'A2.T1': [
            {
              id: 'A2.T1.S1'
            }
          ]
        }
      }
    ]
  };
</code></pre>

<p>in the old js code i created a table named taskss yellow one  var taskss = []; where i pushed all the tasks from the data and i pushed emty object into it so i can display things like this <a href=""https://i.stack.imgur.com/3TzZX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3TzZX.png"" alt=""enter image description here""></a></p>

<p>i want the same in react it gives me this <a href=""https://i.stack.imgur.com/B5ifA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/B5ifA.png"" alt=""enter image description here""></a></p>
","how can i change them? dont know howa nested loop works in react"
"49537151","After trying every ""bugfix"" react-router redux push still not rerendering,","0","<p>we still have the issue that after push from 'react-router-redux' the url changes but the dom is not rerendering. Even after reading and trying:</p>

<ul>
<li><a href=""https://github.com/reactjs/react-redux/blob/master/docs/troubleshooting.md#my-views-arent-updating-when-something-changes-outside-of-redux"" rel=""nofollow noreferrer"">https://github.com/reactjs/react-redux/blob/master/docs/troubleshooting.md#my-views-arent-updating-when-something-changes-outside-of-redux</a></li>
<li><a href=""https://github.com/ReactTraining/react-router/issues/4924"" rel=""nofollow noreferrer"">https://github.com/ReactTraining/react-router/issues/4924</a></li>
<li><a href=""https://github.com/ReactTraining/react-router/blob/master/packages/react-router/docs/guides/redux.md"" rel=""nofollow noreferrer"">https://github.com/ReactTraining/react-router/blob/master/packages/react-router/docs/guides/redux.md</a></li>
</ul>

<p>app.js</p>

<pre><code>import React from 'react';
import { Reboot } from 'material-ui';
import { Switch, Route, BrowserRouter as Router, withRouter } from 'react-router-dom';

import Shell from '../Shell';
import Home from '../Home';
import Verify from '../Verified';
import Event from '../Event/EventWrapper';
import RoomWrapper from '../Room/RoomWrapper';
import Room from '../Room/RoomComponent';

const App = () =&gt; (
    &lt;React.Fragment&gt;
        &lt;Reboot/&gt;
        &lt;Router&gt;
            &lt;div&gt;
                &lt;Shell/&gt;
                &lt;Switch&gt;
                    &lt;Route exact path=""/"" component={Home}/&gt;
                    &lt;Route exact path=""/room"" component={RoomWrapper}/&gt;
                    &lt;Route path=""/room/:id"" component={Room}/&gt;
                    &lt;Route exact path=""/event"" component={Event}/&gt;
                    &lt;Route exact path=""/verify"" component={Verify}/&gt;
                &lt;/Switch&gt;
            &lt;/div&gt;
        &lt;/Router&gt;
    &lt;/React.Fragment&gt;
);

export default withRouter(App);
</code></pre>

<p>Component</p>

<pre><code>const mapDispatchToProps = dispatch =&gt; ({
    handleCreate: (roomName, roomHash) =&gt; {
        dispatch(valueRoomCreateWithRouteChange(roomName, roomHash));
    },
});

@withRouter
@connect(mapStateToProps, mapDispatchToProps)
@withStyles(styles)
class RoomCreate extends React.Component {
    state = {
        name: String,
    };

    handleChange = event =&gt; this.setState({ name: event.target.value });

    render() {
        const { name } = this.state;
        const {
            classes, handleCreate,
        } = this.props;

        return (
            &lt;React.Fragment&gt;
                &lt;div className={classes.relative}&gt;
                    &lt;TextField
                        className={classes.textField}
                        onChange={this.handleChange}
                        autoFocus
                        margin=""dense""
                        id=""name""
                        label=""Room name""
                        type=""text""
                        fullWidth
                        required/&gt;
                    &lt;Button raised color=""secondary""
                        onClick={() =&gt; {
                            handleCreate(name, randomString({ length: 5, letters: 'uppercase' }));
                        }}
                        className={classes.primary}&gt;
                        Create
                    &lt;/Button&gt;
                &lt;/div&gt;
            &lt;/React.Fragment&gt;
        );
    }
}
</code></pre>

<p>Action</p>

<pre><code>import { push } from 'react-router-redux';

export const ROOM_CREATE = 'ROOM_CREATE';

export const valueRoomCreate = (roomName, roomHash) =&gt; ({
    type: ROOM_CREATE,
    roomName,
    roomHash,
    created: true,
});

// TODO: Implement async method wi`enter code here`th router push

export const valueRoomCreateWithRouteChange = (roomName, roomHash) =&gt; (dispatch) =&gt; {
    dispatch(valueRoomCreate(roomName, roomHash));
    dispatch(push(`/room/${roomHash}`));
};
</code></pre>

<p>Thanks a lot guys</p>
",""
"49619386","React Fragment results in Element Type is Invalid Error in Visual Studio 2017","0","<p>I am encountering this error when attempting to use Fragments with React / Typescript with Visual Studio 2017:</p>

<p><strong>NodeInvocationException:</strong> Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: symbol.</p>

<p><strong>Stack:</strong></p>

<ul>
<li>react 16.3</li>
<li>react-dom 16.3</li>
<li>typescript 2.6.2</li>
</ul>

<p>I am also testing with sample code:</p>

<pre><code>public render() {
        return (
            &lt;&gt;
            Some text.
            &lt;h2&gt;A heading&lt;/h2&gt;
            More text.
            &lt;h2&gt;Another heading&lt;/h2&gt;
            Even more text.
          &lt;/&gt;
        );
    }
</code></pre>

<p>I found similar issues <a href=""https://stackoverflow.com/questions/48235692/jsx-fragment-syntax-generates-element-type-is-invalid"">here</a>. In his last comments Stephen Muhr says he updated his vendor.js bundle to get it to work without providing much details. From his comments, it sounds like he had an issue with upgrading to react 16.2. However, for me, I can verify that react 16.3 is running successfully (I output react version at runtime). So, it may not resolve my issue. I could not add to comments on that question since I am a new user.</p>

<p>Since the error is a server side error, I am thinking I am missing a configuration specifying the correct version of typescript. I used npm install typescript@2.6.2 and it exists in the node_modules folder. I also downloaded the TypeScript SDK for 2.6.2 and installed it. I've also set the project properties to Typescript 2.6 (and have also tried 'use latest'). None of these have worked.</p>

<p>I can not figure out how to output the typescript version being used at run-time.</p>

<p><strong>EDIT</strong>
The following returned different versions of typescript on my machine:
 - <strong>tsc -v</strong> yields 2.3.5. 
 - <strong>npm ls -g typescript</strong> yields 2.6.2. 
 - <strong>npm ls typescript</strong> yields 2.6.2. </p>

<p>So, it looks like tsc -v is out of date but I have no idea how to update it.</p>

<p>If anyone can offer any suggestions as to what may be causing this error, I would appreciate it. Thank you.</p>
",""
"49703053","Pattern for react components that require specific contained components","1","<p>What's the idiomatic React way to write a component that nests specific child components? I know how to write a component that simply wraps <code>props.children</code>, like this example from React's own docs:</p>

<pre><code>function FancyBorder(props) {
  return (
    &lt;div className={'FancyBorder FancyBorder-' + props.color}&gt;
      {props.children}
    &lt;/div&gt;
  );
}
</code></pre>

<p>But what if I wanted to create a pair of components that can be used like this:</p>

<pre><code>&lt;TabSet&gt;
  &lt;Tab name=""Mammals""&gt;
     content for &lt;b&gt;warm blooded&lt;/b&gt; creatures here
  &lt;/Tab&gt;
  &lt;Tab name=""Fish""&gt;
     content for &lt;b&gt;cold blooded&lt;/b&gt; creatures here
  &lt;/Tab&gt;
&lt;/TabSet&gt;
</code></pre>

<p>Here's my initial implementation of <code>TabSet</code> (using <a href=""https://reactstrap.github.io/"" rel=""nofollow noreferrer"">reactstrap</a>), simplified to remove styling, selected-tab management, and other stuff not related to this question. </p>

<pre><code>import React, {Fragment, Component} from 'react';
import { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';

export default class TabSet extends Component {

  render(props) { 
    return (
      &lt;Fragment&gt;
        &lt;Nav tabs&gt;
          {props.children.map((tab,i) =&gt; 
            &lt;NavItem key={i}&gt;
              &lt;NavLink&gt;
                { tab.name }
              &lt;/NavLink&gt;
            &lt;/NavItem&gt;
          )}
        &lt;/Nav&gt;
        &lt;TabContent&gt;
          {props.children.map((tab,i) =&gt; 
            &lt;TabPane key={i} tabId={i}&gt;
              { tab.children }
            &lt;/TabPane&gt;
          )}
        &lt;/TabContent&gt;
      &lt;/Fragment&gt;
    );
  }

}
</code></pre>

<p>Where I'm stuck is how to implement the <code>Tab</code> component. Logically, it's part of the <code>TabSet</code> component-- it should never stand alone. And its implementation should be painfully simple because it doesn't actually do anything-- it's just a container for a <code>name</code> attribute and child elements.</p>

<p>So, here's a few questions: </p>

<ul>
<li>Should I create a separate JS file for the <code>Tab</code> component, or is it so simple that I should just export it as part of the implementation of the <code>TabSet</code> component? If the latter, how?</li>
<li>In classes that use <code>TabSet</code>, will I need two <code>import</code> statements, or is there a way I can import both <code>TabSet</code> and <code>Tab</code> with one <code>import</code>, kinda like <code>import React, {Fragment} from 'react'</code> works ?  If the latter, then how would the export statement look in TabSet.js?</li>
</ul>

<p>Apologies for what's probably an obvious question-- I'm a newbie to both React and ES6. </p>
","If the code of `Tab` component, I think you shouldn't take it to separate file. And to use with one `import` statement, just `export const Tab ...` in the same file with `TabSet` which is exported by default."
"49770972","React won't let me use React.Fragment","2","<p>I'm getting this error when trying to host my web app. The problem seems to be with the React.Fragment call.</p>

<pre><code>×
React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in.

Check your code at search-input.js:8.
SearchInput
src/components/search-input.js:8
   5 | 
   6 | //This is the Presentation component
   7 | const SearchInput = ({searchInput}) =&gt;
&gt;  8 |   &lt;React.Fragment&gt;
   9 |     &lt;div&gt;{searchInput}&lt;/div&gt;
  10 |   &lt;/React.Fragment&gt;
  11 | 
View compiled
Search
src/containers/search.js:47
  44 |     &lt;input onChange={(input) =&gt; this.searchInput(input)}&gt;&lt;/input&gt;
  45 |   &lt;/div&gt;
  46 |   &lt;div className='row'&gt;
&gt; 47 |     &lt;SearchInput searchInput = {this.state.searchInput}/&gt;
  48 |     &lt;button onClick={this.buttonClick} className='btn btn-danger btn-xs'&gt;SEARCH&lt;/button&gt;
  49 |   &lt;/div&gt;
  50 | &lt;/div&gt;
View compiled
Search
src/containers/search.js:41
  38 | 
  39 | render(){
  40 |   return(
&gt; 41 |     &lt;div className='search'&gt;
  42 |       &lt;div className='row'&gt;
  43 |         &lt;h1&gt;Sentiment&lt;/h1&gt;
  44 |         &lt;input onChange={(input) =&gt; this.searchInput(input)}&gt;&lt;/input&gt;
View compiled
Welcome
src/welcome.js:12
   9 | const Welcome = ({}) =&gt;
  10 |   &lt;div className='row'&gt;
  11 |     &lt;div className='col-xs-5'&gt;
&gt; 12 |       &lt;Search/&gt;
  13 |       &lt;Link to=""/search""&gt;
  14 |           &lt;button className='btn btn-xs'&gt;Go to Map&lt;/button&gt;
  15 |       &lt;/Link&gt;
View compiled
App
src/App.js:23
  20 | &lt;h1 className=""App-title""&gt;{this.state.title}&lt;/h1&gt;
  21 | 
  22 | {/* We rended diffrent component based on the path */}
&gt; 23 | &lt;Route exact path=""/"" component={Welcome}/&gt;
  24 | &lt;Route path=""/search"" component={Discover}/&gt;
  25 | 
  26 | 
View compiled
App
src/App.js:19
  16 | render() {
  17 |   return (
  18 |     &lt;div className=""App""&gt;
&gt; 19 |       &lt;header className=""App-header""&gt;
  20 |         &lt;h1 className=""App-title""&gt;{this.state.title}&lt;/h1&gt;
  21 | 
  22 |         {/* We rended diffrent component based on the path */}
View compiled
(anonymous function)
src/index.js:10
   7 | 
   8 | ReactDOM.render((
   9 |     &lt;BrowserRouter&gt;
&gt; 10 |         &lt;App /&gt;
  11 |     &lt;/BrowserRouter&gt;
  12 | ), document.getElementById('root'));
  13 | 
View compiled
This screen is visible only in development. It will not appear if the app crashes in production.
Open your browser’s developer console to further inspect this error.
</code></pre>

<p>I don't know what's causing this error. I'm assuming <code>React.Fragment</code> is exported correctly, so I'm guessing there is something wrong with my react installation. How can I fix this?</p>
","Did you check the [tool requirements](https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html#support-for-fragment-syntax)? Fragments are a new feature, and your precompiler might not support them yet."
"49770972","React won't let me use React.Fragment","2","<p>I'm getting this error when trying to host my web app. The problem seems to be with the React.Fragment call.</p>

<pre><code>×
React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in.

Check your code at search-input.js:8.
SearchInput
src/components/search-input.js:8
   5 | 
   6 | //This is the Presentation component
   7 | const SearchInput = ({searchInput}) =&gt;
&gt;  8 |   &lt;React.Fragment&gt;
   9 |     &lt;div&gt;{searchInput}&lt;/div&gt;
  10 |   &lt;/React.Fragment&gt;
  11 | 
View compiled
Search
src/containers/search.js:47
  44 |     &lt;input onChange={(input) =&gt; this.searchInput(input)}&gt;&lt;/input&gt;
  45 |   &lt;/div&gt;
  46 |   &lt;div className='row'&gt;
&gt; 47 |     &lt;SearchInput searchInput = {this.state.searchInput}/&gt;
  48 |     &lt;button onClick={this.buttonClick} className='btn btn-danger btn-xs'&gt;SEARCH&lt;/button&gt;
  49 |   &lt;/div&gt;
  50 | &lt;/div&gt;
View compiled
Search
src/containers/search.js:41
  38 | 
  39 | render(){
  40 |   return(
&gt; 41 |     &lt;div className='search'&gt;
  42 |       &lt;div className='row'&gt;
  43 |         &lt;h1&gt;Sentiment&lt;/h1&gt;
  44 |         &lt;input onChange={(input) =&gt; this.searchInput(input)}&gt;&lt;/input&gt;
View compiled
Welcome
src/welcome.js:12
   9 | const Welcome = ({}) =&gt;
  10 |   &lt;div className='row'&gt;
  11 |     &lt;div className='col-xs-5'&gt;
&gt; 12 |       &lt;Search/&gt;
  13 |       &lt;Link to=""/search""&gt;
  14 |           &lt;button className='btn btn-xs'&gt;Go to Map&lt;/button&gt;
  15 |       &lt;/Link&gt;
View compiled
App
src/App.js:23
  20 | &lt;h1 className=""App-title""&gt;{this.state.title}&lt;/h1&gt;
  21 | 
  22 | {/* We rended diffrent component based on the path */}
&gt; 23 | &lt;Route exact path=""/"" component={Welcome}/&gt;
  24 | &lt;Route path=""/search"" component={Discover}/&gt;
  25 | 
  26 | 
View compiled
App
src/App.js:19
  16 | render() {
  17 |   return (
  18 |     &lt;div className=""App""&gt;
&gt; 19 |       &lt;header className=""App-header""&gt;
  20 |         &lt;h1 className=""App-title""&gt;{this.state.title}&lt;/h1&gt;
  21 | 
  22 |         {/* We rended diffrent component based on the path */}
View compiled
(anonymous function)
src/index.js:10
   7 | 
   8 | ReactDOM.render((
   9 |     &lt;BrowserRouter&gt;
&gt; 10 |         &lt;App /&gt;
  11 |     &lt;/BrowserRouter&gt;
  12 | ), document.getElementById('root'));
  13 | 
View compiled
This screen is visible only in development. It will not appear if the app crashes in production.
Open your browser’s developer console to further inspect this error.
</code></pre>

<p>I don't know what's causing this error. I'm assuming <code>React.Fragment</code> is exported correctly, so I'm guessing there is something wrong with my react installation. How can I fix this?</p>
","This could be a problem with the way you're importing React. Please include the actual code instead of just the error message."
"49778171","Module not found: Can't resolve 'react/lib/React'","2","<p>I've been trying to run an existing React project that I found on Github. I've had some issues. First, I needed to update React to v 16.2.0 to get <code>React.Fragment</code> working. Now, having done the update, I'm getting this second issue:</p>

<pre><code>./node_modules/react-dom/lib/ReactCompositeComponent.js
Module not found: Can't resolve 'react/lib/React' in '/Users/sahandzarrinkoub/Documents/Programming/DH2642/Sentify/repo/Sentify/node_modules/react-dom/lib'
</code></pre>

<p>from the console:</p>

<pre><code>index.js:2178 ./node_modules/react-dom/lib/instantiateReactComponent.js
Module not found: Can't resolve 'react/lib/getNextDebugID' in '/Users/sahandzarrinkoub/Documents/Programming/DH2642/Sentify/repo/Sentify/node_modules/react-dom/lib'
__stack_frame_overlay_proxy_console__   @   index.js:2178
handleErrors    @   webpackHotDevClient.js:178
./node_modules/react-dev-utils/webpackHotDevClient.js.connection.onmessage  @   webpackHotDevClient.js:211
./node_modules/sockjs-client/lib/event/eventtarget.js.EventTarget.dispatchEvent @   eventtarget.js:51
(anonymous) @   main.js:274
./node_modules/sockjs-client/lib/main.js.SockJS._transportMessage   @   main.js:272
./node_modules/sockjs-client/lib/event/emitter.js.EventEmitter.emit @   emitter.js:50
WebSocketTransport.ws.onmessage @   websocket.js:35
</code></pre>

<ol>
<li>What is the reason for this bug?</li>
<li>How to fix it?</li>
</ol>

<p>ADDITIONAL INFO:</p>

<p><a href=""https://i.stack.imgur.com/DE5vS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/DE5vS.png"" alt=""enter image description here""></a></p>

<p>Here is the project home folder. Here is the package.json file:</p>

<pre><code>{
  ""name"": ""Sentify"",
  ""version"": ""0.1.0"",
  ""private"": true,
  ""dependencies"": {
    ""ajv"": ""^5.5.2"",
    ""cors"": ""^2.8.4"",
    ""dom"": ""0.0.3"",
    ""jquery"": ""^3.3.1"",
    ""jsdom"": ""^11.7.0"",
    ""mapbox-gl"": ""^0.44.1"",
    ""material-ui"": ""^0.20.0"",
    ""react"": ""^16.2.0"",
    ""react-d3-basic"": ""^1.6.11"",
    ""react-d3-core"": ""^1.3.9"",
    ""react-d3-shape"": ""^0.3.25"",
    ""react-dom"": ""^15.6.2"",
    ""react-router-dom"": ""^4.3.0-rc.2"",
    ""react-scripts"": ""1.1.1"",
    ""react-simple-pie-chart"": ""^0.5.0"",
    ""webpack"": ""^3.11.0""
  },
  ""scripts"": {
    ""start"": ""react-scripts start"",
    ""build"": ""react-scripts build"",
    ""test"": ""react-scripts test --env=jsdom"",
    ""eject"": ""react-scripts eject""
  },
  ""devDependencies"": {}
}
</code></pre>

<p>I'm creating the node_modules folder by typing <code>npm install</code> and hosting with <code>npm start</code>.</p>

<p>I removed node_modules and ran <code>npm install; npm start</code> again, and the error changed slightly to:</p>

<pre><code>./node_modules/react-dom/lib/ReactMount.js
Module not found: Can't resolve 'react/lib/React' in '/Users/sahandzarrinkoub/Documents/Programming/DH2642/Sentify/repo/Sentify/node_modules/react-dom/lib'
</code></pre>

<p>in console:</p>

<pre><code>index.js:2178 ./node_modules/react-dom/lib/instantiateReactComponent.js
Module not found: Can't resolve 'react/lib/getNextDebugID' in '/Users/sahandzarrinkoub/Documents/Programming/DH2642/Sentify/repo/Sentify/node_modules/react-dom/lib'
__stack_frame_overlay_proxy_console__   @   index.js:2178
handleErrors    @   webpackHotDevClient.js:178
./node_modules/react-dev-utils/webpackHotDevClient.js.connection.onmessage  @   webpackHotDevClient.js:211
./node_modules/sockjs-client/lib/event/eventtarget.js.EventTarget.dispatchEvent @   eventtarget.js:51
(anonymous) @   main.js:274
./node_modules/sockjs-client/lib/main.js.SockJS._transportMessage   @   main.js:272
./node_modules/sockjs-client/lib/event/emitter.js.EventEmitter.emit @   emitter.js:50
WebSocketTransport.ws.onmessage @   websocket.js:35
</code></pre>

<p>Additional stack trace from console:</p>

<pre><code>ReactDebugTool.js:14 Uncaught Error: Cannot find module ""react/lib/ReactComponentTreeHook""
    at webpackMissingModule (ReactDebugTool.js:14)
    at Object../node_modules/react-dom/lib/ReactDebugTool.js (ReactDebugTool.js:14)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ReactInstrumentation.js (ReactInstrumentation.js:17)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ReactReconciler.js (ReactReconciler.js:12)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ReactUpdates.js (ReactUpdates.js:17)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ChangeEventPlugin.js (ChangeEventPlugin.js:15)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ReactDefaultInjection.js (ReactDefaultInjection.js:13)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ReactDOM.js (ReactDOM.js:14)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/index.js (index.js:3)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../src/index.js (discover.js:19)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object.0 (welcome.js:22)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at ./node_modules/ansi-regex/index.js.module.exports (bootstrap f031d93a2683340d518f:724)
    at bootstrap f031d93a2683340d518f:724
</code></pre>
","I can say compatibility issues, can you let me know which GitHub project you upgraded the version to React 16.2.0."
"49778171","Module not found: Can't resolve 'react/lib/React'","2","<p>I've been trying to run an existing React project that I found on Github. I've had some issues. First, I needed to update React to v 16.2.0 to get <code>React.Fragment</code> working. Now, having done the update, I'm getting this second issue:</p>

<pre><code>./node_modules/react-dom/lib/ReactCompositeComponent.js
Module not found: Can't resolve 'react/lib/React' in '/Users/sahandzarrinkoub/Documents/Programming/DH2642/Sentify/repo/Sentify/node_modules/react-dom/lib'
</code></pre>

<p>from the console:</p>

<pre><code>index.js:2178 ./node_modules/react-dom/lib/instantiateReactComponent.js
Module not found: Can't resolve 'react/lib/getNextDebugID' in '/Users/sahandzarrinkoub/Documents/Programming/DH2642/Sentify/repo/Sentify/node_modules/react-dom/lib'
__stack_frame_overlay_proxy_console__   @   index.js:2178
handleErrors    @   webpackHotDevClient.js:178
./node_modules/react-dev-utils/webpackHotDevClient.js.connection.onmessage  @   webpackHotDevClient.js:211
./node_modules/sockjs-client/lib/event/eventtarget.js.EventTarget.dispatchEvent @   eventtarget.js:51
(anonymous) @   main.js:274
./node_modules/sockjs-client/lib/main.js.SockJS._transportMessage   @   main.js:272
./node_modules/sockjs-client/lib/event/emitter.js.EventEmitter.emit @   emitter.js:50
WebSocketTransport.ws.onmessage @   websocket.js:35
</code></pre>

<ol>
<li>What is the reason for this bug?</li>
<li>How to fix it?</li>
</ol>

<p>ADDITIONAL INFO:</p>

<p><a href=""https://i.stack.imgur.com/DE5vS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/DE5vS.png"" alt=""enter image description here""></a></p>

<p>Here is the project home folder. Here is the package.json file:</p>

<pre><code>{
  ""name"": ""Sentify"",
  ""version"": ""0.1.0"",
  ""private"": true,
  ""dependencies"": {
    ""ajv"": ""^5.5.2"",
    ""cors"": ""^2.8.4"",
    ""dom"": ""0.0.3"",
    ""jquery"": ""^3.3.1"",
    ""jsdom"": ""^11.7.0"",
    ""mapbox-gl"": ""^0.44.1"",
    ""material-ui"": ""^0.20.0"",
    ""react"": ""^16.2.0"",
    ""react-d3-basic"": ""^1.6.11"",
    ""react-d3-core"": ""^1.3.9"",
    ""react-d3-shape"": ""^0.3.25"",
    ""react-dom"": ""^15.6.2"",
    ""react-router-dom"": ""^4.3.0-rc.2"",
    ""react-scripts"": ""1.1.1"",
    ""react-simple-pie-chart"": ""^0.5.0"",
    ""webpack"": ""^3.11.0""
  },
  ""scripts"": {
    ""start"": ""react-scripts start"",
    ""build"": ""react-scripts build"",
    ""test"": ""react-scripts test --env=jsdom"",
    ""eject"": ""react-scripts eject""
  },
  ""devDependencies"": {}
}
</code></pre>

<p>I'm creating the node_modules folder by typing <code>npm install</code> and hosting with <code>npm start</code>.</p>

<p>I removed node_modules and ran <code>npm install; npm start</code> again, and the error changed slightly to:</p>

<pre><code>./node_modules/react-dom/lib/ReactMount.js
Module not found: Can't resolve 'react/lib/React' in '/Users/sahandzarrinkoub/Documents/Programming/DH2642/Sentify/repo/Sentify/node_modules/react-dom/lib'
</code></pre>

<p>in console:</p>

<pre><code>index.js:2178 ./node_modules/react-dom/lib/instantiateReactComponent.js
Module not found: Can't resolve 'react/lib/getNextDebugID' in '/Users/sahandzarrinkoub/Documents/Programming/DH2642/Sentify/repo/Sentify/node_modules/react-dom/lib'
__stack_frame_overlay_proxy_console__   @   index.js:2178
handleErrors    @   webpackHotDevClient.js:178
./node_modules/react-dev-utils/webpackHotDevClient.js.connection.onmessage  @   webpackHotDevClient.js:211
./node_modules/sockjs-client/lib/event/eventtarget.js.EventTarget.dispatchEvent @   eventtarget.js:51
(anonymous) @   main.js:274
./node_modules/sockjs-client/lib/main.js.SockJS._transportMessage   @   main.js:272
./node_modules/sockjs-client/lib/event/emitter.js.EventEmitter.emit @   emitter.js:50
WebSocketTransport.ws.onmessage @   websocket.js:35
</code></pre>

<p>Additional stack trace from console:</p>

<pre><code>ReactDebugTool.js:14 Uncaught Error: Cannot find module ""react/lib/ReactComponentTreeHook""
    at webpackMissingModule (ReactDebugTool.js:14)
    at Object../node_modules/react-dom/lib/ReactDebugTool.js (ReactDebugTool.js:14)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ReactInstrumentation.js (ReactInstrumentation.js:17)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ReactReconciler.js (ReactReconciler.js:12)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ReactUpdates.js (ReactUpdates.js:17)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ChangeEventPlugin.js (ChangeEventPlugin.js:15)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ReactDefaultInjection.js (ReactDefaultInjection.js:13)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/lib/ReactDOM.js (ReactDOM.js:14)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../node_modules/react-dom/index.js (index.js:3)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object../src/index.js (discover.js:19)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at fn (bootstrap f031d93a2683340d518f:88)
    at Object.0 (welcome.js:22)
    at __webpack_require__ (bootstrap f031d93a2683340d518f:678)
    at ./node_modules/ansi-regex/index.js.module.exports (bootstrap f031d93a2683340d518f:724)
    at bootstrap f031d93a2683340d518f:724
</code></pre>
","The github project is this one: https://github.com/NiekBijman/Sentify . Please note that I've also removed the node_modules folder in my screenshot and re installed React for the project. That way I didn't need to upgrade React, but the problem persists!"
"49802526","React-Router. How to collect the history by Redirect in react-router-dom?","0","<p>I try to understand what is the correct way to collect the <code>history</code> in surfing around the SPA website in React with <code>react-router-dom</code>. </p>

<p>I need to make many redirections inside my app, and it's work good with <code>&lt;Redirect/&gt;</code> component of <code>react-router-dom</code>. But it does not collect the <code>history</code> info propely, because I have an opportunity to click back button on my arrows in browser, but they redirect me on some other pages of website, insted of previous... Why?</p>

<p>Also I saw from this post <a href=""https://stackoverflow.com/questions/45890453/redirect-in-react-router-dom"">Redirect in react-router-dom?</a> that the correct way is to use the <code>this.props.history.push('/path1')</code> - but I cannot understand how to implement it in the my app. Help someone me, please...</p>

<p><strong>So I have the next App.js:</strong></p>

<pre><code>import React, { Component } from 'react';
import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';

import Auth from './Auth/Auth';
import RegistrationPage from './Auth/RegistrationPage';
import LogoutPage from './Auth/LogoutPage'
import EmployersBox from './Employers/EmployersBox';
import NotFoundPage from './NotFoundPage'

class App extends Component {
    render() {
        return (
            &lt;Router&gt;
                &lt;div className=""App""&gt;
                    &lt;Switch&gt;
                        &lt;Route path=""/auth/login"" component={Auth} /&gt;
                        &lt;Route path=""/auth/registration"" component={RegistrationPage} /&gt;
                        &lt;Route path=""/auth/logout"" component={LogoutPage} /&gt;
                        &lt;Route path=""/employers"" render={(props) =&gt; &lt;EmployersBox {...props} /&gt;
                        &lt;Route path="""" component={NotFoundPage} /&gt;
                    &lt;/Switch&gt;
                &lt;/div&gt;
            &lt;/Router&gt;
        )
    }
}

export default App;
</code></pre>

<p><strong>and or example Logout.js component:</strong></p>

<pre><code> //....Container:
        render() {
            if (this.state.navigateEmployers) {
                return &lt;Redirect to=""/employers"" /&gt;
            } else if (this.state.navigateAuth) {
                return &lt;Redirect to=""/auth/login"" /&gt;
            }
            return (
                &lt;Fragment&gt;
                    &lt;Header/&gt;
                    &lt;div className=""employers-logout col-lg-9 mx-auto d-flex flex-column justify-content-center text-center align-items-center""&gt;
                        &lt;div className=""employers-logout-text""&gt;
                            &lt;h1&gt;You succeessfully logouted!&lt;/h1&gt;
                            &lt;p&gt;You will be redirected to the main page shortly&lt;/p&gt;
                        &lt;/div&gt;
                        &lt;div className=""employers-logout-buttons d-flex row align-items-center align-middle justify-content-between""&gt;
                            &lt;p&gt;Manual redirection&lt;/p&gt;
                            &lt;button className=""btn btn-success mr-2"" onClick={this.handleClick}&gt;Go now&lt;/button&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                    &lt;Footer/&gt;
                &lt;/Fragment&gt;
            )
        }
    }

    export default LogoutPage;
</code></pre>
",""
"49919565","How to use rtl layout of material-ui next in react app","5","<p>I want to use rtl layout in my react application. I have used material-ui next version to integrate this application. I have used below code to make application layout rtl. Some components work properly in the rtl layout but some components doesn't affected.</p>

<pre><code>/**
 * App.js Layout Start Here
 */
import React, { Component } from 'react';
import { connect } from 'react-redux';
import classnames from 'classnames';
import { MuiThemeProvider } from 'material-ui/styles';
import { IntersectingCirclesSpinner } from 'react-epic-spinners';
import { IntlProvider } from 'react-intl';
import { Redirect, Route } from 'react-router-dom';
import { NotificationContainer } from 'react-notifications';

// app routes
import Dashboard from '../routes/dashboard';
import AppSignUp from '../routes/AppSignUp';

// App locale
import AppLocale from '../lang';

// themes
import lightTheme from './themes/lightTheme';
import darkTheme from './themes/darkTheme';

class App extends Component {

  state = {
    loading: true
  }

  componentDidMount() {
    let self = this;
    setTimeout(() =&gt; {
      self.setState({ loading: false });
    }, 1000);
  }

  render() {
    const { locale, darkMode, rtlLayout } = this.props.settings;
    if (this.state.loading) {
      return (
        &lt;div className=""d-flex justify-content-center""&gt;
          &lt;IntersectingCirclesSpinner color=""red"" className=""rct-loader"" /&gt;
        &lt;/div&gt;
      );
    }
    const currentAppLocale = AppLocale[locale.locale];
    let theme = '';
    if (darkMode) {
      theme = darkTheme
    } else {
      theme = lightTheme
    }
    if (rtlLayout) {
      theme.direction = 'rtl'
    } else {
      theme.direction = 'ltr'
    }
    return (
      &lt;MuiThemeProvider theme={theme}&gt;
        &lt;IntlProvider
          locale={currentAppLocale.locale}
          messages={currentAppLocale.messages}
        &gt;
          &lt;React.Fragment&gt;
            &lt;NotificationContainer /&gt;
            &lt;Route path=""/dashboard"" component={Dashboard} /&gt;
            &lt;Route path=""/signup"" component={AppSignUp} /&gt;
          &lt;/React.Fragment&gt;
        &lt;/IntlProvider&gt;
      &lt;/MuiThemeProvider&gt;
    );
  }
}

// map state to props
const mapStateToProps = ({ settings, authUser }) =&gt; {
  const { user } = authUser;
  return { settings, user };
};

export default connect(mapStateToProps)(App);
</code></pre>

<p>It doesn't work properly also i have added</p>

<pre><code>&lt;html dir=""rtl""&gt;...&lt;/html&gt;
</code></pre>
","Have you properly configured jss-rtl?"
"49919565","How to use rtl layout of material-ui next in react app","5","<p>I want to use rtl layout in my react application. I have used material-ui next version to integrate this application. I have used below code to make application layout rtl. Some components work properly in the rtl layout but some components doesn't affected.</p>

<pre><code>/**
 * App.js Layout Start Here
 */
import React, { Component } from 'react';
import { connect } from 'react-redux';
import classnames from 'classnames';
import { MuiThemeProvider } from 'material-ui/styles';
import { IntersectingCirclesSpinner } from 'react-epic-spinners';
import { IntlProvider } from 'react-intl';
import { Redirect, Route } from 'react-router-dom';
import { NotificationContainer } from 'react-notifications';

// app routes
import Dashboard from '../routes/dashboard';
import AppSignUp from '../routes/AppSignUp';

// App locale
import AppLocale from '../lang';

// themes
import lightTheme from './themes/lightTheme';
import darkTheme from './themes/darkTheme';

class App extends Component {

  state = {
    loading: true
  }

  componentDidMount() {
    let self = this;
    setTimeout(() =&gt; {
      self.setState({ loading: false });
    }, 1000);
  }

  render() {
    const { locale, darkMode, rtlLayout } = this.props.settings;
    if (this.state.loading) {
      return (
        &lt;div className=""d-flex justify-content-center""&gt;
          &lt;IntersectingCirclesSpinner color=""red"" className=""rct-loader"" /&gt;
        &lt;/div&gt;
      );
    }
    const currentAppLocale = AppLocale[locale.locale];
    let theme = '';
    if (darkMode) {
      theme = darkTheme
    } else {
      theme = lightTheme
    }
    if (rtlLayout) {
      theme.direction = 'rtl'
    } else {
      theme.direction = 'ltr'
    }
    return (
      &lt;MuiThemeProvider theme={theme}&gt;
        &lt;IntlProvider
          locale={currentAppLocale.locale}
          messages={currentAppLocale.messages}
        &gt;
          &lt;React.Fragment&gt;
            &lt;NotificationContainer /&gt;
            &lt;Route path=""/dashboard"" component={Dashboard} /&gt;
            &lt;Route path=""/signup"" component={AppSignUp} /&gt;
          &lt;/React.Fragment&gt;
        &lt;/IntlProvider&gt;
      &lt;/MuiThemeProvider&gt;
    );
  }
}

// map state to props
const mapStateToProps = ({ settings, authUser }) =&gt; {
  const { user } = authUser;
  return { settings, user };
};

export default connect(mapStateToProps)(App);
</code></pre>

<p>It doesn't work properly also i have added</p>

<pre><code>&lt;html dir=""rtl""&gt;...&lt;/html&gt;
</code></pre>
","Not yet but can you explain how can i configure it. Thanks!"
"49919565","How to use rtl layout of material-ui next in react app","5","<p>I want to use rtl layout in my react application. I have used material-ui next version to integrate this application. I have used below code to make application layout rtl. Some components work properly in the rtl layout but some components doesn't affected.</p>

<pre><code>/**
 * App.js Layout Start Here
 */
import React, { Component } from 'react';
import { connect } from 'react-redux';
import classnames from 'classnames';
import { MuiThemeProvider } from 'material-ui/styles';
import { IntersectingCirclesSpinner } from 'react-epic-spinners';
import { IntlProvider } from 'react-intl';
import { Redirect, Route } from 'react-router-dom';
import { NotificationContainer } from 'react-notifications';

// app routes
import Dashboard from '../routes/dashboard';
import AppSignUp from '../routes/AppSignUp';

// App locale
import AppLocale from '../lang';

// themes
import lightTheme from './themes/lightTheme';
import darkTheme from './themes/darkTheme';

class App extends Component {

  state = {
    loading: true
  }

  componentDidMount() {
    let self = this;
    setTimeout(() =&gt; {
      self.setState({ loading: false });
    }, 1000);
  }

  render() {
    const { locale, darkMode, rtlLayout } = this.props.settings;
    if (this.state.loading) {
      return (
        &lt;div className=""d-flex justify-content-center""&gt;
          &lt;IntersectingCirclesSpinner color=""red"" className=""rct-loader"" /&gt;
        &lt;/div&gt;
      );
    }
    const currentAppLocale = AppLocale[locale.locale];
    let theme = '';
    if (darkMode) {
      theme = darkTheme
    } else {
      theme = lightTheme
    }
    if (rtlLayout) {
      theme.direction = 'rtl'
    } else {
      theme.direction = 'ltr'
    }
    return (
      &lt;MuiThemeProvider theme={theme}&gt;
        &lt;IntlProvider
          locale={currentAppLocale.locale}
          messages={currentAppLocale.messages}
        &gt;
          &lt;React.Fragment&gt;
            &lt;NotificationContainer /&gt;
            &lt;Route path=""/dashboard"" component={Dashboard} /&gt;
            &lt;Route path=""/signup"" component={AppSignUp} /&gt;
          &lt;/React.Fragment&gt;
        &lt;/IntlProvider&gt;
      &lt;/MuiThemeProvider&gt;
    );
  }
}

// map state to props
const mapStateToProps = ({ settings, authUser }) =&gt; {
  const { user } = authUser;
  return { settings, user };
};

export default connect(mapStateToProps)(App);
</code></pre>

<p>It doesn't work properly also i have added</p>

<pre><code>&lt;html dir=""rtl""&gt;...&lt;/html&gt;
</code></pre>
","If you make a CodeSandbox.io example I'll take a look for you."
"49919565","How to use rtl layout of material-ui next in react app","5","<p>I want to use rtl layout in my react application. I have used material-ui next version to integrate this application. I have used below code to make application layout rtl. Some components work properly in the rtl layout but some components doesn't affected.</p>

<pre><code>/**
 * App.js Layout Start Here
 */
import React, { Component } from 'react';
import { connect } from 'react-redux';
import classnames from 'classnames';
import { MuiThemeProvider } from 'material-ui/styles';
import { IntersectingCirclesSpinner } from 'react-epic-spinners';
import { IntlProvider } from 'react-intl';
import { Redirect, Route } from 'react-router-dom';
import { NotificationContainer } from 'react-notifications';

// app routes
import Dashboard from '../routes/dashboard';
import AppSignUp from '../routes/AppSignUp';

// App locale
import AppLocale from '../lang';

// themes
import lightTheme from './themes/lightTheme';
import darkTheme from './themes/darkTheme';

class App extends Component {

  state = {
    loading: true
  }

  componentDidMount() {
    let self = this;
    setTimeout(() =&gt; {
      self.setState({ loading: false });
    }, 1000);
  }

  render() {
    const { locale, darkMode, rtlLayout } = this.props.settings;
    if (this.state.loading) {
      return (
        &lt;div className=""d-flex justify-content-center""&gt;
          &lt;IntersectingCirclesSpinner color=""red"" className=""rct-loader"" /&gt;
        &lt;/div&gt;
      );
    }
    const currentAppLocale = AppLocale[locale.locale];
    let theme = '';
    if (darkMode) {
      theme = darkTheme
    } else {
      theme = lightTheme
    }
    if (rtlLayout) {
      theme.direction = 'rtl'
    } else {
      theme.direction = 'ltr'
    }
    return (
      &lt;MuiThemeProvider theme={theme}&gt;
        &lt;IntlProvider
          locale={currentAppLocale.locale}
          messages={currentAppLocale.messages}
        &gt;
          &lt;React.Fragment&gt;
            &lt;NotificationContainer /&gt;
            &lt;Route path=""/dashboard"" component={Dashboard} /&gt;
            &lt;Route path=""/signup"" component={AppSignUp} /&gt;
          &lt;/React.Fragment&gt;
        &lt;/IntlProvider&gt;
      &lt;/MuiThemeProvider&gt;
    );
  }
}

// map state to props
const mapStateToProps = ({ settings, authUser }) =&gt; {
  const { user } = authUser;
  return { settings, user };
};

export default connect(mapStateToProps)(App);
</code></pre>

<p>It doesn't work properly also i have added</p>

<pre><code>&lt;html dir=""rtl""&gt;...&lt;/html&gt;
</code></pre>
","I already read this article but i couldn't understand it's document so far. Can you help me by providing a some code."
"49919565","How to use rtl layout of material-ui next in react app","5","<p>I want to use rtl layout in my react application. I have used material-ui next version to integrate this application. I have used below code to make application layout rtl. Some components work properly in the rtl layout but some components doesn't affected.</p>

<pre><code>/**
 * App.js Layout Start Here
 */
import React, { Component } from 'react';
import { connect } from 'react-redux';
import classnames from 'classnames';
import { MuiThemeProvider } from 'material-ui/styles';
import { IntersectingCirclesSpinner } from 'react-epic-spinners';
import { IntlProvider } from 'react-intl';
import { Redirect, Route } from 'react-router-dom';
import { NotificationContainer } from 'react-notifications';

// app routes
import Dashboard from '../routes/dashboard';
import AppSignUp from '../routes/AppSignUp';

// App locale
import AppLocale from '../lang';

// themes
import lightTheme from './themes/lightTheme';
import darkTheme from './themes/darkTheme';

class App extends Component {

  state = {
    loading: true
  }

  componentDidMount() {
    let self = this;
    setTimeout(() =&gt; {
      self.setState({ loading: false });
    }, 1000);
  }

  render() {
    const { locale, darkMode, rtlLayout } = this.props.settings;
    if (this.state.loading) {
      return (
        &lt;div className=""d-flex justify-content-center""&gt;
          &lt;IntersectingCirclesSpinner color=""red"" className=""rct-loader"" /&gt;
        &lt;/div&gt;
      );
    }
    const currentAppLocale = AppLocale[locale.locale];
    let theme = '';
    if (darkMode) {
      theme = darkTheme
    } else {
      theme = lightTheme
    }
    if (rtlLayout) {
      theme.direction = 'rtl'
    } else {
      theme.direction = 'ltr'
    }
    return (
      &lt;MuiThemeProvider theme={theme}&gt;
        &lt;IntlProvider
          locale={currentAppLocale.locale}
          messages={currentAppLocale.messages}
        &gt;
          &lt;React.Fragment&gt;
            &lt;NotificationContainer /&gt;
            &lt;Route path=""/dashboard"" component={Dashboard} /&gt;
            &lt;Route path=""/signup"" component={AppSignUp} /&gt;
          &lt;/React.Fragment&gt;
        &lt;/IntlProvider&gt;
      &lt;/MuiThemeProvider&gt;
    );
  }
}

// map state to props
const mapStateToProps = ({ settings, authUser }) =&gt; {
  const { user } = authUser;
  return { settings, user };
};

export default connect(mapStateToProps)(App);
</code></pre>

<p>It doesn't work properly also i have added</p>

<pre><code>&lt;html dir=""rtl""&gt;...&lt;/html&gt;
</code></pre>
","The documentation is here: https://material-ui-next.com/guides/right-to-left/"
"50244172","react live stream audio frequency visualization","0","<p>I'm trying to create a live streaming audio platform using a library based off of WebRTC. The actual setup thus far has been pretty straight forward until I tried to hook the visualization element that i created up to my live stream. Every example of a visualizer that I have found on the web requires an audio element with an src tag. The problem that I'm encountering is that the I have this event.stream that is an srcObject but I cannot find an src. I've tried the URL.createObjectUrl(srcObject) which did seem to create a blob url of sorts, but upon entering that into my src, nothing happened. I'm using react for my front end which has also proved to be a bit of a hurtle because most of the examples I've found, including the ones done by the guy who created the library I'm using was done by appending the audio element directly to the DOM which I'm trying to avoid. Below is the media element containing the audio element and the visualizer. </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>class MediaElement extends Component{

  render(){
    console.log('mediaElement ', this.props.event.mediaElement)
    console.log('src ', this.props.src)
    return this.props.event.stream ? (
      &lt;Fragment&gt;
        &lt;audio
          id=""stream""
          autoPlay={true}
          playsInline={true}
          controls={true}
          muted={true}
          src={this.props.src}
          // ref={(element) =&gt; {
          //   if (element){
          //     element.srcObject = this.props.event.stream;
          //   }
          // }}
        /&gt;
        &lt;AudioSpectrum
        id=""audio-canvas""
        height={200}
        width={300}
        audioId={'stream'}
        capColor={'red'}
        capHeight={2}
        meterWidth={2}
        meterCount={512}
        meterColor={[
          {stop: 0, color: '#f00'},
          {stop: 0.5, color: '#0CD7FD'},
          {stop: 1, color: 'red'}
        ]}
        gap={4}
        /&gt;
      &lt;/Fragment&gt;
    )
    : null;
  }
}

export default MediaElement;</code></pre>
</div>
</div>
</p>

<p>Notice I've commented out the ref on the audio element. I'm a bit new to this so I'm not sure why it doesn't work when using both, but I feel like it has something to do with duplicate audio references. I'm passing the src and the event down from the parent component which is where I'm using the createObjectUrl function to create the src. Lastly, I should say that I've seen this warning about the deprecation of createObjectUrl, so I'm wondering if there is an alternative out there, as I can't seem to find one. Any help or advice with live streaming audio visualization would be greatly appreciated. Thanks peeps!</p>
",""
"50298107","ReactJS react-grid-layout toggle static property","0","<p>I've been learning React for a couple of days, this time I'm trying to create a grid of draggable widgets, and I found this library on github: <a href=""https://github.com/STRML/react-grid-layout"" rel=""nofollow noreferrer"">react-grid-layout</a> which does that.</p>

<p>This time, I'm trying to toggle draggable or <code>static</code> property when clicking on a <code>button</code> but I'm having some troubles doing so.</p>

<p>This is my <code>App.js</code>:</p>

<pre><code>import React, { Component } from 'react';
import {InputText} from 'primereact/components/inputtext/InputText';
import GridLayout from 'react-grid-layout';
import './App.css';

class App extends Component {
    render() {
        var layout = [
            {i: 'a', x: 0, y: 0, w: 10, h: 4},
            {i: 'b', x: 1, y: 0, w: 3, h: 2},
            {i: 'c', x: 4, y: 0, w: 1, h: 2}
        ];
        return (
            &lt;React.Fragment&gt;
                &lt;button onClick={this.toggleStatic (layout)}&gt;Enable&lt;/button&gt;
                &lt;GridLayout className=""layout"" layout={layout} cols={30} rowHeight={30} width={1200} onDragStop={this.onDragStop}&gt;
                    &lt;div key=""a""&gt;a&lt;/div&gt;
                    &lt;div key=""b""&gt;b&lt;/div&gt;
                    &lt;div key=""c""&gt;c&lt;/div&gt;
                &lt;/GridLayout&gt;
            &lt;/React.Fragment&gt;
        );
    }

    toggleStatic(layout) {
        console.log('Layout', layout);
    }

    onDragStop(layout) {
        layout[0].static = true;
        console.log(layout);
    }
}

export default App;
</code></pre>

<p>My <code>index.js</code>:</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import registerServiceWorker from './registerServiceWorker';
import 'react-grid-layout/css/styles.css';
import 'react-resizable/css/styles.css';
import 'primereact/resources/themes/omega/theme.css';
import 'primereact/resources/primereact.min.css';

ReactDOM.render(&lt;App /&gt;, document.getElementById('root'));
registerServiceWorker();
</code></pre>

<p>And my <code>index.css</code>:</p>

<pre><code>body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
}

.react-grid-item:not(.react-grid-placeholder) {
    background-color: #ccc;
    border: 1px solid black;
}

.layout {
    background-color: #333;
}

.title {
    font-weight: bold;
}
</code></pre>

<p>If I check my console, right after reloading the page I get my <code>layout</code> logged into it, before any click:</p>

<pre><code>Layout […]
​0: Object { i: ""a"", x: 0, y: 0, … }
1: Object { i: ""b"", x: 1, y: 0, … }    ​
2: Object { i: ""c"", x: 4, y: 0, … }    ​
length: 3
__proto__: Array []
</code></pre>

<p>But if I change my <code>button</code> to:</p>

<pre><code>&lt;button onClick={this.toggleStatic}&gt;Enable&lt;/button&gt;
</code></pre>

<p>i.e. removing the parameter <code>layout</code> from it, I get this output in the console:</p>

<pre><code>Layout Proxy
    &lt;target&gt;: Object { … }
    &lt;handler&gt;: Object { … }
</code></pre>

<p>Right now, my code changes <code>static</code> of first widget to <code>true</code> when any component is dragged, I'm trying to change it for all of then on a button click.</p>

<p>I found this post on the library's issues: <a href=""https://github.com/STRML/react-grid-layout/issues/327"" rel=""nofollow noreferrer"">Assign static dinamically/programatically</a>, but they're using <code>react-redux</code>.</p>

<p>I found them using this as well:</p>

<pre><code>const mapStateToProps = state =&gt; {
  return {
    ...state.dashboard.asMutable()
  };
};
</code></pre>

<p>But I'm not sure what does that does.</p>

<p>Any suggestion to at least receive the <code>layout</code> var into the <code>toggleStatic</code> might be enough for me for this matter.</p>
",""
"50372019","Using GraphQL's union with apollo-react in react-native","0","<p>I'm currently using react-apollo in a react-native app and I'm facing an issue.</p>

<p>Whenever I try to make a query containing an union, it fails, throwing the following network error:</p>

<blockquote>
  <p>Network error: Requested keys of a value that is not an object</p>
</blockquote>

<p>I'm using the exact same code in a React.js app, which works just fine. The GraphQL endpoint is my own server, developed in PHP with the Youshido bundle.</p>

<p>Here's the fragment declaration part :</p>

<pre><code>const httpLink = new HttpLink({uri: 'http://10.1.68.64:8000/graphql'});

const fragmentMatcher = new IntrospectionFragmentMatcher({
    introspectionQueryResultData: {
      __schema: {
        types: [
          {
            ""kind"": ""UNION"",
            ""name"": ""QuestionUnion"",
            ""possibleTypes"": [
              {
                ""name"": ""QuestionUnionTypeA""
              },
              {
                ""name"": ""QuestionUnionTypeB""
              },
              {
                ""name"": ""QuestionUnionTypeC""
              }
            ]
          },
        ],
      },
    }
});

const cache = new InMemoryCache({ fragmentMatcher });

const client = new ApolloClient({
    link: httpLink,
    cache: cache,
});
</code></pre>

<p>The query in a Screen.js file (Exactly the same in React.js and react-native):</p>

<pre><code>const FindForm = gql`query FindForm($id: ID!){
    findForm(id: $id){
        id
        title
        questions {
            id
            ... on QuestionUnionTypeA {
                parameterA
            } 
            ... on QuestionUnionTypeB {
                parameterB
            }
            ... on QuestionUnionTypeC {
                parameterC
            }
        }
    }
}`;
</code></pre>

<p>The part using the query in the same Screen.js file:</p>

<pre><code>const resultDisplayer = ({ data }) =&gt; {
    if(data.error){
        return &lt;Text&gt; {JSON.stringify(data)} &lt;/Text&gt;;
    }
    if(data.loading){
        return &lt;Spinner/&gt;;
    }
    else {
        return &lt;Text&gt; Ok &lt;/Text&gt;;
    }
};

const query = graphql(FindForm, {
    options: {
        variables: {
            id: this.state.id,
        }
    }
})(resultDisplayer);
</code></pre>

<p>The troubling part is that the error is not thrown in a few cases:</p>

<ul>
<li>When I'm remotely debugging the app</li>
<li>When the query does not contain the union part</li>
<li>When the union part has nothing to return (If there are no instance of QuestionUnionTypeA, B and C)</li>
</ul>

<p>Thus I guess I'm doing something wrong but I can't seem to find where I've been mistaken. If you guys have any idea, I'm willing to try anything that comes up.</p>
",""
"50479973","What does ""this"" stands for in a react component? (this.state..)","4","<p>This problem caused me a headache. <code>this</code> keyword when you set a state is not accessible inside the <code>ajax call</code>.</p>

<p>I think i miss-understand something in how react components work. </p>

<p>How should i use <code>this</code> keyword in this specific situation as provided below? and in general if <code>this</code> is not accessible.</p>

<pre><code>class PollsList extends Component {
    constructor() {
        super();

        this.state = {
            polls: []
        }
    }
    componentDidMount() {
        $.ajax({
            url: ""/mypolls"",
            type: 'get',
            dataType: 'json',
            contentType: 'application/json',
            success: function (polls_list) {
                console.log(polls_list);

                for (let i = 0; i &lt; polls_list.length; i++) {
                    let data = polls_list[i].poll[0];
                     this.setState(()=&gt;{polls:data});
                }
            },
            error: function (err, status, xhr) {
                console.log(err);
            }
        });
    }
    render() {
        return (
            &lt;Fragment&gt;
                &lt;div class='container'&gt;
                    &lt;ul id='polls_list'&gt;{this.state.polls}&lt;/ul&gt;
                &lt;/div&gt;
            &lt;/Fragment&gt;
        )
    }
}
</code></pre>

<p><strong>EDIT: PROBLEM SOLVED!</strong></p>

<p>Thanks for everyone contributed.</p>

<pre><code>class PollsList extends Component {
    constructor() {
        super();
        this.state = {
            polls: []
        }

        this.fetchPolls = this.fetchPolls.bind(this);
    }
    componentDidMount() {
        $.ajax({
            url: ""/mypolls"",
            type: 'get',
            dataType: 'json',
            contentType: 'application/json',
            success: (polls_list)=&gt;this.fetchPolls(polls_list), // this must look like that.
            error: (err, status, xhr) =&gt;{
                console.log(err);
            }
        });
    }

    fetchPolls(polls_list){
        for (let i = 0; i &lt; polls_list.length; i++) {
            let data = polls_list[i].poll[0];
            this.setState({polls:data});
        }
    }
    render() {
        console.log(this.state.polls);
        return (
            &lt;Fragment&gt;
                &lt;div className='container'&gt;
                    &lt;ul id='polls_list'&gt;{this.state.polls.option1} {this.state.polls.option2}&lt;/ul&gt;
                &lt;/div&gt;
            &lt;/Fragment&gt;
        )
    }
}
</code></pre>
","Its an old code. i certainly know about arrow functions."
"50479973","What does ""this"" stands for in a react component? (this.state..)","4","<p>This problem caused me a headache. <code>this</code> keyword when you set a state is not accessible inside the <code>ajax call</code>.</p>

<p>I think i miss-understand something in how react components work. </p>

<p>How should i use <code>this</code> keyword in this specific situation as provided below? and in general if <code>this</code> is not accessible.</p>

<pre><code>class PollsList extends Component {
    constructor() {
        super();

        this.state = {
            polls: []
        }
    }
    componentDidMount() {
        $.ajax({
            url: ""/mypolls"",
            type: 'get',
            dataType: 'json',
            contentType: 'application/json',
            success: function (polls_list) {
                console.log(polls_list);

                for (let i = 0; i &lt; polls_list.length; i++) {
                    let data = polls_list[i].poll[0];
                     this.setState(()=&gt;{polls:data});
                }
            },
            error: function (err, status, xhr) {
                console.log(err);
            }
        });
    }
    render() {
        return (
            &lt;Fragment&gt;
                &lt;div class='container'&gt;
                    &lt;ul id='polls_list'&gt;{this.state.polls}&lt;/ul&gt;
                &lt;/div&gt;
            &lt;/Fragment&gt;
        )
    }
}
</code></pre>

<p><strong>EDIT: PROBLEM SOLVED!</strong></p>

<p>Thanks for everyone contributed.</p>

<pre><code>class PollsList extends Component {
    constructor() {
        super();
        this.state = {
            polls: []
        }

        this.fetchPolls = this.fetchPolls.bind(this);
    }
    componentDidMount() {
        $.ajax({
            url: ""/mypolls"",
            type: 'get',
            dataType: 'json',
            contentType: 'application/json',
            success: (polls_list)=&gt;this.fetchPolls(polls_list), // this must look like that.
            error: (err, status, xhr) =&gt;{
                console.log(err);
            }
        });
    }

    fetchPolls(polls_list){
        for (let i = 0; i &lt; polls_list.length; i++) {
            let data = polls_list[i].poll[0];
            this.setState({polls:data});
        }
    }
    render() {
        console.log(this.state.polls);
        return (
            &lt;Fragment&gt;
                &lt;div className='container'&gt;
                    &lt;ul id='polls_list'&gt;{this.state.polls.option1} {this.state.polls.option2}&lt;/ul&gt;
                &lt;/div&gt;
            &lt;/Fragment&gt;
        )
    }
}
</code></pre>
","Turn `success: function (polls_list) {` into `success: (polls_list) => {`. Read up on arrow functions"
"50479973","What does ""this"" stands for in a react component? (this.state..)","4","<p>This problem caused me a headache. <code>this</code> keyword when you set a state is not accessible inside the <code>ajax call</code>.</p>

<p>I think i miss-understand something in how react components work. </p>

<p>How should i use <code>this</code> keyword in this specific situation as provided below? and in general if <code>this</code> is not accessible.</p>

<pre><code>class PollsList extends Component {
    constructor() {
        super();

        this.state = {
            polls: []
        }
    }
    componentDidMount() {
        $.ajax({
            url: ""/mypolls"",
            type: 'get',
            dataType: 'json',
            contentType: 'application/json',
            success: function (polls_list) {
                console.log(polls_list);

                for (let i = 0; i &lt; polls_list.length; i++) {
                    let data = polls_list[i].poll[0];
                     this.setState(()=&gt;{polls:data});
                }
            },
            error: function (err, status, xhr) {
                console.log(err);
            }
        });
    }
    render() {
        return (
            &lt;Fragment&gt;
                &lt;div class='container'&gt;
                    &lt;ul id='polls_list'&gt;{this.state.polls}&lt;/ul&gt;
                &lt;/div&gt;
            &lt;/Fragment&gt;
        )
    }
}
</code></pre>

<p><strong>EDIT: PROBLEM SOLVED!</strong></p>

<p>Thanks for everyone contributed.</p>

<pre><code>class PollsList extends Component {
    constructor() {
        super();
        this.state = {
            polls: []
        }

        this.fetchPolls = this.fetchPolls.bind(this);
    }
    componentDidMount() {
        $.ajax({
            url: ""/mypolls"",
            type: 'get',
            dataType: 'json',
            contentType: 'application/json',
            success: (polls_list)=&gt;this.fetchPolls(polls_list), // this must look like that.
            error: (err, status, xhr) =&gt;{
                console.log(err);
            }
        });
    }

    fetchPolls(polls_list){
        for (let i = 0; i &lt; polls_list.length; i++) {
            let data = polls_list[i].poll[0];
            this.setState({polls:data});
        }
    }
    render() {
        console.log(this.state.polls);
        return (
            &lt;Fragment&gt;
                &lt;div className='container'&gt;
                    &lt;ul id='polls_list'&gt;{this.state.polls.option1} {this.state.polls.option2}&lt;/ul&gt;
                &lt;/div&gt;
            &lt;/Fragment&gt;
        )
    }
}
</code></pre>
","[javascript - How does the ""this"" keyword work?](https://stackoverflow.com/questions/3127429/how-does-the-this-keyword-work)"
"50479973","What does ""this"" stands for in a react component? (this.state..)","4","<p>This problem caused me a headache. <code>this</code> keyword when you set a state is not accessible inside the <code>ajax call</code>.</p>

<p>I think i miss-understand something in how react components work. </p>

<p>How should i use <code>this</code> keyword in this specific situation as provided below? and in general if <code>this</code> is not accessible.</p>

<pre><code>class PollsList extends Component {
    constructor() {
        super();

        this.state = {
            polls: []
        }
    }
    componentDidMount() {
        $.ajax({
            url: ""/mypolls"",
            type: 'get',
            dataType: 'json',
            contentType: 'application/json',
            success: function (polls_list) {
                console.log(polls_list);

                for (let i = 0; i &lt; polls_list.length; i++) {
                    let data = polls_list[i].poll[0];
                     this.setState(()=&gt;{polls:data});
                }
            },
            error: function (err, status, xhr) {
                console.log(err);
            }
        });
    }
    render() {
        return (
            &lt;Fragment&gt;
                &lt;div class='container'&gt;
                    &lt;ul id='polls_list'&gt;{this.state.polls}&lt;/ul&gt;
                &lt;/div&gt;
            &lt;/Fragment&gt;
        )
    }
}
</code></pre>

<p><strong>EDIT: PROBLEM SOLVED!</strong></p>

<p>Thanks for everyone contributed.</p>

<pre><code>class PollsList extends Component {
    constructor() {
        super();
        this.state = {
            polls: []
        }

        this.fetchPolls = this.fetchPolls.bind(this);
    }
    componentDidMount() {
        $.ajax({
            url: ""/mypolls"",
            type: 'get',
            dataType: 'json',
            contentType: 'application/json',
            success: (polls_list)=&gt;this.fetchPolls(polls_list), // this must look like that.
            error: (err, status, xhr) =&gt;{
                console.log(err);
            }
        });
    }

    fetchPolls(polls_list){
        for (let i = 0; i &lt; polls_list.length; i++) {
            let data = polls_list[i].poll[0];
            this.setState({polls:data});
        }
    }
    render() {
        console.log(this.state.polls);
        return (
            &lt;Fragment&gt;
                &lt;div className='container'&gt;
                    &lt;ul id='polls_list'&gt;{this.state.polls.option1} {this.state.polls.option2}&lt;/ul&gt;
                &lt;/div&gt;
            &lt;/Fragment&gt;
        )
    }
}
</code></pre>
","The `success` callback function has its own value for `this` separate from your `class`. To control the value, you can either [use `$.ajax()`'s `context` setting](https://stackoverflow.com/questions/6394812/this-inside-of-ajax-success-not-working) or use the options discussed in: [How to access the correct `this` inside a callback?](https://stackoverflow.com/questions/20279484/how-to-access-the-correct-this-inside-a-callback)"
"50526673","reactstrap fieldset legend not square show","2","<p>I would like to use <code>BootStrap4</code> with my <code>Reactjs</code>. After install it, css of <code>btn btn-primay</code> works fine. However, I notice that square of the <code>fieldset</code> is gone. I have checked with <a href=""https://reactstrap.github.io/components/form/"" rel=""nofollow noreferrer"">demo</a></p>

<p>To repeat my case here are my snippets.</p>

<p><code>index.js</code></p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import 'bootstrap/dist/css/bootstrap.css';
import App from './App';
import registerServiceWorker from './registerServiceWorker';

ReactDOM.render(&lt;App/&gt;, document.getElementById('root'));
registerServiceWorker();
</code></pre>

<p><code>package.json</code></p>

<pre><code>{
  ""name"": ""f1"",
  ""version"": ""0.1.0"",
  ""private"": true,
  ""dependencies"": {
    ""@amcharts/amcharts3-react"": ""^3.1.0"",
    ""ajv"": ""^6.5.0"",
    ""amcharts3"": ""^3.21.12"",
    ""axios"": ""^0.18.0"",
    ""bootstrap"": ""^4.1.1"",
    ""lodash"": ""^4.17.5"",
    ""react"": ""^16.4.0"",
    ""react-dom"": ""^16.4.0"",
    ""react-redux"": ""^5.0.7"",
    ""react-router-dom"": ""^4.2.2"",
    ""react-scripts"": ""1.1.1"",
    ""reactstrap"": ""^6.0.1"",
    ""recharts"": ""^1.0.0-beta.10"",
    ""redux"": ""^3.7.2"",
    ""redux-form"": ""^7.2.3"",
    ""redux-saga"": ""^0.16.0""
  },
  ""scripts"": {
    ""start"": ""react-scripts start"",
    ""build"": ""react-scripts build"",
    ""test"": ""react-scripts test --env=jsdom"",
    ""eject"": ""react-scripts eject""
  }
}
</code></pre>

<p><code>login.js</code>
render(){
    const {handleSubmit} = this.props;</p>

<pre><code>return(
  &lt;Fragment&gt;
    &lt;a href=""/""&gt;&lt;img src=""tokamak-model.png""/&gt;&lt;/a&gt;
    &lt;form onSubmit={handleSubmit(this.onSubmit.bind(this))}&gt;
    &lt;fieldset&gt;
      &lt;legend&gt;Authentication&lt;/legend&gt;
      &lt;table&gt;
        &lt;tr&gt;
          &lt;td&gt;Username&lt;/td&gt;
          &lt;Field
            name=""userid""
            component={this.renderField}
            placeholder=""User ID""
            autocomplete=""username""
            type=""text""
          /&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Password&lt;/td&gt;
          &lt;Field
            name=""password""
            component={this.renderField}
            placeholder=""Password""
            autocomplete=""current-password""
            type=""password""
          /&gt;
        &lt;/tr&gt;
      &lt;/table&gt;
      &lt;button type=""submit"" className=""btn btn-primary""&gt;Submit&lt;/button&gt;

    &lt;/fieldset&gt;
    &lt;/form&gt;
  &lt;/Fragment&gt;
)
</code></pre>

<p>}</p>

<p><strong>Update:</strong><br>
The original without bootstrap
<a href=""https://i.stack.imgur.com/0wtTz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0wtTz.png"" alt=""without bootstrap""></a></p>

<p>The new one with bootstrap</p>

<p><a href=""https://i.stack.imgur.com/47iNO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/47iNO.png"" alt=""with bootstrap""></a></p>

<p><strong>Update2:</strong><br>
Try make my own class in <code>my-fieldset</code><br>
<code>&lt;fieldset className='my-fieldset'&gt;</code>
And put this to the <code>css</code></p>

<pre><code>.my-fieldset{
  border: 3px solid;
}
</code></pre>

<p>But legend is sticking to the left</p>

<p><strong>Question:</strong><br>
Is it possible to bring square frame of <code>fieldset</code> back and still get benefit of bootstrap?</p>
","what does square frame of fieldset means ? you want to remove the border radius for input fields ?"
"50526673","reactstrap fieldset legend not square show","2","<p>I would like to use <code>BootStrap4</code> with my <code>Reactjs</code>. After install it, css of <code>btn btn-primay</code> works fine. However, I notice that square of the <code>fieldset</code> is gone. I have checked with <a href=""https://reactstrap.github.io/components/form/"" rel=""nofollow noreferrer"">demo</a></p>

<p>To repeat my case here are my snippets.</p>

<p><code>index.js</code></p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import 'bootstrap/dist/css/bootstrap.css';
import App from './App';
import registerServiceWorker from './registerServiceWorker';

ReactDOM.render(&lt;App/&gt;, document.getElementById('root'));
registerServiceWorker();
</code></pre>

<p><code>package.json</code></p>

<pre><code>{
  ""name"": ""f1"",
  ""version"": ""0.1.0"",
  ""private"": true,
  ""dependencies"": {
    ""@amcharts/amcharts3-react"": ""^3.1.0"",
    ""ajv"": ""^6.5.0"",
    ""amcharts3"": ""^3.21.12"",
    ""axios"": ""^0.18.0"",
    ""bootstrap"": ""^4.1.1"",
    ""lodash"": ""^4.17.5"",
    ""react"": ""^16.4.0"",
    ""react-dom"": ""^16.4.0"",
    ""react-redux"": ""^5.0.7"",
    ""react-router-dom"": ""^4.2.2"",
    ""react-scripts"": ""1.1.1"",
    ""reactstrap"": ""^6.0.1"",
    ""recharts"": ""^1.0.0-beta.10"",
    ""redux"": ""^3.7.2"",
    ""redux-form"": ""^7.2.3"",
    ""redux-saga"": ""^0.16.0""
  },
  ""scripts"": {
    ""start"": ""react-scripts start"",
    ""build"": ""react-scripts build"",
    ""test"": ""react-scripts test --env=jsdom"",
    ""eject"": ""react-scripts eject""
  }
}
</code></pre>

<p><code>login.js</code>
render(){
    const {handleSubmit} = this.props;</p>

<pre><code>return(
  &lt;Fragment&gt;
    &lt;a href=""/""&gt;&lt;img src=""tokamak-model.png""/&gt;&lt;/a&gt;
    &lt;form onSubmit={handleSubmit(this.onSubmit.bind(this))}&gt;
    &lt;fieldset&gt;
      &lt;legend&gt;Authentication&lt;/legend&gt;
      &lt;table&gt;
        &lt;tr&gt;
          &lt;td&gt;Username&lt;/td&gt;
          &lt;Field
            name=""userid""
            component={this.renderField}
            placeholder=""User ID""
            autocomplete=""username""
            type=""text""
          /&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Password&lt;/td&gt;
          &lt;Field
            name=""password""
            component={this.renderField}
            placeholder=""Password""
            autocomplete=""current-password""
            type=""password""
          /&gt;
        &lt;/tr&gt;
      &lt;/table&gt;
      &lt;button type=""submit"" className=""btn btn-primary""&gt;Submit&lt;/button&gt;

    &lt;/fieldset&gt;
    &lt;/form&gt;
  &lt;/Fragment&gt;
)
</code></pre>

<p>}</p>

<p><strong>Update:</strong><br>
The original without bootstrap
<a href=""https://i.stack.imgur.com/0wtTz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0wtTz.png"" alt=""without bootstrap""></a></p>

<p>The new one with bootstrap</p>

<p><a href=""https://i.stack.imgur.com/47iNO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/47iNO.png"" alt=""with bootstrap""></a></p>

<p><strong>Update2:</strong><br>
Try make my own class in <code>my-fieldset</code><br>
<code>&lt;fieldset className='my-fieldset'&gt;</code>
And put this to the <code>css</code></p>

<pre><code>.my-fieldset{
  border: 3px solid;
}
</code></pre>

<p>But legend is sticking to the left</p>

<p><strong>Question:</strong><br>
Is it possible to bring square frame of <code>fieldset</code> back and still get benefit of bootstrap?</p>
","@johnsam I have updated my question. Since I don't know the technical term of it. I might confuse you at first time. Sorry. I am now searching for class and css key: property to adjust it."
"50708181","GraphQL Fragments error on export to query","0","<h2>So I have a reactjs app using <strong>GraphQl</strong> and I'm trying to cut down the repetition through the use of <strong>fragments</strong>, however, its failing.</h2>

<p><strong>Fragment</strong> (companyQueries.js)</p>

<pre><code>export const CompanyFragment = gql`
  fragment company on WithApiKeys {
    company {
      id
      apiKeys {
        id
        token
        insertedAt
      }
    }
  }
`
</code></pre>

<p><strong>Beginning of usage</strong> (withCreateApiKeyMutation.js)</p>

<pre><code>import { graphql } from 'react-apollo'
import gql from 'graphql-tag'
import CompanyFragment from '../../../utils/QueryFragments/companyQueries'

console.log(CompanyFragment)
const QUERY = gql`
  query {
    viewer {
      id
      ...company
    }
  }
  ${CompanyFragment}
</code></pre>

<hr>

<h2>Given this kind of export I would expect it to at least be able to compile, but it errors.</h2>

<p><strong>Error given by compiler</strong></p>

<p>Error on line 3 of <strong>companyQueries.js</strong> </p>

<blockquote>
  <p>TypeError: Object(...) is not a function</p>
  
  <p>export const CompanyFragment = gql &lt;--line 3</p>
</blockquote>

<p><a href=""https://i.stack.imgur.com/iaUkN.png"" rel=""nofollow noreferrer"">picture of error</a></p>

<p>If anyone could provide an insight on this it would be greatly appreciated! </p>
",""
"50916113","SO react-router-bootstrap active link not working properly","0","<p>I have a problem with active link using <strong>react-router-bootstrap</strong> (<a href=""https://www.npmjs.com/package/react-router-bootstrap"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/react-router-bootstrap</a>) components. When I navigate to <em>About</em>, <strong>active</strong> class appears not only on <em>About</em> but in <em>Home</em> too.</p>

<p><a href=""https://i.stack.imgur.com/8CXWu.png"" rel=""nofollow noreferrer"">Active Link react-router's issue</a></p>

<p>This my <strong>Nav</strong> component from <strong>react-bootstrap</strong> (<a href=""https://react-bootstrap.github.io/"" rel=""nofollow noreferrer"">https://react-bootstrap.github.io/</a>):</p>

<p><strong><em>NavLinks.jsx</em></strong></p>

<pre><code>import React, { Component } from 'react';
import { Nav, NavItem } from 'react-bootstrap';

import HashNavItem from '../../Navigation/HashNavItem';

// import Flags from './Flags/Flags'
import ""./NavLinks.css"";

const routes = [{
  name: 'Home',
  path: '/',
  external: false
},{
  name: 'About',
  path: '/about',
  external: false
}, {
  name: 'Stores',
  path: '/#stores',
  external: false
}, {
  name: 'My Account',
  path: 'http://my-react.appicar.com/',
  external: true
}, {
  name: 'Services',
  path: '/#services',
  external: false
}, {
  name: 'Reviews',
  path: '/#reviews',
  external: false
}, {
  name: 'Contact',
  path: '/#contact',
  external: false
}];

export default class MainNav extends Component {

  handleClick(e) {
    e.preventDefault();
    alert('hola');
  }
  render() {
    let template;

    return (
      &lt;Nav&gt;
        {
          routes.map((route, key) =&gt; {
            if (route.external) {
              template = (
                &lt;NavItem eventKey={ 'nav-' + key } href={ route.path } key={ key }&gt;
                  {route.name}
                &lt;/NavItem&gt;
              );
            } else {
              template = &lt;HashNavItem eventKey={ 'nav-' + key } name={ route.name } to={ route.path } key={ key } /&gt;;
            }
            return template;
          })
        }
      &lt;/Nav&gt;
    );
  }
}
</code></pre>

<p><strong><em>HashNavItem.jsx</em></strong></p>

<pre><code>import React, { Component } from ""react"";
import { NavItem } from 'react-bootstrap';
import { LinkContainer } from ""react-router-bootstrap"";

export default class HashNavItem extends Component {

  constructor(props) {
    super(props);
    // Atributes.
    this.hashFragment = '';
    this.observer = null;
    this.asyncTimerId = null;
    this.scrollFunction = null;
    // States.
    this.state = {
      key: props.eventKey,
      name: props.name,
      to: props.to
    }
    // Methods.
    this.reset = this.reset.bind(this);
    this.getElAndScroll = this.getElAndScroll.bind(this);
    this.hashLinkScroll = this.hashLinkScroll.bind(this);
    this.handleClick = this.handleClick.bind(this);
  }

  reset() {
    this.hashFragment = '';
    if (this.observer !== null) this.observer.disconnect();
    if (this.asyncTimerId !== null) {
      window.clearTimeout(this.asyncTimerId);
      this.asyncTimerId = null;
    }
  }

  getElAndScroll() {
    const element = document.getElementById(this.hashFragment);
    if (element !== null) {
      this.scrollFunction(element);
      this.reset();
      return true;
    }
    return false;
  }

  hashLinkScroll() {
    // Push onto callback queue so it runs after the DOM is updated
    window.setTimeout(() =&gt; {
      if (this.getElAndScroll() === false) {
        if (this.observer === null) {
          this.observer = new MutationObserver(this.getElAndScroll);
        }
        this.observer.observe(document, {
          attributes: true,
          childList: true,
          subtree: true,
        });
        // if the element doesn't show up in 10 seconds, stop checking
        this.asyncTimerId = window.setTimeout(() =&gt; {
          this.reset();
        }, 10000);
      }
    }, 0);
  }

  handleClick(e) {
    this.reset();
    if (this.props.onClick) this.props.onClick(e);
    if (typeof this.props.to === 'string') {
      this.hashFragment = this.props.to
        .split('#')
        .slice(1)
        .join('#');
    } else if (
      typeof this.props.to === 'object' &amp;&amp;
      typeof this.props.to.hash === 'string'
    ) {
      this.hashFragment = this.props.to.hash.replace('#', '');
    }
    if (this.hashFragment !== '') {
      this.scrollFunction =
        this.props.scroll || (el =&gt;
          el.scrollIntoView(this.props.smooth ? { behavior: 'smooth' } : undefined)
        );
      this.hashLinkScroll();
    }
  }

  render() {
    return (
      &lt;LinkContainer to={ this.state.to }&gt;
        &lt;NavItem eventKey={ this.state.key } key={ this.state.key } onClick={ this.handleClick }&gt;{ this.state.name } &lt;/NavItem&gt;
      &lt;/LinkContainer&gt;
    );
  }
}
</code></pre>

<p><strong><em>App.jsx</em></strong></p>

<pre><code>import React, { Component } from ""react"";
import { Router, Switch, Route } from 'react-router-dom';
import { createBrowserHistory } from 'history';

import MainNav from './MainNav/MainNav';
import Logo from './Logo/Logo';
import Footer from './Footer/Footer';
import Copyright from './Copyright/Copyright';
import HomePage from './HomePage/HomePage';
import AboutPage from './AboutPage/AboutPage';
import Error404 from './Error404/Error404';

import './App.css';

class App extends Component {
  render() {
    return (
      &lt;Router history={ createBrowserHistory() }&gt;
        &lt;div&gt;
          &lt;MainNav /&gt;
          &lt;Logo /&gt;
          &lt;Switch&gt;
            &lt;Route exact path=""/"" component={ HomePage } /&gt;
            &lt;Route exact path=""/about"" component={ AboutPage } /&gt;
            &lt;Route exact path=""/404"" component={ Error404 } /&gt;
          &lt;/Switch&gt;
          &lt;Footer /&gt;
          &lt;Copyright /&gt;
        &lt;/div&gt;
      &lt;/Router&gt;
    );
  }
}

export default App;
</code></pre>

<p>Does anyone knows why <strong><em>Home</em></strong> is always marked as <strong>active</strong>?</p>
",""
"51054144","React component does'nt re-render with react router on url change","6","<p><strong>strong text</strong>I have a carousel component that I created in a <code>jsx</code> file. When I go to a different page and navigate back to that page the carousel doesn't re-render. I have tried updating my routes as well as looking into all possible <code>css</code> causes. I see that the carousel container is there but none of the content is showing. </p>

<p><strong>Below is my jsx file:</strong> </p>

<pre><code>import React, { Component, Fragment } from 'react';
import { Link } from 'react-router-dom'
import { Button, Icon } from 'react-materialize'
import ReactDOM from 'react-dom'
import './Carousel.css';

class Carousel extends Component {

    render() {
        return (
            &lt;Fragment&gt;
                &lt;div&gt;
                    &lt;div class=""row""&gt;
                        &lt;div class=""col s12""&gt;
                            {/*  &lt;!--Images and carousel items below --&gt; */}
                            &lt;div width=""100%"" id=""carousel-div"" class=""carousel userInput""&gt;
                                &lt;div class=""left""&gt;
                                    &lt;a href=""Previo"" class=""movePrevCarousel middle-indicator-text waves-effect waves-light""&gt;
                                        &lt;i class=""material-icons left  middle-indicator-text""&gt;chevron_left&lt;/i&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""letters"" data-search='Sports' href=""#letters""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://toddlermasterclass.com/wp-content/uploads/2015/07/Fun-Games-For-Preschoolers.png""
                                        alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""numbers"" data-search='Music' href=""#numbers""&gt;
                                    &lt;img height=""190"" width=""400"" src=""http://imgsdown.1mobile.com/group1/M00/A5/58/S36rZlagE-mAOxmfAAQhEBsG6mg860.png"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""colors"" data-search='Technology' href=""#colors""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://i.ytimg.com/vi/e1dHmEJcMG0/maxresdefault.jpg"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""memory-match"" data-search='Food' href=""#memory-match""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://images-na.ssl-images-amazon.com/images/I/713UI4Vy1-L.png"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""shapes"" data-search='Arts' href=""#shapes!""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://i.ytimg.com/vi/AQbnbrTHgtA/maxresdefault.jpg"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""submitBTN btn waves-effect waves-light"" type=""submit"" name=""action""&gt;Submit
                                    &lt;i class=""material-icons right""&gt;send&lt;/i&gt;
                                &lt;/a&gt;
                                &lt;div class=""right""&gt;
                                    &lt;a href=""Siguiente"" class=""moveNextCarousel middle-indicator-text waves-effect waves-light""&gt;
                                        &lt;i class=""material-icons right middle-indicator-text""&gt;chevron_right&lt;/i&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                ); 
        &lt;/Fragment&gt;
        )
    }
}

export default Carousel;
</code></pre>

<p><strong>Below is my router file:</strong> </p>

<pre><code>import React from 'react';
import { BrowserRouter as Router, Route } from 'react-router-dom';
import Navbar from './components/Navbar';
import Parents from './components/Parents';
import Login from './components/Login';
import Home from './components/Home';
import About from './components/About'
import Cards from './components/cardGame';
import Carousel from './components/Carousel';
/* import ReactCarousel from './components/ReactCarousel'; */
import ColorGame from './components/colorGame/colorGame';
import NumberGame from './components/NumberGame/numberGame';


const AppRouter = () =&gt; {
// class AppRouter extends Component {
//     render() {
        return (
            &lt;Router&gt;
                &lt;div&gt;
                    {/* edit username */}
                    &lt;Navbar username='User' message='welcome back!'/&gt;

                    &lt;Route path='/Login' component={Login} /&gt;
                    &lt;Route path='/Home' component={Home} /&gt;
                    &lt;Route path='/About' component={About} /&gt;
                    &lt;Route path='/Parents' component={Parents} /&gt;
                    &lt;Route path='/colorGame' component={ColorGame} /&gt;
                    &lt;Route path='/cardGame' component={Cards} /&gt;
                    &lt;Route path='/numberGame' component={NumberGame} /&gt;
                &lt;/div&gt;
            &lt;/Router&gt;
        )
    }
// }

export default AppRouter;
</code></pre>

<p><strong>Below is the Home.js file that I'm rendering my carousel in:</strong></p>

<pre><code>import React, { Component, Fragment } from 'react';
import { Link } from 'react-router-dom';
import { Button, Icon } from 'react-materialize'
import './Home.css';
import ReactDOM from 'react-dom';
import Carousel from '../Carousel';
/* import ReactCarousel from '../ReactCarousel'; */

class Home extends Component {
    render() {
        return (

        &lt;Fragment&gt;
                &lt;Carousel /&gt;
                {/* &lt;ReactCarousel /&gt; */}
            &lt;/Fragment&gt;
        )
    }
}

export default Home;
</code></pre>

<p><strong>Here is the Navbar component</strong></p>

<pre><code>import React, { Fragment } from 'react';
import { Link } from 'react-router-dom'
import './Navbar.css'



const Navbar = props =&gt; {
  return (

     &lt;Fragment&gt;
      &lt;nav className=""navigation_container""&gt;

      &lt;div className=""l-triangle-top""&gt;&lt;/div&gt;
   &lt;div className=""l-triangle-bottom""&gt;&lt;/div&gt;

   &lt;div className=""rectangle""&gt;
        &lt;div className=""navigation""&gt;
          &lt;Link className='nav-item nav-link' to='/Parents'&gt;Parents Place&lt;/Link&gt;
          &lt;ul className=""right hide-on-med-and-down""&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/Home'&gt;Home&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/Login'&gt;Logout&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/About'&gt;About&lt;/Link&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
         &lt;/div&gt;
         &lt;div className=""r-triangle-top""&gt;&lt;/div&gt;
         &lt;div className=""r-triangle-bottom""&gt;&lt;/div&gt;
      &lt;/nav&gt;
    &lt;/Fragment&gt;
  )
} 


export default Navbar;
</code></pre>

<p>Would someone help me see why the carousel is not rendering when I navigate back to my home page?</p>
","When you go back, is the url changing?"
"51054144","React component does'nt re-render with react router on url change","6","<p><strong>strong text</strong>I have a carousel component that I created in a <code>jsx</code> file. When I go to a different page and navigate back to that page the carousel doesn't re-render. I have tried updating my routes as well as looking into all possible <code>css</code> causes. I see that the carousel container is there but none of the content is showing. </p>

<p><strong>Below is my jsx file:</strong> </p>

<pre><code>import React, { Component, Fragment } from 'react';
import { Link } from 'react-router-dom'
import { Button, Icon } from 'react-materialize'
import ReactDOM from 'react-dom'
import './Carousel.css';

class Carousel extends Component {

    render() {
        return (
            &lt;Fragment&gt;
                &lt;div&gt;
                    &lt;div class=""row""&gt;
                        &lt;div class=""col s12""&gt;
                            {/*  &lt;!--Images and carousel items below --&gt; */}
                            &lt;div width=""100%"" id=""carousel-div"" class=""carousel userInput""&gt;
                                &lt;div class=""left""&gt;
                                    &lt;a href=""Previo"" class=""movePrevCarousel middle-indicator-text waves-effect waves-light""&gt;
                                        &lt;i class=""material-icons left  middle-indicator-text""&gt;chevron_left&lt;/i&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""letters"" data-search='Sports' href=""#letters""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://toddlermasterclass.com/wp-content/uploads/2015/07/Fun-Games-For-Preschoolers.png""
                                        alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""numbers"" data-search='Music' href=""#numbers""&gt;
                                    &lt;img height=""190"" width=""400"" src=""http://imgsdown.1mobile.com/group1/M00/A5/58/S36rZlagE-mAOxmfAAQhEBsG6mg860.png"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""colors"" data-search='Technology' href=""#colors""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://i.ytimg.com/vi/e1dHmEJcMG0/maxresdefault.jpg"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""memory-match"" data-search='Food' href=""#memory-match""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://images-na.ssl-images-amazon.com/images/I/713UI4Vy1-L.png"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""shapes"" data-search='Arts' href=""#shapes!""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://i.ytimg.com/vi/AQbnbrTHgtA/maxresdefault.jpg"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""submitBTN btn waves-effect waves-light"" type=""submit"" name=""action""&gt;Submit
                                    &lt;i class=""material-icons right""&gt;send&lt;/i&gt;
                                &lt;/a&gt;
                                &lt;div class=""right""&gt;
                                    &lt;a href=""Siguiente"" class=""moveNextCarousel middle-indicator-text waves-effect waves-light""&gt;
                                        &lt;i class=""material-icons right middle-indicator-text""&gt;chevron_right&lt;/i&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                ); 
        &lt;/Fragment&gt;
        )
    }
}

export default Carousel;
</code></pre>

<p><strong>Below is my router file:</strong> </p>

<pre><code>import React from 'react';
import { BrowserRouter as Router, Route } from 'react-router-dom';
import Navbar from './components/Navbar';
import Parents from './components/Parents';
import Login from './components/Login';
import Home from './components/Home';
import About from './components/About'
import Cards from './components/cardGame';
import Carousel from './components/Carousel';
/* import ReactCarousel from './components/ReactCarousel'; */
import ColorGame from './components/colorGame/colorGame';
import NumberGame from './components/NumberGame/numberGame';


const AppRouter = () =&gt; {
// class AppRouter extends Component {
//     render() {
        return (
            &lt;Router&gt;
                &lt;div&gt;
                    {/* edit username */}
                    &lt;Navbar username='User' message='welcome back!'/&gt;

                    &lt;Route path='/Login' component={Login} /&gt;
                    &lt;Route path='/Home' component={Home} /&gt;
                    &lt;Route path='/About' component={About} /&gt;
                    &lt;Route path='/Parents' component={Parents} /&gt;
                    &lt;Route path='/colorGame' component={ColorGame} /&gt;
                    &lt;Route path='/cardGame' component={Cards} /&gt;
                    &lt;Route path='/numberGame' component={NumberGame} /&gt;
                &lt;/div&gt;
            &lt;/Router&gt;
        )
    }
// }

export default AppRouter;
</code></pre>

<p><strong>Below is the Home.js file that I'm rendering my carousel in:</strong></p>

<pre><code>import React, { Component, Fragment } from 'react';
import { Link } from 'react-router-dom';
import { Button, Icon } from 'react-materialize'
import './Home.css';
import ReactDOM from 'react-dom';
import Carousel from '../Carousel';
/* import ReactCarousel from '../ReactCarousel'; */

class Home extends Component {
    render() {
        return (

        &lt;Fragment&gt;
                &lt;Carousel /&gt;
                {/* &lt;ReactCarousel /&gt; */}
            &lt;/Fragment&gt;
        )
    }
}

export default Home;
</code></pre>

<p><strong>Here is the Navbar component</strong></p>

<pre><code>import React, { Fragment } from 'react';
import { Link } from 'react-router-dom'
import './Navbar.css'



const Navbar = props =&gt; {
  return (

     &lt;Fragment&gt;
      &lt;nav className=""navigation_container""&gt;

      &lt;div className=""l-triangle-top""&gt;&lt;/div&gt;
   &lt;div className=""l-triangle-bottom""&gt;&lt;/div&gt;

   &lt;div className=""rectangle""&gt;
        &lt;div className=""navigation""&gt;
          &lt;Link className='nav-item nav-link' to='/Parents'&gt;Parents Place&lt;/Link&gt;
          &lt;ul className=""right hide-on-med-and-down""&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/Home'&gt;Home&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/Login'&gt;Logout&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/About'&gt;About&lt;/Link&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
         &lt;/div&gt;
         &lt;div className=""r-triangle-top""&gt;&lt;/div&gt;
         &lt;div className=""r-triangle-bottom""&gt;&lt;/div&gt;
      &lt;/nav&gt;
    &lt;/Fragment&gt;
  )
} 


export default Navbar;
</code></pre>

<p>Would someone help me see why the carousel is not rendering when I navigate back to my home page?</p>
","where are you rendering your `Carousel ` component?"
"51054144","React component does'nt re-render with react router on url change","6","<p><strong>strong text</strong>I have a carousel component that I created in a <code>jsx</code> file. When I go to a different page and navigate back to that page the carousel doesn't re-render. I have tried updating my routes as well as looking into all possible <code>css</code> causes. I see that the carousel container is there but none of the content is showing. </p>

<p><strong>Below is my jsx file:</strong> </p>

<pre><code>import React, { Component, Fragment } from 'react';
import { Link } from 'react-router-dom'
import { Button, Icon } from 'react-materialize'
import ReactDOM from 'react-dom'
import './Carousel.css';

class Carousel extends Component {

    render() {
        return (
            &lt;Fragment&gt;
                &lt;div&gt;
                    &lt;div class=""row""&gt;
                        &lt;div class=""col s12""&gt;
                            {/*  &lt;!--Images and carousel items below --&gt; */}
                            &lt;div width=""100%"" id=""carousel-div"" class=""carousel userInput""&gt;
                                &lt;div class=""left""&gt;
                                    &lt;a href=""Previo"" class=""movePrevCarousel middle-indicator-text waves-effect waves-light""&gt;
                                        &lt;i class=""material-icons left  middle-indicator-text""&gt;chevron_left&lt;/i&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""letters"" data-search='Sports' href=""#letters""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://toddlermasterclass.com/wp-content/uploads/2015/07/Fun-Games-For-Preschoolers.png""
                                        alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""numbers"" data-search='Music' href=""#numbers""&gt;
                                    &lt;img height=""190"" width=""400"" src=""http://imgsdown.1mobile.com/group1/M00/A5/58/S36rZlagE-mAOxmfAAQhEBsG6mg860.png"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""colors"" data-search='Technology' href=""#colors""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://i.ytimg.com/vi/e1dHmEJcMG0/maxresdefault.jpg"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""memory-match"" data-search='Food' href=""#memory-match""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://images-na.ssl-images-amazon.com/images/I/713UI4Vy1-L.png"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""shapes"" data-search='Arts' href=""#shapes!""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://i.ytimg.com/vi/AQbnbrTHgtA/maxresdefault.jpg"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""submitBTN btn waves-effect waves-light"" type=""submit"" name=""action""&gt;Submit
                                    &lt;i class=""material-icons right""&gt;send&lt;/i&gt;
                                &lt;/a&gt;
                                &lt;div class=""right""&gt;
                                    &lt;a href=""Siguiente"" class=""moveNextCarousel middle-indicator-text waves-effect waves-light""&gt;
                                        &lt;i class=""material-icons right middle-indicator-text""&gt;chevron_right&lt;/i&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                ); 
        &lt;/Fragment&gt;
        )
    }
}

export default Carousel;
</code></pre>

<p><strong>Below is my router file:</strong> </p>

<pre><code>import React from 'react';
import { BrowserRouter as Router, Route } from 'react-router-dom';
import Navbar from './components/Navbar';
import Parents from './components/Parents';
import Login from './components/Login';
import Home from './components/Home';
import About from './components/About'
import Cards from './components/cardGame';
import Carousel from './components/Carousel';
/* import ReactCarousel from './components/ReactCarousel'; */
import ColorGame from './components/colorGame/colorGame';
import NumberGame from './components/NumberGame/numberGame';


const AppRouter = () =&gt; {
// class AppRouter extends Component {
//     render() {
        return (
            &lt;Router&gt;
                &lt;div&gt;
                    {/* edit username */}
                    &lt;Navbar username='User' message='welcome back!'/&gt;

                    &lt;Route path='/Login' component={Login} /&gt;
                    &lt;Route path='/Home' component={Home} /&gt;
                    &lt;Route path='/About' component={About} /&gt;
                    &lt;Route path='/Parents' component={Parents} /&gt;
                    &lt;Route path='/colorGame' component={ColorGame} /&gt;
                    &lt;Route path='/cardGame' component={Cards} /&gt;
                    &lt;Route path='/numberGame' component={NumberGame} /&gt;
                &lt;/div&gt;
            &lt;/Router&gt;
        )
    }
// }

export default AppRouter;
</code></pre>

<p><strong>Below is the Home.js file that I'm rendering my carousel in:</strong></p>

<pre><code>import React, { Component, Fragment } from 'react';
import { Link } from 'react-router-dom';
import { Button, Icon } from 'react-materialize'
import './Home.css';
import ReactDOM from 'react-dom';
import Carousel from '../Carousel';
/* import ReactCarousel from '../ReactCarousel'; */

class Home extends Component {
    render() {
        return (

        &lt;Fragment&gt;
                &lt;Carousel /&gt;
                {/* &lt;ReactCarousel /&gt; */}
            &lt;/Fragment&gt;
        )
    }
}

export default Home;
</code></pre>

<p><strong>Here is the Navbar component</strong></p>

<pre><code>import React, { Fragment } from 'react';
import { Link } from 'react-router-dom'
import './Navbar.css'



const Navbar = props =&gt; {
  return (

     &lt;Fragment&gt;
      &lt;nav className=""navigation_container""&gt;

      &lt;div className=""l-triangle-top""&gt;&lt;/div&gt;
   &lt;div className=""l-triangle-bottom""&gt;&lt;/div&gt;

   &lt;div className=""rectangle""&gt;
        &lt;div className=""navigation""&gt;
          &lt;Link className='nav-item nav-link' to='/Parents'&gt;Parents Place&lt;/Link&gt;
          &lt;ul className=""right hide-on-med-and-down""&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/Home'&gt;Home&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/Login'&gt;Logout&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/About'&gt;About&lt;/Link&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
         &lt;/div&gt;
         &lt;div className=""r-triangle-top""&gt;&lt;/div&gt;
         &lt;div className=""r-triangle-bottom""&gt;&lt;/div&gt;
      &lt;/nav&gt;
    &lt;/Fragment&gt;
  )
} 


export default Navbar;
</code></pre>

<p>Would someone help me see why the carousel is not rendering when I navigate back to my home page?</p>
","I updated my original post to include the home.js file that it is being rendered within."
"51054144","React component does'nt re-render with react router on url change","6","<p><strong>strong text</strong>I have a carousel component that I created in a <code>jsx</code> file. When I go to a different page and navigate back to that page the carousel doesn't re-render. I have tried updating my routes as well as looking into all possible <code>css</code> causes. I see that the carousel container is there but none of the content is showing. </p>

<p><strong>Below is my jsx file:</strong> </p>

<pre><code>import React, { Component, Fragment } from 'react';
import { Link } from 'react-router-dom'
import { Button, Icon } from 'react-materialize'
import ReactDOM from 'react-dom'
import './Carousel.css';

class Carousel extends Component {

    render() {
        return (
            &lt;Fragment&gt;
                &lt;div&gt;
                    &lt;div class=""row""&gt;
                        &lt;div class=""col s12""&gt;
                            {/*  &lt;!--Images and carousel items below --&gt; */}
                            &lt;div width=""100%"" id=""carousel-div"" class=""carousel userInput""&gt;
                                &lt;div class=""left""&gt;
                                    &lt;a href=""Previo"" class=""movePrevCarousel middle-indicator-text waves-effect waves-light""&gt;
                                        &lt;i class=""material-icons left  middle-indicator-text""&gt;chevron_left&lt;/i&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""letters"" data-search='Sports' href=""#letters""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://toddlermasterclass.com/wp-content/uploads/2015/07/Fun-Games-For-Preschoolers.png""
                                        alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""numbers"" data-search='Music' href=""#numbers""&gt;
                                    &lt;img height=""190"" width=""400"" src=""http://imgsdown.1mobile.com/group1/M00/A5/58/S36rZlagE-mAOxmfAAQhEBsG6mg860.png"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""colors"" data-search='Technology' href=""#colors""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://i.ytimg.com/vi/e1dHmEJcMG0/maxresdefault.jpg"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""memory-match"" data-search='Food' href=""#memory-match""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://images-na.ssl-images-amazon.com/images/I/713UI4Vy1-L.png"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""shapes"" data-search='Arts' href=""#shapes!""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://i.ytimg.com/vi/AQbnbrTHgtA/maxresdefault.jpg"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""submitBTN btn waves-effect waves-light"" type=""submit"" name=""action""&gt;Submit
                                    &lt;i class=""material-icons right""&gt;send&lt;/i&gt;
                                &lt;/a&gt;
                                &lt;div class=""right""&gt;
                                    &lt;a href=""Siguiente"" class=""moveNextCarousel middle-indicator-text waves-effect waves-light""&gt;
                                        &lt;i class=""material-icons right middle-indicator-text""&gt;chevron_right&lt;/i&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                ); 
        &lt;/Fragment&gt;
        )
    }
}

export default Carousel;
</code></pre>

<p><strong>Below is my router file:</strong> </p>

<pre><code>import React from 'react';
import { BrowserRouter as Router, Route } from 'react-router-dom';
import Navbar from './components/Navbar';
import Parents from './components/Parents';
import Login from './components/Login';
import Home from './components/Home';
import About from './components/About'
import Cards from './components/cardGame';
import Carousel from './components/Carousel';
/* import ReactCarousel from './components/ReactCarousel'; */
import ColorGame from './components/colorGame/colorGame';
import NumberGame from './components/NumberGame/numberGame';


const AppRouter = () =&gt; {
// class AppRouter extends Component {
//     render() {
        return (
            &lt;Router&gt;
                &lt;div&gt;
                    {/* edit username */}
                    &lt;Navbar username='User' message='welcome back!'/&gt;

                    &lt;Route path='/Login' component={Login} /&gt;
                    &lt;Route path='/Home' component={Home} /&gt;
                    &lt;Route path='/About' component={About} /&gt;
                    &lt;Route path='/Parents' component={Parents} /&gt;
                    &lt;Route path='/colorGame' component={ColorGame} /&gt;
                    &lt;Route path='/cardGame' component={Cards} /&gt;
                    &lt;Route path='/numberGame' component={NumberGame} /&gt;
                &lt;/div&gt;
            &lt;/Router&gt;
        )
    }
// }

export default AppRouter;
</code></pre>

<p><strong>Below is the Home.js file that I'm rendering my carousel in:</strong></p>

<pre><code>import React, { Component, Fragment } from 'react';
import { Link } from 'react-router-dom';
import { Button, Icon } from 'react-materialize'
import './Home.css';
import ReactDOM from 'react-dom';
import Carousel from '../Carousel';
/* import ReactCarousel from '../ReactCarousel'; */

class Home extends Component {
    render() {
        return (

        &lt;Fragment&gt;
                &lt;Carousel /&gt;
                {/* &lt;ReactCarousel /&gt; */}
            &lt;/Fragment&gt;
        )
    }
}

export default Home;
</code></pre>

<p><strong>Here is the Navbar component</strong></p>

<pre><code>import React, { Fragment } from 'react';
import { Link } from 'react-router-dom'
import './Navbar.css'



const Navbar = props =&gt; {
  return (

     &lt;Fragment&gt;
      &lt;nav className=""navigation_container""&gt;

      &lt;div className=""l-triangle-top""&gt;&lt;/div&gt;
   &lt;div className=""l-triangle-bottom""&gt;&lt;/div&gt;

   &lt;div className=""rectangle""&gt;
        &lt;div className=""navigation""&gt;
          &lt;Link className='nav-item nav-link' to='/Parents'&gt;Parents Place&lt;/Link&gt;
          &lt;ul className=""right hide-on-med-and-down""&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/Home'&gt;Home&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/Login'&gt;Logout&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/About'&gt;About&lt;/Link&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
         &lt;/div&gt;
         &lt;div className=""r-triangle-top""&gt;&lt;/div&gt;
         &lt;div className=""r-triangle-bottom""&gt;&lt;/div&gt;
      &lt;/nav&gt;
    &lt;/Fragment&gt;
  )
} 


export default Navbar;
</code></pre>

<p>Would someone help me see why the carousel is not rendering when I navigate back to my home page?</p>
","So what you are saying is that the `Carousel` shows up when you are on `/home` but when you go to another route and then go back to `/home` the `Carousel` is not rendered?"
"51054144","React component does'nt re-render with react router on url change","6","<p><strong>strong text</strong>I have a carousel component that I created in a <code>jsx</code> file. When I go to a different page and navigate back to that page the carousel doesn't re-render. I have tried updating my routes as well as looking into all possible <code>css</code> causes. I see that the carousel container is there but none of the content is showing. </p>

<p><strong>Below is my jsx file:</strong> </p>

<pre><code>import React, { Component, Fragment } from 'react';
import { Link } from 'react-router-dom'
import { Button, Icon } from 'react-materialize'
import ReactDOM from 'react-dom'
import './Carousel.css';

class Carousel extends Component {

    render() {
        return (
            &lt;Fragment&gt;
                &lt;div&gt;
                    &lt;div class=""row""&gt;
                        &lt;div class=""col s12""&gt;
                            {/*  &lt;!--Images and carousel items below --&gt; */}
                            &lt;div width=""100%"" id=""carousel-div"" class=""carousel userInput""&gt;
                                &lt;div class=""left""&gt;
                                    &lt;a href=""Previo"" class=""movePrevCarousel middle-indicator-text waves-effect waves-light""&gt;
                                        &lt;i class=""material-icons left  middle-indicator-text""&gt;chevron_left&lt;/i&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""letters"" data-search='Sports' href=""#letters""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://toddlermasterclass.com/wp-content/uploads/2015/07/Fun-Games-For-Preschoolers.png""
                                        alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""numbers"" data-search='Music' href=""#numbers""&gt;
                                    &lt;img height=""190"" width=""400"" src=""http://imgsdown.1mobile.com/group1/M00/A5/58/S36rZlagE-mAOxmfAAQhEBsG6mg860.png"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""colors"" data-search='Technology' href=""#colors""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://i.ytimg.com/vi/e1dHmEJcMG0/maxresdefault.jpg"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""memory-match"" data-search='Food' href=""#memory-match""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://images-na.ssl-images-amazon.com/images/I/713UI4Vy1-L.png"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""shapes"" data-search='Arts' href=""#shapes!""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://i.ytimg.com/vi/AQbnbrTHgtA/maxresdefault.jpg"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""submitBTN btn waves-effect waves-light"" type=""submit"" name=""action""&gt;Submit
                                    &lt;i class=""material-icons right""&gt;send&lt;/i&gt;
                                &lt;/a&gt;
                                &lt;div class=""right""&gt;
                                    &lt;a href=""Siguiente"" class=""moveNextCarousel middle-indicator-text waves-effect waves-light""&gt;
                                        &lt;i class=""material-icons right middle-indicator-text""&gt;chevron_right&lt;/i&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                ); 
        &lt;/Fragment&gt;
        )
    }
}

export default Carousel;
</code></pre>

<p><strong>Below is my router file:</strong> </p>

<pre><code>import React from 'react';
import { BrowserRouter as Router, Route } from 'react-router-dom';
import Navbar from './components/Navbar';
import Parents from './components/Parents';
import Login from './components/Login';
import Home from './components/Home';
import About from './components/About'
import Cards from './components/cardGame';
import Carousel from './components/Carousel';
/* import ReactCarousel from './components/ReactCarousel'; */
import ColorGame from './components/colorGame/colorGame';
import NumberGame from './components/NumberGame/numberGame';


const AppRouter = () =&gt; {
// class AppRouter extends Component {
//     render() {
        return (
            &lt;Router&gt;
                &lt;div&gt;
                    {/* edit username */}
                    &lt;Navbar username='User' message='welcome back!'/&gt;

                    &lt;Route path='/Login' component={Login} /&gt;
                    &lt;Route path='/Home' component={Home} /&gt;
                    &lt;Route path='/About' component={About} /&gt;
                    &lt;Route path='/Parents' component={Parents} /&gt;
                    &lt;Route path='/colorGame' component={ColorGame} /&gt;
                    &lt;Route path='/cardGame' component={Cards} /&gt;
                    &lt;Route path='/numberGame' component={NumberGame} /&gt;
                &lt;/div&gt;
            &lt;/Router&gt;
        )
    }
// }

export default AppRouter;
</code></pre>

<p><strong>Below is the Home.js file that I'm rendering my carousel in:</strong></p>

<pre><code>import React, { Component, Fragment } from 'react';
import { Link } from 'react-router-dom';
import { Button, Icon } from 'react-materialize'
import './Home.css';
import ReactDOM from 'react-dom';
import Carousel from '../Carousel';
/* import ReactCarousel from '../ReactCarousel'; */

class Home extends Component {
    render() {
        return (

        &lt;Fragment&gt;
                &lt;Carousel /&gt;
                {/* &lt;ReactCarousel /&gt; */}
            &lt;/Fragment&gt;
        )
    }
}

export default Home;
</code></pre>

<p><strong>Here is the Navbar component</strong></p>

<pre><code>import React, { Fragment } from 'react';
import { Link } from 'react-router-dom'
import './Navbar.css'



const Navbar = props =&gt; {
  return (

     &lt;Fragment&gt;
      &lt;nav className=""navigation_container""&gt;

      &lt;div className=""l-triangle-top""&gt;&lt;/div&gt;
   &lt;div className=""l-triangle-bottom""&gt;&lt;/div&gt;

   &lt;div className=""rectangle""&gt;
        &lt;div className=""navigation""&gt;
          &lt;Link className='nav-item nav-link' to='/Parents'&gt;Parents Place&lt;/Link&gt;
          &lt;ul className=""right hide-on-med-and-down""&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/Home'&gt;Home&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/Login'&gt;Logout&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/About'&gt;About&lt;/Link&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
         &lt;/div&gt;
         &lt;div className=""r-triangle-top""&gt;&lt;/div&gt;
         &lt;div className=""r-triangle-bottom""&gt;&lt;/div&gt;
      &lt;/nav&gt;
    &lt;/Fragment&gt;
  )
} 


export default Navbar;
</code></pre>

<p>Would someone help me see why the carousel is not rendering when I navigate back to my home page?</p>
","Karolis2017 - Yes, that is correct"
"51054144","React component does'nt re-render with react router on url change","6","<p><strong>strong text</strong>I have a carousel component that I created in a <code>jsx</code> file. When I go to a different page and navigate back to that page the carousel doesn't re-render. I have tried updating my routes as well as looking into all possible <code>css</code> causes. I see that the carousel container is there but none of the content is showing. </p>

<p><strong>Below is my jsx file:</strong> </p>

<pre><code>import React, { Component, Fragment } from 'react';
import { Link } from 'react-router-dom'
import { Button, Icon } from 'react-materialize'
import ReactDOM from 'react-dom'
import './Carousel.css';

class Carousel extends Component {

    render() {
        return (
            &lt;Fragment&gt;
                &lt;div&gt;
                    &lt;div class=""row""&gt;
                        &lt;div class=""col s12""&gt;
                            {/*  &lt;!--Images and carousel items below --&gt; */}
                            &lt;div width=""100%"" id=""carousel-div"" class=""carousel userInput""&gt;
                                &lt;div class=""left""&gt;
                                    &lt;a href=""Previo"" class=""movePrevCarousel middle-indicator-text waves-effect waves-light""&gt;
                                        &lt;i class=""material-icons left  middle-indicator-text""&gt;chevron_left&lt;/i&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""letters"" data-search='Sports' href=""#letters""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://toddlermasterclass.com/wp-content/uploads/2015/07/Fun-Games-For-Preschoolers.png""
                                        alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""numbers"" data-search='Music' href=""#numbers""&gt;
                                    &lt;img height=""190"" width=""400"" src=""http://imgsdown.1mobile.com/group1/M00/A5/58/S36rZlagE-mAOxmfAAQhEBsG6mg860.png"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""colors"" data-search='Technology' href=""#colors""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://i.ytimg.com/vi/e1dHmEJcMG0/maxresdefault.jpg"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""memory-match"" data-search='Food' href=""#memory-match""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://images-na.ssl-images-amazon.com/images/I/713UI4Vy1-L.png"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""carousel-item submitBTN"" id=""shapes"" data-search='Arts' href=""#shapes!""&gt;
                                    &lt;img height=""190"" width=""400"" src=""https://i.ytimg.com/vi/AQbnbrTHgtA/maxresdefault.jpg"" alt="""" /&gt;
                                &lt;/a&gt;
                                &lt;a class=""submitBTN btn waves-effect waves-light"" type=""submit"" name=""action""&gt;Submit
                                    &lt;i class=""material-icons right""&gt;send&lt;/i&gt;
                                &lt;/a&gt;
                                &lt;div class=""right""&gt;
                                    &lt;a href=""Siguiente"" class=""moveNextCarousel middle-indicator-text waves-effect waves-light""&gt;
                                        &lt;i class=""material-icons right middle-indicator-text""&gt;chevron_right&lt;/i&gt;
                                    &lt;/a&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                ); 
        &lt;/Fragment&gt;
        )
    }
}

export default Carousel;
</code></pre>

<p><strong>Below is my router file:</strong> </p>

<pre><code>import React from 'react';
import { BrowserRouter as Router, Route } from 'react-router-dom';
import Navbar from './components/Navbar';
import Parents from './components/Parents';
import Login from './components/Login';
import Home from './components/Home';
import About from './components/About'
import Cards from './components/cardGame';
import Carousel from './components/Carousel';
/* import ReactCarousel from './components/ReactCarousel'; */
import ColorGame from './components/colorGame/colorGame';
import NumberGame from './components/NumberGame/numberGame';


const AppRouter = () =&gt; {
// class AppRouter extends Component {
//     render() {
        return (
            &lt;Router&gt;
                &lt;div&gt;
                    {/* edit username */}
                    &lt;Navbar username='User' message='welcome back!'/&gt;

                    &lt;Route path='/Login' component={Login} /&gt;
                    &lt;Route path='/Home' component={Home} /&gt;
                    &lt;Route path='/About' component={About} /&gt;
                    &lt;Route path='/Parents' component={Parents} /&gt;
                    &lt;Route path='/colorGame' component={ColorGame} /&gt;
                    &lt;Route path='/cardGame' component={Cards} /&gt;
                    &lt;Route path='/numberGame' component={NumberGame} /&gt;
                &lt;/div&gt;
            &lt;/Router&gt;
        )
    }
// }

export default AppRouter;
</code></pre>

<p><strong>Below is the Home.js file that I'm rendering my carousel in:</strong></p>

<pre><code>import React, { Component, Fragment } from 'react';
import { Link } from 'react-router-dom';
import { Button, Icon } from 'react-materialize'
import './Home.css';
import ReactDOM from 'react-dom';
import Carousel from '../Carousel';
/* import ReactCarousel from '../ReactCarousel'; */

class Home extends Component {
    render() {
        return (

        &lt;Fragment&gt;
                &lt;Carousel /&gt;
                {/* &lt;ReactCarousel /&gt; */}
            &lt;/Fragment&gt;
        )
    }
}

export default Home;
</code></pre>

<p><strong>Here is the Navbar component</strong></p>

<pre><code>import React, { Fragment } from 'react';
import { Link } from 'react-router-dom'
import './Navbar.css'



const Navbar = props =&gt; {
  return (

     &lt;Fragment&gt;
      &lt;nav className=""navigation_container""&gt;

      &lt;div className=""l-triangle-top""&gt;&lt;/div&gt;
   &lt;div className=""l-triangle-bottom""&gt;&lt;/div&gt;

   &lt;div className=""rectangle""&gt;
        &lt;div className=""navigation""&gt;
          &lt;Link className='nav-item nav-link' to='/Parents'&gt;Parents Place&lt;/Link&gt;
          &lt;ul className=""right hide-on-med-and-down""&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/Home'&gt;Home&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/Login'&gt;Logout&lt;/Link&gt;&lt;/li&gt;
            &lt;li&gt;&lt;Link className='nav-item nav-link' to='/About'&gt;About&lt;/Link&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
         &lt;/div&gt;
         &lt;div className=""r-triangle-top""&gt;&lt;/div&gt;
         &lt;div className=""r-triangle-bottom""&gt;&lt;/div&gt;
      &lt;/nav&gt;
    &lt;/Fragment&gt;
  )
} 


export default Navbar;
</code></pre>

<p>Would someone help me see why the carousel is not rendering when I navigate back to my home page?</p>
","Rohith Murali - Yes, the URL changes."
"51197609","how transform this button into this other? react js","0","<p>hi im working with reactjs and for some reasons i need to transform this button</p>

<pre><code>          &lt;div className=""main-toolbar__actions""&gt;
            &lt;a className=""btn btn-default""&gt;{t('generic.Cancel')}&lt;/a&gt;
            &lt;a
              className=""btn btn-primary regular-green""
              onKeyPress={() =&gt; {}}
              role=""button""
              tabIndex={0}
              onClick={this.save}
            &gt;
              {t('generic.Next')}
            &lt;/a&gt;
          &lt;/div&gt;

save = () =&gt; {
 const {
  match: {
    params: { claimid },
  },
  setBasicToClaim,
} = this.props
setBasicToClaim(claimid, { ...this.state })}
</code></pre>

<p>To this this one</p>

<pre><code>setToolBarInfo({
  image: 'https://images-cdn.9gag.com/photo/aXvYNN2_700b.jpg',
  title: 'New Client',
  subtitle: '',
  details: [
    &lt;Fragment&gt;
      {t('generic.Created')}: &lt;strong&gt;Jun 30, 2018&lt;/strong&gt;,
    &lt;/Fragment&gt;,
    &lt;Fragment&gt;
      {t('generic.By')}: &lt;strong&gt;Samuel Jackson&lt;/strong&gt;
    &lt;/Fragment&gt;,
  ],
  buttons: [
    {
      // icon: 'group_work',
      label: 'Cancel',
      className: 'btn btn-default', // 'btn btn-primary regular-green',
      func: row =&gt; {
        console.log('ClientNew &gt;&gt; row_1: ', row)
      },
    },
    {
      // icon: 'more_horiz',
      label: 'Next',
      className: 'btn btn-primary regular-green',
      func: row =&gt; {
        console.log('ClientNew &gt;&gt; row_2: ', row)
      },
    },
  ],
})
</code></pre>

<p>since i can already render the button what i need more than anything is to implement the function ""save"" to the second example, on to the ""Next"" button, so if anyone could help me i would be grateful</p>
",""
"51305514","Formik validation not working for my custom react-places-autocomplete component","0","<p>I have the following component that makes a form and use formik for form validation and has a custom input field created with react-places-autocomplete for entering an address to the form. the form is working fine, However the validation is not showing even though the address field is required, When I make it empty the error validation from formik is not showing. </p>

<p>Below is the code for the components:</p>

<pre><code>//FormikErrorLabel component

import React from 'react';

const FormikErrorLabel = ({ error, children, ...props }) =&gt; {
    return &lt;label {...props}&gt;{children}&lt;/label&gt;
}
export default FormikErrorLabel;

//FormikErrorLabel component

import React from 'react';

const FormikInputFeedback = ({ children }) =&gt; (
    &lt;span className=""text-danger""&gt;{children}&lt;/span&gt;
)

export default FormikInputFeedback;

//FormikPlacesAutoComplete custom input places auto complete component with formik validation

import React, { Component } from ""react"";
    import classnames from ""classnames"";
    import FormikErrorLabel from ""./FormikErrorLabel"";
    import FormikInputFeedback from ""./FormikInputFeedback"";
    import apiKey from ""../../configureMap"";
    import Script from ""react-load-script"";
    import PlacesAutocomplete, {
      geocodeByAddress,
      getLatLng
    } from ""react-places-autocomplete"";


    const styles = {
        autocompleteContainer:{
            zIndex:1000
        }
    }
    class FormikPlacesAutoComplete extends Component {
      constructor(props) {
        super(props);
        this.state = { 
            address: '',
            scriptLoaded:false
        };
      }

      handleScriptLoad = () =&gt; {
        this.setState({scriptLoaded:true});
      };

      handleChange = address =&gt; {
        this.setState(()=&gt;{
            this.props.form.setFieldValue('coordinates',address)
            return {address};
        });
      };

      handleSelect = address =&gt; {

              geocodeByAddress(address)
                .then(results =&gt; getLatLng(results[0]))
                .then(latLng =&gt; {
                    console.log('Success', latLng);
                    this.setState(()=&gt;{
                        this.props.form.setFieldValue('coordinates',address)
                        return {address};
                    });
                })
                .catch(error =&gt; console.error('Error', error));

      };

      render() {
        const {
          field: { name, ...field }, // { name, value, onChange, onBlur }
          form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.
          className,
          label,
          ...props
        } = this.props;

        const error = errors[name];
        const touch = touched[name];
        const classes = classnames(
          ""form-group"",
          {
            ""animated shake error"": !!error
          },
          className
        );

        console.log(""props"", props);
        return (
          &lt;React.Fragment&gt;
            &lt;Script
              url={`https://maps.googleapis.com/maps/api/js?key=${apiKey}&amp;libraries=places`}
              onLoad={this.handleScriptLoad}
            /&gt;
            { this.state.scriptLoaded &amp;&amp;
                &lt;div className={classes}&gt;
                    &lt;FormikErrorLabel htmlFor={name} error={error}&gt;
                        {label}
                    &lt;/FormikErrorLabel&gt;

                    &lt;PlacesAutocomplete
                        name={name}
                        id={name}

                        {...field}
                        {...props}
                        // onChange={(selectValue) =&gt; this.setState(() =&gt; {
                        //     this.props.form.setFieldValue('categories',selectValue)
                        //     return { selectValue } 
                        // })}

                        value={this.state.address}
                        onChange={this.handleChange}
                        onSelect={this.handleSelect}
                        // className=""form-control""
                    &gt;
                        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) =&gt; (
                        &lt;div&gt;
                            &lt;input
                            {...getInputProps({
                                placeholder: 'Search Places ...',
                                className: 'location-search-input form-control',
                            })}
                            /&gt;
                            &lt;div className=""autocomplete-dropdown-container""&gt;
                            {loading &amp;&amp; &lt;div&gt;Loading...&lt;/div&gt;}
                            {suggestions.map(suggestion =&gt; {
                                const className = suggestion.active
                                ? 'suggestion-item--active'
                                : 'suggestion-item';
                                // inline style for demonstration purpose
                                const style = suggestion.active
                                ? { backgroundColor: '#fafafa', cursor: 'pointer' }
                                : { backgroundColor: '#ffffff', cursor: 'pointer' };
                                return (
                                &lt;div
                                    {...getSuggestionItemProps(suggestion, {
                                    className,
                                    style,
                                    })}
                                &gt;
                                    &lt;span&gt;{suggestion.description}&lt;/span&gt;
                                &lt;/div&gt;
                                );
                            })}
                            &lt;/div&gt;
                        &lt;/div&gt;
                        )}
                    &lt;/PlacesAutocomplete&gt;

                    {touch &amp;&amp; error &amp;&amp; &lt;FormikInputFeedback&gt;{error}&lt;/FormikInputFeedback&gt;}
                &lt;/div&gt;
            }
          &lt;/React.Fragment&gt;
        );
      }
    }

    export default FormikPlacesAutoComplete;




//Form component 
import React, { Component } from ""react"";
import PropTypes from ""prop-types"";
import { bindActionCreators } from ""redux"";
import { connect } from ""react-redux"";
import { actions as locationActions } from ""../../duckes/locations"";
import { getElementByID } from ""../../utils"";
import toastr from ""toastr"";
import { Formik, Form, Field } from 'formik'
import { object, string, array } from 'yup';
import isEmpty from 'lodash/isEmpty'
import FormikTextInput from ""../common/FormikTextInput"";
import FormikSelectInput from ""../common/FormikSelectInput"";
import FormikPlacesAutoComplete from ""../common/FormikPlacesAutoComplete"";

class ManageLocationPage extends Component {


  render() {

    })
    return (

      &lt;Formik

          validationSchema={object().shape({

            coordinates: string()
              .required('Coordinates is required.')
          })}

          initialValues={
              {...this.props.location }
          }

          onSubmit={(values, actions) =&gt; {
            console.log('form values:',values)
          }}

          render={({errors, dirty, isSubmitting, values, setFieldValue}) =&gt; (
            &lt;Form&gt;
              &lt;h3 className=""my-5 text-capitalize""&gt;Manage Location&lt;/h3&gt;

              &lt;Field
                type=""text""
                name=""coordinates""
                label=""Coordinates""
                component={FormikPlacesAutoComplete}
              /&gt;

              &lt;button
                type=""submit""
                className=""btn btn-default""
                disabled={isSubmitting || !isEmpty(errors) || !dirty}
              &gt;
                Save
              &lt;/button&gt;
            &lt;/Form&gt;
          )}

        /&gt;
    );
  }
}

//Prop Types validation
ManageLocationPage.propTypes = {
  location: PropTypes.object.isRequired,
  categories: PropTypes.array.isRequired,
  actions: PropTypes.object.isRequired
};

//Redux connect
const mapStateToProps = ({ locations, categories }, ownProps) =&gt; {
  let location = {
   ...
    coordinates: """"
  };
  return {
    location: getElementByID(....) || location,

  };
};

const mapDispatchToProps = dispatch =&gt; {
  return {
    actions: bindActionCreators(locationActions, dispatch)
  };
};

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(ManageLocationPage);
</code></pre>

<p>My code is based on <a href=""https://github.com/hibiken/react-places-autocomplete"" rel=""nofollow noreferrer"">react-places-autocomplete</a> example, And this <a href=""https://keyholesoftware.com/2017/10/23/the-joy-of-forms-with-react-and-formik/"" rel=""nofollow noreferrer"">article</a>.</p>

<p>How to make the formik validation errors to show?</p>

<p>It seems that there is something that maybe I am missing about formik validation,
When I clear the address field in the GUI and debug my FormikPlacesAutoComplete onChange handler:</p>

<ol>
<li>handleChange = address => {</li>
<li>this.setState(()=>{</li>
<li>this.props.form.setFieldValue('address',address);</li>
<li>this.props.form.setFieldValue('latLng',{lat:null,lng:null})</li>
<li>return {address};</li>
<li>});</li>
<li>};</li>
</ol>

<p>I see that after the lines 3,4 when I check the form values in the debugger log:
this.props.form.values.address = ""AZ, USA"" (instead of """" )</p>

<p>this.props.form.values.latLng = {lat: 34.0489281, lng: -111.09373110000001}  (instead of {lat: null, lng: null} )</p>

<p>Formik doesn't react after lines 3,4 maybe I didn't completely understandd how  this.props.form.setFieldValue works, 
I thought setFieldValue  will trigger the validation, I will further investigate.</p>
",""
"51312071","button for add and remove component in react","0","<p>I trying to add new button which would add new tabs
I'm using <a href=""https://github.com/reactjs/react-tabs"" rel=""nofollow noreferrer"">react-tabs</a>
which build tabs like this</p>

<pre><code>&lt;Tabs&gt;
  &lt;TabList&gt;
    &lt;Tab&gt;Title 1&lt;/Tab&gt;
    &lt;Tab&gt;Title 2&lt;/Tab&gt;
  &lt;/TabList&gt;
  &lt;TabPanel&gt;
    &lt;h2&gt;Any content 1&lt;/h2&gt;
  &lt;/TabPanel&gt;
  &lt;TabPanel&gt;
    &lt;h2&gt;Any content 2&lt;/h2&gt;
  &lt;/TabPanel&gt;
&lt;/Tabs&gt;
</code></pre>

<p>so I need two loop one for the tab and another one for tabpanel
like this</p>

<pre><code>&lt;Fragment&gt;
  &lt;Tabs&gt;
    &lt;TabList&gt;
      {stats.map(({ figure = """", instructions = """" }, i) =&gt; {
        &lt;Tab&gt;
          &lt;RichText
            tagName=""h2""
            placeholder={__(""Write Recipe title…"")}
            value={figure}
            onChange={value =&gt; updateStatProp(i, ""figure"", value[0])}
          /&gt;
        &lt;/Tab&gt;;
      })}
    &lt;/TabList&gt;
    {stats.map(({ figure = """", instructions = """" }, i) =&gt; {
      &lt;TabPanel&gt;
        &lt;RichText
          tagName=""div""
          multiline=""p""
          className=""steps""
          placeholder={__(""Write the instructions…"")}
          value={instructions}
          onChange={value =&gt; updateStatProp(i, ""instructions"", value[0])}
        /&gt;
        &lt;Button
          isLarge={true}
          onClick={() =&gt; {
            const newStats = _cloneDeep(stats);
            newStats.splice(i, 1);
            setAttributes({ stats: newStats });
          }}
        &gt;
          &lt;Dashicon icon=""no-alt"" /&gt;
        &lt;/Button&gt;
      &lt;/TabPanel&gt;;
    })}
  &lt;/Tabs&gt;
  &lt;div style={{ textAlign: ""center"", padding: ""8px 0"" }}&gt;
    {stats.length &lt; 5 &amp;&amp; (
      &lt;Button
        isLarge={true}
        onClick={() =&gt; {
          const newStats = _cloneDeep(stats);
          newStats.push({ figure: """", instructions: """" });
          setAttributes({ stats: newStats });
        }}
      &gt;
        Add new stat
      &lt;/Button&gt;
    )}
  &lt;/div&gt;
&lt;/Fragment&gt;
</code></pre>

<p>The state is stats.
Each item in the stats array looks something like this { figure: '100k', instructions:'humans'}
The button ""add new stat"" just appends a new stat object to this array and calls setAttributes.
The remove button just removes the item at that index.</p>

<p>It doesn't give any errors but there isn't any tab added when I click on add new stat button
<a href=""https://i.stack.imgur.com/3O7AH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3O7AH.png"" alt=""enter image description here""></a></p>
",""
"51341027","react createElement and invariant errors","0","<p>I try to adapt this <a href=""https://www.w3schools.com/howto/howto_js_tabs.asp"" rel=""nofollow noreferrer"">tabs</a> to react.
The idea is to add active class for the key clicked with handleclick function</p>

<pre><code>class Tabs extends React.Component {
  constructor(props) {
    super(props);
    this.state = { selected: 0 };
    this.handleClick = this.handleClick.bind(this);
  }

  handleClick(key, event) {
    event.preventDefault();
    this.setState({
      selected: key
    });
  }
  render() {
    var activeClass = this.state.selected === this.props.key ? ""active"" : """";
    return (
      &lt;React.Fragment&gt;
        &lt;div class=""tab""&gt;
          &lt;button
            key=""1""
            className={""tablinks"" + activeClass}
            onClick={this.handleClick}
          &gt;
            London
          &lt;/button&gt;
          &lt;button
            key=""2""
            className={""tablinks"" + activeClass}
            onClick={this.handleClick}
          &gt;
            Paris
          &lt;/button&gt;
          &lt;button
            key=""3""
            className={""tablinks"" + activeClass}
            onClick={this.handleClick}
          &gt;
            Tokyo
          &lt;/button&gt;
        &lt;/div&gt;
        &lt;div key=""1"" className={""tabcontent"" + activeClass}&gt;
          &lt;h3&gt;London&lt;/h3&gt;
          &lt;p&gt;London is the capital city of England.&lt;/p&gt;
        &lt;/div&gt;

        &lt;div key=""2"" className={""tabcontent"" + activeClass}&gt;
          &lt;h3&gt;Paris&lt;/h3&gt;
          &lt;p&gt;Paris is the capital of France.&lt;/p&gt;
        &lt;/div&gt;

        &lt;div key=""3"" className={""tabcontent"" + activeClass}&gt;
          &lt;h3&gt;Tokyo&lt;/h3&gt;
          &lt;p&gt;Tokyo is the capital of Japan.&lt;/p&gt;
        &lt;/div&gt;
      &lt;/React.Fragment&gt;
    );
  }
}

ReactDOM.render(&lt;Tabs /&gt;, document.querySelector("".container""));
</code></pre>

<p>but I get two errors:</p>

<p>Warning: React.createElement: type should not be null, undefined, boolean, or number. It should be a string (for DOM elements) or a ReactClass (for composite components). Check the render method of <code>Tabs</code>.</p>

<p>and</p>

<p>Uncaught Error: Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. Check the render method of <code>Tabs</code>.</p>

<p>here is the <a href=""https://jsfiddle.net/7ebzkv53/6/"" rel=""nofollow noreferrer"">jsfiddle link</a> </p>
",""
"51452489","How to upload only PDF file and preview in react Js","0","<p>I am doing pdf upload in react js. I want to upload pdf file and just wants to show on the top of the upload button with small div along with remove button, if I click on the remove then it should be removed.</p>

<p>The same I have done it for image successfully. I can upload image and also can preview. But I need some help in doing pdf upload</p>

<p>here is my code, </p>

<pre><code> this.state = {
      file: '',
      imagePreviewUrl: ''
    }
</code></pre>

<p>getPhoto (e) {
    e.preventDefault();</p>

<pre><code>let reader = new FileReader();
let file = e.target.files[0];

reader.onloadend = () =&gt; {
  this.setState({
    file: file,
    imagePreviewUrl: reader.result
  });
}
  reader.readAsDataURL(file);
}

 render() {
  const { imagePreviewUrl, file } = this.state;
  let imagePreview = null;
     if (imagePreviewUrl) {
        imagePreview = (&lt;img src={imagePreviewUrl} /&gt;);
      } else {
        imagePreview = (&lt;div className=""previewText""&gt;Please select an Image for Preview&lt;/div&gt;);
      }
return (
      &lt;React.Fragment&gt;
      &lt;div className={styles.previewBlock}&gt;
        {imagePreview}
        &lt;div className={styles.fileName}&gt;{file.name}&lt;span&gt;
        &lt;i className=""fa fa-times"" /&gt;&lt;/span&gt;&lt;/div&gt;
      &lt;/div&gt;
  )
 }
</code></pre>
",""
"51498568","PrivateRoute not Working Properly (Bugs with my Side Menu) [react-router v4]","0","<p>I'm currently developing a ReactJS Web app (<em>newbie</em>). I'm using react-router v4 and redux-thunk.</p>

<p>In short, an action named <code>verifyAuth</code> from my <code>authActions.js</code> file is dispatched from my <code>Login.js</code> file. The payload is set to ""true"" or ""false"" from there. Then, I retrieve <code>isAuthenticated</code> from my <code>authReducer.js</code> file in my <code>router.js</code> file.</p>

<p>My problem is as follows: <code>PrivateRoute</code> in my <code>routes.js</code> file is not working as expected. That is, I don't know why but my side menu, which is a child component of my main <code>App</code>, does not work properly: there are a few bugs when I click on the menu item of my <code>PrivateRoute</code> component (<code>Page1</code>). Nonetheless, if I change the tag of my <code>Page1</code> component from <code>PrivateRoute</code> to <code>ConfigRoute</code> in my <code>routes.js</code> file, everything works properly likewise my <code>MainHome</code> component. Therefore, I know my issue is probably in my <code>PrivateRoute</code> configurations from <code>routes.js</code>.</p>

<p>PS: I also know my problem is not from my redux configurations since I already forced <code>auth_status</code> to true directly in my <code>routes.js</code> file and the same problem persists. </p>

<p>A sample from my files <code>index.js</code> (main), <code>routes.js</code>, and <code>App.js</code>:</p>

<p><code>index.js</code> (main) file:</p>

<pre><code>import React from 'react';
import ReactDOM from 'react-dom';
import { Provider } from 'react-redux';
import Routes from './main/routes';
import store from './main/store';

ReactDOM.render(
  &lt;Provider store={store}&gt;
    &lt;Routes/&gt;
  &lt;/Provider&gt;,
  document.getElementById('root')
);
</code></pre>

<p><code>routes.js</code> file:</p>

<pre><code>import React, { Fragment } from 'react';
import { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';
import { connect } from 'react-redux';
import Login from './login';
import App from './App';
import MainHome from '../pages/home';
import Page1 from '../pages/page1';

const ConfigRoute = ({ component: Component, layout: Layout, ...rest }) =&gt; (
  &lt;Route {...rest} render={(props) =&gt; (
    &lt;Layout&gt;
      &lt;Component {...props}/&gt;
    &lt;/Layout&gt;
  )}/&gt;
);

const PrivateRoute = ({ component: Component, layout: Layout, auth_status, ...rest }) =&gt; (
  &lt;Route {...rest} render={(props) =&gt; (
    &lt;Fragment&gt;
      {auth_status === true
        ? (
          &lt;Layout&gt;
            &lt;Component {...props}/&gt;
          &lt;/Layout&gt;
          )
        : (
          &lt;Redirect to={{ pathname: ""/"" }}/&gt;
          )
      }
    &lt;/Fragment&gt;
  )}/&gt;
);

const Routes = (props) =&gt; (
  &lt;Router&gt;
    &lt;Switch&gt;
      &lt;Route exact path=""/"" component={Login}/&gt;
      &lt;ConfigRoute path=""/home"" layout={App} component={MainHome}/&gt;
      &lt;PrivateRoute path=""/page1"" auth_status={props.auth_status} layout={App} component={Page1}/&gt;
    &lt;/Switch&gt;
  &lt;/Router&gt;
);

const mapStatetoProps = state =&gt; ({
  auth_status: state.auth.isAuthenticated,
});

export default connect(mapStatetoProps)(Routes);
</code></pre>

<p><code>App.js</code> file</p>

<pre><code>import React, { Component } from 'react';
import { Layout } from 'antd';
import SideMenu from '../design/side-menu';
import MainHeader from '../design/main-header';
import MainFooter from '../design/main-footer';

const { Content } = Layout;

class App extends Component {
  constructor(props) {
    super(props);
    this.state = {
      collapsed: false,
    };
  }

  toggle = () =&gt; {
    this.setState({
      collapsed: !this.state.collapsed,
    });
  }

  render() {
    return (
      &lt;Layout style={{ minHeight: '100vh' }}&gt;
        &lt;SideMenu collapsed={this.state.collapsed}/&gt;
        &lt;Layout&gt;
          &lt;MainHeader triggerParentUpdate={this.toggle} collapsed={this.state.collapsed}/&gt;
          &lt;Content style={{ margin: '24px 16px', padding: 24, background: '#ffffff', minHeight: 280 }}&gt;
            {this.props.children}
          &lt;/Content&gt;
          &lt;MainFooter/&gt;
        &lt;/Layout&gt;
      &lt;/Layout&gt;
    );
  }
}

export default App;
</code></pre>

<p>Thank you!</p>
",""
"51641119","Error with webpack4 dev server proxy on a server-side rendering react hot loading app","0","<p>It's been a while I'm trying to make my SSR React app work with hot reloading, but nothing works... </p>

<p>When I set up my app as above, my first reload page displays properly, but as soon as I change something, HMR triggers, reloads the page and I end up having an error page:
<strong>Error occured while trying to proxy to: localhost:8080/</strong></p>

<p>Here's my app:</p>

<p><strong>webpack.config.js</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const path = require('path');
const webpack = require('webpack');
const nodeExternals = require('webpack-node-externals');
const UglifyJsPlugin = require('uglifyjs-webpack-plugin');
const ErrorOverlayPlugin = require('error-overlay-webpack-plugin');


const isProd = process.argv.slice(-1)[0] === 'production';

const outPath = path.resolve(__dirname, 'public/dist');
const publicPath = '/public/dist/';

const common = {
    module: {
        rules: [
            {
                test: /\.js$/,
                exclude: /node_modules/,
                use: {
                    loader: 'babel-loader'
                }
            },
            {
                test: /\.woff2?$/,
                loader: 'url-loader',
                options: {
                    name: 'fonts/[name].[ext]',
                    limit: 1000,
                },
            },
        ],
    },

    resolve: {
        alias: {
            app: path.resolve(__dirname, 'app'),
            test: path.resolve(__dirname, 'test'),
        },
    },

    optimization: {
        minimizer: [
            new UglifyJsPlugin({
                cache: true,
                parallel: true,
                sourceMap: true,
            }),
        ],
    },
};

const configs = {
    client: {
        entry: [
            'babel-polyfill',
            'react-hot-loader/patch',
            'webpack-dev-server/client?http://localhost:8080',
            'webpack/hot/only-dev-server',
            './app/components'
        ],
        output: {
            publicPath,
            path: outPath,
            filename: 'client.js',
        },
        devtool: isProd ? 'source-map' : 'eval-source-map',
        devServer: {
            publicPath,
            contentBase: outPath,
            proxy: {
                '*': {
                    target: 'http://localhost:8000',
                    secure: false,
                },
            },
        },
        plugins: isProd ? [] : [
            new ErrorOverlayPlugin(),
            new webpack.HotModuleReplacementPlugin(),
        ]
    },

    server: {
        target: 'node',
        entry: ['babel-polyfill', './app/server'],
        output: {
            path: outPath,
            publicPath,
            filename: 'server.js',
            libraryTarget: 'commonjs2'
        },
        devtool: false,
        node: { __dirname: true },
        externals: [ nodeExternals() ],
    },
};

module.exports = [
    Object.assign({}, common, configs.client),
    Object.assign({}, common, configs.server),
];</code></pre>
</div>
</div>
</p>

<p><strong>app/server/app.js</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import express from 'express';
import cookieParser from 'cookie-parser';

import config from './config';
import { handleRender } from './render';


const app = express();

const publicDir = config.get('server.publicPath');

app.use('/public', express.static(publicDir));

app.use(cookieParser());
app.use(handleRender);

export default app;</code></pre>
</div>
</div>
</p>

<p><strong>app/components/index.js</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>import React from 'react';
import ReactDOM from 'react-dom';
import { BrowserRouter } from 'react-router-dom';
import { Provider } from 'react-redux';

import store from 'app/redux/store';

import App from './App';

const html = (
    &lt;Provider store={store}&gt;
        &lt;BrowserRouter&gt;
            &lt;App /&gt;
        &lt;/BrowserRouter&gt;
    &lt;/Provider&gt;
);

if (window.ssr) {
    ReactDOM.hydrate(html, document.getElementById('root'));
} else {
    ReactDOM.render(html, document.getElementById('root'));
}</code></pre>
</div>
</div>
</p>

<p><strong>app/components/App.js</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>import _ from 'lodash';
import React from 'react';
import { Route, Switch } from 'react-router-dom';
import { hot } from 'react-hot-loader'
import { ThemeProvider } from 'styled-components';

import theme from 'app/assets/style/theme';
import Head from 'app/components/html/Head';

const App = () =&gt; (
    &lt;ThemeProvider theme={theme}&gt;
        &lt;React.Fragment&gt;
            &lt;Head /&gt;
            &lt;Switch&gt;
                {* my routes... *}
            &lt;/Switch&gt;
        &lt;/React.Fragment&gt;
    &lt;/ThemeProvider&gt;
);

export default hot(module)(App);</code></pre>
</div>
</div>
</p>

<p><strong>package.json</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>{
  ""name"": ""staycation-ui"",
  ""version"": ""1.0.0"",
  ""private"": true,
  ""description"": ""Staycation client UI"",
  ""repository"": ""git+https://wario4@bitbucket.org/wario4/staycation.git"",
  ""author"": ""Staycation"",
  ""license"": ""ISC"",
  ""engines"": {
    ""node"": ""9""
  },
  ""scripts"": {
    ""build"": ""rm -rf ./public/dist &amp;&amp; npm run build:client"",
    ""build:client"": ""webpack --mode production --progress"",
    ""dev:client"": ""TARGET=client webpack-dev-server --mode development &amp; TARGET=server webpack --mode development --watch"",
    ""dev:server"": ""nodemon ./public/dist/server.js"",
    ""lint"": ""eslint --color ./app/**/"",
    ""lint:fix"": ""eslint --fix ./app/**/"",
    ""stats"": ""webpack --config webpack.stats.js --mode production --progress"",
    ""test"": ""jest"",
    ""test:watch"": ""jest --watch""
  },
  ""dependencies"": {
    ""babel-polyfill"": ""^6.26.0"",
    ""convict"": ""^4.3.2"",
    ""cookie-parser"": ""^1.4.3"",
    ""date-fns"": ""2.0.0-alpha.7"",
    ""express"": ""^4.16.3"",
    ""isomorphic-fetch"": ""^2.2.1"",
    ""jwt-decode"": ""^2.2.0"",
    ""lodash"": ""^4.17.10"",
    ""prop-types"": ""^15.6.1"",
    ""react"": ""^16.3.2"",
    ""react-dom"": ""^16.3.2"",
    ""react-final-form"": ""^3.6.5"",
    ""react-helmet"": ""^5.2.0"",
    ""react-lazyload"": ""^2.3.0"",
    ""react-redux"": ""^5.0.7"",
    ""react-router-dom"": ""^4.2.2"",
    ""react-sticky"": ""^6.0.3"",
    ""react-swipeable-views"": ""^0.12.15"",
    ""react-tap-event-plugin"": ""^3.0.3"",
    ""redux"": ""^4.0.0"",
    ""redux-devtools-extension"": ""^2.13.2"",
    ""redux-saga"": ""^0.16.0"",
    ""smooth-ui"": ""^4.2.2"",
    ""styled-components"": ""^3.2.6""
  },
  ""devDependencies"": {
    ""babel-cli"": ""^6.26.0"",
    ""babel-core"": ""^6.26.3"",
    ""babel-eslint"": ""^8.2.3"",
    ""babel-jest"": ""^22.4.3"",
    ""babel-loader"": ""^7.1.4"",
    ""babel-plugin-styled-components"": ""^1.5.1"",
    ""babel-plugin-transform-class-properties"": ""^6.24.1"",
    ""babel-plugin-transform-object-rest-spread"": ""^6.26.0"",
    ""babel-preset-env"": ""^1.6.1"",
    ""babel-preset-react"": ""^6.24.1"",
    ""error-overlay-webpack-plugin"": ""^0.1.5"",
    ""eslint"": ""4.5.0"",
    ""eslint-config-airbnb"": ""15.1.0"",
    ""eslint-import-resolver-webpack"": ""^0.9.0"",
    ""eslint-plugin-import"": ""2.7.0"",
    ""eslint-plugin-jest"": ""21.15.1"",
    ""eslint-plugin-jsx-a11y"": ""5.1.1"",
    ""eslint-plugin-lodash"": ""2.7.0"",
    ""eslint-plugin-react"": ""7.2.0"",
    ""file-loader"": ""^1.1.11"",
    ""jest"": ""^22.4.3"",
    ""nodemon"": ""^1.17.3"",
    ""react-hot-loader"": ""^4.3.4"",
    ""supertest"": ""^3.0.0"",
    ""url-loader"": ""^1.0.1"",
    ""webpack"": ""^4.7.0"",
    ""webpack-bundle-analyzer"": ""^2.11.1"",
    ""webpack-cli"": ""^2.1.3"",
    ""webpack-dev-server"": ""^3.1.5"",
    ""webpack-node-externals"": ""^1.7.2""
  }
}</code></pre>
</div>
</div>
</p>

<p>I found sooooo many GitHub issues &amp; forum posts about 
- webpack dev server &amp; proxy
- how to hot reload with an SSR app
- HMR plugins, how to configure webpack...</p>

<p>But none of them helped. The better result I have is the one I have now.</p>

<p>If I change a few things, I can have the same error <em>""Error occured while trying to proxy to""</em> but in the browser console, when HMR tries to fetch the hot-update.js[on] files.
I had one ""hot reload update"" that went well before having either the ""error proxy page"" or the ""error proxy console log""...
Weird thing about this part is that the hot-update filename hashes did not match the ones that were saved on my filesystem.</p>

<p>Anyway, I'm completely lost and do not know how I can fix that.</p>

<p>If someone has an answer or at least any explanation that could help find the right direction to go, it would be super helpful !</p>

<p>Thanks !</p>
",""
"51687133","React Fragment not rendering in function","0","<p>Here's my React component below, can anyone understand why the react.Fragment doesn't render at all in the getResults function?</p>

<p>I'd like it to eventually display the results from the api response.</p>

<p>My api query works fine and I can get the data I'm after but I'm struggling displaying it in the component.</p>

<pre><code>import React from ""react"";
import axios from ""axios"";
import SearchInput, {
  createFilter
} from ""react-search-input"";
import {
  spotifySearchURL
} from ""../../constants"";

export class SearchPanel extends React.Component {

  constructor(props) {
    super(props);
    this.state = {
      searchValue: """",
      tracks: {},
      selectedOption: null
    };
    this.handleSearch = this.handleSearch.bind(this);
  }

  getSearchValue(value, token) {
    this.setState({
      searchValue: value
    });
    this.handleSearch(value, token);
    console.log(value);
  }

  getResults() {
    let tracks = this.state.tracks;
    let track;
    Object.keys(tracks).map(function(key, items) {
      track = tracks[key];
      console.log(track, track.name);
      return ( 
       &lt;React.Fragment &gt;
        &lt;h1 &gt; {track.name} &lt; /h1&gt;
       &lt;/React.Fragment&gt;
      );
    });
  }

  handleSearch = (value, token) =&gt; {
    const encoded = encodeURIComponent(value);
    let url = `${spotifySearchURL}${encoded}&amp;type=track`;
    console.log(url);

    const params = {
      headers: {
        Authorization: "" Bearer "" + token,
        accept: ""application/json"",
        ""Content-Type"": ""application/x-www-form-urlencoded""
      },
      data: null
    };

    axios
      .get(url, params)
      .then(response =&gt; {
        this.setState({
          tracks: response.data.tracks.items
        });

        console.log(response.data.tracks.items);
      })

      .catch(error =&gt; {
        console.log(error);
      });
  };

  render() {
    return ( 
     &lt;div className =""search-panel""&gt;
      &lt;SearchInput
       className = ""search-input""
       value = {
         this.state.searchValue
       }
       onChange = {
         value =&gt; this.getSearchValue(value, this.props.token)
       }
      /&gt;

      {this.getResults()}
     &lt;/div&gt;
    );
  }
}

export default SearchPanel;
</code></pre>
",""